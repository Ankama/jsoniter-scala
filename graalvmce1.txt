[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Apr 29, 2018 3:00:15 AM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:986:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:445:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:453:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:964:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] four warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/ArrayOfYearMonthsBenchmark.scala:4:19: Unused import
[warn] import java.time.{LocalDate, YearMonth}
[warn]                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("a");
[info]       private[this] val r1: Array[String] = Array("b");
[info]       private[this] val r2: Array[String] = Array("l", "r");
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = JsoniterCodecs.this.adtCodec.decodeValue(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = JsoniterCodecs.this.adtCodec.decodeValue(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "bd");
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               ArrayBuffer.empty[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Char] = new Array[Char](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Double] = new Array[Double](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Float] = new Array[Float](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Int] = new Array[Int](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Long] = new Array[Long](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Short] = new Array[Short](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "l");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("geometry");
[info]       private[this] val r1: Array[String] = Array("coordinates");
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d5(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d7(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d7(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d11(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d11(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d11(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d14(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d8(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d6(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d10(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d12(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(JsoniterCodecs.this.geoJSONCodec.decodeValue(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e7(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e8(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e11(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e11(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e11(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e14(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e8(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e6(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e10(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e12(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             JsoniterCodecs.this.geoJSONCodec.encodeValue(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("status");
[info]       private[this] val r1: Array[String] = Array("distance", "duration", "status");
[info]       private[this] val r2: Array[String] = Array("text", "value");
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "i");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Set.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private[this] val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private[this] val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private[this] val r4: Array[String] = Array("url", "description");
[info]       private[this] val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(r5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:64:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:65:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:66:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:70:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:71:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:72:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:73:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:74:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:75:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:76:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 15 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java -prof gc -rf json -rff graalvmce1.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53129.644 ops/s
[info] # Warmup Iteration   2: 610875.374 ops/s
[info] # Warmup Iteration   3: 771245.650 ops/s
[info] Iteration   1: 788173.004 ops/s
[info]                  ·gc.alloc.rate:                   2275.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              4541.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4601.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.566 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 793888.805 ops/s
[info]                  ·gc.alloc.rate:                   2300.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              4561.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4553.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 786385.163 ops/s
[info]                  ·gc.alloc.rate:                   2280.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              4564.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3969.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 787178.291 ops/s
[info]                  ·gc.alloc.rate:                   2298.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              4593.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2335.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4667.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 790337.876 ops/s
[info]                  ·gc.alloc.rate:               2294.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          4568.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2016.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4015.454 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   789192.628 ±(99.9%) 11607.107 ops/s [Average]
[info]   (min, avg, max) = (786385.163, 789192.628, 793888.805), stdev = 3014.329
[info]   CI (99.9%): [777585.521, 800799.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2289.950 ±(99.9%) 43.121 MB/sec [Average]
[info]   (min, avg, max) = (2275.409, 2289.950, 2300.843), stdev = 11.198
[info]   CI (99.9%): [2246.829, 2333.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4565.982 ±(99.9%) 71.449 B/op [Average]
[info]   (min, avg, max) = (4541.620, 4565.982, 4593.393), stdev = 18.555
[info]   CI (99.9%): [4494.533, 4637.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2187.578 ±(99.9%) 662.914 MB/sec [Average]
[info]   (min, avg, max) = (1983.505, 2187.578, 2335.137), stdev = 172.157
[info]   CI (99.9%): [1524.664, 2850.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4361.629 ±(99.9%) 1308.077 B/op [Average]
[info]   (min, avg, max) = (3969.677, 4361.629, 4667.414), stdev = 339.704
[info]   CI (99.9%): [3053.551, 5669.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 6.466 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 3.791), stdev = 1.679
[info]   CI (99.9%): [≈ 0, 7.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.571 ±(99.9%) 12.906 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.571, 7.566), stdev = 3.352
[info]   CI (99.9%): [≈ 0, 14.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 14.000), stdev = 2.881
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:29:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66861.590 ops/s
[info] # Warmup Iteration   2: 1819035.723 ops/s
[info] # Warmup Iteration   3: 1935399.541 ops/s
[info] Iteration   1: 1927829.596 ops/s
[info]                  ·gc.alloc.rate:                   1284.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1067.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1925424.196 ops/s
[info]                  ·gc.alloc.rate:                   1288.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              1053.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1072.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.590 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1946279.372 ops/s
[info]                  ·gc.alloc.rate:               1295.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          1047.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1303.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1053.661 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1931427.017 ops/s
[info]                  ·gc.alloc.rate:               1285.535 MB/sec
[info]                  ·gc.alloc.rate.norm:          1047.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1301.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1060.142 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1966500.095 ops/s
[info]                  ·gc.alloc.rate:               1308.110 MB/sec
[info]                  ·gc.alloc.rate.norm:          1046.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 783.996 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1939492.055 ±(99.9%) 65981.666 ops/s [Average]
[info]   (min, avg, max) = (1925424.196, 1939492.055, 1966500.095), stdev = 17135.229
[info]   CI (99.9%): [1873510.389, 2005473.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1292.548 ±(99.9%) 36.983 MB/sec [Average]
[info]   (min, avg, max) = (1284.992, 1292.548, 1308.110), stdev = 9.604
[info]   CI (99.9%): [1255.565, 1329.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1048.724 ±(99.9%) 10.606 B/op [Average]
[info]   (min, avg, max) = (1046.892, 1048.724, 1053.501), stdev = 2.754
[info]   CI (99.9%): [1038.119, 1059.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1240.775 ±(99.9%) 562.388 MB/sec [Average]
[info]   (min, avg, max) = (979.617, 1240.775, 1311.687), stdev = 146.050
[info]   CI (99.9%): [678.386, 1803.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1007.499 ±(99.9%) 481.873 B/op [Average]
[info]   (min, avg, max) = (783.996, 1007.499, 1072.137), stdev = 125.141
[info]   CI (99.9%): [525.625, 1489.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.885 ±(99.9%) 7.551 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.885, 4.393), stdev = 1.961
[info]   CI (99.9%): [≈ 0, 8.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.723 ±(99.9%) 6.172 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.723, 3.590), stdev = 1.603
[info]   CI (99.9%): [≈ 0, 6.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 4.919
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:28:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 950678.638 ops/s
[info] # Warmup Iteration   2: 5122692.650 ops/s
[info] # Warmup Iteration   3: 5629254.321 ops/s
[info] Iteration   1: 5793880.135 ops/s
[info]                  ·gc.alloc.rate:               399.178 MB/sec
[info]                  ·gc.alloc.rate.norm:          108.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 138.967 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 5847087.244 ops/s
[info]                  ·gc.alloc.rate:               397.332 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89.028 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 5751744.604 ops/s
[info]                  ·gc.alloc.rate:               398.509 MB/sec
[info]                  ·gc.alloc.rate.norm:          109.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90.502 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 5839248.270 ops/s
[info]                  ·gc.alloc.rate:                   397.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              107.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5832345.878 ops/s
[info]                  ·gc.alloc.rate:               396.908 MB/sec
[info]                  ·gc.alloc.rate.norm:          107.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89.433 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5812861.226 ±(99.9%) 153336.772 ops/s [Average]
[info]   (min, avg, max) = (5751744.604, 5812861.226, 5847087.244), stdev = 39821.073
[info]   CI (99.9%): [5659524.454, 5966197.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   397.889 ±(99.9%) 3.580 MB/sec [Average]
[info]   (min, avg, max) = (396.908, 397.889, 399.178), stdev = 0.930
[info]   CI (99.9%): [394.308, 401.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   107.729 ±(99.9%) 3.649 B/op [Average]
[info]   (min, avg, max) = (106.949, 107.729, 109.041), stdev = 0.948
[info]   CI (99.9%): [104.079, 111.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   367.200 ±(99.9%) 310.798 MB/sec [Average]
[info]   (min, avg, max) = (330.750, 367.200, 511.583), stdev = 80.713
[info]   CI (99.9%): [56.402, 677.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   99.451 ±(99.9%) 85.089 B/op [Average]
[info]   (min, avg, max) = (89.028, 99.451, 138.967), stdev = 22.097
[info]   CI (99.9%): [14.362, 184.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:28:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1915.342 ops/s
[info] # Warmup Iteration   2: 196369.680 ops/s
[info] # Warmup Iteration   3: 298463.286 ops/s
[info] Iteration   1: 298357.889 ops/s
[info]                  ·gc.alloc.rate:                   2618.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              13814.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2640.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13926.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.491 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 301294.332 ops/s
[info]                  ·gc.alloc.rate:                   2656.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              13878.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2329.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12167.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 301499.994 ops/s
[info]                  ·gc.alloc.rate:                   2680.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              13988.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2685.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14017.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 300075.759 ops/s
[info]                  ·gc.alloc.rate:                   2668.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              13993.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2702.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14171.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 302107.750 ops/s
[info]                  ·gc.alloc.rate:                   2674.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              13928.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2372.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12358.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   300667.145 ±(99.9%) 5725.930 ops/s [Average]
[info]   (min, avg, max) = (298357.889, 300667.145, 302107.750), stdev = 1487.006
[info]   CI (99.9%): [294941.215, 306393.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2659.673 ±(99.9%) 93.688 MB/sec [Average]
[info]   (min, avg, max) = (2618.977, 2659.673, 2680.121), stdev = 24.330
[info]   CI (99.9%): [2565.986, 2753.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13920.666 ±(99.9%) 291.690 B/op [Average]
[info]   (min, avg, max) = (13814.915, 13920.666, 13993.319), stdev = 75.751
[info]   CI (99.9%): [13628.976, 14212.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2545.987 ±(99.9%) 694.008 MB/sec [Average]
[info]   (min, avg, max) = (2329.172, 2545.987, 2702.469), stdev = 180.232
[info]   CI (99.9%): [1851.979, 3239.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   13328.036 ±(99.9%) 3768.898 B/op [Average]
[info]   (min, avg, max) = (12167.212, 13328.036, 14171.032), stdev = 978.771
[info]   CI (99.9%): [9559.139, 17096.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.225 ±(99.9%) 1.757 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.225, 1.041), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 1.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.185 ±(99.9%) 9.268 B/op [Average]
[info]   (min, avg, max) = (0.108, 1.185, 5.491), stdev = 2.407
[info]   CI (99.9%): [≈ 0, 10.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 14.000), stdev = 1.924
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:28:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39417.291 ops/s
[info] # Warmup Iteration   2: 791383.590 ops/s
[info] # Warmup Iteration   3: 896356.975 ops/s
[info] Iteration   1: 905171.243 ops/s
[info]                  ·gc.alloc.rate:                   2418.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              4203.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2301.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4000.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.774 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 889507.559 ops/s
[info]                  ·gc.alloc.rate:                   2398.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              4243.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4073.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 911727.921 ops/s
[info]                  ·gc.alloc.rate:                   2453.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              4234.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2323.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4010.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 902141.827 ops/s
[info]                  ·gc.alloc.rate:                   2431.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              4241.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4090.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 895791.431 ops/s
[info]                  ·gc.alloc.rate:               2416.333 MB/sec
[info]                  ·gc.alloc.rate.norm:          4244.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2359.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4145.141 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   900867.996 ±(99.9%) 32951.118 ops/s [Average]
[info]   (min, avg, max) = (889507.559, 900867.996, 911727.921), stdev = 8557.301
[info]   CI (99.9%): [867916.878, 933819.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   2423.614 ±(99.9%) 78.256 MB/sec [Average]
[info]   (min, avg, max) = (2398.460, 2423.614, 2453.157), stdev = 20.323
[info]   CI (99.9%): [2345.358, 2501.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   4233.650 ±(99.9%) 67.404 B/op [Average]
[info]   (min, avg, max) = (4203.189, 4233.650, 4244.944), stdev = 17.505
[info]   CI (99.9%): [4166.246, 4301.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2326.342 ±(99.9%) 98.843 MB/sec [Average]
[info]   (min, avg, max) = (2301.958, 2326.342, 2359.522), stdev = 25.669
[info]   CI (99.9%): [2227.498, 2425.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4063.969 ±(99.9%) 229.538 B/op [Average]
[info]   (min, avg, max) = (4000.854, 4063.969, 4145.141), stdev = 59.610
[info]   CI (99.9%): [3834.431, 4293.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.237 ±(99.9%) 1.690 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.237, 1.021), stdev = 0.439
[info]   CI (99.9%): [≈ 0, 1.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.413 ±(99.9%) 2.937 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.413, 1.774), stdev = 0.763
[info]   CI (99.9%): [≈ 0, 3.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:28:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 207342.843 ops/s
[info] # Warmup Iteration   2: 2766761.992 ops/s
[info] # Warmup Iteration   3: 2849331.943 ops/s
[info] Iteration   1: 2818909.339 ops/s
[info]                  ·gc.alloc.rate:                   1208.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              674.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     548.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2846517.384 ops/s
[info]                  ·gc.alloc.rate:                   1214.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              671.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     725.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.550 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.963 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 2827824.082 ops/s
[info]                  ·gc.alloc.rate:                   1212.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              674.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     728.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2827820.565 ops/s
[info]                  ·gc.alloc.rate:               1210.989 MB/sec
[info]                  ·gc.alloc.rate.norm:          673.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 545.022 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2830368.139 ops/s
[info]                  ·gc.alloc.rate:               1230.919 MB/sec
[info]                  ·gc.alloc.rate.norm:          684.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 727.568 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   2830287.902 ±(99.9%) 38747.905 ops/s [Average]
[info]   (min, avg, max) = (2818909.339, 2830287.902, 2846517.384), stdev = 10062.708
[info]   CI (99.9%): [2791539.996, 2869035.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1215.432 ±(99.9%) 34.396 MB/sec [Average]
[info]   (min, avg, max) = (1208.472, 1215.432, 1230.919), stdev = 8.933
[info]   CI (99.9%): [1181.036, 1249.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   675.749 ±(99.9%) 19.343 B/op [Average]
[info]   (min, avg, max) = (671.480, 675.749, 684.444), stdev = 5.023
[info]   CI (99.9%): [656.406, 695.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.524 ±(99.9%) 695.126 MB/sec [Average]
[info]   (min, avg, max) = (979.710, 1178.524, 1312.834), stdev = 180.522
[info]   CI (99.9%): [483.398, 1873.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   655.053 ±(99.9%) 381.215 B/op [Average]
[info]   (min, avg, max) = (545.022, 655.053, 728.660), stdev = 99.000
[info]   CI (99.9%): [273.837, 1036.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.806 ±(99.9%) 5.955 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.806, 3.550), stdev = 1.546
[info]   CI (99.9%): [≈ 0, 6.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.446 ±(99.9%) 3.292 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 1.963), stdev = 0.855
[info]   CI (99.9%): [≈ 0, 3.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 13.000), stdev = 3.647
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:27:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1434498.114 ops/s
[info] # Warmup Iteration   2: 13711631.397 ops/s
[info] # Warmup Iteration   3: 14348441.365 ops/s
[info] Iteration   1: 14232916.232 ops/s
[info]                  ·gc.alloc.rate:               752.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          83.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 72.854 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 13739767.572 ops/s
[info]                  ·gc.alloc.rate:                   716.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 14757480.122 ops/s
[info]                  ·gc.alloc.rate:                   768.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              81.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 14651079.494 ops/s
[info]                  ·gc.alloc.rate:                   767.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 14745804.881 ops/s
[info]                  ·gc.alloc.rate:                   769.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.322 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   14425409.660 ±(99.9%) 1690570.342 ops/s [Average]
[info]   (min, avg, max) = (13739767.572, 14425409.660, 14757480.122), stdev = 439035.749
[info]   CI (99.9%): [12734839.318, 16115980.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   754.982 ±(99.9%) 86.901 MB/sec [Average]
[info]   (min, avg, max) = (716.476, 754.982, 769.806), stdev = 22.568
[info]   CI (99.9%): [668.081, 841.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   82.354 ±(99.9%) 1.985 B/op [Average]
[info]   (min, avg, max) = (81.954, 82.354, 83.224), stdev = 0.516
[info]   CI (99.9%): [80.369, 84.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   727.488 ±(99.9%) 571.526 MB/sec [Average]
[info]   (min, avg, max) = (659.159, 727.488, 992.981), stdev = 148.423
[info]   CI (99.9%): [155.963, 1299.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   79.295 ±(99.9%) 59.442 B/op [Average]
[info]   (min, avg, max) = (70.513, 79.295, 106.667), stdev = 15.437
[info]   CI (99.9%): [19.853, 138.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.620 ±(99.9%) 5.163 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.620, 3.019), stdev = 1.341
[info]   CI (99.9%): [≈ 0, 5.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.551 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.322), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 9.000), stdev = 1.924
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:27:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1738768.720 ops/s
[info] # Warmup Iteration   2: 16554433.881 ops/s
[info] # Warmup Iteration   3: 16796324.025 ops/s
[info] Iteration   1: 16789023.529 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 16651734.814 ops/s
[info]                  ·gc.alloc.rate:      17.064 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.613 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 16799517.431 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 16791154.022 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 16794083.060 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   16765102.571 ±(99.9%) 244503.685 ops/s [Average]
[info]   (min, avg, max) = (16651734.814, 16765102.571, 16799517.431), stdev = 63496.831
[info]   CI (99.9%): [16520598.886, 17009606.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   3.413 ±(99.9%) 29.385 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 3.413, 17.064), stdev = 7.631
[info]   CI (99.9%): [≈ 0, 32.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.323 ±(99.9%) 2.777 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.323, 1.613), stdev = 0.721
[info]   CI (99.9%): [≈ 0, 3.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:27:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7832.922 ops/s
[info] # Warmup Iteration   2: 127549.254 ops/s
[info] # Warmup Iteration   3: 499157.865 ops/s
[info] Iteration   1: 494369.574 ops/s
[info]                  ·gc.alloc.rate:               1514.685 MB/sec
[info]                  ·gc.alloc.rate.norm:          4822.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1300.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4139.749 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 500433.213 ops/s
[info]                  ·gc.alloc.rate:                   1518.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              4772.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5165.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.506 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 494527.395 ops/s
[info]                  ·gc.alloc.rate:                   1497.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              4766.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4211.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.060 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 495634.362 ops/s
[info]                  ·gc.alloc.rate:                   1526.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              4846.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5279.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 502062.274 ops/s
[info]                  ·gc.alloc.rate:                   1517.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              4758.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4193.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   497405.363 ±(99.9%) 13815.424 ops/s [Average]
[info]   (min, avg, max) = (494369.574, 497405.363, 502062.274), stdev = 3587.822
[info]   CI (99.9%): [483589.939, 511220.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1514.928 ±(99.9%) 40.627 MB/sec [Average]
[info]   (min, avg, max) = (1497.693, 1514.928, 1526.311), stdev = 10.551
[info]   CI (99.9%): [1474.301, 1555.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4793.166 ±(99.9%) 149.959 B/op [Average]
[info]   (min, avg, max) = (4758.170, 4793.166, 4846.602), stdev = 38.944
[info]   CI (99.9%): [4643.206, 4943.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1453.424 ±(99.9%) 703.561 MB/sec [Average]
[info]   (min, avg, max) = (1300.323, 1453.424, 1662.723), stdev = 182.713
[info]   CI (99.9%): [749.863, 2156.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4597.939 ±(99.9%) 2203.580 B/op [Average]
[info]   (min, avg, max) = (4139.749, 4597.939, 5279.760), stdev = 572.263
[info]   CI (99.9%): [2394.359, 6801.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.187 ±(99.9%) 0.802 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.187, 0.479), stdev = 0.208
[info]   CI (99.9%): [≈ 0, 0.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.592 ±(99.9%) 2.529 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.592, 1.506), stdev = 0.657
[info]   CI (99.9%): [≈ 0, 3.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 9.000), stdev = 1.225
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:27:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 188536.266 ops/s
[info] # Warmup Iteration   2: 1701942.554 ops/s
[info] # Warmup Iteration   3: 2056591.655 ops/s
[info] Iteration   1: 2063574.558 ops/s
[info]                  ·gc.alloc.rate:                   2879.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              2196.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2629.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2005.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2063994.768 ops/s
[info]                  ·gc.alloc.rate:                   2908.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              2217.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2976.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2269.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 2014110.661 ops/s
[info]                  ·gc.alloc.rate:                   2845.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              2223.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2675.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2090.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 2049778.939 ops/s
[info]                  ·gc.alloc.rate:                   2843.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              2182.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2697.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2070.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 2053604.335 ops/s
[info]                  ·gc.alloc.rate:                   2878.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              2205.676 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2336.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   2049012.652 ±(99.9%) 78828.537 ops/s [Average]
[info]   (min, avg, max) = (2014110.661, 2049012.652, 2063994.768), stdev = 20471.521
[info]   CI (99.9%): [1970184.115, 2127841.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   2871.044 ±(99.9%) 104.035 MB/sec [Average]
[info]   (min, avg, max) = (2843.189, 2871.044, 2908.027), stdev = 27.017
[info]   CI (99.9%): [2767.009, 2975.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2205.017 ±(99.9%) 63.705 B/op [Average]
[info]   (min, avg, max) = (2182.143, 2205.017, 2223.672), stdev = 16.544
[info]   CI (99.9%): [2141.312, 2268.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2805.735 ±(99.9%) 741.361 MB/sec [Average]
[info]   (min, avg, max) = (2629.193, 2805.735, 3049.542), stdev = 192.529
[info]   CI (99.9%): [2064.374, 3547.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2154.550 ±(99.9%) 543.850 B/op [Average]
[info]   (min, avg, max) = (2005.208, 2154.550, 2336.767), stdev = 141.236
[info]   CI (99.9%): [1610.700, 2698.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.278 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.083, 0.187), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.213 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.064, 0.144), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.000, 14.000), stdev = 1.225
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:27:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.685 ops/s
[info] # Warmup Iteration   2: 9603664.369 ops/s
[info] # Warmup Iteration   3: 10855225.724 ops/s
[info] Iteration   1: 10536629.813 ops/s
[info]                  ·gc.alloc.rate:                   1323.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 10657556.496 ops/s
[info]                  ·gc.alloc.rate:                   1339.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     193.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.618 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 10591478.029 ops/s
[info]                  ·gc.alloc.rate:                   1336.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     193.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 10851297.174 ops/s
[info]                  ·gc.alloc.rate:               1361.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          197.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1301.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 188.706 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 10834414.074 ops/s
[info]                  ·gc.alloc.rate:                   1373.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              199.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   10694275.117 ±(99.9%) 548167.240 ops/s [Average]
[info]   (min, avg, max) = (10536629.813, 10694275.117, 10851297.174), stdev = 142357.292
[info]   CI (99.9%): [10146107.877, 11242442.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1347.178 ±(99.9%) 77.867 MB/sec [Average]
[info]   (min, avg, max) = (1323.934, 1347.178, 1373.781), stdev = 20.222
[info]   CI (99.9%): [1269.311, 1425.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   198.217 ±(99.9%) 3.238 B/op [Average]
[info]   (min, avg, max) = (197.515, 198.217, 199.512), stdev = 0.841
[info]   CI (99.9%): [194.979, 201.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1304.644 ±(99.9%) 11.728 MB/sec [Average]
[info]   (min, avg, max) = (1301.246, 1304.644, 1307.717), stdev = 3.046
[info]   CI (99.9%): [1292.915, 1316.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   191.988 ±(99.9%) 9.877 B/op [Average]
[info]   (min, avg, max) = (188.706, 191.988, 194.823), stdev = 2.565
[info]   CI (99.9%): [182.111, 201.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.864 ±(99.9%) 7.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.864, 4.185), stdev = 1.857
[info]   CI (99.9%): [≈ 0, 8.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.128 ±(99.9%) 1.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.128, 0.618), stdev = 0.274
[info]   CI (99.9%): [≈ 0, 1.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 13.000), stdev = 3.435
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:27:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124036.527 ops/s
[info] # Warmup Iteration   2: 2969840.032 ops/s
[info] # Warmup Iteration   3: 3192118.643 ops/s
[info] Iteration   1: 3176396.442 ops/s
[info]                  ·gc.alloc.rate:                   1986.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              983.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     974.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 3191068.534 ops/s
[info]                  ·gc.alloc.rate:                   2014.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              993.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     964.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3218753.045 ops/s
[info]                  ·gc.alloc.rate:                   1995.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              975.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     962.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3155934.698 ops/s
[info]                  ·gc.alloc.rate:                   1961.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              978.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     991.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3194899.611 ops/s
[info]                  ·gc.alloc.rate:                   1998.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     822.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3187410.466 ±(99.9%) 89560.769 ops/s [Average]
[info]   (min, avg, max) = (3155934.698, 3187410.466, 3218753.045), stdev = 23258.647
[info]   CI (99.9%): [3097849.697, 3276971.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1991.270 ±(99.9%) 73.857 MB/sec [Average]
[info]   (min, avg, max) = (1961.951, 1991.270, 2014.130), stdev = 19.180
[info]   CI (99.9%): [1917.414, 2065.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   983.055 ±(99.9%) 26.851 B/op [Average]
[info]   (min, avg, max) = (975.141, 983.055, 993.365), stdev = 6.973
[info]   CI (99.9%): [956.205, 1009.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1910.339 ±(99.9%) 519.953 MB/sec [Average]
[info]   (min, avg, max) = (1669.662, 1910.339, 1988.061), stdev = 135.030
[info]   CI (99.9%): [1390.387, 2430.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   943.222 ±(99.9%) 263.496 B/op [Average]
[info]   (min, avg, max) = (822.492, 943.222, 991.322), stdev = 68.429
[info]   CI (99.9%): [679.726, 1206.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.873 ±(99.9%) 6.934 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.873, 4.093), stdev = 1.801
[info]   CI (99.9%): [≈ 0, 7.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.432 ±(99.9%) 3.434 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.432, 2.027), stdev = 0.892
[info]   CI (99.9%): [≈ 0, 3.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 15.000), stdev = 3.114
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:26:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4145981.909 ops/s
[info] # Warmup Iteration   2: 12515212.283 ops/s
[info] # Warmup Iteration   3: 12877731.139 ops/s
[info] Iteration   1: 12993805.641 ops/s
[info]                  ·gc.alloc.rate:                   1684.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              203.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 12082161.840 ops/s
[info]                  ·gc.alloc.rate:                   1595.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              207.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 13389843.513 ops/s
[info]                  ·gc.alloc.rate:                   1748.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              205.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     195.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 13235698.734 ops/s
[info]                  ·gc.alloc.rate:                   1748.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              207.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1668.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 13382240.914 ops/s
[info]                  ·gc.alloc.rate:                   1768.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              207.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   13016750.128 ±(99.9%) 2104423.937 ops/s [Average]
[info]   (min, avg, max) = (12082161.840, 13016750.128, 13389843.513), stdev = 546512.213
[info]   CI (99.9%): [10912326.191, 15121174.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1708.950 ±(99.9%) 273.037 MB/sec [Average]
[info]   (min, avg, max) = (1595.399, 1708.950, 1768.507), stdev = 70.907
[info]   CI (99.9%): [1435.913, 1981.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   206.575 ±(99.9%) 6.883 B/op [Average]
[info]   (min, avg, max) = (203.986, 206.575, 207.887), stdev = 1.788
[info]   CI (99.9%): [199.692, 213.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1599.747 ±(99.9%) 575.315 MB/sec [Average]
[info]   (min, avg, max) = (1332.696, 1599.747, 1675.621), stdev = 149.407
[info]   CI (99.9%): [1024.433, 2175.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   193.634 ±(99.9%) 76.714 B/op [Average]
[info]   (min, avg, max) = (161.381, 193.634, 216.249), stdev = 19.922
[info]   CI (99.9%): [116.920, 270.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.558 ±(99.9%) 3.373 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.558, 2.103), stdev = 0.876
[info]   CI (99.9%): [≈ 0, 3.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.408 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.068, 0.255), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:26:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11637.626 ops/s
[info] # Warmup Iteration   2: 275292.721 ops/s
[info] # Warmup Iteration   3: 686121.886 ops/s
[info] Iteration   1: 1148593.958 ops/s
[info]                  ·gc.alloc.rate:                   2753.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              3772.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2630.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3604.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.082 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1158995.064 ops/s
[info]                  ·gc.alloc.rate:                   2754.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              3739.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2647.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3594.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.481 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1174020.904 ops/s
[info]                  ·gc.alloc.rate:                   2802.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              3756.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3005.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4027.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1172515.010 ops/s
[info]                  ·gc.alloc.rate:                   2819.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              3783.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2691.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3612.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1151575.515 ops/s
[info]                  ·gc.alloc.rate:               2771.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          3787.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2706.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3698.144 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1161140.090 ±(99.9%) 45103.183 ops/s [Average]
[info]   (min, avg, max) = (1148593.958, 1161140.090, 1174020.904), stdev = 11713.153
[info]   CI (99.9%): [1116036.907, 1206243.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2780.154 ±(99.9%) 114.186 MB/sec [Average]
[info]   (min, avg, max) = (2753.084, 2780.154, 2819.126), stdev = 29.654
[info]   CI (99.9%): [2665.969, 2894.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3767.726 ±(99.9%) 76.543 B/op [Average]
[info]   (min, avg, max) = (3739.295, 3767.726, 3787.495), stdev = 19.878
[info]   CI (99.9%): [3691.183, 3844.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2736.396 ±(99.9%) 591.140 MB/sec [Average]
[info]   (min, avg, max) = (2630.951, 2736.396, 3005.410), stdev = 153.517
[info]   CI (99.9%): [2145.257, 3327.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3707.588 ±(99.9%) 707.679 B/op [Average]
[info]   (min, avg, max) = (3594.502, 3707.588, 4027.946), stdev = 183.782
[info]   CI (99.9%): [2999.909, 4415.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.391 ±(99.9%) 2.491 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.391, 1.520), stdev = 0.647
[info]   CI (99.9%): [≈ 0, 2.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.535 ±(99.9%) 3.414 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.535, 2.082), stdev = 0.887
[info]   CI (99.9%): [≈ 0, 3.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.000, 15.000), stdev = 1.225
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:26:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 193932.189 ops/s
[info] # Warmup Iteration   2: 2254445.711 ops/s
[info] # Warmup Iteration   3: 2390894.818 ops/s
[info] Iteration   1: 2403670.568 ops/s
[info]                  ·gc.alloc.rate:                   2105.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              1378.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1295.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.276 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 2429811.364 ops/s
[info]                  ·gc.alloc.rate:                   2150.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              1393.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2299.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1489.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2425641.245 ops/s
[info]                  ·gc.alloc.rate:               2150.596 MB/sec
[info]                  ·gc.alloc.rate.norm:          1394.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1984.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1287.210 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 2427717.123 ops/s
[info]                  ·gc.alloc.rate:                   2159.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              1399.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1296.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2422276.500 ops/s
[info]                  ·gc.alloc.rate:                   2147.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              1395.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1308.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   2421823.360 ±(99.9%) 40516.483 ops/s [Average]
[info]   (min, avg, max) = (2403670.568, 2421823.360, 2429811.364), stdev = 10522.002
[info]   CI (99.9%): [2381306.877, 2462339.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2142.716 ±(99.9%) 82.051 MB/sec [Average]
[info]   (min, avg, max) = (2105.359, 2142.716, 2159.082), stdev = 21.308
[info]   CI (99.9%): [2060.665, 2224.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1392.321 ±(99.9%) 31.190 B/op [Average]
[info]   (min, avg, max) = (1378.491, 1392.321, 1399.683), stdev = 8.100
[info]   CI (99.9%): [1361.131, 1423.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2055.479 ±(99.9%) 528.298 MB/sec [Average]
[info]   (min, avg, max) = (1978.697, 2055.479, 2299.641), stdev = 137.197
[info]   CI (99.9%): [1527.181, 2583.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1335.537 ±(99.9%) 332.774 B/op [Average]
[info]   (min, avg, max) = (1287.210, 1335.537, 1489.509), stdev = 86.420
[info]   CI (99.9%): [1002.763, 1668.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.741 ±(99.9%) 5.893 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.741, 3.477), stdev = 1.530
[info]   CI (99.9%): [≈ 0, 6.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.485 ±(99.9%) 3.859 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.485, 2.276), stdev = 1.002
[info]   CI (99.9%): [≈ 0, 4.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 12.000), stdev = 1.673
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:26:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.696 ops/s
[info] # Warmup Iteration   2: 17978841.701 ops/s
[info] # Warmup Iteration   3: 19061999.293 ops/s
[info] Iteration   1: 19934514.400 ops/s
[info]                  ·gc.alloc.rate:               615.853 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25.561 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 19943233.628 ops/s
[info]                  ·gc.alloc.rate:                   629.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 20142167.261 ops/s
[info]                  ·gc.alloc.rate:                   632.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 20206334.823 ops/s
[info]                  ·gc.alloc.rate:               632.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 50.254 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 20047543.235 ops/s
[info]                  ·gc.alloc.rate:               631.017 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.533 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 50.730 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   20054758.669 ±(99.9%) 461933.547 ops/s [Average]
[info]   (min, avg, max) = (19934514.400, 20054758.669, 20206334.823), stdev = 119962.675
[info]   CI (99.9%): [19592825.122, 20516692.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   628.419 ±(99.9%) 27.431 MB/sec [Average]
[info]   (min, avg, max) = (615.853, 628.419, 632.835), stdev = 7.124
[info]   CI (99.9%): [600.988, 655.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   49.308 ±(99.9%) 1.645 B/op [Average]
[info]   (min, avg, max) = (48.600, 49.308, 49.706), stdev = 0.427
[info]   CI (99.9%): [47.664, 50.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   581.315 ±(99.9%) 554.097 MB/sec [Average]
[info]   (min, avg, max) = (323.905, 581.315, 646.267), stdev = 143.897
[info]   CI (99.9%): [27.217, 1135.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   45.585 ±(99.9%) 43.119 B/op [Average]
[info]   (min, avg, max) = (25.561, 45.585, 50.994), stdev = 11.198
[info]   CI (99.9%): [2.467, 88.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 4.000), stdev = 1.095
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:26:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 217698.027 ops/s
[info] # Warmup Iteration   2: 6106408.478 ops/s
[info] # Warmup Iteration   3: 6334477.498 ops/s
[info] Iteration   1: 6272775.064 ops/s
[info]                  ·gc.alloc.rate:                   1774.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              445.294 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     411.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.982 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 6455065.380 ops/s
[info]                  ·gc.alloc.rate:                   1842.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              448.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     476.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 6482928.405 ops/s
[info]                  ·gc.alloc.rate:               1844.293 MB/sec
[info]                  ·gc.alloc.rate.norm:          447.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1636.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 397.107 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 6427426.959 ops/s
[info]                  ·gc.alloc.rate:                   1843.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              451.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     484.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6466839.978 ops/s
[info]                  ·gc.alloc.rate:               1841.003 MB/sec
[info]                  ·gc.alloc.rate.norm:          447.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 404.932 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   6421007.157 ±(99.9%) 328485.084 ops/s [Average]
[info]   (min, avg, max) = (6272775.064, 6421007.157, 6482928.405), stdev = 85306.533
[info]   CI (99.9%): [6092522.074, 6749492.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1829.053 ±(99.9%) 117.162 MB/sec [Average]
[info]   (min, avg, max) = (1774.669, 1829.053, 1844.293), stdev = 30.426
[info]   CI (99.9%): [1711.891, 1946.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   448.214 ±(99.9%) 8.378 B/op [Average]
[info]   (min, avg, max) = (445.294, 448.214, 451.288), stdev = 2.176
[info]   CI (99.9%): [439.836, 456.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1775.056 ±(99.9%) 680.570 MB/sec [Average]
[info]   (min, avg, max) = (1636.309, 1775.056, 1979.400), stdev = 176.742
[info]   CI (99.9%): [1094.487, 2455.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   434.945 ±(99.9%) 162.516 B/op [Average]
[info]   (min, avg, max) = (397.107, 434.945, 484.626), stdev = 42.205
[info]   CI (99.9%): [272.429, 597.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 6.721 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.791, 3.914), stdev = 1.746
[info]   CI (99.9%): [≈ 0, 7.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.198 ±(99.9%) 1.687 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.198, 0.982), stdev = 0.438
[info]   CI (99.9%): [≈ 0, 1.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.464
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:25:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5602702.446 ops/s
[info] # Warmup Iteration   2: 27133432.452 ops/s
[info] # Warmup Iteration   3: 28112626.375 ops/s
[info] Iteration   1: 28614625.020 ops/s
[info]                  ·gc.alloc.rate:                   900.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 28445890.534 ops/s
[info]                  ·gc.alloc.rate:                   887.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 28086726.085 ops/s
[info]                  ·gc.alloc.rate:               883.062 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55.693 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 28258096.796 ops/s
[info]                  ·gc.alloc.rate:                   881.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 27932236.029 ops/s
[info]                  ·gc.alloc.rate:               884.174 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55.817 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   28267514.893 ±(99.9%) 1050118.889 ops/s [Average]
[info]   (min, avg, max) = (27932236.029, 28267514.893, 28614625.020), stdev = 272712.541
[info]   CI (99.9%): [27217396.004, 29317633.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   887.447 ±(99.9%) 29.891 MB/sec [Average]
[info]   (min, avg, max) = (881.919, 887.447, 900.881), stdev = 7.763
[info]   CI (99.9%): [857.556, 917.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49.402 ±(99.9%) 1.195 B/op [Average]
[info]   (min, avg, max) = (49.084, 49.402, 49.812), stdev = 0.310
[info]   CI (99.9%): [48.207, 50.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   860.179 ±(99.9%) 694.308 MB/sec [Average]
[info]   (min, avg, max) = (661.576, 860.179, 994.029), stdev = 180.310
[info]   CI (99.9%): [165.871, 1554.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   47.910 ±(99.9%) 39.186 B/op [Average]
[info]   (min, avg, max) = (36.602, 47.910, 55.817), stdev = 10.176
[info]   CI (99.9%): [8.724, 87.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.646 ±(99.9%) 5.380 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.646, 3.145), stdev = 1.397
[info]   CI (99.9%): [≈ 0, 6.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.300 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.036, 0.175), stdev = 0.078
[info]   CI (99.9%): [≈ 0, 0.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 1.789
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:25:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6203013.656 ops/s
[info] # Warmup Iteration   2: 32853737.544 ops/s
[info] # Warmup Iteration   3: 34513880.036 ops/s
[info] Iteration   1: 34651826.660 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 34646944.370 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 34632272.168 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 34734425.316 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 34607498.919 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   34654593.487 ±(99.9%) 184222.477 ops/s [Average]
[info]   (min, avg, max) = (34607498.919, 34654593.487, 34734425.316), stdev = 47841.992
[info]   CI (99.9%): [34470371.010, 34838815.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:25:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65904.520 ops/s
[info] # Warmup Iteration   2: 1636052.106 ops/s
[info] # Warmup Iteration   3: 1781171.670 ops/s
[info] Iteration   1: 1797012.751 ops/s
[info]                  ·gc.alloc.rate:               2945.349 MB/sec
[info]                  ·gc.alloc.rate.norm:          2579.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2930.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2566.862 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   2: 1816257.277 ops/s
[info]                  ·gc.alloc.rate:                   2984.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              2585.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2638.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2285.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1815224.711 ops/s
[info]                  ·gc.alloc.rate:                   2997.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              2598.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3006.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2606.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1819242.423 ops/s
[info]                  ·gc.alloc.rate:                   2992.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              2588.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2332.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1770561.384 ops/s
[info]                  ·gc.alloc.rate:               2942.116 MB/sec
[info]                  ·gc.alloc.rate.norm:          2615.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3048.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2709.653 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   1803659.709 ±(99.9%) 78796.024 ops/s [Average]
[info]   (min, avg, max) = (1770561.384, 1803659.709, 1819242.423), stdev = 20463.077
[info]   CI (99.9%): [1724863.686, 1882455.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2972.400 ±(99.9%) 102.338 MB/sec [Average]
[info]   (min, avg, max) = (2942.116, 2972.400, 2997.588), stdev = 26.577
[info]   CI (99.9%): [2870.062, 3074.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2593.528 ±(99.9%) 53.389 B/op [Average]
[info]   (min, avg, max) = (2579.630, 2593.528, 2615.096), stdev = 13.865
[info]   CI (99.9%): [2540.139, 2646.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2863.986 ±(99.9%) 715.332 MB/sec [Average]
[info]   (min, avg, max) = (2638.216, 2863.986, 3048.498), stdev = 185.770
[info]   CI (99.9%): [2148.654, 3579.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2500.131 ±(99.9%) 704.460 B/op [Average]
[info]   (min, avg, max) = (2285.462, 2500.131, 2709.653), stdev = 182.946
[info]   CI (99.9%): [1795.671, 3204.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.174 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.108), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 13.000), stdev = 1.304
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:25:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64714.217 ops/s
[info] # Warmup Iteration   2: 293904.309 ops/s
[info] # Warmup Iteration   3: 296263.003 ops/s
[info] Iteration   1: 302589.967 ops/s
[info]                  ·gc.alloc.rate:                   1850.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              9622.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10325.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.624 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 306099.298 ops/s
[info]                  ·gc.alloc.rate:                   1856.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              9547.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8460.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.535 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 308787.979 ops/s
[info]                  ·gc.alloc.rate:                   1906.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              9718.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10086.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.318 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 306608.800 ops/s
[info]                  ·gc.alloc.rate:                   1887.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              9689.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8519.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 300277.954 ops/s
[info]                  ·gc.alloc.rate:                   1860.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              9752.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10513.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.982 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   304872.800 ±(99.9%) 13082.356 ops/s [Average]
[info]   (min, avg, max) = (300277.954, 304872.800, 308787.979), stdev = 3397.446
[info]   CI (99.9%): [291790.444, 317955.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1872.509 ±(99.9%) 91.607 MB/sec [Average]
[info]   (min, avg, max) = (1850.402, 1872.509, 1906.696), stdev = 23.790
[info]   CI (99.9%): [1780.902, 1964.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9665.967 ±(99.9%) 313.937 B/op [Average]
[info]   (min, avg, max) = (9547.517, 9665.967, 9752.178), stdev = 81.528
[info]   CI (99.9%): [9352.030, 9979.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1855.156 ±(99.9%) 713.387 MB/sec [Average]
[info]   (min, avg, max) = (1645.368, 1855.156, 2006.202), stdev = 185.264
[info]   CI (99.9%): [1141.770, 2568.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9580.947 ±(99.9%) 3879.986 B/op [Average]
[info]   (min, avg, max) = (8460.042, 9580.947, 10513.309), stdev = 1007.620
[info]   CI (99.9%): [5700.960, 13460.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 6.011 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.791, 3.581), stdev = 1.561
[info]   CI (99.9%): [≈ 0, 6.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.113 ±(99.9%) 31.260 B/op [Average]
[info]   (min, avg, max) = (0.107, 4.113, 18.624), stdev = 8.118
[info]   CI (99.9%): [≈ 0, 35.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.391
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:25:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77959.463 ops/s
[info] # Warmup Iteration   2: 457830.945 ops/s
[info] # Warmup Iteration   3: 485429.509 ops/s
[info] Iteration   1: 508022.362 ops/s
[info]                  ·gc.alloc.rate:                   669.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              2074.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2018.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 505834.775 ops/s
[info]                  ·gc.alloc.rate:                   666.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              2072.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2030.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 508505.942 ops/s
[info]                  ·gc.alloc.rate:               668.202 MB/sec
[info]                  ·gc.alloc.rate.norm:          2067.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2022.698 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 511658.248 ops/s
[info]                  ·gc.alloc.rate:                   668.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              2056.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2014.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 503013.737 ops/s
[info]                  ·gc.alloc.rate:                   655.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              2050.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2051.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.571 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   507407.013 ±(99.9%) 12392.869 ops/s [Average]
[info]   (min, avg, max) = (503013.737, 507407.013, 511658.248), stdev = 3218.389
[info]   CI (99.9%): [495014.144, 519799.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   665.654 ±(99.9%) 22.519 MB/sec [Average]
[info]   (min, avg, max) = (655.435, 665.654, 669.748), stdev = 5.848
[info]   CI (99.9%): [643.134, 688.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2064.277 ±(99.9%) 40.420 B/op [Average]
[info]   (min, avg, max) = (2050.553, 2064.277, 2074.618), stdev = 10.497
[info]   CI (99.9%): [2023.857, 2104.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   653.785 ±(99.9%) 6.680 MB/sec [Average]
[info]   (min, avg, max) = (651.596, 653.785, 655.897), stdev = 1.735
[info]   CI (99.9%): [647.104, 660.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2027.549 ±(99.9%) 57.363 B/op [Average]
[info]   (min, avg, max) = (2014.329, 2027.549, 2051.998), stdev = 14.897
[info]   CI (99.9%): [1970.186, 2084.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 6.858 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 4.018), stdev = 1.781
[info]   CI (99.9%): [≈ 0, 7.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.604 ±(99.9%) 21.456 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.604, 12.571), stdev = 5.572
[info]   CI (99.9%): [≈ 0, 24.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:24:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 743126.761 ops/s
[info] # Warmup Iteration   2: 1293381.077 ops/s
[info] # Warmup Iteration   3: 1318402.462 ops/s
[info] Iteration   1: 1275999.404 ops/s
[info]                  ·gc.alloc.rate:               882.553 MB/sec
[info]                  ·gc.alloc.rate.norm:          1088.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1225.516 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 1324762.008 ops/s
[info]                  ·gc.alloc.rate:                   896.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              1065.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     788.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1302639.944 ops/s
[info]                  ·gc.alloc.rate:                   913.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              1103.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1203.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.967 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.585 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1310158.050 ops/s
[info]                  ·gc.alloc.rate:                   896.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              1076.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1193.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.775 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1323465.241 ops/s
[info]                  ·gc.alloc.rate:                   901.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     784.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1307404.930 ±(99.9%) 76428.094 ops/s [Average]
[info]   (min, avg, max) = (1275999.404, 1307404.930, 1324762.008), stdev = 19848.133
[info]   CI (99.9%): [1230976.835, 1383833.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   898.162 ±(99.9%) 43.243 MB/sec [Average]
[info]   (min, avg, max) = (882.553, 898.162, 913.714), stdev = 11.230
[info]   CI (99.9%): [854.919, 941.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1081.328 ±(99.9%) 58.576 B/op [Average]
[info]   (min, avg, max) = (1065.311, 1081.328, 1103.953), stdev = 15.212
[info]   CI (99.9%): [1022.753, 1139.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   861.282 ±(99.9%) 702.296 MB/sec [Average]
[info]   (min, avg, max) = (659.508, 861.282, 995.933), stdev = 182.384
[info]   CI (99.9%): [158.986, 1563.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1039.057 ±(99.9%) 889.718 B/op [Average]
[info]   (min, avg, max) = (784.288, 1039.057, 1225.516), stdev = 231.057
[info]   CI (99.9%): [149.338, 1928.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.760 ±(99.9%) 4.853 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.760, 2.967), stdev = 1.260
[info]   CI (99.9%): [≈ 0, 5.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.917 ±(99.9%) 5.866 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.917, 3.585), stdev = 1.523
[info]   CI (99.9%): [≈ 0, 6.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 9.000), stdev = 3.114
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:24:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10299.570 ops/s
[info] # Warmup Iteration   2: 102686.168 ops/s
[info] # Warmup Iteration   3: 108150.100 ops/s
[info] Iteration   1: 113641.407 ops/s
[info]                  ·gc.alloc.rate:                   3582.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              49612.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3607.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49956.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.865 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 112269.833 ops/s
[info]                  ·gc.alloc.rate:                   3568.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              50027.543 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3330.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46692.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.584 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 111475.457 ops/s
[info]                  ·gc.alloc.rate:                   3547.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              50070.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3368.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47554.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 110337.494 ops/s
[info]                  ·gc.alloc.rate:                   3521.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              50197.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3724.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53086.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 112605.785 ops/s
[info]                  ·gc.alloc.rate:               3584.309 MB/sec
[info]                  ·gc.alloc.rate.norm:          50075.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3398.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47485.638 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   112065.995 ±(99.9%) 4775.146 ops/s [Average]
[info]   (min, avg, max) = (110337.494, 112065.995, 113641.407), stdev = 1240.090
[info]   CI (99.9%): [107290.849, 116841.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3560.850 ±(99.9%) 102.302 MB/sec [Average]
[info]   (min, avg, max) = (3521.498, 3560.850, 3584.309), stdev = 26.568
[info]   CI (99.9%): [3458.547, 3663.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   49996.665 ±(99.9%) 862.089 B/op [Average]
[info]   (min, avg, max) = (49612.426, 49996.665, 50197.166), stdev = 223.882
[info]   CI (99.9%): [49134.576, 50858.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3486.052 ±(99.9%) 658.145 MB/sec [Average]
[info]   (min, avg, max) = (3330.914, 3486.052, 3724.216), stdev = 170.918
[info]   CI (99.9%): [2827.907, 4144.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48955.164 ±(99.9%) 10062.728 B/op [Average]
[info]   (min, avg, max) = (46692.197, 48955.164, 53086.811), stdev = 2613.259
[info]   CI (99.9%): [38892.436, 59017.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.408 ±(99.9%) 1.265 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.408, 0.865), stdev = 0.328
[info]   CI (99.9%): [≈ 0, 1.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   52.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.400, 11.000), stdev = 0.548
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.600, 15.000), stdev = 1.140
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:24:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94235.259 ops/s
[info] # Warmup Iteration   2: 331098.863 ops/s
[info] # Warmup Iteration   3: 345671.182 ops/s
[info] Iteration   1: 337266.198 ops/s
[info]                  ·gc.alloc.rate:                   1176.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              5486.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6158.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 344213.989 ops/s
[info]                  ·gc.alloc.rate:                   1181.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              5402.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4534.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 343616.385 ops/s
[info]                  ·gc.alloc.rate:                   1204.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              5517.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6033.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.719 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 349411.911 ops/s
[info]                  ·gc.alloc.rate:               1203.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          5419.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:      985.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4437.880 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 343474.345 ops/s
[info]                  ·gc.alloc.rate:                   1204.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              5518.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6022.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   343596.566 ±(99.9%) 16594.481 ops/s [Average]
[info]   (min, avg, max) = (337266.198, 343596.566, 349411.911), stdev = 4309.534
[info]   CI (99.9%): [327002.085, 360191.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1194.163 ±(99.9%) 53.938 MB/sec [Average]
[info]   (min, avg, max) = (1176.140, 1194.163, 1204.660), stdev = 14.008
[info]   CI (99.9%): [1140.225, 1248.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5469.041 ±(99.9%) 210.500 B/op [Average]
[info]   (min, avg, max) = (5402.755, 5469.041, 5518.343), stdev = 54.666
[info]   CI (99.9%): [5258.541, 5679.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1185.898 ±(99.9%) 693.397 MB/sec [Average]
[info]   (min, avg, max) = (985.523, 1185.898, 1320.086), stdev = 180.073
[info]   CI (99.9%): [492.501, 1879.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5437.341 ±(99.9%) 3353.104 B/op [Average]
[info]   (min, avg, max) = (4437.880, 5437.341, 6158.475), stdev = 870.790
[info]   CI (99.9%): [2084.237, 8790.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.754 ±(99.9%) 4.702 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.754, 2.853), stdev = 1.221
[info]   CI (99.9%): [≈ 0, 5.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.449 ±(99.9%) 21.490 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.449, 13.041), stdev = 5.581
[info]   CI (99.9%): [≈ 0, 24.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 12.000), stdev = 3.435
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:24:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 263221.649 ops/s
[info] # Warmup Iteration   2: 850147.398 ops/s
[info] # Warmup Iteration   3: 905446.738 ops/s
[info] Iteration   1: 882122.881 ops/s
[info]                  ·gc.alloc.rate:                   654.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              1166.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1160.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 883228.809 ops/s
[info]                  ·gc.alloc.rate:                   664.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              1184.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1153.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 912274.419 ops/s
[info]                  ·gc.alloc.rate:               674.551 MB/sec
[info]                  ·gc.alloc.rate.norm:          1163.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1117.091 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 903783.039 ops/s
[info]                  ·gc.alloc.rate:               666.727 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1128.736 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 901964.108 ops/s
[info]                  ·gc.alloc.rate:               664.516 MB/sec
[info]                  ·gc.alloc.rate.norm:          1159.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1133.303 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   896674.651 ±(99.9%) 51460.689 ops/s [Average]
[info]   (min, avg, max) = (882122.881, 896674.651, 912274.419), stdev = 13364.178
[info]   CI (99.9%): [845213.962, 948135.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   664.903 ±(99.9%) 28.209 MB/sec [Average]
[info]   (min, avg, max) = (654.037, 664.903, 674.551), stdev = 7.326
[info]   CI (99.9%): [636.694, 693.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1166.891 ±(99.9%) 39.151 B/op [Average]
[info]   (min, avg, max) = (1159.255, 1166.891, 1184.422), stdev = 10.167
[info]   CI (99.9%): [1127.740, 1206.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   648.704 ±(99.9%) 4.921 MB/sec [Average]
[info]   (min, avg, max) = (647.505, 648.704, 650.437), stdev = 1.278
[info]   CI (99.9%): [643.784, 653.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1138.594 ±(99.9%) 68.843 B/op [Average]
[info]   (min, avg, max) = (1117.091, 1138.594, 1160.028), stdev = 17.878
[info]   CI (99.9%): [1069.751, 1207.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.157 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.074), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:24:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1147397.259 ops/s
[info] # Warmup Iteration   2: 2467461.067 ops/s
[info] # Warmup Iteration   3: 2382446.929 ops/s
[info] Iteration   1: 2432739.119 ops/s
[info]                  ·gc.alloc.rate:                   1149.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     642.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2433291.504 ops/s
[info]                  ·gc.alloc.rate:                   1159.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     856.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.882 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2421043.636 ops/s
[info]                  ·gc.alloc.rate:                   1147.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     643.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.244 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2457983.734 ops/s
[info]                  ·gc.alloc.rate:                   1160.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2423170.065 ops/s
[info]                  ·gc.alloc.rate:                   1179.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              765.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     857.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2433645.611 ±(99.9%) 56521.833 ops/s [Average]
[info]   (min, avg, max) = (2421043.636, 2433645.611, 2457983.734), stdev = 14678.540
[info]   CI (99.9%): [2377123.779, 2490167.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1159.598 ±(99.9%) 49.033 MB/sec [Average]
[info]   (min, avg, max) = (1147.791, 1159.598, 1179.739), stdev = 12.734
[info]   CI (99.9%): [1110.565, 1208.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   749.739 ±(99.9%) 36.281 B/op [Average]
[info]   (min, avg, max) = (743.384, 749.739, 765.960), stdev = 9.422
[info]   CI (99.9%): [713.458, 786.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1123.884 ±(99.9%) 700.120 MB/sec [Average]
[info]   (min, avg, max) = (989.264, 1123.884, 1325.899), stdev = 181.819
[info]   CI (99.9%): [423.764, 1824.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   726.812 ±(99.9%) 458.037 B/op [Average]
[info]   (min, avg, max) = (633.432, 726.812, 857.139), stdev = 118.951
[info]   CI (99.9%): [268.775, 1184.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.670 ±(99.9%) 4.862 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.670, 2.912), stdev = 1.263
[info]   CI (99.9%): [≈ 0, 5.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.433 ±(99.9%) 3.142 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.433, 1.882), stdev = 0.816
[info]   CI (99.9%): [≈ 0, 3.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 11.000), stdev = 2.950
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:24:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1851828.006 ops/s
[info] # Warmup Iteration   2: 2792536.936 ops/s
[info] # Warmup Iteration   3: 2917608.446 ops/s
[info] Iteration   1: 2919482.809 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2917473.798 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2918204.842 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2916965.871 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2919582.180 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2918341.900 ±(99.9%) 4517.664 ops/s [Average]
[info]   (min, avg, max) = (2916965.871, 2918341.900, 2919582.180), stdev = 1173.223
[info]   CI (99.9%): [2913824.235, 2922859.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:23:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138704.308 ops/s
[info] # Warmup Iteration   2: 460190.322 ops/s
[info] # Warmup Iteration   3: 467298.118 ops/s
[info] Iteration   1: 476258.683 ops/s
[info]                  ·gc.alloc.rate:               705.711 MB/sec
[info]                  ·gc.alloc.rate.norm:          2332.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2168.449 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 473622.098 ops/s
[info]                  ·gc.alloc.rate:               706.422 MB/sec
[info]                  ·gc.alloc.rate.norm:          2346.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2183.708 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 467835.750 ops/s
[info]                  ·gc.alloc.rate:               692.624 MB/sec
[info]                  ·gc.alloc.rate.norm:          2329.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2212.989 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 475721.591 ops/s
[info]                  ·gc.alloc.rate:                   715.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              2363.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3260.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 473281.263 ops/s
[info]                  ·gc.alloc.rate:                   711.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              2364.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2193.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.945 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   473343.877 ±(99.9%) 12853.656 ops/s [Average]
[info]   (min, avg, max) = (467835.750, 473343.877, 476258.683), stdev = 3338.054
[info]   CI (99.9%): [460490.221, 486197.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   706.326 ±(99.9%) 33.160 MB/sec [Average]
[info]   (min, avg, max) = (692.624, 706.326, 715.364), stdev = 8.612
[info]   CI (99.9%): [673.166, 739.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2347.435 ±(99.9%) 65.143 B/op [Average]
[info]   (min, avg, max) = (2329.381, 2347.435, 2364.980), stdev = 16.917
[info]   CI (99.9%): [2282.292, 2412.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   723.610 ±(99.9%) 566.407 MB/sec [Average]
[info]   (min, avg, max) = (656.216, 723.610, 986.730), stdev = 147.094
[info]   CI (99.9%): [157.203, 1290.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2403.773 ±(99.9%) 1845.613 B/op [Average]
[info]   (min, avg, max) = (2168.449, 2403.773, 3260.685), stdev = 479.300
[info]   CI (99.9%): [558.160, 4249.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 6.689 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 3.895), stdev = 1.737
[info]   CI (99.9%): [≈ 0, 7.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.616 ±(99.9%) 22.234 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.616, 12.945), stdev = 5.774
[info]   CI (99.9%): [≈ 0, 24.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.483
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:23:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6504.752 ops/s
[info] # Warmup Iteration   2: 14800.152 ops/s
[info] # Warmup Iteration   3: 17291.126 ops/s
[info] Iteration   1: 17305.265 ops/s
[info]                  ·gc.alloc.rate:                   1380.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              125464.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120560.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.786 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 17161.822 ops/s
[info]                  ·gc.alloc.rate:                   1374.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              126085.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121450.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 336.004 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 17020.859 ops/s
[info]                  ·gc.alloc.rate:                   1378.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              127432.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121716.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.925 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 17088.794 ops/s
[info]                  ·gc.alloc.rate:                   1376.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              126790.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121293.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.752 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 17322.704 ops/s
[info]                  ·gc.alloc.rate:               1407.746 MB/sec
[info]                  ·gc.alloc.rate.norm:          127844.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 120086.284 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   17179.889 ±(99.9%) 509.503 ops/s [Average]
[info]   (min, avg, max) = (17020.859, 17179.889, 17322.704), stdev = 132.316
[info]   CI (99.9%): [16670.386, 17689.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1383.606 ±(99.9%) 52.482 MB/sec [Average]
[info]   (min, avg, max) = (1374.847, 1383.606, 1407.746), stdev = 13.629
[info]   CI (99.9%): [1331.124, 1436.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   126723.727 ±(99.9%) 3731.393 B/op [Average]
[info]   (min, avg, max) = (125464.959, 126723.727, 127844.984), stdev = 969.031
[info]   CI (99.9%): [122992.335, 130455.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1321.317 ±(99.9%) 16.199 MB/sec [Average]
[info]   (min, avg, max) = (1316.646, 1321.317, 1326.071), stdev = 4.207
[info]   CI (99.9%): [1305.118, 1337.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   121021.592 ±(99.9%) 2603.324 B/op [Average]
[info]   (min, avg, max) = (120086.284, 121021.592, 121716.864), stdev = 676.075
[info]   CI (99.9%): [118418.268, 123624.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 6.256 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.664), stdev = 1.625
[info]   CI (99.9%): [≈ 0, 7.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   69.493 ±(99.9%) 573.743 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 69.493, 336.004), stdev = 148.999
[info]   CI (99.9%): [≈ 0, 643.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 13.000), stdev = 3.209
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:23:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7103.547 ops/s
[info] # Warmup Iteration   2: 34381.098 ops/s
[info] # Warmup Iteration   3: 34818.107 ops/s
[info] Iteration   1: 35101.889 ops/s
[info]                  ·gc.alloc.rate:                   980.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              43980.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44070.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.867 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 35841.663 ops/s
[info]                  ·gc.alloc.rate:                   987.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              43357.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43292.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.914 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 36255.946 ops/s
[info]                  ·gc.alloc.rate:                   1005.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              43642.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42855.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.955 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 171.697 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 36313.980 ops/s
[info]                  ·gc.alloc.rate:                   1005.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              43599.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42555.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.826 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 36562.904 ops/s
[info]                  ·gc.alloc.rate:                   1005.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              43298.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42150.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.376 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   36015.277 ±(99.9%) 2204.859 ops/s [Average]
[info]   (min, avg, max) = (35101.889, 36015.277, 36562.904), stdev = 572.595
[info]   CI (99.9%): [33810.417, 38220.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   997.127 ±(99.9%) 46.324 MB/sec [Average]
[info]   (min, avg, max) = (980.941, 997.127, 1005.961), stdev = 12.030
[info]   CI (99.9%): [950.803, 1043.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43575.762 ±(99.9%) 1041.959 B/op [Average]
[info]   (min, avg, max) = (43298.775, 43575.762, 43980.246), stdev = 270.594
[info]   CI (99.9%): [42533.802, 44617.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   983.450 ±(99.9%) 12.320 MB/sec [Average]
[info]   (min, avg, max) = (979.253, 983.450, 987.231), stdev = 3.199
[info]   CI (99.9%): [971.130, 995.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   42984.753 ±(99.9%) 2836.023 B/op [Average]
[info]   (min, avg, max) = (42150.639, 42984.753, 44070.239), stdev = 736.506
[info]   CI (99.9%): [40148.729, 45820.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.878 ±(99.9%) 6.632 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.878, 3.955), stdev = 1.722
[info]   CI (99.9%): [≈ 0, 7.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   38.136 ±(99.9%) 287.889 B/op [Average]
[info]   (min, avg, max) = (0.914, 38.136, 171.697), stdev = 74.764
[info]   CI (99.9%): [≈ 0, 326.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 12.000), stdev = 3.647
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:23:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17021.053 ops/s
[info] # Warmup Iteration   2: 44022.888 ops/s
[info] # Warmup Iteration   3: 44523.284 ops/s
[info] Iteration   1: 44443.081 ops/s
[info]                  ·gc.alloc.rate:                   613.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              21715.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11676.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.737 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 44982.205 ops/s
[info]                  ·gc.alloc.rate:               627.276 MB/sec
[info]                  ·gc.alloc.rate.norm:          21935.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23120.927 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 40564.429 ops/s
[info]                  ·gc.alloc.rate:               563.173 MB/sec
[info]                  ·gc.alloc.rate.norm:          21845.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25691.650 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 43922.629 ops/s
[info]                  ·gc.alloc.rate:                   611.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              21914.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23752.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.492 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 44753.704 ops/s
[info]                  ·gc.alloc.rate:               608.117 MB/sec
[info]                  ·gc.alloc.rate.norm:          21379.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11666.462 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   43733.210 ±(99.9%) 6990.369 ops/s [Average]
[info]   (min, avg, max) = (40564.429, 43733.210, 44982.205), stdev = 1815.377
[info]   CI (99.9%): [36742.841, 50723.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   604.716 ±(99.9%) 93.713 MB/sec [Average]
[info]   (min, avg, max) = (563.173, 604.716, 627.276), stdev = 24.337
[info]   CI (99.9%): [511.003, 698.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   21758.303 ±(99.9%) 879.130 B/op [Average]
[info]   (min, avg, max) = (21379.973, 21758.303, 21935.961), stdev = 228.307
[info]   CI (99.9%): [20879.174, 22637.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   529.618 ±(99.9%) 698.847 MB/sec [Average]
[info]   (min, avg, max) = (329.787, 529.618, 662.980), stdev = 181.488
[info]   CI (99.9%): [≈ 0, 1228.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   19181.526 ±(99.9%) 26649.652 B/op [Average]
[info]   (min, avg, max) = (11666.462, 19181.526, 25691.650), stdev = 6920.830
[info]   CI (99.9%): [≈ 0, 45831.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.446 ±(99.9%) 2.565 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 1.492), stdev = 0.666
[info]   CI (99.9%): [≈ 0, 3.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.342
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:23:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4048.315 ops/s
[info] # Warmup Iteration   2: 24611.658 ops/s
[info] # Warmup Iteration   3: 28403.942 ops/s
[info] Iteration   1: 27894.825 ops/s
[info]                  ·gc.alloc.rate:               1413.923 MB/sec
[info]                  ·gc.alloc.rate.norm:          79773.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 92458.402 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     17.000 ms
[info] Iteration   2: 28331.219 ops/s
[info]                  ·gc.alloc.rate:                   1463.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              81272.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72826.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.351 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 241.689 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 29204.887 ops/s
[info]                  ·gc.alloc.rate:                   1472.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              79317.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70218.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.366 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 29343.251 ops/s
[info]                  ·gc.alloc.rate:                   1505.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              80765.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87521.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.117 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 29371.639 ops/s
[info]                  ·gc.alloc.rate:                   1494.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              80083.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70390.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.231 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   28829.164 ±(99.9%) 2597.881 ops/s [Average]
[info]   (min, avg, max) = (27894.825, 28829.164, 29371.639), stdev = 674.661
[info]   CI (99.9%): [26231.284, 31427.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1469.937 ±(99.9%) 137.337 MB/sec [Average]
[info]   (min, avg, max) = (1413.923, 1469.937, 1505.868), stdev = 35.666
[info]   CI (99.9%): [1332.600, 1607.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   80242.489 ±(99.9%) 3005.526 B/op [Average]
[info]   (min, avg, max) = (79317.089, 80242.489, 81272.768), stdev = 780.526
[info]   CI (99.9%): [77236.963, 83248.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1439.727 ±(99.9%) 687.634 MB/sec [Average]
[info]   (min, avg, max) = (1303.365, 1439.727, 1638.748), stdev = 178.576
[info]   CI (99.9%): [752.093, 2127.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   78682.957 ±(99.9%) 40504.713 B/op [Average]
[info]   (min, avg, max) = (70218.585, 78682.957, 92458.402), stdev = 10518.945
[info]   CI (99.9%): [38178.244, 119187.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.895 ±(99.9%) 7.439 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.895, 4.351), stdev = 1.932
[info]   CI (99.9%): [≈ 0, 8.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   49.680 ±(99.9%) 413.342 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.680, 241.689), stdev = 107.344
[info]   CI (99.9%): [≈ 0, 463.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 17.000), stdev = 4.848
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:22:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7638.003 ops/s
[info] # Warmup Iteration   2: 23406.089 ops/s
[info] # Warmup Iteration   3: 23554.481 ops/s
[info] Iteration   1: 24363.419 ops/s
[info]                  ·gc.alloc.rate:                   1798.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              116147.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128194.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.024 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 24135.642 ops/s
[info]                  ·gc.alloc.rate:                   1798.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              117256.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107185.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.357 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 24569.595 ops/s
[info]                  ·gc.alloc.rate:                   1818.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              116504.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105463.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.335 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 24723.871 ops/s
[info]                  ·gc.alloc.rate:                   1852.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              117937.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126619.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.975 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 24718.177 ops/s
[info]                  ·gc.alloc.rate:               1840.441 MB/sec
[info]                  ·gc.alloc.rate.norm:          117133.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1670.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 106316.724 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   24502.141 ±(99.9%) 970.239 ops/s [Average]
[info]   (min, avg, max) = (24135.642, 24502.141, 24723.871), stdev = 251.968
[info]   CI (99.9%): [23531.902, 25472.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1821.733 ±(99.9%) 94.897 MB/sec [Average]
[info]   (min, avg, max) = (1798.002, 1821.733, 1852.842), stdev = 24.645
[info]   CI (99.9%): [1726.836, 1916.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   116995.945 ±(99.9%) 2677.557 B/op [Average]
[info]   (min, avg, max) = (116147.773, 116995.945, 117937.620), stdev = 695.353
[info]   CI (99.9%): [114318.388, 119673.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1786.951 ±(99.9%) 703.870 MB/sec [Average]
[info]   (min, avg, max) = (1644.026, 1786.951, 1989.238), stdev = 182.793
[info]   CI (99.9%): [1083.081, 2490.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   114755.986 ±(99.9%) 44582.975 B/op [Average]
[info]   (min, avg, max) = (105463.541, 114755.986, 128194.193), stdev = 11578.057
[info]   CI (99.9%): [70173.011, 159338.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 6.228 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 3.685), stdev = 1.617
[info]   CI (99.9%): [≈ 0, 7.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   51.338 ±(99.9%) 402.355 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51.338, 238.024), stdev = 104.490
[info]   CI (99.9%): [≈ 0, 453.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 13.000), stdev = 2.608
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:22:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5991.558 ops/s
[info] # Warmup Iteration   2: 22001.711 ops/s
[info] # Warmup Iteration   3: 24701.624 ops/s
[info] Iteration   1: 24090.407 ops/s
[info]                  ·gc.alloc.rate:                   1518.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              99217.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107364.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.832 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 184.961 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 24776.276 ops/s
[info]                  ·gc.alloc.rate:                   1563.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              99288.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104011.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.631 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 24899.406 ops/s
[info]                  ·gc.alloc.rate:                   1555.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              98292.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82531.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.316 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 24985.422 ops/s
[info]                  ·gc.alloc.rate:                   1581.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              99618.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103271.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.311 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 24591.886 ops/s
[info]                  ·gc.alloc.rate:               1545.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          98891.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 84517.886 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   24668.679 ±(99.9%) 1368.786 ops/s [Average]
[info]   (min, avg, max) = (24090.407, 24668.679, 24985.422), stdev = 355.469
[info]   CI (99.9%): [23299.893, 26037.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1552.985 ±(99.9%) 89.222 MB/sec [Average]
[info]   (min, avg, max) = (1518.956, 1552.985, 1581.687), stdev = 23.171
[info]   CI (99.9%): [1463.763, 1642.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   99061.903 ±(99.9%) 1931.556 B/op [Average]
[info]   (min, avg, max) = (98292.697, 99061.903, 99618.794), stdev = 501.619
[info]   CI (99.9%): [97130.348, 100993.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1509.586 ±(99.9%) 689.620 MB/sec [Average]
[info]   (min, avg, max) = (1306.063, 1509.586, 1643.677), stdev = 179.092
[info]   CI (99.9%): [819.966, 2199.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   96339.363 ±(99.9%) 45514.871 B/op [Average]
[info]   (min, avg, max) = (82531.883, 96339.363, 107364.364), stdev = 11820.067
[info]   CI (99.9%): [50824.492, 141854.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 4.816 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 2.832), stdev = 1.251
[info]   CI (99.9%): [≈ 0, 5.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   54.444 ±(99.9%) 313.749 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 54.444, 184.961), stdev = 81.480
[info]   CI (99.9%): [≈ 0, 368.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 17.000), stdev = 4.775
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:22:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10287.359 ops/s
[info] # Warmup Iteration   2: 25853.365 ops/s
[info] # Warmup Iteration   3: 27322.356 ops/s
[info] Iteration   1: 27663.336 ops/s
[info]                  ·gc.alloc.rate:                   1626.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              92514.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75531.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 156.331 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 26795.769 ops/s
[info]                  ·gc.alloc.rate:                   1618.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              95083.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96950.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.906 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 27363.724 ops/s
[info]                  ·gc.alloc.rate:                   1619.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              93165.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94712.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.197 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 27777.740 ops/s
[info]                  ·gc.alloc.rate:                   1664.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              94268.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93772.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.538 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 27712.625 ops/s
[info]                  ·gc.alloc.rate:                   1660.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              94319.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94559.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.182 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   27462.639 ±(99.9%) 1560.057 ops/s [Average]
[info]   (min, avg, max) = (26795.769, 27462.639, 27777.740), stdev = 405.142
[info]   CI (99.9%): [25902.582, 29022.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1638.046 ±(99.9%) 87.282 MB/sec [Average]
[info]   (min, avg, max) = (1618.877, 1638.046, 1664.471), stdev = 22.667
[info]   CI (99.9%): [1550.764, 1725.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   93870.327 ±(99.9%) 3930.313 B/op [Average]
[info]   (min, avg, max) = (92514.526, 93870.327, 95083.813), stdev = 1020.690
[info]   CI (99.9%): [89940.015, 97800.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1589.171 ±(99.9%) 563.444 MB/sec [Average]
[info]   (min, avg, max) = (1327.705, 1589.171, 1665.044), stdev = 146.325
[info]   CI (99.9%): [1025.727, 2152.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   91105.336 ±(99.9%) 33830.895 B/op [Average]
[info]   (min, avg, max) = (75531.732, 91105.336, 96950.536), stdev = 8785.776
[info]   CI (99.9%): [57274.441, 124936.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.737 ±(99.9%) 4.529 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.737, 2.748), stdev = 1.176
[info]   CI (99.9%): [≈ 0, 5.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   42.231 ±(99.9%) 257.801 B/op [Average]
[info]   (min, avg, max) = (1.182, 42.231, 156.331), stdev = 66.950
[info]   CI (99.9%): [≈ 0, 300.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 11.000), stdev = 1.924
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:22:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12487.757 ops/s
[info] # Warmup Iteration   2: 25258.155 ops/s
[info] # Warmup Iteration   3: 26662.433 ops/s
[info] Iteration   1: 26880.812 ops/s
[info]                  ·gc.alloc.rate:                   1532.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              89715.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97275.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.234 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 27157.580 ops/s
[info]                  ·gc.alloc.rate:                   1554.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              90060.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76671.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.225 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 26873.197 ops/s
[info]                  ·gc.alloc.rate:                   1552.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              90904.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96598.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.658 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 26359.260 ops/s
[info]                  ·gc.alloc.rate:               1517.533 MB/sec
[info]                  ·gc.alloc.rate.norm:          90607.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1323.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79009.112 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 27218.058 ops/s
[info]                  ·gc.alloc.rate:               1579.427 MB/sec
[info]                  ·gc.alloc.rate.norm:          91323.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1662.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96118.183 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   26897.781 ±(99.9%) 1307.193 ops/s [Average]
[info]   (min, avg, max) = (26359.260, 26897.781, 27218.058), stdev = 339.474
[info]   CI (99.9%): [25590.589, 28204.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1547.219 ±(99.9%) 90.593 MB/sec [Average]
[info]   (min, avg, max) = (1517.533, 1547.219, 1579.427), stdev = 23.527
[info]   CI (99.9%): [1456.626, 1637.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   90522.238 ±(99.9%) 2480.494 B/op [Average]
[info]   (min, avg, max) = (89715.212, 90522.238, 91323.332), stdev = 644.176
[info]   CI (99.9%): [88041.744, 93002.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1524.014 ±(99.9%) 706.040 MB/sec [Average]
[info]   (min, avg, max) = (1323.189, 1524.014, 1662.354), stdev = 183.356
[info]   CI (99.9%): [817.974, 2230.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   89134.467 ±(99.9%) 39859.541 B/op [Average]
[info]   (min, avg, max) = (76671.401, 89134.467, 97275.277), stdev = 10351.396
[info]   CI (99.9%): [49274.926, 128994.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 4.445 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 2.686), stdev = 1.154
[info]   CI (99.9%): [≈ 0, 5.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   40.623 ±(99.9%) 260.222 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40.623, 157.234), stdev = 67.579
[info]   CI (99.9%): [≈ 0, 300.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 14.000), stdev = 3.782
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:22:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2667.549 ops/s
[info] # Warmup Iteration   2: 7354.448 ops/s
[info] # Warmup Iteration   3: 7807.373 ops/s
[info] Iteration   1: 7803.607 ops/s
[info]                  ·gc.alloc.rate:                   1162.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              234470.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199882.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 7825.081 ops/s
[info]                  ·gc.alloc.rate:                   1155.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              232417.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199613.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 519.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 7773.994 ops/s
[info]                  ·gc.alloc.rate:                   1159.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              234550.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     267032.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 316.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 7761.950 ops/s
[info]                  ·gc.alloc.rate:                   1156.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              234316.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199477.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.323 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 7807.200 ops/s
[info]                  ·gc.alloc.rate:               1175.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          236952.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 264258.877 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   7794.366 ±(99.9%) 99.288 ops/s [Average]
[info]   (min, avg, max) = (7761.950, 7794.366, 7825.081), stdev = 25.785
[info]   CI (99.9%): [7695.079, 7893.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1161.847 ±(99.9%) 31.336 MB/sec [Average]
[info]   (min, avg, max) = (1155.717, 1161.847, 1175.505), stdev = 8.138
[info]   CI (99.9%): [1130.511, 1193.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   234541.669 ±(99.9%) 6202.990 B/op [Average]
[info]   (min, avg, max) = (232417.806, 234541.669, 236952.731), stdev = 1610.897
[info]   CI (99.9%): [228338.680, 240744.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1119.736 ±(99.9%) 687.663 MB/sec [Average]
[info]   (min, avg, max) = (984.247, 1119.736, 1319.641), stdev = 178.584
[info]   CI (99.9%): [432.073, 1807.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   226053.178 ±(99.9%) 139226.239 B/op [Average]
[info]   (min, avg, max) = (199477.943, 226053.178, 267032.859), stdev = 36156.612
[info]   CI (99.9%): [86826.940, 365279.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 4.476 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.862, 2.581), stdev = 1.163
[info]   CI (99.9%): [≈ 0, 5.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   173.788 ±(99.9%) 901.227 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 173.788, 519.130), stdev = 234.046
[info]   CI (99.9%): [≈ 0, 1075.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 11.000), stdev = 3.114
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:22:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5105.759 ops/s
[info] # Warmup Iteration   2: 15365.150 ops/s
[info] # Warmup Iteration   3: 17721.334 ops/s
[info] Iteration   1: 17647.177 ops/s
[info]                  ·gc.alloc.rate:                   1617.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              144232.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147929.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237.638 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 17775.130 ops/s
[info]                  ·gc.alloc.rate:                   1650.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              146105.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145861.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.747 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 17729.275 ops/s
[info]                  ·gc.alloc.rate:               1615.886 MB/sec
[info]                  ·gc.alloc.rate.norm:          143421.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116672.707 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 17774.241 ops/s
[info]                  ·gc.alloc.rate:                   1652.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              146285.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146046.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.530 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 17903.270 ops/s
[info]                  ·gc.alloc.rate:                   1658.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              145690.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146011.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.830 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   17765.819 ±(99.9%) 357.414 ops/s [Average]
[info]   (min, avg, max) = (17647.177, 17765.819, 17903.270), stdev = 92.819
[info]   CI (99.9%): [17408.405, 18123.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1638.876 ±(99.9%) 79.182 MB/sec [Average]
[info]   (min, avg, max) = (1615.886, 1638.876, 1658.041), stdev = 20.563
[info]   CI (99.9%): [1559.694, 1718.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   145147.116 ±(99.9%) 4841.900 B/op [Average]
[info]   (min, avg, max) = (143421.714, 145147.116, 146285.224), stdev = 1257.426
[info]   CI (99.9%): [140305.216, 149989.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1586.532 ±(99.9%) 585.969 MB/sec [Average]
[info]   (min, avg, max) = (1314.514, 1586.532, 1661.689), stdev = 152.174
[info]   CI (99.9%): [1000.563, 2172.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   140504.377 ±(99.9%) 51403.747 B/op [Average]
[info]   (min, avg, max) = (116672.707, 140504.377, 147929.419), stdev = 13349.390
[info]   CI (99.9%): [89100.630, 191908.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 4.495 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 2.665), stdev = 1.167
[info]   CI (99.9%): [≈ 0, 5.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   70.749 ±(99.9%) 400.654 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 70.749, 237.638), stdev = 104.049
[info]   CI (99.9%): [≈ 0, 471.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 16.000), stdev = 4.219
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:21:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10965.846 ops/s
[info] # Warmup Iteration   2: 41094.588 ops/s
[info] # Warmup Iteration   3: 41621.727 ops/s
[info] Iteration   1: 41717.592 ops/s
[info]                  ·gc.alloc.rate:                   1204.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              45448.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49609.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.571 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 42670.493 ops/s
[info]                  ·gc.alloc.rate:                   1209.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              44617.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48600.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139.745 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 43050.098 ops/s
[info]                  ·gc.alloc.rate:                   1219.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              44582.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35896.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.504 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 42076.747 ops/s
[info]                  ·gc.alloc.rate:                   1198.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              44837.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48839.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.779 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 42996.253 ops/s
[info]                  ·gc.alloc.rate:                   1224.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              44817.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35892.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.762 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   42502.237 ±(99.9%) 2252.892 ops/s [Average]
[info]   (min, avg, max) = (41717.592, 42502.237, 43050.098), stdev = 585.069
[info]   CI (99.9%): [40249.344, 44755.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1211.569 ±(99.9%) 40.199 MB/sec [Average]
[info]   (min, avg, max) = (1198.981, 1211.569, 1224.534), stdev = 10.440
[info]   CI (99.9%): [1171.370, 1251.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   44860.871 ±(99.9%) 1340.524 B/op [Average]
[info]   (min, avg, max) = (44582.597, 44860.871, 45448.886), stdev = 348.130
[info]   CI (99.9%): [43520.347, 46201.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1180.344 ±(99.9%) 699.906 MB/sec [Average]
[info]   (min, avg, max) = (980.680, 1180.344, 1317.884), stdev = 181.763
[info]   CI (99.9%): [480.438, 1880.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   43767.738 ±(99.9%) 27711.727 B/op [Average]
[info]   (min, avg, max) = (35892.935, 43767.738, 49609.074), stdev = 7196.648
[info]   CI (99.9%): [16056.010, 71479.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.870 ±(99.9%) 6.329 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.870, 3.789), stdev = 1.644
[info]   CI (99.9%): [≈ 0, 7.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   32.072 ±(99.9%) 233.399 B/op [Average]
[info]   (min, avg, max) = (0.762, 32.072, 139.745), stdev = 60.613
[info]   CI (99.9%): [≈ 0, 265.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 15.000), stdev = 5.225
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:21:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30382.365 ops/s
[info] # Warmup Iteration   2: 57011.541 ops/s
[info] # Warmup Iteration   3: 59542.825 ops/s
[info] Iteration   1: 60637.509 ops/s
[info]                  ·gc.alloc.rate:               803.046 MB/sec
[info]                  ·gc.alloc.rate.norm:          20841.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17170.495 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 60440.464 ops/s
[info]                  ·gc.alloc.rate:                   811.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              21132.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25899.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.626 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 60877.591 ops/s
[info]                  ·gc.alloc.rate:                   801.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              20726.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17171.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.538 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 61589.808 ops/s
[info]                  ·gc.alloc.rate:                   823.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              21030.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25483.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.561 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 62055.736 ops/s
[info]                  ·gc.alloc.rate:                   821.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              20836.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16793.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.336 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   61120.222 ±(99.9%) 2618.473 ops/s [Average]
[info]   (min, avg, max) = (60440.464, 61120.222, 62055.736), stdev = 680.009
[info]   CI (99.9%): [58501.749, 63738.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   812.359 ±(99.9%) 38.419 MB/sec [Average]
[info]   (min, avg, max) = (801.958, 812.359, 823.133), stdev = 9.977
[info]   CI (99.9%): [773.941, 850.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   20913.523 ±(99.9%) 632.120 B/op [Average]
[info]   (min, avg, max) = (20726.694, 20913.523, 21132.920), stdev = 164.160
[info]   CI (99.9%): [20281.402, 21545.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   796.161 ±(99.9%) 703.438 MB/sec [Average]
[info]   (min, avg, max) = (661.613, 796.161, 997.445), stdev = 182.681
[info]   CI (99.9%): [92.723, 1499.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20503.681 ±(99.9%) 18253.944 B/op [Average]
[info]   (min, avg, max) = (16793.976, 20503.681, 25899.118), stdev = 4740.491
[info]   CI (99.9%): [2249.737, 38757.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.596 ±(99.9%) 4.427 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.596, 2.644), stdev = 1.150
[info]   CI (99.9%): [≈ 0, 5.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.212 ±(99.9%) 113.095 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.212, 67.561), stdev = 29.370
[info]   CI (99.9%): [≈ 0, 128.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 8.000), stdev = 1.949
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:21:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3307.461 ops/s
[info] # Warmup Iteration   2: 25878.238 ops/s
[info] # Warmup Iteration   3: 31643.084 ops/s
[info] Iteration   1: 32607.350 ops/s
[info]                  ·gc.alloc.rate:                   2137.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              103145.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94915.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.100 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 32806.272 ops/s
[info]                  ·gc.alloc.rate:                   2168.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              104018.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95304.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.995 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 33151.543 ops/s
[info]                  ·gc.alloc.rate:                   2211.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              105003.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2337.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110958.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.988 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 33111.444 ops/s
[info]                  ·gc.alloc.rate:                   2195.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              104375.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95893.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.979 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 33062.929 ops/s
[info]                  ·gc.alloc.rate:                   2193.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              104401.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96463.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.982 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   32947.908 ±(99.9%) 897.874 ops/s [Average]
[info]   (min, avg, max) = (32607.350, 32947.908, 33151.543), stdev = 233.175
[info]   CI (99.9%): [32050.034, 33845.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2181.515 ±(99.9%) 111.485 MB/sec [Average]
[info]   (min, avg, max) = (2137.905, 2181.515, 2211.803), stdev = 28.952
[info]   CI (99.9%): [2070.031, 2293.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   104188.765 ±(99.9%) 2626.707 B/op [Average]
[info]   (min, avg, max) = (103145.285, 104188.765, 105003.414), stdev = 682.148
[info]   CI (99.9%): [101562.057, 106815.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2067.114 ±(99.9%) 588.671 MB/sec [Average]
[info]   (min, avg, max) = (1967.333, 2067.114, 2337.235), stdev = 152.876
[info]   CI (99.9%): [1478.443, 2655.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   98707.235 ±(99.9%) 26467.834 B/op [Average]
[info]   (min, avg, max) = (94915.870, 98707.235, 110958.164), stdev = 6873.612
[info]   CI (99.9%): [72239.401, 125175.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.678 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.125, 0.437), stdev = 0.176
[info]   CI (99.9%): [≈ 0, 0.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.009 ±(99.9%) 32.757 B/op [Average]
[info]   (min, avg, max) = (0.988, 6.009, 21.100), stdev = 8.507
[info]   CI (99.9%): [≈ 0, 38.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 10.000), stdev = 0.707
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:21:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9162.091 ops/s
[info] # Warmup Iteration   2: 25591.775 ops/s
[info] # Warmup Iteration   3: 27416.867 ops/s
[info] Iteration   1: 27239.653 ops/s
[info]                  ·gc.alloc.rate:                   1765.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              101985.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114045.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218.910 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 27702.494 ops/s
[info]                  ·gc.alloc.rate:                   1775.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              100862.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92985.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.731 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 27749.393 ops/s
[info]                  ·gc.alloc.rate:                   1765.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              100073.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93023.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.542 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 27515.787 ops/s
[info]                  ·gc.alloc.rate:                   1776.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              101627.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94478.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.572 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 27761.699 ops/s
[info]                  ·gc.alloc.rate:               1792.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          101589.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94317.459 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   27593.805 ±(99.9%) 851.767 ops/s [Average]
[info]   (min, avg, max) = (27239.653, 27593.805, 27761.699), stdev = 221.201
[info]   CI (99.9%): [26742.038, 28445.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1774.930 ±(99.9%) 42.410 MB/sec [Average]
[info]   (min, avg, max) = (1765.203, 1774.930, 1792.029), stdev = 11.014
[info]   CI (99.9%): [1732.519, 1817.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   101227.552 ±(99.9%) 2939.219 B/op [Average]
[info]   (min, avg, max) = (100073.312, 101227.552, 101985.346), stdev = 763.306
[info]   CI (99.9%): [98288.333, 104166.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1713.423 ±(99.9%) 562.234 MB/sec [Average]
[info]   (min, avg, max) = (1636.778, 1713.423, 1973.941), stdev = 146.010
[info]   CI (99.9%): [1151.189, 2275.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   97769.999 ±(99.9%) 35136.636 B/op [Average]
[info]   (min, avg, max) = (92985.572, 97769.999, 114045.101), stdev = 9124.873
[info]   CI (99.9%): [62633.363, 132906.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.799 ±(99.9%) 6.436 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.799, 3.789), stdev = 1.672
[info]   CI (99.9%): [≈ 0, 7.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   46.151 ±(99.9%) 371.940 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.151, 218.910), stdev = 96.592
[info]   CI (99.9%): [≈ 0, 418.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 15.000), stdev = 3.578
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:21:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16299.739 ops/s
[info] # Warmup Iteration   2: 32611.681 ops/s
[info] # Warmup Iteration   3: 33898.030 ops/s
[info] Iteration   1: 32717.208 ops/s
[info]                  ·gc.alloc.rate:                   1521.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              73163.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79764.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 113.166 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 33261.185 ops/s
[info]                  ·gc.alloc.rate:                   1515.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              71692.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62602.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.432 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 34027.837 ops/s
[info]                  ·gc.alloc.rate:                   1526.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              70586.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76289.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.926 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 34298.350 ops/s
[info]                  ·gc.alloc.rate:                   1542.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              70762.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60769.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.687 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 34212.790 ops/s
[info]                  ·gc.alloc.rate:                   1557.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              71662.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76487.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.576 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   33703.474 ±(99.9%) 2644.660 ops/s [Average]
[info]   (min, avg, max) = (32717.208, 33703.474, 34298.350), stdev = 686.810
[info]   CI (99.9%): [31058.814, 36348.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1532.610 ±(99.9%) 66.481 MB/sec [Average]
[info]   (min, avg, max) = (1515.172, 1532.610, 1557.834), stdev = 17.265
[info]   CI (99.9%): [1466.129, 1599.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   71573.480 ±(99.9%) 3936.610 B/op [Average]
[info]   (min, avg, max) = (70586.646, 71573.480, 73163.257), stdev = 1022.325
[info]   CI (99.9%): [67636.870, 75510.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1523.731 ±(99.9%) 703.434 MB/sec [Average]
[info]   (min, avg, max) = (1323.060, 1523.731, 1662.726), stdev = 182.680
[info]   CI (99.9%): [820.297, 2227.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   71182.646 ±(99.9%) 33894.872 B/op [Average]
[info]   (min, avg, max) = (60769.294, 71182.646, 79764.843), stdev = 8802.391
[info]   CI (99.9%): [37287.774, 105077.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.708 ±(99.9%) 3.715 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.708, 2.353), stdev = 0.965
[info]   CI (99.9%): [≈ 0, 4.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   33.757 ±(99.9%) 179.065 B/op [Average]
[info]   (min, avg, max) = (1.926, 33.757, 113.166), stdev = 46.503
[info]   CI (99.9%): [≈ 0, 212.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 14.000), stdev = 3.347
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:20:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15387.012 ops/s
[info] # Warmup Iteration   2: 33244.455 ops/s
[info] # Warmup Iteration   3: 33413.270 ops/s
[info] Iteration   1: 33461.190 ops/s
[info]                  ·gc.alloc.rate:                   1456.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              68497.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62447.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.480 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 33918.846 ops/s
[info]                  ·gc.alloc.rate:                   1471.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              68256.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76812.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.230 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 34087.521 ops/s
[info]                  ·gc.alloc.rate:                   1474.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              68057.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60901.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.961 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 34103.509 ops/s
[info]                  ·gc.alloc.rate:                   1467.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              67716.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61055.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.725 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 34094.449 ops/s
[info]                  ·gc.alloc.rate:                   1500.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              69254.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76692.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.961 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   33933.103 ±(99.9%) 1057.737 ops/s [Average]
[info]   (min, avg, max) = (33461.190, 33933.103, 34103.509), stdev = 274.691
[info]   CI (99.9%): [32875.366, 34990.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1473.978 ±(99.9%) 62.774 MB/sec [Average]
[info]   (min, avg, max) = (1456.378, 1473.978, 1500.490), stdev = 16.302
[info]   CI (99.9%): [1411.204, 1536.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   68356.396 ±(99.9%) 2224.786 B/op [Average]
[info]   (min, avg, max) = (67716.186, 68356.396, 69254.146), stdev = 577.770
[info]   CI (99.9%): [66131.610, 70581.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1457.499 ±(99.9%) 707.466 MB/sec [Average]
[info]   (min, avg, max) = (1319.262, 1457.499, 1661.659), stdev = 183.727
[info]   CI (99.9%): [750.034, 2164.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   67581.881 ±(99.9%) 32320.388 B/op [Average]
[info]   (min, avg, max) = (60901.132, 67581.881, 76812.527), stdev = 8393.502
[info]   CI (99.9%): [35261.493, 99902.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 4.160 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.758, 2.519), stdev = 1.080
[info]   CI (99.9%): [≈ 0, 4.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   35.471 ±(99.9%) 195.555 B/op [Average]
[info]   (min, avg, max) = (0.961, 35.471, 118.480), stdev = 50.785
[info]   CI (99.9%): [≈ 0, 231.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 12.000), stdev = 2.490
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:20:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71523.950 ops/s
[info] # Warmup Iteration   2: 302526.496 ops/s
[info] # Warmup Iteration   3: 316894.352 ops/s
[info] Iteration   1: 321832.434 ops/s
[info]                  ·gc.alloc.rate:                   1802.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              8815.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8088.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.510 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 312592.323 ops/s
[info]                  ·gc.alloc.rate:                   1775.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              8940.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9936.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.838 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 327360.126 ops/s
[info]                  ·gc.alloc.rate:                   1853.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              8911.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7915.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.601 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 327845.682 ops/s
[info]                  ·gc.alloc.rate:                   1877.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              9010.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9549.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 327545.159 ops/s
[info]                  ·gc.alloc.rate:               1862.969 MB/sec
[info]                  ·gc.alloc.rate.norm:          8950.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1670.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8025.290 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   323435.145 ±(99.9%) 25241.992 ops/s [Average]
[info]   (min, avg, max) = (312592.323, 323435.145, 327845.682), stdev = 6555.265
[info]   CI (99.9%): [298193.153, 348677.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1834.592 ±(99.9%) 166.372 MB/sec [Average]
[info]   (min, avg, max) = (1775.990, 1834.592, 1877.504), stdev = 43.206
[info]   CI (99.9%): [1668.220, 2000.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8925.693 ±(99.9%) 274.158 B/op [Average]
[info]   (min, avg, max) = (8815.660, 8925.693, 9010.271), stdev = 71.198
[info]   CI (99.9%): [8651.535, 9199.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1786.942 ±(99.9%) 686.096 MB/sec [Average]
[info]   (min, avg, max) = (1646.600, 1786.942, 1989.832), stdev = 178.177
[info]   CI (99.9%): [1100.847, 2473.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8703.059 ±(99.9%) 3699.953 B/op [Average]
[info]   (min, avg, max) = (7915.709, 8703.059, 9936.081), stdev = 960.866
[info]   CI (99.9%): [5003.106, 12403.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 6.028 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.783, 3.581), stdev = 1.565
[info]   CI (99.9%): [≈ 0, 6.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.830 ±(99.9%) 29.475 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.830, 17.510), stdev = 7.655
[info]   CI (99.9%): [≈ 0, 33.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 13.000), stdev = 2.490
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:20:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.767 ops/s
[info] # Warmup Iteration   2: 1392150.592 ops/s
[info] # Warmup Iteration   3: 1468046.615 ops/s
[info] Iteration   1: 1484236.082 ops/s
[info]                  ·gc.alloc.rate:                   485.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              514.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     689.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1493891.804 ops/s
[info]                  ·gc.alloc.rate:               479.158 MB/sec
[info]                  ·gc.alloc.rate.norm:          504.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 343.194 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1495558.706 ops/s
[info]                  ·gc.alloc.rate:                   479.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     342.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1476990.444 ops/s
[info]                  ·gc.alloc.rate:               487.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          519.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 694.253 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1499459.197 ops/s
[info]                  ·gc.alloc.rate:               482.664 MB/sec
[info]                  ·gc.alloc.rate.norm:          506.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 342.612 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1490027.247 ±(99.9%) 35396.056 ops/s [Average]
[info]   (min, avg, max) = (1476990.444, 1490027.247, 1499459.197), stdev = 9192.243
[info]   CI (99.9%): [1454631.191, 1525423.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   482.715 ±(99.9%) 14.117 MB/sec [Average]
[info]   (min, avg, max) = (479.060, 482.715, 487.177), stdev = 3.666
[info]   CI (99.9%): [468.598, 496.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   509.817 ±(99.9%) 25.774 B/op [Average]
[info]   (min, avg, max) = (504.035, 509.817, 519.039), stdev = 6.694
[info]   CI (99.9%): [484.042, 535.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   456.014 ±(99.9%) 685.363 MB/sec [Average]
[info]   (min, avg, max) = (325.837, 456.014, 651.636), stdev = 177.987
[info]   CI (99.9%): [≈ 0, 1141.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   482.468 ±(99.9%) 736.053 B/op [Average]
[info]   (min, avg, max) = (342.612, 482.468, 694.253), stdev = 191.151
[info]   CI (99.9%): [≈ 0, 1218.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.117 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.070), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.073), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:20:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 233442.515 ops/s
[info] # Warmup Iteration   2: 912356.732 ops/s
[info] # Warmup Iteration   3: 941930.864 ops/s
[info] Iteration   1: 916123.689 ops/s
[info]                  ·gc.alloc.rate:                   734.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              1260.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1681.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 920826.111 ops/s
[info]                  ·gc.alloc.rate:               730.601 MB/sec
[info]                  ·gc.alloc.rate.norm:          1248.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1118.112 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 944054.524 ops/s
[info]                  ·gc.alloc.rate:               744.970 MB/sec
[info]                  ·gc.alloc.rate.norm:          1241.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1092.817 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 921493.666 ops/s
[info]                  ·gc.alloc.rate:                   744.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              1271.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1120.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 943341.589 ops/s
[info]                  ·gc.alloc.rate:                   743.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1096.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.807 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   929167.916 ±(99.9%) 51702.540 ops/s [Average]
[info]   (min, avg, max) = (916123.689, 929167.916, 944054.524), stdev = 13426.985
[info]   CI (99.9%): [877465.376, 980870.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   739.671 ±(99.9%) 26.260 MB/sec [Average]
[info]   (min, avg, max) = (730.601, 739.671, 744.970), stdev = 6.820
[info]   CI (99.9%): [713.410, 765.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1252.712 ±(99.9%) 51.153 B/op [Average]
[info]   (min, avg, max) = (1240.984, 1252.712, 1271.822), stdev = 13.284
[info]   CI (99.9%): [1201.560, 1303.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   720.568 ±(99.9%) 556.294 MB/sec [Average]
[info]   (min, avg, max) = (654.265, 720.568, 978.990), stdev = 144.468
[info]   CI (99.9%): [164.274, 1276.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1221.957 ±(99.9%) 989.702 B/op [Average]
[info]   (min, avg, max) = (1092.817, 1221.957, 1681.199), stdev = 257.022
[info]   CI (99.9%): [232.255, 2211.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.824 ±(99.9%) 7.009 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.824, 4.081), stdev = 1.820
[info]   CI (99.9%): [≈ 0, 7.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.376 ±(99.9%) 11.692 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.376, 6.807), stdev = 3.036
[info]   CI (99.9%): [≈ 0, 13.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:20:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1137236.449 ops/s
[info] # Warmup Iteration   2: 1772233.111 ops/s
[info] # Warmup Iteration   3: 1885035.754 ops/s
[info] Iteration   1: 1880819.385 ops/s
[info]                  ·gc.alloc.rate:               371.608 MB/sec
[info]                  ·gc.alloc.rate.norm:          310.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214.043 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1878335.956 ops/s
[info]                  ·gc.alloc.rate:               371.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 276.284 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1879035.333 ops/s
[info]                  ·gc.alloc.rate:               374.089 MB/sec
[info]                  ·gc.alloc.rate.norm:          313.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 276.181 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1888805.381 ops/s
[info]                  ·gc.alloc.rate:                   376.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              313.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     275.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1883653.052 ops/s
[info]                  ·gc.alloc.rate:                   384.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              321.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     552.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   1882129.821 ±(99.9%) 16401.421 ops/s [Average]
[info]   (min, avg, max) = (1878335.956, 1882129.821, 1888805.381), stdev = 4259.397
[info]   CI (99.9%): [1865728.400, 1898531.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   375.562 ±(99.9%) 20.252 MB/sec [Average]
[info]   (min, avg, max) = (371.608, 375.562, 384.365), stdev = 5.259
[info]   CI (99.9%): [355.310, 395.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   314.014 ±(99.9%) 15.863 B/op [Average]
[info]   (min, avg, max) = (310.962, 314.014, 321.137), stdev = 4.120
[info]   CI (99.9%): [298.151, 329.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.469 ±(99.9%) 615.417 MB/sec [Average]
[info]   (min, avg, max) = (255.787, 381.469, 661.526), stdev = 159.822
[info]   CI (99.9%): [≈ 0, 996.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   318.905 ±(99.9%) 513.743 B/op [Average]
[info]   (min, avg, max) = (214.043, 318.905, 552.705), stdev = 133.417
[info]   CI (99.9%): [≈ 0, 832.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.035), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:19:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7670.310 ops/s
[info] # Warmup Iteration   2: 87861.163 ops/s
[info] # Warmup Iteration   3: 94799.739 ops/s
[info] Iteration   1: 99992.116 ops/s
[info]                  ·gc.alloc.rate:                   3323.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              52307.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2944.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46352.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.311 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 99552.019 ops/s
[info]                  ·gc.alloc.rate:                   3356.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              53063.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3315.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52416.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.329 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 98966.213 ops/s
[info]                  ·gc.alloc.rate:                   3340.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              53106.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3358.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53392.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.993 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 99038.800 ops/s
[info]                  ·gc.alloc.rate:                   3331.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              52940.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3043.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48362.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.662 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 97444.530 ops/s
[info]                  ·gc.alloc.rate:               3290.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          53148.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3394.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54819.557 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   98998.735 ±(99.9%) 3709.003 ops/s [Average]
[info]   (min, avg, max) = (97444.530, 98998.735, 99992.116), stdev = 963.216
[info]   CI (99.9%): [95289.732, 102707.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3328.717 ±(99.9%) 94.270 MB/sec [Average]
[info]   (min, avg, max) = (3290.844, 3328.717, 3356.570), stdev = 24.482
[info]   CI (99.9%): [3234.447, 3422.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52913.318 ±(99.9%) 1338.185 B/op [Average]
[info]   (min, avg, max) = (52307.451, 52913.318, 53148.236), stdev = 347.522
[info]   CI (99.9%): [51575.133, 54251.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3211.520 ±(99.9%) 782.379 MB/sec [Average]
[info]   (min, avg, max) = (2944.982, 3211.520, 3394.329), stdev = 203.181
[info]   CI (99.9%): [2429.142, 3993.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   51068.609 ±(99.9%) 13730.101 B/op [Average]
[info]   (min, avg, max) = (46352.302, 51068.609, 54819.557), stdev = 3565.664
[info]   CI (99.9%): [37338.507, 64798.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.659 ±(99.9%) 2.000 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.659, 1.311), stdev = 0.519
[info]   CI (99.9%): [≈ 0, 2.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.200, 14.000), stdev = 1.095
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:19:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124650.494 ops/s
[info] # Warmup Iteration   2: 325363.900 ops/s
[info] # Warmup Iteration   3: 343497.683 ops/s
[info] Iteration   1: 348296.704 ops/s
[info]                  ·gc.alloc.rate:                   1193.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              5391.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4470.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 339716.920 ops/s
[info]                  ·gc.alloc.rate:                   1191.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              5521.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6123.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.985 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 361492.714 ops/s
[info]                  ·gc.alloc.rate:                   1233.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              5372.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4295.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.538 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 363333.094 ops/s
[info]                  ·gc.alloc.rate:               1251.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          5418.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5690.549 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 362982.126 ops/s
[info]                  ·gc.alloc.rate:                   1263.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              5477.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5704.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   355164.312 ±(99.9%) 41008.988 ops/s [Average]
[info]   (min, avg, max) = (339716.920, 355164.312, 363333.094), stdev = 10649.904
[info]   CI (99.9%): [314155.323, 396173.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1226.871 ±(99.9%) 126.511 MB/sec [Average]
[info]   (min, avg, max) = (1191.837, 1226.871, 1263.393), stdev = 32.854
[info]   CI (99.9%): [1100.361, 1353.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5436.147 ±(99.9%) 238.748 B/op [Average]
[info]   (min, avg, max) = (5372.057, 5436.147, 5521.386), stdev = 62.002
[info]   CI (99.9%): [5197.399, 5674.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1185.654 ±(99.9%) 694.130 MB/sec [Average]
[info]   (min, avg, max) = (986.654, 1185.654, 1321.747), stdev = 180.263
[info]   CI (99.9%): [491.524, 1879.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5256.826 ±(99.9%) 3153.209 B/op [Average]
[info]   (min, avg, max) = (4295.374, 5256.826, 6123.216), stdev = 818.878
[info]   CI (99.9%): [2103.617, 8410.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 5.020 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 3.019), stdev = 1.304
[info]   CI (99.9%): [≈ 0, 5.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.341 ±(99.9%) 23.280 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.341, 13.985), stdev = 6.046
[info]   CI (99.9%): [≈ 0, 26.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:19:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.788 ops/s
[info] # Warmup Iteration   2: 1504917.277 ops/s
[info] # Warmup Iteration   3: 1654404.965 ops/s
[info] Iteration   1: 1671000.902 ops/s
[info]                  ·gc.alloc.rate:                   791.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     611.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1673249.355 ops/s
[info]                  ·gc.alloc.rate:                   798.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     611.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1666758.054 ops/s
[info]                  ·gc.alloc.rate:                   800.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              755.416 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     923.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1666546.762 ops/s
[info]                  ·gc.alloc.rate:                   794.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     617.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1671574.622 ops/s
[info]                  ·gc.alloc.rate:                   804.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     922.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.170 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.926 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   1669825.939 ±(99.9%) 11603.659 ops/s [Average]
[info]   (min, avg, max) = (1666546.762, 1669825.939, 1673249.355), stdev = 3013.433
[info]   CI (99.9%): [1658222.280, 1681429.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   797.843 ±(99.9%) 18.865 MB/sec [Average]
[info]   (min, avg, max) = (791.639, 797.843, 804.260), stdev = 4.899
[info]   CI (99.9%): [778.978, 816.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   751.978 ±(99.9%) 17.500 B/op [Average]
[info]   (min, avg, max) = (745.632, 751.978, 757.213), stdev = 4.545
[info]   CI (99.9%): [734.478, 769.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   782.093 ±(99.9%) 692.052 MB/sec [Average]
[info]   (min, avg, max) = (648.846, 782.093, 979.987), stdev = 179.724
[info]   CI (99.9%): [90.041, 1474.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   737.183 ±(99.9%) 653.349 B/op [Average]
[info]   (min, avg, max) = (611.137, 737.183, 923.403), stdev = 169.673
[info]   CI (99.9%): [83.833, 1390.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.852 ±(99.9%) 7.142 MB/sec [Average]
[info]   (min, avg, max) = (0.006, 0.852, 4.170), stdev = 1.855
[info]   CI (99.9%): [≈ 0, 7.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.802 ±(99.9%) 6.724 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.802, 3.926), stdev = 1.746
[info]   CI (99.9%): [≈ 0, 7.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 9.000), stdev = 1.304
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:19:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 453331.667 ops/s
[info] # Warmup Iteration   2: 986066.880 ops/s
[info] # Warmup Iteration   3: 1022838.237 ops/s
[info] Iteration   1: 1007826.623 ops/s
[info]                  ·gc.alloc.rate:                   729.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              1138.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1023.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1043921.109 ops/s
[info]                  ·gc.alloc.rate:                   756.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              1140.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     990.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1038409.972 ops/s
[info]                  ·gc.alloc.rate:               748.891 MB/sec
[info]                  ·gc.alloc.rate.norm:          1134.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 996.534 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1025477.928 ops/s
[info]                  ·gc.alloc.rate:                   745.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              1143.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1516.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.728 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1033496.289 ops/s
[info]                  ·gc.alloc.rate:                   750.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              1142.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1002.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.951 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1029826.384 ±(99.9%) 54070.569 ops/s [Average]
[info]   (min, avg, max) = (1007826.623, 1029826.384, 1043921.109), stdev = 14041.955
[info]   CI (99.9%): [975755.816, 1083896.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   746.049 ±(99.9%) 38.680 MB/sec [Average]
[info]   (min, avg, max) = (729.511, 746.049, 756.246), stdev = 10.045
[info]   CI (99.9%): [707.368, 784.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1140.024 ±(99.9%) 13.493 B/op [Average]
[info]   (min, avg, max) = (1134.863, 1140.024, 1143.986), stdev = 3.504
[info]   CI (99.9%): [1126.531, 1153.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   723.271 ±(99.9%) 569.545 MB/sec [Average]
[info]   (min, avg, max) = (655.770, 723.271, 987.853), stdev = 147.909
[info]   CI (99.9%): [153.726, 1292.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1105.797 ±(99.9%) 884.699 B/op [Average]
[info]   (min, avg, max) = (990.257, 1105.797, 1516.177), stdev = 229.753
[info]   CI (99.9%): [221.099, 1990.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 5.099 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.081), stdev = 1.324
[info]   CI (99.9%): [≈ 0, 5.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.161 ±(99.9%) 7.828 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.161, 4.728), stdev = 2.033
[info]   CI (99.9%): [≈ 0, 8.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 11.000), stdev = 3.194
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:19:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1576835.443 ops/s
[info] # Warmup Iteration   2: 2604353.014 ops/s
[info] # Warmup Iteration   3: 2737691.360 ops/s
[info] Iteration   1: 2769001.101 ops/s
[info]                  ·gc.alloc.rate:                   1321.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     753.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2746194.067 ops/s
[info]                  ·gc.alloc.rate:                   1309.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     760.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.718 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2789804.657 ops/s
[info]                  ·gc.alloc.rate:               1336.041 MB/sec
[info]                  ·gc.alloc.rate.norm:          753.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 745.604 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 2794331.640 ops/s
[info]                  ·gc.alloc.rate:               1332.308 MB/sec
[info]                  ·gc.alloc.rate.norm:          750.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 558.479 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2783620.987 ops/s
[info]                  ·gc.alloc.rate:                   1340.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     749.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2776590.491 ±(99.9%) 75071.062 ops/s [Average]
[info]   (min, avg, max) = (2746194.067, 2776590.491, 2794331.640), stdev = 19495.716
[info]   CI (99.9%): [2701519.428, 2851661.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1327.884 ±(99.9%) 47.903 MB/sec [Average]
[info]   (min, avg, max) = (1309.381, 1327.884, 1340.146), stdev = 12.440
[info]   CI (99.9%): [1279.980, 1375.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   752.525 ±(99.9%) 12.021 B/op [Average]
[info]   (min, avg, max) = (750.191, 752.525, 757.557), stdev = 3.122
[info]   CI (99.9%): [740.504, 764.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1258.705 ±(99.9%) 574.511 MB/sec [Average]
[info]   (min, avg, max) = (991.835, 1258.705, 1327.368), stdev = 149.199
[info]   CI (99.9%): [684.194, 1833.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   713.604 ±(99.9%) 334.599 B/op [Average]
[info]   (min, avg, max) = (558.479, 713.604, 760.541), stdev = 86.894
[info]   CI (99.9%): [379.004, 1048.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.621 ±(99.9%) 5.121 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.621, 2.999), stdev = 1.330
[info]   CI (99.9%): [≈ 0, 5.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.355 ±(99.9%) 2.934 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.355, 1.718), stdev = 0.762
[info]   CI (99.9%): [≈ 0, 3.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.702
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:18:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2068409.240 ops/s
[info] # Warmup Iteration   2: 3055141.392 ops/s
[info] # Warmup Iteration   3: 3136872.286 ops/s
[info] Iteration   1: 3244491.441 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3244621.785 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3220261.704 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3248975.329 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3246473.788 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3240964.809 ±(99.9%) 45109.535 ops/s [Average]
[info]   (min, avg, max) = (3220261.704, 3240964.809, 3248975.329), stdev = 11714.803
[info]   CI (99.9%): [3195855.275, 3286074.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:18:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113268.592 ops/s
[info] # Warmup Iteration   2: 433180.865 ops/s
[info] # Warmup Iteration   3: 457289.615 ops/s
[info] Iteration   1: 481966.265 ops/s
[info]                  ·gc.alloc.rate:                   576.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              1881.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2142.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 473006.362 ops/s
[info]                  ·gc.alloc.rate:               551.674 MB/sec
[info]                  ·gc.alloc.rate.norm:          1835.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1092.726 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 465430.493 ops/s
[info]                  ·gc.alloc.rate:                   550.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              1861.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2223.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 477755.717 ops/s
[info]                  ·gc.alloc.rate:                   570.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              1879.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2169.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 484915.394 ops/s
[info]                  ·gc.alloc.rate:               568.466 MB/sec
[info]                  ·gc.alloc.rate.norm:          1844.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1069.131 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   476614.846 ±(99.9%) 29636.782 ops/s [Average]
[info]   (min, avg, max) = (465430.493, 476614.846, 484915.394), stdev = 7696.578
[info]   CI (99.9%): [446978.064, 506251.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   563.546 ±(99.9%) 45.246 MB/sec [Average]
[info]   (min, avg, max) = (550.460, 563.546, 576.310), stdev = 11.750
[info]   CI (99.9%): [518.300, 608.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1860.513 ±(99.9%) 79.481 B/op [Average]
[info]   (min, avg, max) = (1835.249, 1860.513, 1881.702), stdev = 20.641
[info]   CI (99.9%): [1781.032, 1939.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   526.106 ±(99.9%) 692.983 MB/sec [Average]
[info]   (min, avg, max) = (328.472, 526.106, 658.765), stdev = 179.965
[info]   CI (99.9%): [≈ 0, 1219.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1739.450 ±(99.9%) 2317.717 B/op [Average]
[info]   (min, avg, max) = (1069.131, 1739.450, 2223.335), stdev = 601.904
[info]   CI (99.9%): [≈ 0, 4057.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.083 ±(99.9%) 0.351 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.211), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 2.049
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:18:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39105.240 ops/s
[info] # Warmup Iteration   2: 145312.354 ops/s
[info] # Warmup Iteration   3: 151589.008 ops/s
[info] Iteration   1: 156814.797 ops/s
[info]                  ·gc.alloc.rate:                   1976.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              19830.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19923.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.936 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 158300.946 ops/s
[info]                  ·gc.alloc.rate:                   1998.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              19871.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19629.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.277 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 158950.882 ops/s
[info]                  ·gc.alloc.rate:               2027.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          20069.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1982.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19620.357 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 159288.526 ops/s
[info]                  ·gc.alloc.rate:                   2032.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              20080.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19733.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.411 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 159376.741 ops/s
[info]                  ·gc.alloc.rate:               2033.736 MB/sec
[info]                  ·gc.alloc.rate.norm:          20082.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2010.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19853.588 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   158546.378 ±(99.9%) 4067.180 ops/s [Average]
[info]   (min, avg, max) = (156814.797, 158546.378, 159376.741), stdev = 1056.234
[info]   CI (99.9%): [154479.198, 162613.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   2013.687 ±(99.9%) 97.796 MB/sec [Average]
[info]   (min, avg, max) = (1976.007, 2013.687, 2033.736), stdev = 25.397
[info]   CI (99.9%): [1915.891, 2111.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19987.167 ±(99.9%) 480.853 B/op [Average]
[info]   (min, avg, max) = (19830.974, 19987.167, 20082.632), stdev = 124.876
[info]   CI (99.9%): [19506.314, 20468.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1989.908 ±(99.9%) 54.356 MB/sec [Average]
[info]   (min, avg, max) = (1974.519, 1989.908, 2010.541), stdev = 14.116
[info]   CI (99.9%): [1935.552, 2044.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19752.066 ±(99.9%) 517.776 B/op [Average]
[info]   (min, avg, max) = (19620.357, 19752.066, 19923.465), stdev = 134.465
[info]   CI (99.9%): [19234.289, 20269.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.770 ±(99.9%) 6.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.770, 3.581), stdev = 1.574
[info]   CI (99.9%): [≈ 0, 6.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.725 ±(99.9%) 60.835 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.725, 35.936), stdev = 15.799
[info]   CI (99.9%): [≈ 0, 68.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 13.000), stdev = 2.236
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:18:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 130541.997 ops/s
[info] # Warmup Iteration   2: 470427.435 ops/s
[info] # Warmup Iteration   3: 512263.560 ops/s
[info] Iteration   1: 501531.061 ops/s
[info]                  ·gc.alloc.rate:                   409.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              1284.728 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     802.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 502847.312 ops/s
[info]                  ·gc.alloc.rate:               423.802 MB/sec
[info]                  ·gc.alloc.rate.norm:          1325.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2043.260 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 515043.816 ops/s
[info]                  ·gc.alloc.rate:               425.861 MB/sec
[info]                  ·gc.alloc.rate.norm:          1301.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 998.489 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 514646.359 ops/s
[info]                  ·gc.alloc.rate:                   423.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              1295.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     999.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 512467.928 ops/s
[info]                  ·gc.alloc.rate:                   432.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              1327.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2010.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   509307.295 ±(99.9%) 25367.829 ops/s [Average]
[info]   (min, avg, max) = (501531.061, 509307.295, 515043.816), stdev = 6587.945
[info]   CI (99.9%): [483939.466, 534675.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   423.066 ±(99.9%) 32.374 MB/sec [Average]
[info]   (min, avg, max) = (409.412, 423.066, 432.412), stdev = 8.408
[info]   CI (99.9%): [390.692, 455.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1307.104 ±(99.9%) 73.252 B/op [Average]
[info]   (min, avg, max) = (1284.728, 1307.104, 1327.866), stdev = 19.023
[info]   CI (99.9%): [1233.852, 1380.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   443.479 ±(99.9%) 748.321 MB/sec [Average]
[info]   (min, avg, max) = (255.805, 443.479, 654.864), stdev = 194.337
[info]   CI (99.9%): [≈ 0, 1191.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1370.940 ±(99.9%) 2327.503 B/op [Average]
[info]   (min, avg, max) = (802.714, 1370.940, 2043.260), stdev = 604.445
[info]   CI (99.9%): [≈ 0, 3698.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.249 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.064, 0.131), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:17:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 680910.385 ops/s
[info] # Warmup Iteration   2: 1160741.071 ops/s
[info] # Warmup Iteration   3: 1228615.833 ops/s
[info] Iteration   1: 1249408.553 ops/s
[info]                  ·gc.alloc.rate:                   248.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              313.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     322.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1254165.808 ops/s
[info]                  ·gc.alloc.rate:      242.365 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.073 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1235156.256 ops/s
[info]                  ·gc.alloc.rate:               249.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          317.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 325.954 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1251142.946 ops/s
[info]                  ·gc.alloc.rate:               249.581 MB/sec
[info]                  ·gc.alloc.rate.norm:          313.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 414.822 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1245953.660 ops/s
[info]                  ·gc.alloc.rate:                   253.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              319.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1247165.445 ±(99.9%) 28266.597 ops/s [Average]
[info]   (min, avg, max) = (1235156.256, 1247165.445, 1254165.808), stdev = 7340.746
[info]   CI (99.9%): [1218898.847, 1275432.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   248.645 ±(99.9%) 14.918 MB/sec [Average]
[info]   (min, avg, max) = (242.365, 248.645, 253.012), stdev = 3.874
[info]   CI (99.9%): [233.727, 263.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   313.741 ±(99.9%) 23.074 B/op [Average]
[info]   (min, avg, max) = (304.073, 313.741, 319.572), stdev = 5.992
[info]   CI (99.9%): [290.668, 336.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   234.265 ±(99.9%) 523.998 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.265, 329.849), stdev = 136.081
[info]   CI (99.9%): [≈ 0, 758.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   295.910 ±(99.9%) 660.950 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 295.910, 416.541), stdev = 171.646
[info]   CI (99.9%): [≈ 0, 956.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.026), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:17:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4732.261 ops/s
[info] # Warmup Iteration   2: 70500.136 ops/s
[info] # Warmup Iteration   3: 83395.784 ops/s
[info] Iteration   1: 85342.110 ops/s
[info]                  ·gc.alloc.rate:                   3395.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              62625.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3266.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60247.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.920 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 84894.094 ops/s
[info]                  ·gc.alloc.rate:                   3413.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              63278.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3316.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61465.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 85213.229 ops/s
[info]                  ·gc.alloc.rate:                   3428.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              63303.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3359.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62034.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 85642.155 ops/s
[info]                  ·gc.alloc.rate:                   3432.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              63070.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3045.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55961.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.383 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 86419.973 ops/s
[info]                  ·gc.alloc.rate:               3476.578 MB/sec
[info]                  ·gc.alloc.rate.norm:          63311.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3395.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61827.245 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   85502.312 ±(99.9%) 2229.403 ops/s [Average]
[info]   (min, avg, max) = (84894.094, 85502.312, 86419.973), stdev = 578.969
[info]   CI (99.9%): [83272.909, 87731.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3429.342 ±(99.9%) 115.510 MB/sec [Average]
[info]   (min, avg, max) = (3395.888, 3429.342, 3476.578), stdev = 29.998
[info]   CI (99.9%): [3313.832, 3544.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63117.781 ±(99.9%) 1126.203 B/op [Average]
[info]   (min, avg, max) = (62625.678, 63117.781, 63311.295), stdev = 292.471
[info]   CI (99.9%): [61991.579, 64243.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3276.581 ±(99.9%) 530.642 MB/sec [Average]
[info]   (min, avg, max) = (3045.456, 3276.581, 3395.085), stdev = 137.806
[info]   CI (99.9%): [2745.939, 3807.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   60307.318 ±(99.9%) 9727.247 B/op [Average]
[info]   (min, avg, max) = (55961.434, 60307.318, 62034.851), stdev = 2526.135
[info]   CI (99.9%): [50580.071, 70034.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.615 ±(99.9%) 2.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.615, 1.920), stdev = 0.748
[info]   CI (99.9%): [≈ 0, 3.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.600, 15.000), stdev = 1.673
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:17:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94002.632 ops/s
[info] # Warmup Iteration   2: 273264.295 ops/s
[info] # Warmup Iteration   3: 294805.338 ops/s
[info] Iteration   1: 290495.635 ops/s
[info]                  ·gc.alloc.rate:                   1651.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              8949.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8953.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.271 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 300897.829 ops/s
[info]                  ·gc.alloc.rate:                   1693.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              8854.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8602.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.158 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 296837.560 ops/s
[info]                  ·gc.alloc.rate:                   1660.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              8802.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8713.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.441 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 298481.511 ops/s
[info]                  ·gc.alloc.rate:                   1696.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              8945.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8713.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.220 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 299337.306 ops/s
[info]                  ·gc.alloc.rate:               1701.314 MB/sec
[info]                  ·gc.alloc.rate.norm:          8943.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8744.380 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   297209.968 ±(99.9%) 15518.103 ops/s [Average]
[info]   (min, avg, max) = (290495.635, 297209.968, 300897.829), stdev = 4030.002
[info]   CI (99.9%): [281691.865, 312728.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1680.730 ±(99.9%) 87.826 MB/sec [Average]
[info]   (min, avg, max) = (1651.758, 1680.730, 1701.314), stdev = 22.808
[info]   CI (99.9%): [1592.903, 1768.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8899.047 ±(99.9%) 257.951 B/op [Average]
[info]   (min, avg, max) = (8802.292, 8899.047, 8949.024), stdev = 66.989
[info]   CI (99.9%): [8641.096, 9156.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1651.532 ±(99.9%) 30.117 MB/sec [Average]
[info]   (min, avg, max) = (1643.816, 1651.532, 1663.460), stdev = 7.821
[info]   CI (99.9%): [1621.415, 1681.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8745.570 ±(99.9%) 494.189 B/op [Average]
[info]   (min, avg, max) = (8602.796, 8745.570, 8953.952), stdev = 128.339
[info]   CI (99.9%): [8251.381, 9239.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 5.574 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 3.372), stdev = 1.448
[info]   CI (99.9%): [≈ 0, 6.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.418 ±(99.9%) 30.225 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.418, 18.271), stdev = 7.849
[info]   CI (99.9%): [≈ 0, 34.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 14.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:17:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 685344.564 ops/s
[info] # Warmup Iteration   2: 1840635.964 ops/s
[info] # Warmup Iteration   3: 1912260.953 ops/s
[info] Iteration   1: 1905126.123 ops/s
[info]                  ·gc.alloc.rate:                   1009.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              834.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     811.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1729402.576 ops/s
[info]                  ·gc.alloc.rate:                   915.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     897.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1919575.279 ops/s
[info]                  ·gc.alloc.rate:                   1012.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              829.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     810.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.748 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1909457.479 ops/s
[info]                  ·gc.alloc.rate:                   1012.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              834.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     809.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1877545.630 ops/s
[info]                  ·gc.alloc.rate:                   1006.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              843.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     822.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   1868221.417 ±(99.9%) 304768.194 ops/s [Average]
[info]   (min, avg, max) = (1729402.576, 1868221.417, 1919575.279), stdev = 79147.332
[info]   CI (99.9%): [1563453.223, 2172989.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   991.327 ±(99.9%) 163.883 MB/sec [Average]
[info]   (min, avg, max) = (915.305, 991.327, 1012.712), stdev = 42.560
[info]   CI (99.9%): [827.444, 1155.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   834.970 ±(99.9%) 20.348 B/op [Average]
[info]   (min, avg, max) = (829.557, 834.970, 843.729), stdev = 5.284
[info]   CI (99.9%): [814.621, 855.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   984.235 ±(99.9%) 10.819 MB/sec [Average]
[info]   (min, avg, max) = (981.512, 984.235, 988.180), stdev = 2.810
[info]   CI (99.9%): [973.416, 995.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   830.279 ±(99.9%) 145.437 B/op [Average]
[info]   (min, avg, max) = (809.898, 830.279, 897.191), stdev = 37.770
[info]   CI (99.9%): [684.842, 975.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 5.607 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.758, 3.353), stdev = 1.456
[info]   CI (99.9%): [≈ 0, 6.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.622 ±(99.9%) 4.594 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.622, 2.748), stdev = 1.193
[info]   CI (99.9%): [≈ 0, 5.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.775
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:17:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1414189.444 ops/s
[info] # Warmup Iteration   2: 2789310.545 ops/s
[info] # Warmup Iteration   3: 2777782.499 ops/s
[info] Iteration   1: 2774763.261 ops/s
[info]                  ·gc.alloc.rate:                   769.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2753477.604 ops/s
[info]                  ·gc.alloc.rate:                   771.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     567.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2735092.021 ops/s
[info]                  ·gc.alloc.rate:                   756.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     381.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2756547.050 ops/s
[info]                  ·gc.alloc.rate:                   761.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     379.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.462 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2759140.787 ops/s
[info]                  ·gc.alloc.rate:                   769.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     377.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.404 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   2755804.145 ±(99.9%) 54644.493 ops/s [Average]
[info]   (min, avg, max) = (2735092.021, 2755804.145, 2774763.261), stdev = 14191.001
[info]   CI (99.9%): [2701159.652, 2810448.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   765.657 ±(99.9%) 24.286 MB/sec [Average]
[info]   (min, avg, max) = (756.377, 765.657, 771.177), stdev = 6.307
[info]   CI (99.9%): [741.371, 789.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   437.244 ±(99.9%) 9.457 B/op [Average]
[info]   (min, avg, max) = (435.011, 437.244, 440.780), stdev = 2.456
[info]   CI (99.9%): [427.788, 446.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   728.809 ±(99.9%) 569.939 MB/sec [Average]
[info]   (min, avg, max) = (660.790, 728.809, 993.571), stdev = 148.011
[info]   CI (99.9%): [158.870, 1298.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   416.246 ±(99.9%) 326.569 B/op [Average]
[info]   (min, avg, max) = (374.822, 416.246, 567.894), stdev = 84.809
[info]   CI (99.9%): [89.677, 742.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 4.236 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.666, 2.561), stdev = 1.100
[info]   CI (99.9%): [≈ 0, 4.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.380 ±(99.9%) 2.418 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.380, 1.462), stdev = 0.628
[info]   CI (99.9%): [≈ 0, 2.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 8.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:16:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1695664.230 ops/s
[info] # Warmup Iteration   2: 2794980.068 ops/s
[info] # Warmup Iteration   3: 3123206.628 ops/s
[info] Iteration   1: 3123157.814 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3094326.657 ops/s
[info]                  ·gc.alloc.rate:      1.247 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.634 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3112683.837 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3114656.094 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3116148.521 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   3112194.584 ±(99.9%) 41355.775 ops/s [Average]
[info]   (min, avg, max) = (3094326.657, 3112194.584, 3123157.814), stdev = 10739.963
[info]   CI (99.9%): [3070838.809, 3153550.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.250 ±(99.9%) 2.147 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.250, 1.247), stdev = 0.558
[info]   CI (99.9%): [≈ 0, 2.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.127 ±(99.9%) 1.092 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.127, 0.634), stdev = 0.284
[info]   CI (99.9%): [≈ 0, 1.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:16:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10454.056 ops/s
[info] # Warmup Iteration   2: 43814.567 ops/s
[info] # Warmup Iteration   3: 48019.028 ops/s
[info] Iteration   1: 48554.030 ops/s
[info]                  ·gc.alloc.rate:                   2191.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              71029.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74622.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.893 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 126.179 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 47912.040 ops/s
[info]                  ·gc.alloc.rate:                   2156.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              70825.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64651.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 48174.896 ops/s
[info]                  ·gc.alloc.rate:                   2194.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              71687.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2312.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75549.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.360 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 48842.523 ops/s
[info]                  ·gc.alloc.rate:                   2218.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              71479.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64481.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.671 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 48719.648 ops/s
[info]                  ·gc.alloc.rate:               2212.918 MB/sec
[info]                  ·gc.alloc.rate.norm:          71479.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2014.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65077.349 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   48440.628 ±(99.9%) 1494.142 ops/s [Average]
[info]   (min, avg, max) = (47912.040, 48440.628, 48842.523), stdev = 388.024
[info]   CI (99.9%): [46946.486, 49934.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2194.825 ±(99.9%) 94.187 MB/sec [Average]
[info]   (min, avg, max) = (2156.337, 2194.825, 2218.761), stdev = 24.460
[info]   CI (99.9%): [2100.638, 2289.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   71300.244 ±(99.9%) 1378.456 B/op [Average]
[info]   (min, avg, max) = (70825.981, 71300.244, 71687.607), stdev = 357.981
[info]   CI (99.9%): [69921.789, 72678.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2119.962 ±(99.9%) 662.940 MB/sec [Average]
[info]   (min, avg, max) = (1968.340, 2119.962, 2312.925), stdev = 172.163
[info]   CI (99.9%): [1457.023, 2782.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   68876.367 ±(99.9%) 21879.894 B/op [Average]
[info]   (min, avg, max) = (64481.521, 68876.367, 75549.616), stdev = 5682.139
[info]   CI (99.9%): [46996.474, 90756.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 6.626 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 3.893), stdev = 1.721
[info]   CI (99.9%): [≈ 0, 7.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   26.463 ±(99.9%) 214.731 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.463, 126.179), stdev = 55.765
[info]   CI (99.9%): [≈ 0, 241.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 12.000), stdev = 1.924
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:16:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54691.033 ops/s
[info] # Warmup Iteration   2: 222460.099 ops/s
[info] # Warmup Iteration   3: 233062.602 ops/s
[info] Iteration   1: 237452.041 ops/s
[info]                  ·gc.alloc.rate:                   2587.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              17149.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2634.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17460.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.588 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 241716.801 ops/s
[info]                  ·gc.alloc.rate:                   2652.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              17272.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2314.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15070.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.407 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 240218.302 ops/s
[info]                  ·gc.alloc.rate:                   2651.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              17372.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2670.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17498.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 241540.810 ops/s
[info]                  ·gc.alloc.rate:                   2667.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              17376.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2693.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17544.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.543 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 241514.428 ops/s
[info]                  ·gc.alloc.rate:               2654.055 MB/sec
[info]                  ·gc.alloc.rate.norm:          17292.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2368.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15432.365 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   240488.476 ±(99.9%) 6931.612 ops/s [Average]
[info]   (min, avg, max) = (237452.041, 240488.476, 241716.801), stdev = 1800.118
[info]   CI (99.9%): [233556.864, 247420.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2642.743 ±(99.9%) 121.781 MB/sec [Average]
[info]   (min, avg, max) = (2587.355, 2642.743, 2667.655), stdev = 31.626
[info]   CI (99.9%): [2520.963, 2764.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   17292.764 ±(99.9%) 357.341 B/op [Average]
[info]   (min, avg, max) = (17149.285, 17292.764, 17376.809), stdev = 92.800
[info]   CI (99.9%): [16935.423, 17650.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2536.412 ±(99.9%) 693.237 MB/sec [Average]
[info]   (min, avg, max) = (2314.719, 2536.412, 2693.464), stdev = 180.031
[info]   CI (99.9%): [1843.175, 3229.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16601.468 ±(99.9%) 4771.629 B/op [Average]
[info]   (min, avg, max) = (15070.932, 16601.468, 17544.921), stdev = 1239.177
[info]   CI (99.9%): [11829.839, 21373.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.870 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.541), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 1.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.935 ±(99.9%) 5.770 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.935, 3.588), stdev = 1.498
[info]   CI (99.9%): [≈ 0, 6.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:16:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112970.532 ops/s
[info] # Warmup Iteration   2: 370786.814 ops/s
[info] # Warmup Iteration   3: 377905.013 ops/s
[info] Iteration   1: 383958.402 ops/s
[info]                  ·gc.alloc.rate:                   1968.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              8066.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6736.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.127 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 377177.508 ops/s
[info]                  ·gc.alloc.rate:                   1954.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              8155.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8191.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 382794.425 ops/s
[info]                  ·gc.alloc.rate:               1990.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          8184.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1974.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8119.377 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 382061.415 ops/s
[info]                  ·gc.alloc.rate:               1994.887 MB/sec
[info]                  ·gc.alloc.rate.norm:          8217.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1992.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8207.994 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 378563.244 ops/s
[info]                  ·gc.alloc.rate:                   1957.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              8138.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6952.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   380910.999 ±(99.9%) 11161.609 ops/s [Average]
[info]   (min, avg, max) = (377177.508, 380910.999, 383958.402), stdev = 2898.634
[info]   CI (99.9%): [369749.390, 392072.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1973.217 ±(99.9%) 71.712 MB/sec [Average]
[info]   (min, avg, max) = (1954.649, 1973.217, 1994.887), stdev = 18.623
[info]   CI (99.9%): [1901.505, 2044.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   8152.588 ±(99.9%) 218.553 B/op [Average]
[info]   (min, avg, max) = (8066.483, 8152.588, 8217.620), stdev = 56.758
[info]   CI (99.9%): [7934.035, 8371.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1849.354 ±(99.9%) 674.778 MB/sec [Average]
[info]   (min, avg, max) = (1643.655, 1849.354, 1992.550), stdev = 175.238
[info]   CI (99.9%): [1174.575, 2524.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7641.671 ±(99.9%) 2820.348 B/op [Average]
[info]   (min, avg, max) = (6736.344, 7641.671, 8207.994), stdev = 732.436
[info]   CI (99.9%): [4821.322, 10462.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.800 ±(99.9%) 6.750 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.800, 3.935), stdev = 1.753
[info]   CI (99.9%): [≈ 0, 7.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.278 ±(99.9%) 27.662 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.278, 16.127), stdev = 7.184
[info]   CI (99.9%): [≈ 0, 30.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 10.000), stdev = 1.140
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:16:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1132526.492 ops/s
[info] # Warmup Iteration   2: 2044361.974 ops/s
[info] # Warmup Iteration   3: 2182552.845 ops/s
[info] Iteration   1: 2197244.839 ops/s
[info]                  ·gc.alloc.rate:                   784.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              561.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2163420.379 ops/s
[info]                  ·gc.alloc.rate:                   766.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              557.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     481.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2244644.070 ops/s
[info]                  ·gc.alloc.rate:                   803.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              563.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     698.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2251750.700 ops/s
[info]                  ·gc.alloc.rate:                   798.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              558.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     464.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.702 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2253183.797 ops/s
[info]                  ·gc.alloc.rate:                   797.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              557.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     463.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.305 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2222048.757 ±(99.9%) 154202.128 ops/s [Average]
[info]   (min, avg, max) = (2163420.379, 2222048.757, 2253183.797), stdev = 40045.803
[info]   CI (99.9%): [2067846.629, 2376250.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   790.123 ±(99.9%) 57.790 MB/sec [Average]
[info]   (min, avg, max) = (766.474, 790.123, 803.603), stdev = 15.008
[info]   CI (99.9%): [732.333, 847.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   559.545 ±(99.9%) 10.699 B/op [Average]
[info]   (min, avg, max) = (557.059, 559.545, 563.296), stdev = 2.778
[info]   CI (99.9%): [548.846, 570.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   729.590 ±(99.9%) 573.286 MB/sec [Average]
[info]   (min, avg, max) = (661.669, 729.590, 995.908), stdev = 148.881
[info]   CI (99.9%): [156.304, 1302.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   516.313 ±(99.9%) 392.346 B/op [Average]
[info]   (min, avg, max) = (463.476, 516.313, 698.094), stdev = 101.891
[info]   CI (99.9%): [123.967, 908.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.591 ±(99.9%) 4.029 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.591, 2.436), stdev = 1.046
[info]   CI (99.9%): [≈ 0, 4.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.413 ±(99.9%) 2.815 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.413, 1.702), stdev = 0.731
[info]   CI (99.9%): [≈ 0, 3.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.414
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:15:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3111.822 ops/s
[info] # Warmup Iteration   2: 67266.530 ops/s
[info] # Warmup Iteration   3: 85068.575 ops/s
[info] Iteration   1: 86925.049 ops/s
[info]                  ·gc.alloc.rate:                   3414.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              61774.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3319.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60050.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.376 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 86339.719 ops/s
[info]                  ·gc.alloc.rate:                   3405.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              62074.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3021.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55069.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 84775.500 ops/s
[info]                  ·gc.alloc.rate:                   3361.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              62389.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3381.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62752.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.773 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 86116.632 ops/s
[info]                  ·gc.alloc.rate:                   3414.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              62398.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3393.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62016.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.380 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 86043.970 ops/s
[info]                  ·gc.alloc.rate:               3396.410 MB/sec
[info]                  ·gc.alloc.rate.norm:          62099.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3060.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55953.947 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   86040.174 ±(99.9%) 3030.772 ops/s [Average]
[info]   (min, avg, max) = (84775.500, 86040.174, 86925.049), stdev = 787.082
[info]   CI (99.9%): [83009.402, 89070.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3398.566 ±(99.9%) 84.718 MB/sec [Average]
[info]   (min, avg, max) = (3361.555, 3398.566, 3414.608), stdev = 22.001
[info]   CI (99.9%): [3313.848, 3483.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   62147.164 ±(99.9%) 997.707 B/op [Average]
[info]   (min, avg, max) = (61774.148, 62147.164, 62398.483), stdev = 259.101
[info]   CI (99.9%): [61149.457, 63144.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3235.153 ±(99.9%) 693.335 MB/sec [Average]
[info]   (min, avg, max) = (3021.531, 3235.153, 3393.503), stdev = 180.057
[info]   CI (99.9%): [2541.819, 3928.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   59168.591 ±(99.9%) 13458.426 B/op [Average]
[info]   (min, avg, max) = (55069.973, 59168.591, 62752.546), stdev = 3495.110
[info]   CI (99.9%): [45710.165, 72627.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.382 ±(99.9%) 1.052 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.382, 0.773), stdev = 0.273
[info]   CI (99.9%): [≈ 0, 1.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.000, 15.000), stdev = 1.225
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:15:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93499.296 ops/s
[info] # Warmup Iteration   2: 240495.049 ops/s
[info] # Warmup Iteration   3: 254922.211 ops/s
[info] Iteration   1: 260025.767 ops/s
[info]                  ·gc.alloc.rate:                   2100.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              12711.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2310.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13987.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.042 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 258791.068 ops/s
[info]                  ·gc.alloc.rate:                   2103.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.294 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12022.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.760 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 257429.178 ops/s
[info]                  ·gc.alloc.rate:               2094.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          12798.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1989.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12156.565 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 263372.535 ops/s
[info]                  ·gc.alloc.rate:                   2141.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              12794.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11971.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 262290.351 ops/s
[info]                  ·gc.alloc.rate:               2133.366 MB/sec
[info]                  ·gc.alloc.rate.norm:          12800.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2016.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12099.092 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   260381.780 ±(99.9%) 9424.687 ops/s [Average]
[info]   (min, avg, max) = (257429.178, 260381.780, 263372.535), stdev = 2447.561
[info]   CI (99.9%): [250957.092, 269806.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2114.482 ±(99.9%) 82.330 MB/sec [Average]
[info]   (min, avg, max) = (2094.096, 2114.482, 2141.441), stdev = 21.381
[info]   CI (99.9%): [2032.152, 2196.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12779.437 ±(99.9%) 147.860 B/op [Average]
[info]   (min, avg, max) = (12711.003, 12779.437, 12800.597), stdev = 38.399
[info]   CI (99.9%): [12631.577, 12927.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2059.385 ±(99.9%) 544.544 MB/sec [Average]
[info]   (min, avg, max) = (1976.814, 2059.385, 2310.942), stdev = 141.416
[info]   CI (99.9%): [1514.842, 2603.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12447.349 ±(99.9%) 3325.724 B/op [Average]
[info]   (min, avg, max) = (11971.545, 12447.349, 13987.142), stdev = 863.680
[info]   CI (99.9%): [9121.624, 15773.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.733 ±(99.9%) 5.910 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 3.477), stdev = 1.535
[info]   CI (99.9%): [≈ 0, 6.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.435 ±(99.9%) 35.769 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.435, 21.042), stdev = 9.289
[info]   CI (99.9%): [≈ 0, 40.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 12.000), stdev = 1.949
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:15:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 488389.138 ops/s
[info] # Warmup Iteration   2: 1383823.250 ops/s
[info] # Warmup Iteration   3: 1485837.408 ops/s
[info] Iteration   1: 1446626.163 ops/s
[info]                  ·gc.alloc.rate:                   877.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              954.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1069.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1458646.634 ops/s
[info]                  ·gc.alloc.rate:                   881.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              951.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1062.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1492831.008 ops/s
[info]                  ·gc.alloc.rate:               892.461 MB/sec
[info]                  ·gc.alloc.rate.norm:          940.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 693.870 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1468594.068 ops/s
[info]                  ·gc.alloc.rate:                   891.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              955.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1058.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.860 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1482704.054 ops/s
[info]                  ·gc.alloc.rate:               886.157 MB/sec
[info]                  ·gc.alloc.rate.norm:          940.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 695.796 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   1469880.385 ±(99.9%) 70996.836 ops/s [Average]
[info]   (min, avg, max) = (1446626.163, 1469880.385, 1492831.008), stdev = 18437.653
[info]   CI (99.9%): [1398883.549, 1540877.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   885.886 ±(99.9%) 24.749 MB/sec [Average]
[info]   (min, avg, max) = (877.317, 885.886, 892.461), stdev = 6.427
[info]   CI (99.9%): [861.137, 910.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   948.508 ±(99.9%) 27.763 B/op [Average]
[info]   (min, avg, max) = (940.649, 948.508, 955.112), stdev = 7.210
[info]   CI (99.9%): [920.744, 976.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   853.988 ±(99.9%) 693.097 MB/sec [Average]
[info]   (min, avg, max) = (655.489, 853.988, 988.306), stdev = 179.995
[info]   CI (99.9%): [160.891, 1547.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   916.092 ±(99.9%) 777.901 B/op [Average]
[info]   (min, avg, max) = (693.870, 916.092, 1069.385), stdev = 202.018
[info]   CI (99.9%): [138.192, 1693.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.733 ±(99.9%) 6.178 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 3.603), stdev = 1.604
[info]   CI (99.9%): [≈ 0, 6.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.785 ±(99.9%) 6.618 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.785, 3.860), stdev = 1.719
[info]   CI (99.9%): [≈ 0, 7.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 2.775
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:15:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1297023.361 ops/s
[info] # Warmup Iteration   2: 2733043.264 ops/s
[info] # Warmup Iteration   3: 2731492.955 ops/s
[info] Iteration   1: 2784355.157 ops/s
[info]                  ·gc.alloc.rate:                   977.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     560.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2826756.836 ops/s
[info]                  ·gc.alloc.rate:               985.007 MB/sec
[info]                  ·gc.alloc.rate.norm:          548.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 553.217 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 2828167.940 ops/s
[info]                  ·gc.alloc.rate:                   995.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.832 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.576 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2843666.572 ops/s
[info]                  ·gc.alloc.rate:                   994.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     548.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2799118.554 ops/s
[info]                  ·gc.alloc.rate:                   985.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.153 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     556.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2816413.012 ±(99.9%) 92630.476 ops/s [Average]
[info]   (min, avg, max) = (2784355.157, 2816413.012, 2843666.572), stdev = 24055.841
[info]   CI (99.9%): [2723782.535, 2909043.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   987.717 ±(99.9%) 29.445 MB/sec [Average]
[info]   (min, avg, max) = (977.421, 987.717, 995.967), stdev = 7.647
[info]   CI (99.9%): [958.272, 1017.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   551.863 ±(99.9%) 9.818 B/op [Average]
[info]   (min, avg, max) = (548.221, 551.863, 554.153), stdev = 2.550
[info]   CI (99.9%): [542.045, 561.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   992.050 ±(99.9%) 9.319 MB/sec [Average]
[info]   (min, avg, max) = (989.266, 992.050, 995.118), stdev = 2.420
[info]   CI (99.9%): [982.730, 1001.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   554.305 ±(99.9%) 16.715 B/op [Average]
[info]   (min, avg, max) = (548.286, 554.305, 560.120), stdev = 4.341
[info]   CI (99.9%): [537.589, 571.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.616 ±(99.9%) 4.780 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.616, 2.832), stdev = 1.241
[info]   CI (99.9%): [≈ 0, 5.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.343 ±(99.9%) 2.660 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.343, 1.576), stdev = 0.691
[info]   CI (99.9%): [≈ 0, 3.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 2.049
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:15:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1715068.409 ops/s
[info] # Warmup Iteration   2: 3157359.810 ops/s
[info] # Warmup Iteration   3: 3181776.902 ops/s
[info] Iteration   1: 3181575.001 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3182185.376 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3181971.333 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3180917.831 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3181723.386 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3181674.585 ±(99.9%) 1860.644 ops/s [Average]
[info]   (min, avg, max) = (3180917.831, 3181674.585, 3182185.376), stdev = 483.203
[info]   CI (99.9%): [3179813.941, 3183535.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:14:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91345.765 ops/s
[info] # Warmup Iteration   2: 370332.624 ops/s
[info] # Warmup Iteration   3: 382368.961 ops/s
[info] Iteration   1: 387668.264 ops/s
[info]                  ·gc.alloc.rate:                   2482.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              10077.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2286.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9281.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.606 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 389904.819 ops/s
[info]                  ·gc.alloc.rate:                   2517.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              10158.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2299.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9278.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 387987.783 ops/s
[info]                  ·gc.alloc.rate:                   2519.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              10219.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2657.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10781.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 387744.685 ops/s
[info]                  ·gc.alloc.rate:                   2505.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              10170.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2348.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9532.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 380356.933 ops/s
[info]                  ·gc.alloc.rate:               2461.095 MB/sec
[info]                  ·gc.alloc.rate.norm:          10183.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2362.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9777.132 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   386732.497 ±(99.9%) 14172.694 ops/s [Average]
[info]   (min, avg, max) = (380356.933, 386732.497, 389904.819), stdev = 3680.604
[info]   CI (99.9%): [372559.802, 400905.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2497.179 ±(99.9%) 96.214 MB/sec [Average]
[info]   (min, avg, max) = (2461.095, 2497.179, 2519.313), stdev = 24.986
[info]   CI (99.9%): [2400.965, 2593.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10162.118 ±(99.9%) 202.010 B/op [Average]
[info]   (min, avg, max) = (10077.484, 10162.118, 10219.522), stdev = 52.461
[info]   CI (99.9%): [9960.108, 10364.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2390.971 ±(99.9%) 587.778 MB/sec [Average]
[info]   (min, avg, max) = (2286.336, 2390.971, 2657.895), stdev = 152.644
[info]   CI (99.9%): [1803.192, 2978.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9730.395 ±(99.9%) 2398.354 B/op [Average]
[info]   (min, avg, max) = (9278.565, 9730.395, 10781.675), stdev = 622.845
[info]   CI (99.9%): [7332.042, 12128.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.104 ±(99.9%) 0.639 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.396), stdev = 0.166
[info]   CI (99.9%): [≈ 0, 0.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.422 ±(99.9%) 2.594 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.422, 1.606), stdev = 0.674
[info]   CI (99.9%): [≈ 0, 3.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 11.000), stdev = 1.095
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:14:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7222.408 ops/s
[info] # Warmup Iteration   2: 21564.712 ops/s
[info] # Warmup Iteration   3: 25685.934 ops/s
[info] Iteration   1: 24726.734 ops/s
[info]                  ·gc.alloc.rate:                   1596.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              101630.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105536.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 166.954 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 25540.165 ops/s
[info]                  ·gc.alloc.rate:                   1647.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              101541.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101516.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.534 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 25809.217 ops/s
[info]                  ·gc.alloc.rate:                   1654.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              100903.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80147.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.808 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 25735.884 ops/s
[info]                  ·gc.alloc.rate:                   1664.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              101769.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100824.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.546 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 26111.443 ops/s
[info]                  ·gc.alloc.rate:                   1694.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              102096.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100055.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.255 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   25584.688 ±(99.9%) 2008.999 ops/s [Average]
[info]   (min, avg, max) = (24726.734, 25584.688, 26111.443), stdev = 521.731
[info]   CI (99.9%): [23575.689, 27593.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1651.557 ±(99.9%) 136.267 MB/sec [Average]
[info]   (min, avg, max) = (1596.771, 1651.557, 1694.265), stdev = 35.388
[info]   CI (99.9%): [1515.289, 1787.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   101588.383 ±(99.9%) 1682.316 B/op [Average]
[info]   (min, avg, max) = (100903.908, 101588.383, 102096.350), stdev = 436.892
[info]   CI (99.9%): [99906.068, 103270.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1585.807 ±(99.9%) 584.860 MB/sec [Average]
[info]   (min, avg, max) = (1314.293, 1585.807, 1660.399), stdev = 151.886
[info]   CI (99.9%): [1000.947, 2170.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   97615.916 ±(99.9%) 38474.777 B/op [Average]
[info]   (min, avg, max) = (80147.230, 97615.916, 105536.016), stdev = 9991.777
[info]   CI (99.9%): [59141.140, 136090.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 4.428 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.808, 2.623), stdev = 1.150
[info]   CI (99.9%): [≈ 0, 5.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   50.819 ±(99.9%) 281.049 B/op [Average]
[info]   (min, avg, max) = (1.255, 50.819, 166.954), stdev = 72.988
[info]   CI (99.9%): [≈ 0, 331.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 14.000), stdev = 3.362
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:14:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.713 ops/s
[info] # Warmup Iteration   2: 85457.445 ops/s
[info] # Warmup Iteration   3: 95877.806 ops/s
[info] Iteration   1: 96676.694 ops/s
[info]                  ·gc.alloc.rate:                   951.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              15484.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15903.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.327 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 96637.640 ops/s
[info]                  ·gc.alloc.rate:                   928.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              15118.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10632.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.830 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 97409.640 ops/s
[info]                  ·gc.alloc.rate:                   944.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              15259.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15858.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 98250.100 ops/s
[info]                  ·gc.alloc.rate:                   947.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              15177.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15701.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.488 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.871 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 98300.784 ops/s
[info]                  ·gc.alloc.rate:                   964.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              15438.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15603.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.333 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   97454.971 ±(99.9%) 3118.445 ops/s [Average]
[info]   (min, avg, max) = (96637.640, 97454.971, 98300.784), stdev = 809.850
[info]   CI (99.9%): [94336.527, 100573.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   947.245 ±(99.9%) 49.659 MB/sec [Average]
[info]   (min, avg, max) = (928.543, 947.245, 964.335), stdev = 12.896
[info]   CI (99.9%): [897.587, 996.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   15295.695 ±(99.9%) 617.762 B/op [Average]
[info]   (min, avg, max) = (15118.132, 15295.695, 15484.382), stdev = 160.431
[info]   CI (99.9%): [14677.932, 15913.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   913.309 ±(99.9%) 560.402 MB/sec [Average]
[info]   (min, avg, max) = (653.016, 913.309, 981.526), stdev = 145.535
[info]   CI (99.9%): [352.906, 1473.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14739.914 ±(99.9%) 8854.536 B/op [Average]
[info]   (min, avg, max) = (10632.114, 14739.914, 15903.618), stdev = 2299.495
[info]   CI (99.9%): [5885.377, 23594.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.921 ±(99.9%) 7.678 MB/sec [Average]
[info]   (min, avg, max) = (0.020, 0.921, 4.488), stdev = 1.994
[info]   CI (99.9%): [≈ 0, 8.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   14.755 ±(99.9%) 122.948 B/op [Average]
[info]   (min, avg, max) = (0.327, 14.755, 71.871), stdev = 31.929
[info]   CI (99.9%): [≈ 0, 137.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 10.000), stdev = 2.302
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:14:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20472.615 ops/s
[info] # Warmup Iteration   2: 61683.767 ops/s
[info] # Warmup Iteration   3: 65232.362 ops/s
[info] Iteration   1: 67518.530 ops/s
[info]                  ·gc.alloc.rate:                   1225.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              28563.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30684.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.485 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 67075.235 ops/s
[info]                  ·gc.alloc.rate:                   1208.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              28357.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30949.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.621 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 67762.910 ops/s
[info]                  ·gc.alloc.rate:                   1218.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              28291.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22851.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.823 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 67647.178 ops/s
[info]                  ·gc.alloc.rate:                   1216.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              28292.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30401.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.484 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 67635.442 ops/s
[info]                  ·gc.alloc.rate:               1222.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          28448.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22841.298 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   67527.859 ±(99.9%) 1029.670 ops/s [Average]
[info]   (min, avg, max) = (67075.235, 67527.859, 67762.910), stdev = 267.402
[info]   CI (99.9%): [66498.189, 68557.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1218.328 ±(99.9%) 25.022 MB/sec [Average]
[info]   (min, avg, max) = (1208.564, 1218.328, 1225.348), stdev = 6.498
[info]   CI (99.9%): [1193.306, 1243.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28390.700 ±(99.9%) 445.664 B/op [Average]
[info]   (min, avg, max) = (28291.624, 28390.700, 28563.040), stdev = 115.738
[info]   CI (99.9%): [27945.036, 28836.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1181.679 ±(99.9%) 698.399 MB/sec [Average]
[info]   (min, avg, max) = (981.774, 1181.679, 1319.010), stdev = 181.372
[info]   CI (99.9%): [483.280, 1880.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27545.556 ±(99.9%) 16535.399 B/op [Average]
[info]   (min, avg, max) = (22841.298, 27545.556, 30949.428), stdev = 4294.191
[info]   CI (99.9%): [11010.156, 44080.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 5.635 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.393), stdev = 1.463
[info]   CI (99.9%): [≈ 0, 6.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.083 ±(99.9%) 132.222 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.083, 79.621), stdev = 34.338
[info]   CI (99.9%): [≈ 0, 152.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 4.919
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:14:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58848.028 ops/s
[info] # Warmup Iteration   2: 133896.000 ops/s
[info] # Warmup Iteration   3: 135135.873 ops/s
[info] Iteration   1: 133914.206 ops/s
[info]                  ·gc.alloc.rate:               941.008 MB/sec
[info]                  ·gc.alloc.rate.norm:          11058.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11689.034 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 133567.633 ops/s
[info]                  ·gc.alloc.rate:               948.054 MB/sec
[info]                  ·gc.alloc.rate.norm:          11171.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11735.009 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 136663.014 ops/s
[info]                  ·gc.alloc.rate:                   935.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7656.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.413 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 136151.758 ops/s
[info]                  ·gc.alloc.rate:                   937.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              10841.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11497.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.348 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 136892.946 ops/s
[info]                  ·gc.alloc.rate:                   946.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              10878.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11396.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.718 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   135437.912 ±(99.9%) 6072.307 ops/s [Average]
[info]   (min, avg, max) = (133567.633, 135437.912, 136892.946), stdev = 1576.959
[info]   CI (99.9%): [129365.604, 141510.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   941.806 ±(99.9%) 20.366 MB/sec [Average]
[info]   (min, avg, max) = (935.711, 941.806, 948.054), stdev = 5.289
[info]   CI (99.9%): [921.440, 962.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10945.293 ±(99.9%) 632.117 B/op [Average]
[info]   (min, avg, max) = (10776.072, 10945.293, 11171.199), stdev = 164.159
[info]   CI (99.9%): [10313.175, 11577.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   928.266 ±(99.9%) 567.117 MB/sec [Average]
[info]   (min, avg, max) = (664.824, 928.266, 995.902), stdev = 147.278
[info]   CI (99.9%): [361.150, 1495.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10794.739 ±(99.9%) 6776.454 B/op [Average]
[info]   (min, avg, max) = (7656.415, 10794.739, 11735.009), stdev = 1759.824
[info]   CI (99.9%): [4018.285, 17571.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.633 ±(99.9%) 3.689 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.633, 2.207), stdev = 0.958
[info]   CI (99.9%): [≈ 0, 4.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.296 ±(99.9%) 42.500 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.296, 25.413), stdev = 11.037
[info]   CI (99.9%): [≈ 0, 49.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:13:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3237.673 ops/s
[info] # Warmup Iteration   2: 32170.813 ops/s
[info] # Warmup Iteration   3: 36314.052 ops/s
[info] Iteration   1: 35802.245 ops/s
[info]                  ·gc.alloc.rate:                   1786.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              78522.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72331.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 186.686 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 36345.770 ops/s
[info]                  ·gc.alloc.rate:                   1822.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              78910.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70672.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.014 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 37287.478 ops/s
[info]                  ·gc.alloc.rate:                   1880.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              79368.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82749.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.879 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 36697.797 ops/s
[info]                  ·gc.alloc.rate:                   1847.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              79214.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70665.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.893 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 37098.294 ops/s
[info]                  ·gc.alloc.rate:               1880.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          79766.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1994.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 84609.528 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   36646.317 ±(99.9%) 2294.938 ops/s [Average]
[info]   (min, avg, max) = (35802.245, 36646.317, 37287.478), stdev = 595.988
[info]   CI (99.9%): [34351.379, 38941.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1843.365 ±(99.9%) 154.820 MB/sec [Average]
[info]   (min, avg, max) = (1786.191, 1843.365, 1880.478), stdev = 40.206
[info]   CI (99.9%): [1688.544, 1998.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79156.566 ±(99.9%) 1809.541 B/op [Average]
[info]   (min, avg, max) = (78522.192, 79156.566, 79766.747), stdev = 469.932
[info]   CI (99.9%): [77347.025, 80966.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1776.128 ±(99.9%) 709.970 MB/sec [Average]
[info]   (min, avg, max) = (1632.249, 1776.128, 1994.645), stdev = 184.377
[info]   CI (99.9%): [1066.159, 2486.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76205.723 ±(99.9%) 26521.503 B/op [Average]
[info]   (min, avg, max) = (70665.960, 76205.723, 84609.528), stdev = 6887.550
[info]   CI (99.9%): [49684.220, 102727.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.899 ±(99.9%) 7.213 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.899, 4.247), stdev = 1.873
[info]   CI (99.9%): [≈ 0, 8.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   39.494 ±(99.9%) 317.156 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 39.494, 186.686), stdev = 82.364
[info]   CI (99.9%): [≈ 0, 356.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.391
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:13:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13509.053 ops/s
[info] # Warmup Iteration   2: 30925.233 ops/s
[info] # Warmup Iteration   3: 31710.396 ops/s
[info] Iteration   1: 31769.856 ops/s
[info]                  ·gc.alloc.rate:                   528.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              26188.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32538.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 31899.605 ops/s
[info]                  ·gc.alloc.rate:               525.416 MB/sec
[info]                  ·gc.alloc.rate.norm:          25910.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16234.574 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 31892.777 ops/s
[info]                  ·gc.alloc.rate:                   536.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              26458.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32494.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 32219.587 ops/s
[info]                  ·gc.alloc.rate:               526.531 MB/sec
[info]                  ·gc.alloc.rate.norm:          25719.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16090.139 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 31893.207 ops/s
[info]                  ·gc.alloc.rate:                   525.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              25911.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32544.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   31935.006 ±(99.9%) 647.333 ops/s [Average]
[info]   (min, avg, max) = (31769.856, 31935.006, 32219.587), stdev = 168.110
[info]   CI (99.9%): [31287.673, 32582.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   528.396 ±(99.9%) 17.695 MB/sec [Average]
[info]   (min, avg, max) = (525.142, 528.396, 536.235), stdev = 4.595
[info]   CI (99.9%): [510.701, 546.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   26037.733 ±(99.9%) 1110.870 B/op [Average]
[info]   (min, avg, max) = (25719.257, 26037.733, 26458.236), stdev = 288.489
[info]   CI (99.9%): [24926.863, 27148.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   526.714 ±(99.9%) 693.945 MB/sec [Average]
[info]   (min, avg, max) = (329.201, 526.714, 659.554), stdev = 180.215
[info]   CI (99.9%): [≈ 0, 1220.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   25980.309 ±(99.9%) 34512.123 B/op [Average]
[info]   (min, avg, max) = (16090.139, 25980.309, 32544.054), stdev = 8962.689
[info]   CI (99.9%): [≈ 0, 60492.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.028 ±(99.9%) 3.956 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.028, 2.055), stdev = 1.027
[info]   CI (99.9%): [≈ 0, 4.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:13:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13657.876 ops/s
[info] # Warmup Iteration   2: 30563.460 ops/s
[info] # Warmup Iteration   3: 31799.733 ops/s
[info] Iteration   1: 32598.529 ops/s
[info]                  ·gc.alloc.rate:                   411.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              19850.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12349.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 32645.552 ops/s
[info]                  ·gc.alloc.rate:                   416.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              20072.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31570.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 32832.590 ops/s
[info]                  ·gc.alloc.rate:               412.370 MB/sec
[info]                  ·gc.alloc.rate.norm:          19767.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15726.884 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 32833.751 ops/s
[info]                  ·gc.alloc.rate:               413.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          19824.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15726.405 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 32845.380 ops/s
[info]                  ·gc.alloc.rate:               410.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          19667.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15736.620 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   32751.160 ±(99.9%) 458.771 ops/s [Average]
[info]   (min, avg, max) = (32598.529, 32751.160, 32845.380), stdev = 119.141
[info]   CI (99.9%): [32292.389, 33209.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   412.786 ±(99.9%) 8.896 MB/sec [Average]
[info]   (min, avg, max) = (410.467, 412.786, 416.333), stdev = 2.310
[info]   CI (99.9%): [403.890, 421.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   19836.760 ±(99.9%) 575.501 B/op [Average]
[info]   (min, avg, max) = (19667.667, 19836.760, 20072.692), stdev = 149.456
[info]   CI (99.9%): [19261.260, 20412.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   379.039 ±(99.9%) 605.777 MB/sec [Average]
[info]   (min, avg, max) = (255.800, 379.039, 654.815), stdev = 157.318
[info]   CI (99.9%): [≈ 0, 984.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18221.998 ±(99.9%) 29281.627 B/op [Average]
[info]   (min, avg, max) = (12349.431, 18221.998, 31570.652), stdev = 7604.346
[info]   CI (99.9%): [≈ 0, 47503.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.004 ±(99.9%) 5.467 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.004, 3.011), stdev = 1.420
[info]   CI (99.9%): [≈ 0, 6.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18057.028 ops/s
[info] # Warmup Iteration   2: 33697.090 ops/s
[info] # Warmup Iteration   3: 34125.749 ops/s
[info] Iteration   1: 33046.702 ops/s
[info]                  ·gc.alloc.rate:               434.198 MB/sec
[info]                  ·gc.alloc.rate.norm:          20671.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:      585.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27869.604 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 34289.793 ops/s
[info]                  ·gc.alloc.rate:               421.118 MB/sec
[info]                  ·gc.alloc.rate.norm:          19322.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15119.870 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 34448.343 ops/s
[info]                  ·gc.alloc.rate:               425.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          19419.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15096.621 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 34476.518 ops/s
[info]                  ·gc.alloc.rate:               421.031 MB/sec
[info]                  ·gc.alloc.rate.norm:          19218.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15082.612 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 34361.709 ops/s
[info]                  ·gc.alloc.rate:                   433.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              19871.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30296.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.953 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   34124.613 ±(99.9%) 2337.526 ops/s [Average]
[info]   (min, avg, max) = (33046.702, 34124.613, 34476.518), stdev = 607.048
[info]   CI (99.9%): [31787.087, 36462.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   427.074 ±(99.9%) 25.355 MB/sec [Average]
[info]   (min, avg, max) = (421.031, 427.074, 434.198), stdev = 6.585
[info]   CI (99.9%): [401.719, 452.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   19700.569 ±(99.9%) 2298.763 B/op [Average]
[info]   (min, avg, max) = (19218.399, 19700.569, 20671.088), stdev = 596.982
[info]   CI (99.9%): [17401.806, 21999.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   447.479 ±(99.9%) 627.311 MB/sec [Average]
[info]   (min, avg, max) = (329.524, 447.479, 661.564), stdev = 162.911
[info]   CI (99.9%): [≈ 0, 1074.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20693.075 ±(99.9%) 29676.814 B/op [Average]
[info]   (min, avg, max) = (15082.612, 20693.075, 30296.670), stdev = 7706.974
[info]   CI (99.9%): [≈ 0, 50369.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.191 ±(99.9%) 1.642 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.191, 0.953), stdev = 0.426
[info]   CI (99.9%): [≈ 0, 1.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 7.000), stdev = 2.168
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:12:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16978.905 ops/s
[info] # Warmup Iteration   2: 34105.408 ops/s
[info] # Warmup Iteration   3: 34162.787 ops/s
[info] Iteration   1: 33586.435 ops/s
[info]                  ·gc.alloc.rate:               381.501 MB/sec
[info]                  ·gc.alloc.rate.norm:          17872.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11986.580 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 34291.057 ops/s
[info]                  ·gc.alloc.rate:               383.108 MB/sec
[info]                  ·gc.alloc.rate.norm:          17582.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15133.834 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 33428.634 ops/s
[info]                  ·gc.alloc.rate:                   403.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              19000.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31080.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.960 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 33644.561 ops/s
[info]                  ·gc.alloc.rate:                   374.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              17499.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15456.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.974 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 34403.201 ops/s
[info]                  ·gc.alloc.rate:               385.382 MB/sec
[info]                  ·gc.alloc.rate.norm:          17629.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15145.082 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   33870.777 ±(99.9%) 1708.689 ops/s [Average]
[info]   (min, avg, max) = (33428.634, 33870.777, 34403.201), stdev = 443.741
[info]   CI (99.9%): [32162.089, 35579.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   385.563 ±(99.9%) 42.373 MB/sec [Average]
[info]   (min, avg, max) = (374.089, 385.563, 403.734), stdev = 11.004
[info]   CI (99.9%): [343.189, 427.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   17917.045 ±(99.9%) 2392.816 B/op [Average]
[info]   (min, avg, max) = (17499.742, 17917.045, 19000.633), stdev = 621.407
[info]   CI (99.9%): [15524.229, 20309.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   381.500 ±(99.9%) 613.104 MB/sec [Average]
[info]   (min, avg, max) = (255.864, 381.500, 660.407), stdev = 159.221
[info]   CI (99.9%): [≈ 0, 994.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   17760.447 ±(99.9%) 29186.494 B/op [Average]
[info]   (min, avg, max) = (11986.580, 17760.447, 31080.302), stdev = 7579.640
[info]   CI (99.9%): [≈ 0, 46946.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.587 ±(99.9%) 3.373 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.587, 1.960), stdev = 0.876
[info]   CI (99.9%): [≈ 0, 3.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:12:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2152.636 ops/s
[info] # Warmup Iteration   2: 12968.644 ops/s
[info] # Warmup Iteration   3: 15618.306 ops/s
[info] Iteration   1: 15525.637 ops/s
[info]                  ·gc.alloc.rate:                   1143.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              115958.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100684.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.221 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 15432.739 ops/s
[info]                  ·gc.alloc.rate:               1131.855 MB/sec
[info]                  ·gc.alloc.rate.norm:          115408.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 101291.015 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 15157.359 ops/s
[info]                  ·gc.alloc.rate:                   1147.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              119111.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137504.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 395.550 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 15611.579 ops/s
[info]                  ·gc.alloc.rate:                   1144.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              115367.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99458.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 15365.929 ops/s
[info]                  ·gc.alloc.rate:               1137.680 MB/sec
[info]                  ·gc.alloc.rate.norm:          116510.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:      985.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100913.841 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   15418.649 ±(99.9%) 666.726 ops/s [Average]
[info]   (min, avg, max) = (15157.359, 15418.649, 15611.579), stdev = 173.147
[info]   CI (99.9%): [14751.923, 16085.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1141.038 ±(99.9%) 23.909 MB/sec [Average]
[info]   (min, avg, max) = (1131.855, 1141.038, 1147.208), stdev = 6.209
[info]   CI (99.9%): [1117.129, 1164.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   116471.135 ±(99.9%) 5960.351 B/op [Average]
[info]   (min, avg, max) = (115367.447, 116471.135, 119111.452), stdev = 1547.884
[info]   CI (99.9%): [110510.784, 122431.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1056.617 ±(99.9%) 576.507 MB/sec [Average]
[info]   (min, avg, max) = (985.388, 1056.617, 1324.359), stdev = 149.717
[info]   CI (99.9%): [480.111, 1633.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   107970.405 ±(99.9%) 63629.451 B/op [Average]
[info]   (min, avg, max) = (99458.246, 107970.405, 137504.557), stdev = 16524.366
[info]   CI (99.9%): [44340.954, 171599.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 6.534 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 3.810), stdev = 1.697
[info]   CI (99.9%): [≈ 0, 7.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   80.374 ±(99.9%) 678.475 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 80.374, 395.550), stdev = 176.198
[info]   CI (99.9%): [≈ 0, 758.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.209
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:12:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1800.049 ops/s
[info] # Warmup Iteration   2: 13098.184 ops/s
[info] # Warmup Iteration   3: 15201.670 ops/s
[info] Iteration   1: 15511.125 ops/s
[info]                  ·gc.alloc.rate:                   1006.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              102081.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100031.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.112 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 15397.495 ops/s
[info]                  ·gc.alloc.rate:                   1000.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              102296.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100942.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.383 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 15482.972 ops/s
[info]                  ·gc.alloc.rate:                   1013.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              102993.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100517.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 366.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 15570.049 ops/s
[info]                  ·gc.alloc.rate:                   1019.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              103013.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99450.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.854 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 15485.491 ops/s
[info]                  ·gc.alloc.rate:               1016.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          103334.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99583.917 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   15489.426 ±(99.9%) 239.541 ops/s [Average]
[info]   (min, avg, max) = (15397.495, 15489.426, 15570.049), stdev = 62.208
[info]   CI (99.9%): [15249.886, 15728.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1011.275 ±(99.9%) 29.256 MB/sec [Average]
[info]   (min, avg, max) = (1000.826, 1011.275, 1019.159), stdev = 7.598
[info]   CI (99.9%): [982.019, 1040.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   102743.911 ±(99.9%) 2039.865 B/op [Average]
[info]   (min, avg, max) = (102081.395, 102743.911, 103334.688), stdev = 529.746
[info]   CI (99.9%): [100704.047, 104783.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   985.281 ±(99.9%) 13.528 MB/sec [Average]
[info]   (min, avg, max) = (979.935, 985.281, 988.883), stdev = 3.513
[info]   CI (99.9%): [971.753, 998.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   100105.240 ±(99.9%) 2417.227 B/op [Average]
[info]   (min, avg, max) = (99450.764, 100105.240, 100942.462), stdev = 627.746
[info]   CI (99.9%): [97688.013, 102522.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.891 ±(99.9%) 5.968 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.891, 3.604), stdev = 1.550
[info]   CI (99.9%): [≈ 0, 6.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   90.527 ±(99.9%) 606.695 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 90.527, 366.287), stdev = 157.557
[info]   CI (99.9%): [≈ 0, 697.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 11.000), stdev = 3.033
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:12:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60004.528 ops/s
[info] # Warmup Iteration   2: 99533.715 ops/s
[info] # Warmup Iteration   3: 104264.889 ops/s
[info] Iteration   1: 104975.022 ops/s
[info]                  ·gc.alloc.rate:               283.738 MB/sec
[info]                  ·gc.alloc.rate.norm:          4252.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3835.267 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 108485.952 ops/s
[info]                  ·gc.alloc.rate:                   289.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              4205.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3711.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.604 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 107667.661 ops/s
[info]                  ·gc.alloc.rate:               288.474 MB/sec
[info]                  ·gc.alloc.rate.norm:          4216.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4824.811 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 107896.957 ops/s
[info]                  ·gc.alloc.rate:               290.997 MB/sec
[info]                  ·gc.alloc.rate.norm:          4244.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4814.706 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 108084.570 ops/s
[info]                  ·gc.alloc.rate:               295.280 MB/sec
[info]                  ·gc.alloc.rate.norm:          4299.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4815.899 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   107422.032 ±(99.9%) 5392.491 ops/s [Average]
[info]   (min, avg, max) = (104975.022, 107422.032, 108485.952), stdev = 1400.413
[info]   CI (99.9%): [102029.541, 112814.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   289.691 ±(99.9%) 16.101 MB/sec [Average]
[info]   (min, avg, max) = (283.738, 289.691, 295.280), stdev = 4.181
[info]   CI (99.9%): [273.590, 305.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4243.805 ±(99.9%) 141.069 B/op [Average]
[info]   (min, avg, max) = (4205.634, 4243.805, 4299.477), stdev = 36.635
[info]   CI (99.9%): [4102.736, 4384.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.531 ±(99.9%) 156.946 MB/sec [Average]
[info]   (min, avg, max) = (255.862, 300.531, 330.747), stdev = 40.758
[info]   CI (99.9%): [143.586, 457.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4400.341 ±(99.9%) 2211.216 B/op [Average]
[info]   (min, avg, max) = (3711.021, 4400.341, 4824.811), stdev = 574.246
[info]   CI (99.9%): [2189.125, 6611.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.121 ±(99.9%) 1.040 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.604), stdev = 0.270
[info]   CI (99.9%): [≈ 0, 1.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:12:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2119.645 ops/s
[info] # Warmup Iteration   2: 10963.080 ops/s
[info] # Warmup Iteration   3: 13821.436 ops/s
[info] Iteration   1: 13849.941 ops/s
[info]                  ·gc.alloc.rate:                   1348.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              153231.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149655.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.366 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 13945.285 ops/s
[info]                  ·gc.alloc.rate:                   1352.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              152608.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148636.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 465.194 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 13981.482 ops/s
[info]                  ·gc.alloc.rate:                   1366.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              153783.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147129.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.151 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 13996.577 ops/s
[info]                  ·gc.alloc.rate:               1361.627 MB/sec
[info]                  ·gc.alloc.rate.norm:          153096.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1306.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146859.069 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 13858.214 ops/s
[info]                  ·gc.alloc.rate:                   1362.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              154644.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148877.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.364 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   13926.300 ±(99.9%) 264.061 ops/s [Average]
[info]   (min, avg, max) = (13849.941, 13926.300, 13996.577), stdev = 68.576
[info]   CI (99.9%): [13662.238, 14190.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1358.215 ±(99.9%) 28.142 MB/sec [Average]
[info]   (min, avg, max) = (1348.675, 1358.215, 1366.221), stdev = 7.308
[info]   CI (99.9%): [1330.074, 1386.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   153472.809 ±(99.9%) 2993.102 B/op [Average]
[info]   (min, avg, max) = (152608.283, 153472.809, 154644.538), stdev = 777.299
[info]   CI (99.9%): [150479.707, 156465.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1311.805 ±(99.9%) 20.555 MB/sec [Average]
[info]   (min, avg, max) = (1306.154, 1311.805, 1317.326), stdev = 5.338
[info]   CI (99.9%): [1291.250, 1332.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   148231.746 ±(99.9%) 4600.702 B/op [Average]
[info]   (min, avg, max) = (146859.069, 148231.746, 149655.988), stdev = 1194.788
[info]   CI (99.9%): [143631.043, 152832.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.895 ±(99.9%) 6.965 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.895, 4.123), stdev = 1.809
[info]   CI (99.9%): [≈ 0, 7.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   101.015 ±(99.9%) 785.928 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 101.015, 465.194), stdev = 204.103
[info]   CI (99.9%): [≈ 0, 886.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 14.000), stdev = 3.782
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:11:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15859.307 ops/s
[info] # Warmup Iteration   2: 41615.049 ops/s
[info] # Warmup Iteration   3: 44661.729 ops/s
[info] Iteration   1: 44295.701 ops/s
[info]                  ·gc.alloc.rate:                   1137.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              40422.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35195.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.479 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 45003.769 ops/s
[info]                  ·gc.alloc.rate:                   1146.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              40105.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46267.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.372 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 45154.625 ops/s
[info]                  ·gc.alloc.rate:                   1142.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              39814.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34526.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.926 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 44889.525 ops/s
[info]                  ·gc.alloc.rate:               1160.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          40701.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46057.329 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 45178.805 ops/s
[info]                  ·gc.alloc.rate:                   1141.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              39746.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34346.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   44904.485 ±(99.9%) 1386.394 ops/s [Average]
[info]   (min, avg, max) = (44295.701, 44904.485, 45178.805), stdev = 360.042
[info]   CI (99.9%): [43518.091, 46290.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1145.764 ±(99.9%) 35.114 MB/sec [Average]
[info]   (min, avg, max) = (1137.688, 1145.764, 1160.984), stdev = 9.119
[info]   CI (99.9%): [1110.650, 1180.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   40158.187 ±(99.9%) 1557.698 B/op [Average]
[info]   (min, avg, max) = (39746.677, 40158.187, 40701.231), stdev = 404.529
[info]   CI (99.9%): [38600.489, 41715.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1120.785 ±(99.9%) 694.819 MB/sec [Average]
[info]   (min, avg, max) = (985.977, 1120.785, 1323.048), stdev = 180.442
[info]   CI (99.9%): [425.966, 1815.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   39278.582 ±(99.9%) 24230.715 B/op [Average]
[info]   (min, avg, max) = (34346.062, 39278.582, 46267.901), stdev = 6292.640
[info]   CI (99.9%): [15047.867, 63509.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 4.460 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 2.727), stdev = 1.158
[info]   CI (99.9%): [≈ 0, 5.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   26.771 ±(99.9%) 155.936 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.771, 95.372), stdev = 40.496
[info]   CI (99.9%): [≈ 0, 182.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 12.000), stdev = 3.435
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:11:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19207.694 ops/s
[info] # Warmup Iteration   2: 60093.506 ops/s
[info] # Warmup Iteration   3: 61774.943 ops/s
[info] Iteration   1: 61288.217 ops/s
[info]                  ·gc.alloc.rate:                   1077.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              27668.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25310.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.069 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 62079.559 ops/s
[info]                  ·gc.alloc.rate:                   1086.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              27528.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25020.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 62182.998 ops/s
[info]                  ·gc.alloc.rate:                   1096.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              27748.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25004.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.477 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 62356.883 ops/s
[info]                  ·gc.alloc.rate:               1103.827 MB/sec
[info]                  ·gc.alloc.rate.norm:          27860.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33053.816 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 62443.055 ops/s
[info]                  ·gc.alloc.rate:               1106.587 MB/sec
[info]                  ·gc.alloc.rate.norm:          27887.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24747.831 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   62070.142 ±(99.9%) 1770.372 ops/s [Average]
[info]   (min, avg, max) = (61288.217, 62070.142, 62443.055), stdev = 459.760
[info]   CI (99.9%): [60299.771, 63840.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1094.064 ±(99.9%) 46.946 MB/sec [Average]
[info]   (min, avg, max) = (1077.490, 1094.064, 1106.587), stdev = 12.192
[info]   CI (99.9%): [1047.117, 1141.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   27738.719 ±(99.9%) 565.475 B/op [Average]
[info]   (min, avg, max) = (27528.342, 27738.719, 27887.455), stdev = 146.852
[info]   CI (99.9%): [27173.244, 28304.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1050.458 ±(99.9%) 557.831 MB/sec [Average]
[info]   (min, avg, max) = (982.006, 1050.458, 1309.572), stdev = 144.867
[info]   CI (99.9%): [492.627, 1608.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   26627.390 ±(99.9%) 13854.630 B/op [Average]
[info]   (min, avg, max) = (24747.831, 26627.390, 33053.816), stdev = 3598.003
[info]   CI (99.9%): [12772.760, 40482.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 6.528 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.812), stdev = 1.695
[info]   CI (99.9%): [≈ 0, 7.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   19.720 ±(99.9%) 165.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19.720, 96.477), stdev = 42.912
[info]   CI (99.9%): [≈ 0, 184.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.588
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:11:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103435.267 ops/s
[info] # Warmup Iteration   2: 165034.653 ops/s
[info] # Warmup Iteration   3: 171138.903 ops/s
[info] Iteration   1: 175875.029 ops/s
[info]                  ·gc.alloc.rate:                   289.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              2586.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2289.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 174537.806 ops/s
[info]                  ·gc.alloc.rate:               282.804 MB/sec
[info]                  ·gc.alloc.rate.norm:          2549.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2306.701 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 169018.925 ops/s
[info]                  ·gc.alloc.rate:                   278.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              2593.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3070.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 168968.800 ops/s
[info]                  ·gc.alloc.rate:               276.711 MB/sec
[info]                  ·gc.alloc.rate.norm:          2576.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3071.455 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 172944.028 ops/s
[info]                  ·gc.alloc.rate:               284.355 MB/sec
[info]                  ·gc.alloc.rate.norm:          2587.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3006.913 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   172268.918 ±(99.9%) 12186.072 ops/s [Average]
[info]   (min, avg, max) = (168968.800, 172268.918, 175875.029), stdev = 3164.684
[info]   CI (99.9%): [160082.846, 184454.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   282.326 ±(99.9%) 18.854 MB/sec [Average]
[info]   (min, avg, max) = (276.711, 282.326, 289.134), stdev = 4.896
[info]   CI (99.9%): [263.472, 301.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2578.721 ±(99.9%) 67.021 B/op [Average]
[info]   (min, avg, max) = (2549.611, 2578.721, 2593.353), stdev = 17.405
[info]   CI (99.9%): [2511.700, 2645.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.392 ±(99.9%) 156.498 MB/sec [Average]
[info]   (min, avg, max) = (255.860, 300.392, 330.422), stdev = 40.642
[info]   CI (99.9%): [143.894, 456.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2748.963 ±(99.9%) 1588.714 B/op [Average]
[info]   (min, avg, max) = (2289.220, 2748.963, 3071.455), stdev = 412.584
[info]   CI (99.9%): [1160.250, 4337.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 0.802 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.152, 0.388), stdev = 0.208
[info]   CI (99.9%): [≈ 0, 0.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99824.244 ops/s
[info] # Warmup Iteration   2: 166576.198 ops/s
[info] # Warmup Iteration   3: 185171.678 ops/s
[info] Iteration   1: 183733.156 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 180123.176 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 184750.874 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 185037.445 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 184821.724 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   183693.275 ±(99.9%) 7925.666 ops/s [Average]
[info]   (min, avg, max) = (180123.176, 183693.275, 185037.445), stdev = 2058.270
[info]   CI (99.9%): [175767.609, 191618.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:11:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16703.500 ops/s
[info] # Warmup Iteration   2: 56172.744 ops/s
[info] # Warmup Iteration   3: 57472.025 ops/s
[info] Iteration   1: 58577.710 ops/s
[info]                  ·gc.alloc.rate:                   1133.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              30462.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26587.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.119 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 58291.487 ops/s
[info]                  ·gc.alloc.rate:                   1135.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              30644.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35674.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.901 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.307 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 58720.189 ops/s
[info]                  ·gc.alloc.rate:                   1139.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              30552.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26496.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.571 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 57873.510 ops/s
[info]                  ·gc.alloc.rate:                   1122.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              30510.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26721.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.698 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 57870.702 ops/s
[info]                  ·gc.alloc.rate:                   1135.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              30884.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35628.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.566 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   58266.720 ±(99.9%) 1509.147 ops/s [Average]
[info]   (min, avg, max) = (57870.702, 58266.720, 58720.189), stdev = 391.921
[info]   CI (99.9%): [56757.573, 59775.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1133.388 ±(99.9%) 25.343 MB/sec [Average]
[info]   (min, avg, max) = (1122.349, 1133.388, 1139.925), stdev = 6.582
[info]   CI (99.9%): [1108.044, 1158.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30610.969 ±(99.9%) 643.899 B/op [Average]
[info]   (min, avg, max) = (30462.379, 30610.969, 30884.970), stdev = 167.218
[info]   CI (99.9%): [29967.070, 31254.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1118.548 ±(99.9%) 693.613 MB/sec [Average]
[info]   (min, avg, max) = (982.990, 1118.548, 1321.435), stdev = 180.129
[info]   CI (99.9%): [424.935, 1812.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30221.624 ±(99.9%) 19089.890 B/op [Average]
[info]   (min, avg, max) = (26496.054, 30221.624, 35674.966), stdev = 4957.584
[info]   CI (99.9%): [11131.734, 49311.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.826 ±(99.9%) 4.805 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.826, 2.901), stdev = 1.248
[info]   CI (99.9%): [≈ 0, 5.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22.252 ±(99.9%) 129.657 B/op [Average]
[info]   (min, avg, max) = (0.566, 22.252, 78.307), stdev = 33.672
[info]   CI (99.9%): [≈ 0, 151.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 13.000), stdev = 3.912
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:10:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15925.766 ops/s
[info] # Warmup Iteration   2: 81629.103 ops/s
[info] # Warmup Iteration   3: 92198.809 ops/s
[info] Iteration   1: 95050.597 ops/s
[info]                  ·gc.alloc.rate:                   2099.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              34762.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32693.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.973 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 95043.349 ops/s
[info]                  ·gc.alloc.rate:                   2116.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              35032.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37923.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.758 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 96202.740 ops/s
[info]                  ·gc.alloc.rate:               2148.783 MB/sec
[info]                  ·gc.alloc.rate.norm:          35138.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1975.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32302.440 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 96185.062 ops/s
[info]                  ·gc.alloc.rate:                   2148.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              35157.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32615.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.341 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 95798.772 ops/s
[info]                  ·gc.alloc.rate:               2141.300 MB/sec
[info]                  ·gc.alloc.rate.norm:          35172.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2009.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33008.780 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   95656.104 ±(99.9%) 2229.610 ops/s [Average]
[info]   (min, avg, max) = (95043.349, 95656.104, 96202.740), stdev = 579.023
[info]   CI (99.9%): [93426.493, 97885.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   2130.980 ±(99.9%) 84.388 MB/sec [Average]
[info]   (min, avg, max) = (2099.780, 2130.980, 2148.783), stdev = 21.915
[info]   CI (99.9%): [2046.591, 2215.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   35052.781 ±(99.9%) 660.238 B/op [Average]
[info]   (min, avg, max) = (34762.234, 35052.781, 35172.971), stdev = 171.462
[info]   CI (99.9%): [34392.543, 35713.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2048.816 ±(99.9%) 524.395 MB/sec [Average]
[info]   (min, avg, max) = (1974.823, 2048.816, 2291.069), stdev = 136.184
[info]   CI (99.9%): [1524.421, 2573.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   33708.871 ±(99.9%) 9124.516 B/op [Average]
[info]   (min, avg, max) = (32302.440, 33708.871, 37923.861), stdev = 2369.608
[info]   CI (99.9%): [24584.355, 42833.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 7.203 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.883, 4.227), stdev = 1.871
[info]   CI (99.9%): [≈ 0, 8.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.614 ±(99.9%) 119.246 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.614, 69.973), stdev = 30.968
[info]   CI (99.9%): [≈ 0, 133.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 14.000), stdev = 2.793
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:10:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30154.141 ops/s
[info] # Warmup Iteration   2: 116324.551 ops/s
[info] # Warmup Iteration   3: 119553.986 ops/s
[info] Iteration   1: 123774.827 ops/s
[info]                  ·gc.alloc.rate:                   1733.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              22040.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20862.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.352 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 122834.258 ops/s
[info]                  ·gc.alloc.rate:                   1733.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              22209.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20903.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.734 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 123862.209 ops/s
[info]                  ·gc.alloc.rate:                   1747.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              22209.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20750.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.529 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 123881.561 ops/s
[info]                  ·gc.alloc.rate:               1762.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          22385.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20891.289 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 124832.742 ops/s
[info]                  ·gc.alloc.rate:               1789.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          22546.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1991.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25103.473 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   123837.119 ±(99.9%) 2725.184 ops/s [Average]
[info]   (min, avg, max) = (122834.258, 123837.119, 124832.742), stdev = 707.722
[info]   CI (99.9%): [121111.935, 126562.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1753.294 ±(99.9%) 89.932 MB/sec [Average]
[info]   (min, avg, max) = (1733.425, 1753.294, 1789.086), stdev = 23.355
[info]   CI (99.9%): [1663.362, 1843.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   22278.214 ±(99.9%) 743.907 B/op [Average]
[info]   (min, avg, max) = (22040.888, 22278.214, 22546.348), stdev = 193.190
[info]   CI (99.9%): [21534.307, 23022.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1708.473 ±(99.9%) 610.672 MB/sec [Average]
[info]   (min, avg, max) = (1631.623, 1708.473, 1991.998), stdev = 158.590
[info]   CI (99.9%): [1097.801, 2319.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21702.306 ±(99.9%) 7324.973 B/op [Average]
[info]   (min, avg, max) = (20750.430, 21702.306, 25103.473), stdev = 1902.272
[info]   CI (99.9%): [14377.333, 29027.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.874 ±(99.9%) 6.827 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.874, 4.039), stdev = 1.773
[info]   CI (99.9%): [≈ 0, 7.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.123 ±(99.9%) 86.803 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.123, 51.352), stdev = 22.542
[info]   CI (99.9%): [≈ 0, 97.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 13.000), stdev = 2.510
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:10:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55800.441 ops/s
[info] # Warmup Iteration   2: 154569.351 ops/s
[info] # Warmup Iteration   3: 156445.821 ops/s
[info] Iteration   1: 164632.962 ops/s
[info]                  ·gc.alloc.rate:                   1540.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              14727.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12686.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.878 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 162917.800 ops/s
[info]                  ·gc.alloc.rate:                   1553.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              15001.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15988.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.223 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 166237.629 ops/s
[info]                  ·gc.alloc.rate:                   1549.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              14665.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12513.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.365 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 166615.695 ops/s
[info]                  ·gc.alloc.rate:                   1564.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              14774.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15646.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.180 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 166105.504 ops/s
[info]                  ·gc.alloc.rate:                   1553.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              14710.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12611.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   165301.918 ±(99.9%) 5896.276 ops/s [Average]
[info]   (min, avg, max) = (162917.800, 165301.918, 166615.695), stdev = 1531.244
[info]   CI (99.9%): [159405.642, 171198.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1552.113 ±(99.9%) 32.346 MB/sec [Average]
[info]   (min, avg, max) = (1540.771, 1552.113, 1564.079), stdev = 8.400
[info]   CI (99.9%): [1519.767, 1584.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   14775.747 ±(99.9%) 507.945 B/op [Average]
[info]   (min, avg, max) = (14665.195, 14775.747, 15001.087), stdev = 131.912
[info]   CI (99.9%): [14267.803, 15283.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1458.516 ±(99.9%) 694.091 MB/sec [Average]
[info]   (min, avg, max) = (1321.952, 1458.516, 1656.338), stdev = 180.253
[info]   CI (99.9%): [764.425, 2152.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   13889.135 ±(99.9%) 6798.127 B/op [Average]
[info]   (min, avg, max) = (12513.307, 13889.135, 15988.530), stdev = 1765.452
[info]   CI (99.9%): [7091.008, 20687.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 4.167 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.687, 2.603), stdev = 1.082
[info]   CI (99.9%): [≈ 0, 4.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.569 ±(99.9%) 39.832 B/op [Average]
[info]   (min, avg, max) = (0.197, 6.569, 24.878), stdev = 10.344
[info]   CI (99.9%): [≈ 0, 46.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 2.702
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2798.810 ops/s
[info] # Warmup Iteration   2: 42599.550 ops/s
[info] # Warmup Iteration   3: 52757.064 ops/s
[info] Iteration   1: 53296.209 ops/s
[info]                  ·gc.alloc.rate:                   2846.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              84033.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2639.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77919.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.760 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.448 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 53162.847 ops/s
[info]                  ·gc.alloc.rate:                   2881.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              85313.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3002.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88873.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.616 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 53254.945 ops/s
[info]                  ·gc.alloc.rate:                   2875.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              84950.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79593.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 52818.940 ops/s
[info]                  ·gc.alloc.rate:               2852.926 MB/sec
[info]                  ·gc.alloc.rate.norm:          85010.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2706.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80649.004 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 53157.802 ops/s
[info]                  ·gc.alloc.rate:               2871.043 MB/sec
[info]                  ·gc.alloc.rate.norm:          84999.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2715.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80388.131 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   53138.149 ±(99.9%) 724.276 ops/s [Average]
[info]   (min, avg, max) = (52818.940, 53138.149, 53296.209), stdev = 188.092
[info]   CI (99.9%): [52413.873, 53862.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2865.526 ±(99.9%) 58.489 MB/sec [Average]
[info]   (min, avg, max) = (2846.353, 2865.526, 2881.929), stdev = 15.189
[info]   CI (99.9%): [2807.036, 2924.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   84861.399 ±(99.9%) 1866.368 B/op [Average]
[info]   (min, avg, max) = (84033.052, 84861.399, 85313.443), stdev = 484.690
[info]   CI (99.9%): [82995.031, 86727.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2751.471 ±(99.9%) 551.576 MB/sec [Average]
[info]   (min, avg, max) = (2639.268, 2751.471, 3002.191), stdev = 143.243
[info]   CI (99.9%): [2199.895, 3303.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   81484.714 ±(99.9%) 16425.692 B/op [Average]
[info]   (min, avg, max) = (77919.284, 81484.714, 88873.571), stdev = 4265.700
[info]   CI (99.9%): [65059.022, 97910.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.160 ±(99.9%) 1.292 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.160, 0.760), stdev = 0.336
[info]   CI (99.9%): [≈ 0, 1.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.736 ±(99.9%) 38.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.736, 22.448), stdev = 9.906
[info]   CI (99.9%): [≈ 0, 42.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 13.000), stdev = 0.894
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:10:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66683.493 ops/s
[info] # Warmup Iteration   2: 171899.298 ops/s
[info] # Warmup Iteration   3: 180534.473 ops/s
[info] Iteration   1: 181131.359 ops/s
[info]                  ·gc.alloc.rate:                   1199.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              10420.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8610.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.362 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 180863.307 ops/s
[info]                  ·gc.alloc.rate:                   1213.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              10558.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11518.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.536 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 183392.488 ops/s
[info]                  ·gc.alloc.rate:                   1215.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              10431.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8477.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 181793.064 ops/s
[info]                  ·gc.alloc.rate:               1224.623 MB/sec
[info]                  ·gc.alloc.rate.norm:          10599.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11376.564 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 183244.751 ops/s
[info]                  ·gc.alloc.rate:               1240.889 MB/sec
[info]                  ·gc.alloc.rate.norm:          10658.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11316.783 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   182084.994 ±(99.9%) 4532.382 ops/s [Average]
[info]   (min, avg, max) = (180863.307, 182084.994, 183392.488), stdev = 1177.045
[info]   CI (99.9%): [177552.612, 186617.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1218.829 ±(99.9%) 58.880 MB/sec [Average]
[info]   (min, avg, max) = (1199.412, 1218.829, 1240.889), stdev = 15.291
[info]   CI (99.9%): [1159.949, 1277.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10533.513 ±(99.9%) 402.604 B/op [Average]
[info]   (min, avg, max) = (10420.412, 10533.513, 10658.099), stdev = 104.555
[info]   CI (99.9%): [10130.909, 10936.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1186.986 ±(99.9%) 694.194 MB/sec [Average]
[info]   (min, avg, max) = (988.038, 1186.986, 1323.872), stdev = 180.280
[info]   CI (99.9%): [492.792, 1881.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10259.940 ±(99.9%) 6041.390 B/op [Average]
[info]   (min, avg, max) = (8477.741, 10259.940, 11518.545), stdev = 1568.930
[info]   CI (99.9%): [4218.550, 16301.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.712 ±(99.9%) 5.310 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.712, 3.165), stdev = 1.379
[info]   CI (99.9%): [≈ 0, 6.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.187 ±(99.9%) 46.215 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.187, 27.536), stdev = 12.002
[info]   CI (99.9%): [≈ 0, 52.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 11.000), stdev = 3.114
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:09:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 197519.663 ops/s
[info] # Warmup Iteration   2: 520200.883 ops/s
[info] # Warmup Iteration   3: 520918.975 ops/s
[info] Iteration   1: 527303.606 ops/s
[info]                  ·gc.alloc.rate:               555.046 MB/sec
[info]                  ·gc.alloc.rate.norm:          1656.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1946.576 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 528751.374 ops/s
[info]                  ·gc.alloc.rate:               543.992 MB/sec
[info]                  ·gc.alloc.rate.norm:          1619.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 973.575 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 526405.524 ops/s
[info]                  ·gc.alloc.rate:                   556.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              1662.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1957.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 523864.477 ops/s
[info]                  ·gc.alloc.rate:               547.357 MB/sec
[info]                  ·gc.alloc.rate.norm:          1644.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1971.260 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 525244.039 ops/s
[info]                  ·gc.alloc.rate:               537.877 MB/sec
[info]                  ·gc.alloc.rate.norm:          1611.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 984.035 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   526313.804 ±(99.9%) 7222.772 ops/s [Average]
[info]   (min, avg, max) = (523864.477, 526313.804, 528751.374), stdev = 1875.731
[info]   CI (99.9%): [519091.032, 533536.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   548.096 ±(99.9%) 29.573 MB/sec [Average]
[info]   (min, avg, max) = (537.877, 548.096, 556.209), stdev = 7.680
[info]   CI (99.9%): [518.524, 577.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1638.956 ±(99.9%) 87.037 B/op [Average]
[info]   (min, avg, max) = (1611.714, 1638.956, 1662.715), stdev = 22.603
[info]   CI (99.9%): [1551.919, 1725.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   523.737 ±(99.9%) 688.969 MB/sec [Average]
[info]   (min, avg, max) = (327.086, 523.737, 656.163), stdev = 178.923
[info]   CI (99.9%): [≈ 0, 1212.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1566.636 ±(99.9%) 2066.633 B/op [Average]
[info]   (min, avg, max) = (973.575, 1566.636, 1971.260), stdev = 536.698
[info]   CI (99.9%): [≈ 0, 3633.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.429 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.249), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 2.049
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:09:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 339613.176 ops/s
[info] # Warmup Iteration   2: 649333.248 ops/s
[info] # Warmup Iteration   3: 696563.194 ops/s
[info] Iteration   1: 696206.263 ops/s
[info]                  ·gc.alloc.rate:                   558.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              1262.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1490.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 700669.819 ops/s
[info]                  ·gc.alloc.rate:               545.783 MB/sec
[info]                  ·gc.alloc.rate.norm:          1225.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 741.443 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 689510.813 ops/s
[info]                  ·gc.alloc.rate:                   550.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              1255.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1507.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 717479.592 ops/s
[info]                  ·gc.alloc.rate:                   568.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              1246.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1451.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 713587.852 ops/s
[info]                  ·gc.alloc.rate:               559.762 MB/sec
[info]                  ·gc.alloc.rate.norm:          1234.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 730.271 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   703490.868 ±(99.9%) 45320.754 ops/s [Average]
[info]   (min, avg, max) = (689510.813, 703490.868, 717479.592), stdev = 11769.656
[info]   CI (99.9%): [658170.114, 748811.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   556.544 ±(99.9%) 33.966 MB/sec [Average]
[info]   (min, avg, max) = (545.783, 556.544, 568.372), stdev = 8.821
[info]   CI (99.9%): [522.578, 590.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1244.923 ±(99.9%) 57.738 B/op [Average]
[info]   (min, avg, max) = (1225.753, 1244.923, 1262.585), stdev = 14.994
[info]   CI (99.9%): [1187.184, 1302.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.669 ±(99.9%) 696.093 MB/sec [Average]
[info]   (min, avg, max) = (330.138, 528.669, 661.630), stdev = 180.773
[info]   CI (99.9%): [≈ 0, 1224.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1184.274 ±(99.9%) 1578.301 B/op [Average]
[info]   (min, avg, max) = (730.271, 1184.274, 1507.623), stdev = 409.880
[info]   CI (99.9%): [≈ 0, 2762.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.197 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.095), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:09:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 309695.810 ops/s
[info] # Warmup Iteration   2: 767370.958 ops/s
[info] # Warmup Iteration   3: 707692.366 ops/s
[info] Iteration   1: 779996.134 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 780386.761 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 771424.764 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 779339.159 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 780461.115 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   778321.587 ±(99.9%) 14944.300 ops/s [Average]
[info]   (min, avg, max) = (771424.764, 778321.587, 780461.115), stdev = 3880.987
[info]   CI (99.9%): [763377.287, 793265.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:09:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69376.461 ops/s
[info] # Warmup Iteration   2: 297476.598 ops/s
[info] # Warmup Iteration   3: 318608.146 ops/s
[info] Iteration   1: 321876.712 ops/s
[info]                  ·gc.alloc.rate:                   920.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              4499.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4796.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 324409.095 ops/s
[info]                  ·gc.alloc.rate:                   922.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              4473.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4768.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 329458.712 ops/s
[info]                  ·gc.alloc.rate:                   928.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              4437.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4709.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.911 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 330893.760 ops/s
[info]                  ·gc.alloc.rate:                   937.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              4457.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3120.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.168 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 318465.969 ops/s
[info]                  ·gc.alloc.rate:                        894.927 MB/sec
[info]                  ·gc.alloc.rate.norm:                   4422.563 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.017 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.086 B/op
[info]                  ·gc.churn.Metaspace:                   0.051 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:               934.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          4618.725 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.255 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             11.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      1.337 B/op
[info]                  ·gc.count:                             4.000 counts
[info]                  ·gc.time:                              32.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   325020.850 ±(99.9%) 19953.991 ops/s [Average]
[info]   (min, avg, max) = (318465.969, 325020.850, 330893.760), stdev = 5181.988
[info]   CI (99.9%): [305066.858, 344974.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   920.772 ±(99.9%) 61.159 MB/sec [Average]
[info]   (min, avg, max) = (894.927, 920.772, 937.260), stdev = 15.883
[info]   CI (99.9%): [859.613, 981.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4458.344 ±(99.9%) 116.618 B/op [Average]
[info]   (min, avg, max) = (4422.563, 4458.344, 4499.970), stdev = 30.285
[info]   CI (99.9%): [4341.726, 4574.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.017 ±(99.9%) 0.147 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.086), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.051), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.Metaspace.norm":
[info]   0.051 ±(99.9%) 0.435 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.253), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   908.175 ±(99.9%) 548.609 MB/sec [Average]
[info]   (min, avg, max) = (656.144, 908.175, 985.928), stdev = 142.472
[info]   CI (99.9%): [359.566, 1456.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4402.887 ±(99.9%) 2772.000 B/op [Average]
[info]   (min, avg, max) = (3120.894, 4402.887, 4796.429), stdev = 719.880
[info]   CI (99.9%): [1630.887, 7174.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen":
[info]   0.451 ±(99.9%) 3.883 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.451, 2.255), stdev = 1.008
[info]   CI (99.9%): [≈ 0, 4.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   2.229 ±(99.9%) 19.191 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.229, 11.144), stdev = 4.984
[info]   CI (99.9%): [≈ 0, 21.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 5.411 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.862, 3.331), stdev = 1.405
[info]   CI (99.9%): [≈ 0, 6.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.124 ±(99.9%) 25.830 B/op [Average]
[info]   (min, avg, max) = (0.101, 4.124, 15.911), stdev = 6.708
[info]   CI (99.9%): [≈ 0, 29.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 13.200, 32.000), stdev = 10.826
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:08:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8915.782 ops/s
[info] # Warmup Iteration   2: 32311.497 ops/s
[info] # Warmup Iteration   3: 36866.271 ops/s
[info] Iteration   1: 36500.874 ops/s
[info]                  ·gc.alloc.rate:                   1890.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              81468.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85684.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 154.392 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 37591.722 ops/s
[info]                  ·gc.alloc.rate:                   1894.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              79332.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68888.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.972 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 38142.756 ops/s
[info]                  ·gc.alloc.rate:                   1939.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              79999.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81597.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.436 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 38040.120 ops/s
[info]                  ·gc.alloc.rate:                   1960.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              81083.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82410.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.445 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 37867.436 ops/s
[info]                  ·gc.alloc.rate:               1940.720 MB/sec
[info]                  ·gc.alloc.rate.norm:          80650.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1671.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 69450.095 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   37628.581 ±(99.9%) 2557.038 ops/s [Average]
[info]   (min, avg, max) = (36500.874, 37628.581, 38142.756), stdev = 664.055
[info]   CI (99.9%): [35071.544, 40185.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   1925.016 ±(99.9%) 118.497 MB/sec [Average]
[info]   (min, avg, max) = (1890.188, 1925.016, 1960.067), stdev = 30.773
[info]   CI (99.9%): [1806.518, 2043.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   80506.751 ±(99.9%) 3287.593 B/op [Average]
[info]   (min, avg, max) = (79332.148, 80506.751, 81468.340), stdev = 853.778
[info]   CI (99.9%): [77219.157, 83794.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1854.945 ±(99.9%) 692.199 MB/sec [Average]
[info]   (min, avg, max) = (1645.518, 1854.945, 1992.150), stdev = 179.762
[info]   CI (99.9%): [1162.746, 2547.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   77606.145 ±(99.9%) 30246.483 B/op [Average]
[info]   (min, avg, max) = (68888.016, 77606.145, 85684.213), stdev = 7854.915
[info]   CI (99.9%): [47359.662, 107852.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 6.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.783, 3.582), stdev = 1.566
[info]   CI (99.9%): [≈ 0, 6.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   33.649 ±(99.9%) 260.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.649, 154.392), stdev = 67.543
[info]   CI (99.9%): [≈ 0, 293.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.391
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:08:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.715 ops/s
[info] # Warmup Iteration   2: 267626.763 ops/s
[info] # Warmup Iteration   3: 287153.992 ops/s
[info] Iteration   1: 281423.066 ops/s
[info]                  ·gc.alloc.rate:                   299.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              1672.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1430.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 294329.826 ops/s
[info]                  ·gc.alloc.rate:               312.909 MB/sec
[info]                  ·gc.alloc.rate.norm:          1672.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1734.756 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 295732.759 ops/s
[info]                  ·gc.alloc.rate:                   316.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              1684.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1726.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 293891.742 ops/s
[info]                  ·gc.alloc.rate:                   315.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              1689.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1739.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 295067.397 ops/s
[info]                  ·gc.alloc.rate:               313.408 MB/sec
[info]                  ·gc.alloc.rate.norm:          1671.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1732.153 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   292088.958 ±(99.9%) 23118.392 ops/s [Average]
[info]   (min, avg, max) = (281423.066, 292088.958, 295732.759), stdev = 6003.773
[info]   CI (99.9%): [268970.566, 315207.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   311.547 ±(99.9%) 27.126 MB/sec [Average]
[info]   (min, avg, max) = (299.240, 311.547, 316.568), stdev = 7.045
[info]   CI (99.9%): [284.421, 338.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1678.205 ±(99.9%) 31.238 B/op [Average]
[info]   (min, avg, max) = (1671.675, 1678.205, 1689.556), stdev = 8.112
[info]   CI (99.9%): [1646.967, 1709.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   310.910 ±(99.9%) 118.393 MB/sec [Average]
[info]   (min, avg, max) = (255.910, 310.910, 324.861), stdev = 30.746
[info]   CI (99.9%): [192.517, 429.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1672.627 ±(99.9%) 521.258 B/op [Average]
[info]   (min, avg, max) = (1430.608, 1672.627, 1739.071), stdev = 135.369
[info]   CI (99.9%): [1151.370, 2193.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.084 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.052), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.447 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.090, 0.279), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:08:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18518.607 ops/s
[info] # Warmup Iteration   2: 105650.820 ops/s
[info] # Warmup Iteration   3: 111469.376 ops/s
[info] Iteration   1: 112962.565 ops/s
[info]                  ·gc.alloc.rate:                   1346.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              18759.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18321.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 115088.504 ops/s
[info]                  ·gc.alloc.rate:                   1370.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              18736.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18000.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.221 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 113949.618 ops/s
[info]                  ·gc.alloc.rate:                   1368.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              18901.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18052.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.575 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 114543.309 ops/s
[info]                  ·gc.alloc.rate:                   1375.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              18893.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17955.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 115691.888 ops/s
[info]                  ·gc.alloc.rate:               1396.057 MB/sec
[info]                  ·gc.alloc.rate.norm:          18988.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17857.955 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   114447.177 ±(99.9%) 4048.439 ops/s [Average]
[info]   (min, avg, max) = (112962.565, 114447.177, 115691.888), stdev = 1051.367
[info]   CI (99.9%): [110398.738, 118495.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1371.266 ±(99.9%) 68.135 MB/sec [Average]
[info]   (min, avg, max) = (1346.461, 1371.266, 1396.057), stdev = 17.695
[info]   CI (99.9%): [1303.131, 1439.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   18856.018 ±(99.9%) 406.263 B/op [Average]
[info]   (min, avg, max) = (18736.636, 18856.018, 18988.509), stdev = 105.505
[info]   CI (99.9%): [18449.755, 19262.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1311.640 ±(99.9%) 17.039 MB/sec [Average]
[info]   (min, avg, max) = (1306.758, 1311.640, 1316.288), stdev = 4.425
[info]   CI (99.9%): [1294.601, 1328.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18037.666 ±(99.9%) 670.682 B/op [Average]
[info]   (min, avg, max) = (17857.955, 18037.666, 18321.818), stdev = 174.174
[info]   CI (99.9%): [17366.984, 18708.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.853 ±(99.9%) 7.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.853, 4.184), stdev = 1.862
[info]   CI (99.9%): [≈ 0, 8.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.674 ±(99.9%) 98.046 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.674, 57.221), stdev = 25.462
[info]   CI (99.9%): [≈ 0, 109.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 3.768
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 272067.209 ops/s
[info] # Warmup Iteration   2: 467872.253 ops/s
[info] # Warmup Iteration   3: 461230.049 ops/s
[info] Iteration   1: 478291.310 ops/s
[info]                  ·gc.alloc.rate:                   329.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              1082.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1683.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 469510.364 ops/s
[info]                  ·gc.alloc.rate:      305.617 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 459181.923 ops/s
[info]                  ·gc.alloc.rate:               307.762 MB/sec
[info]                  ·gc.alloc.rate.norm:          1054.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1130.207 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 471191.149 ops/s
[info]                  ·gc.alloc.rate:                   319.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              1066.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1101.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 473795.186 ops/s
[info]                  ·gc.alloc.rate:               320.938 MB/sec
[info]                  ·gc.alloc.rate.norm:          1065.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1097.538 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   470393.986 ±(99.9%) 27300.393 ops/s [Average]
[info]   (min, avg, max) = (459181.923, 470393.986, 478291.310), stdev = 7089.825
[info]   CI (99.9%): [443093.593, 497694.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   316.512 ±(99.9%) 37.487 MB/sec [Average]
[info]   (min, avg, max) = (305.617, 316.512, 329.043), stdev = 9.735
[info]   CI (99.9%): [279.025, 353.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1058.673 ±(99.9%) 83.896 B/op [Average]
[info]   (min, avg, max) = (1024.001, 1058.673, 1082.588), stdev = 21.788
[info]   CI (99.9%): [974.777, 1142.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.339 ±(99.9%) 713.955 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 300.339, 511.683), stdev = 185.412
[info]   CI (99.9%): [≈ 0, 1014.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1002.536 ±(99.9%) 2361.081 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1002.536, 1683.491), stdev = 613.165
[info]   CI (99.9%): [≈ 0, 3363.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.070), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 1.817
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:08:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4263.035 ops/s
[info] # Warmup Iteration   2: 33432.881 ops/s
[info] # Warmup Iteration   3: 40527.372 ops/s
[info] Iteration   1: 40746.071 ops/s
[info]                  ·gc.alloc.rate:                   2031.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              78454.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76188.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.455 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 172.074 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 40936.124 ops/s
[info]                  ·gc.alloc.rate:                   2018.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              77611.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75196.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.401 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 41379.353 ops/s
[info]                  ·gc.alloc.rate:                   2066.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              78587.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87246.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.792 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 41692.691 ops/s
[info]                  ·gc.alloc.rate:                   2083.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              78612.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75013.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.572 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 41320.221 ops/s
[info]                  ·gc.alloc.rate:               2064.886 MB/sec
[info]                  ·gc.alloc.rate.norm:          78651.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76373.560 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   41214.892 ±(99.9%) 1445.838 ops/s [Average]
[info]   (min, avg, max) = (40746.071, 41214.892, 41692.691), stdev = 375.479
[info]   CI (99.9%): [39769.055, 42660.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2052.953 ±(99.9%) 103.404 MB/sec [Average]
[info]   (min, avg, max) = (2018.761, 2052.953, 2083.437), stdev = 26.854
[info]   CI (99.9%): [1949.549, 2156.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   78383.490 ±(99.9%) 1684.864 B/op [Average]
[info]   (min, avg, max) = (77611.999, 78383.490, 78651.021), stdev = 437.554
[info]   CI (99.9%): [76698.627, 80068.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2043.149 ±(99.9%) 544.419 MB/sec [Average]
[info]   (min, avg, max) = (1955.931, 2043.149, 2293.958), stdev = 141.384
[info]   CI (99.9%): [1498.730, 2587.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   78003.597 ±(99.9%) 20027.008 B/op [Average]
[info]   (min, avg, max) = (75013.243, 78003.597, 87246.205), stdev = 5200.950
[info]   CI (99.9%): [57976.589, 98030.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.916 ±(99.9%) 7.619 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.916, 4.455), stdev = 1.979
[info]   CI (99.9%): [≈ 0, 8.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   35.368 ±(99.9%) 294.290 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 35.368, 172.074), stdev = 76.426
[info]   CI (99.9%): [≈ 0, 329.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 17.000), stdev = 4.000
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:07:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21896.481 ops/s
[info] # Warmup Iteration   2: 69640.773 ops/s
[info] # Warmup Iteration   3: 70787.965 ops/s
[info] Iteration   1: 74321.761 ops/s
[info]                  ·gc.alloc.rate:               607.665 MB/sec
[info]                  ·gc.alloc.rate.norm:          12868.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13923.645 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 74864.622 ops/s
[info]                  ·gc.alloc.rate:               610.147 MB/sec
[info]                  ·gc.alloc.rate.norm:          12824.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13850.491 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 73894.057 ops/s
[info]                  ·gc.alloc.rate:                   610.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              12997.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14046.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.443 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 73024.161 ops/s
[info]                  ·gc.alloc.rate:                   595.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              12822.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14220.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.897 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 73473.361 ops/s
[info]                  ·gc.alloc.rate:               592.566 MB/sec
[info]                  ·gc.alloc.rate.norm:          12691.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7077.356 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   73915.593 ±(99.9%) 2760.883 ops/s [Average]
[info]   (min, avg, max) = (73024.161, 73915.593, 74864.622), stdev = 716.993
[info]   CI (99.9%): [71154.710, 76676.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   603.127 ±(99.9%) 33.215 MB/sec [Average]
[info]   (min, avg, max) = (592.566, 603.127, 610.236), stdev = 8.626
[info]   CI (99.9%): [569.912, 636.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12840.951 ±(99.9%) 422.246 B/op [Average]
[info]   (min, avg, max) = (12691.685, 12840.951, 12997.272), stdev = 109.656
[info]   CI (99.9%): [12418.705, 13263.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   593.248 ±(99.9%) 565.732 MB/sec [Average]
[info]   (min, avg, max) = (330.437, 593.248, 659.890), stdev = 146.919
[info]   CI (99.9%): [27.516, 1158.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12623.588 ±(99.9%) 11950.844 B/op [Average]
[info]   (min, avg, max) = (7077.356, 12623.588, 14220.169), stdev = 3103.596
[info]   CI (99.9%): [672.743, 24574.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.268 ±(99.9%) 1.542 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.268, 0.897), stdev = 0.401
[info]   CI (99.9%): [≈ 0, 1.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 6.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:07:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.816 ops/s
[info] # Warmup Iteration   2: 76492.046 ops/s
[info] # Warmup Iteration   3: 86449.626 ops/s
[info] Iteration   1: 87266.869 ops/s
[info]                  ·gc.alloc.rate:                   508.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              9179.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11701.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.506 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 87517.785 ops/s
[info]                  ·gc.alloc.rate:               506.580 MB/sec
[info]                  ·gc.alloc.rate.norm:          9110.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5840.064 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 87200.621 ops/s
[info]                  ·gc.alloc.rate:                   512.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              9245.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11734.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.376 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 87406.508 ops/s
[info]                  ·gc.alloc.rate:                   504.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              9081.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5859.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 87578.026 ops/s
[info]                  ·gc.alloc.rate:               511.087 MB/sec
[info]                  ·gc.alloc.rate.norm:          9184.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11720.280 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   87393.962 ±(99.9%) 617.613 ops/s [Average]
[info]   (min, avg, max) = (87200.621, 87393.962, 87578.026), stdev = 160.392
[info]   CI (99.9%): [86776.349, 88011.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   508.706 ±(99.9%) 12.263 MB/sec [Average]
[info]   (min, avg, max) = (504.551, 508.706, 512.316), stdev = 3.185
[info]   CI (99.9%): [496.443, 520.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   9160.450 ±(99.9%) 250.828 B/op [Average]
[info]   (min, avg, max) = (9081.738, 9160.450, 9245.697), stdev = 65.139
[info]   CI (99.9%): [8909.622, 9411.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.303 ±(99.9%) 686.031 MB/sec [Average]
[info]   (min, avg, max) = (324.746, 520.303, 652.174), stdev = 178.160
[info]   CI (99.9%): [≈ 0, 1206.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   9371.279 ±(99.9%) 12378.477 B/op [Average]
[info]   (min, avg, max) = (5840.064, 9371.279, 11734.471), stdev = 3214.651
[info]   CI (99.9%): [≈ 0, 21749.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.013 ±(99.9%) 0.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.028), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.229 ±(99.9%) 0.870 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.229, 0.506), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 1.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.414
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:07:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24471.760 ops/s
[info] # Warmup Iteration   2: 78540.742 ops/s
[info] # Warmup Iteration   3: 77663.580 ops/s
[info] Iteration   1: 78784.742 ops/s
[info]                  ·gc.alloc.rate:               317.650 MB/sec
[info]                  ·gc.alloc.rate.norm:          6345.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5110.201 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 79128.578 ops/s
[info]                  ·gc.alloc.rate:               318.991 MB/sec
[info]                  ·gc.alloc.rate.norm:          6344.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5087.988 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 79008.767 ops/s
[info]                  ·gc.alloc.rate:                   323.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              6439.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6502.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.415 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 79094.318 ops/s
[info]                  ·gc.alloc.rate:               320.157 MB/sec
[info]                  ·gc.alloc.rate.norm:          6370.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6495.193 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 79241.666 ops/s
[info]                  ·gc.alloc.rate:               322.495 MB/sec
[info]                  ·gc.alloc.rate.norm:          6402.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6495.966 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   79051.614 ±(99.9%) 658.345 ops/s [Average]
[info]   (min, avg, max) = (78784.742, 79051.614, 79241.666), stdev = 170.970
[info]   CI (99.9%): [78393.269, 79709.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   320.524 ±(99.9%) 9.131 MB/sec [Average]
[info]   (min, avg, max) = (317.650, 320.524, 323.328), stdev = 2.371
[info]   CI (99.9%): [311.393, 329.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   6380.560 ±(99.9%) 155.573 B/op [Average]
[info]   (min, avg, max) = (6344.710, 6380.560, 6439.297), stdev = 40.402
[info]   CI (99.9%): [6224.987, 6536.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   298.344 ±(99.9%) 149.538 MB/sec [Average]
[info]   (min, avg, max) = (255.802, 298.344, 327.203), stdev = 38.834
[info]   CI (99.9%): [148.807, 447.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5938.322 ±(99.9%) 2950.177 B/op [Average]
[info]   (min, avg, max) = (5087.988, 5938.322, 6502.262), stdev = 766.152
[info]   CI (99.9%): [2988.145, 8888.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.083 ±(99.9%) 0.714 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.415), stdev = 0.185
[info]   CI (99.9%): [≈ 0, 0.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:07:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49233.590 ops/s
[info] # Warmup Iteration   2: 80025.439 ops/s
[info] # Warmup Iteration   3: 84146.788 ops/s
[info] Iteration   1: 86644.253 ops/s
[info]                  ·gc.alloc.rate:                   507.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              9219.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11991.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.756 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 86693.009 ops/s
[info]                  ·gc.alloc.rate:               498.300 MB/sec
[info]                  ·gc.alloc.rate.norm:          9046.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5998.359 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 86745.603 ops/s
[info]                  ·gc.alloc.rate:                   505.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              9179.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12002.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 85376.286 ops/s
[info]                  ·gc.alloc.rate:               493.180 MB/sec
[info]                  ·gc.alloc.rate.norm:          9087.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6103.298 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 86710.408 ops/s
[info]                  ·gc.alloc.rate:                   507.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              9194.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11993.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.753 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   86433.912 ±(99.9%) 2280.956 ops/s [Average]
[info]   (min, avg, max) = (85376.286, 86433.912, 86745.603), stdev = 592.357
[info]   CI (99.9%): [84152.955, 88714.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   502.460 ±(99.9%) 24.742 MB/sec [Average]
[info]   (min, avg, max) = (493.180, 502.460, 507.580), stdev = 6.425
[info]   CI (99.9%): [477.718, 527.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   9145.671 ±(99.9%) 286.934 B/op [Average]
[info]   (min, avg, max) = (9046.372, 9145.671, 9219.405), stdev = 74.516
[info]   CI (99.9%): [8858.737, 9432.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   529.003 ±(99.9%) 696.686 MB/sec [Average]
[info]   (min, avg, max) = (330.407, 529.003, 661.703), stdev = 180.927
[info]   CI (99.9%): [≈ 0, 1225.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9617.760 ±(99.9%) 12539.090 B/op [Average]
[info]   (min, avg, max) = (5998.359, 9617.760, 12002.028), stdev = 3256.362
[info]   CI (99.9%): [≈ 0, 22156.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.377 ±(99.9%) 1.453 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.377, 0.756), stdev = 0.377
[info]   CI (99.9%): [≈ 0, 1.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.643
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:07:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37385.937 ops/s
[info] # Warmup Iteration   2: 82872.190 ops/s
[info] # Warmup Iteration   3: 85943.818 ops/s
[info] Iteration   1: 87094.287 ops/s
[info]                  ·gc.alloc.rate:                   442.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              7995.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          585.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10581.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.752 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 86152.917 ops/s
[info]                  ·gc.alloc.rate:               432.856 MB/sec
[info]                  ·gc.alloc.rate.norm:          7907.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6024.061 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 87153.756 ops/s
[info]                  ·gc.alloc.rate:               434.089 MB/sec
[info]                  ·gc.alloc.rate.norm:          7838.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5966.635 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 87195.537 ops/s
[info]                  ·gc.alloc.rate:                   446.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              8052.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11918.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.751 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 87501.202 ops/s
[info]                  ·gc.alloc.rate:               434.769 MB/sec
[info]                  ·gc.alloc.rate.norm:          7819.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5949.172 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   87019.540 ±(99.9%) 1961.193 ops/s [Average]
[info]   (min, avg, max) = (86152.917, 87019.540, 87501.202), stdev = 509.316
[info]   CI (99.9%): [85058.347, 88980.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   438.135 ±(99.9%) 23.074 MB/sec [Average]
[info]   (min, avg, max) = (432.856, 438.135, 446.420), stdev = 5.992
[info]   CI (99.9%): [415.061, 461.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   7922.792 ±(99.9%) 385.398 B/op [Average]
[info]   (min, avg, max) = (7819.699, 7922.792, 8052.732), stdev = 100.087
[info]   CI (99.9%): [7537.394, 8308.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   447.470 ±(99.9%) 626.107 MB/sec [Average]
[info]   (min, avg, max) = (329.765, 447.470, 660.704), stdev = 162.598
[info]   CI (99.9%): [≈ 0, 1073.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   8087.958 ±(99.9%) 11263.282 B/op [Average]
[info]   (min, avg, max) = (5949.172, 8087.958, 11918.093), stdev = 2925.039
[info]   CI (99.9%): [≈ 0, 19351.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.301 ±(99.9%) 1.585 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.301, 0.752), stdev = 0.412
[info]   CI (99.9%): [≈ 0, 1.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 1.871
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:06:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1292.329 ops/s
[info] # Warmup Iteration   2: 8211.887 ops/s
[info] # Warmup Iteration   3: 9924.326 ops/s
[info] Iteration   1: 9909.308 ops/s
[info]                  ·gc.alloc.rate:                   1621.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              257549.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263016.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 419.891 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 9991.358 ops/s
[info]                  ·gc.alloc.rate:                   1639.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              258140.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     259599.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 213.141 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 10169.257 ops/s
[info]                  ·gc.alloc.rate:               1667.219 MB/sec
[info]                  ·gc.alloc.rate.norm:          258020.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 254179.936 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 10051.502 ops/s
[info]                  ·gc.alloc.rate:               1668.620 MB/sec
[info]                  ·gc.alloc.rate.norm:          261260.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1647.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 257997.885 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 10084.058 ops/s
[info]                  ·gc.alloc.rate:               1674.299 MB/sec
[info]                  ·gc.alloc.rate.norm:          261272.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1659.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 258973.113 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   10041.097 ±(99.9%) 376.405 ops/s [Average]
[info]   (min, avg, max) = (9909.308, 10041.097, 10169.257), stdev = 97.751
[info]   CI (99.9%): [9664.691, 10417.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   1654.265 ±(99.9%) 87.092 MB/sec [Average]
[info]   (min, avg, max) = (1621.925, 1654.265, 1674.299), stdev = 22.617
[info]   CI (99.9%): [1567.174, 1741.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   259248.866 ±(99.9%) 7143.425 B/op [Average]
[info]   (min, avg, max) = (257549.682, 259248.866, 261272.487), stdev = 1855.125
[info]   CI (99.9%): [252105.440, 266392.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1650.926 ±(99.9%) 26.704 MB/sec [Average]
[info]   (min, avg, max) = (1642.403, 1650.926, 1659.564), stdev = 6.935
[info]   CI (99.9%): [1624.221, 1677.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   258753.440 ±(99.9%) 12241.832 B/op [Average]
[info]   (min, avg, max) = (254179.936, 258753.440, 263016.844), stdev = 3179.165
[info]   CI (99.9%): [246511.608, 270995.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.800 ±(99.9%) 4.567 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.644), stdev = 1.186
[info]   CI (99.9%): [≈ 0, 5.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   126.606 ±(99.9%) 724.472 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 126.606, 419.891), stdev = 188.143
[info]   CI (99.9%): [≈ 0, 851.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 17.000), stdev = 4.658
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:06:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1533.116 ops/s
[info] # Warmup Iteration   2: 8496.048 ops/s
[info] # Warmup Iteration   3: 9866.423 ops/s
[info] Iteration   1: 9751.650 ops/s
[info]                  ·gc.alloc.rate:                   1543.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              249199.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265880.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 511.042 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 9888.407 ops/s
[info]                  ·gc.alloc.rate:                   1556.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              247688.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209057.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 172.271 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 9942.508 ops/s
[info]                  ·gc.alloc.rate:                   1568.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              248341.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258453.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.543 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9935.338 ops/s
[info]                  ·gc.alloc.rate:               1588.474 MB/sec
[info]                  ·gc.alloc.rate.norm:          251622.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 259532.321 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 9941.411 ops/s
[info]                  ·gc.alloc.rate:               1577.227 MB/sec
[info]                  ·gc.alloc.rate.norm:          249651.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 208808.255 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   9891.863 ±(99.9%) 313.903 ops/s [Average]
[info]   (min, avg, max) = (9751.650, 9891.863, 9942.508), stdev = 81.520
[info]   CI (99.9%): [9577.960, 10205.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1566.932 ±(99.9%) 67.095 MB/sec [Average]
[info]   (min, avg, max) = (1543.973, 1566.932, 1588.474), stdev = 17.424
[info]   CI (99.9%): [1499.837, 1634.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   249300.830 ±(99.9%) 5789.868 B/op [Average]
[info]   (min, avg, max) = (247688.518, 249300.830, 251622.603), stdev = 1503.610
[info]   CI (99.9%): [243510.962, 255090.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1510.211 ±(99.9%) 681.752 MB/sec [Average]
[info]   (min, avg, max) = (1313.533, 1510.211, 1647.321), stdev = 177.049
[info]   CI (99.9%): [828.459, 2191.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   240346.379 ±(99.9%) 110961.912 B/op [Average]
[info]   (min, avg, max) = (208808.255, 240346.379, 265880.083), stdev = 28816.456
[info]   CI (99.9%): [129384.467, 351308.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.900 ±(99.9%) 5.171 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.900, 3.166), stdev = 1.343
[info]   CI (99.9%): [≈ 0, 6.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   144.571 ±(99.9%) 834.579 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 144.571, 511.042), stdev = 216.738
[info]   CI (99.9%): [≈ 0, 979.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 18.000), stdev = 5.148
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85851.737 ops/s
[info] # Warmup Iteration   2: 144915.626 ops/s
[info] # Warmup Iteration   3: 151644.873 ops/s
[info] Iteration   1: 149801.319 ops/s
[info]                  ·gc.alloc.rate:               405.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          4255.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2687.580 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 147194.546 ops/s
[info]                  ·gc.alloc.rate:                   405.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              4337.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7058.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.223 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 151606.188 ops/s
[info]                  ·gc.alloc.rate:                   402.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              4174.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3433.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 148603.339 ops/s
[info]                  ·gc.alloc.rate:               397.827 MB/sec
[info]                  ·gc.alloc.rate.norm:          4212.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3502.873 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 151307.112 ops/s
[info]                  ·gc.alloc.rate:               403.708 MB/sec
[info]                  ·gc.alloc.rate.norm:          4197.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3447.098 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   149702.501 ±(99.9%) 7127.999 ops/s [Average]
[info]   (min, avg, max) = (147194.546, 149702.501, 151606.188), stdev = 1851.119
[info]   CI (99.9%): [142574.502, 156830.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   402.890 ±(99.9%) 12.098 MB/sec [Average]
[info]   (min, avg, max) = (397.827, 402.890, 405.712), stdev = 3.142
[info]   CI (99.9%): [390.793, 414.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4235.433 ±(99.9%) 246.534 B/op [Average]
[info]   (min, avg, max) = (4174.491, 4235.433, 4337.107), stdev = 64.024
[info]   CI (99.9%): [3988.899, 4481.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.847 ±(99.9%) 612.380 MB/sec [Average]
[info]   (min, avg, max) = (255.827, 381.847, 660.305), stdev = 159.033
[info]   CI (99.9%): [≈ 0, 994.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4025.981 ±(99.9%) 6655.216 B/op [Average]
[info]   (min, avg, max) = (2687.580, 4025.981, 7058.744), stdev = 1728.338
[info]   CI (99.9%): [≈ 0, 10681.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.088 ±(99.9%) 0.463 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.088, 0.223), stdev = 0.120
[info]   CI (99.9%): [≈ 0, 0.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:06:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 555.745 ops/s
[info] # Warmup Iteration   2: 4913.027 ops/s
[info] # Warmup Iteration   3: 5486.912 ops/s
[info] Iteration   1: 5644.075 ops/s
[info]                  ·gc.alloc.rate:                   1480.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              412773.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     458438.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.805 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 5717.739 ops/s
[info]                  ·gc.alloc.rate:                   1488.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              409637.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     361931.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1186.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 5813.081 ops/s
[info]                  ·gc.alloc.rate:                   1517.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              410737.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     441339.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.796 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 5775.775 ops/s
[info]                  ·gc.alloc.rate:               1507.809 MB/sec
[info]                  ·gc.alloc.rate.norm:          410842.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1306.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 355938.642 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 5716.974 ops/s
[info]                  ·gc.alloc.rate:               1513.291 MB/sec
[info]                  ·gc.alloc.rate.norm:          416585.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 452127.340 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   5733.529 ±(99.9%) 248.349 ops/s [Average]
[info]   (min, avg, max) = (5644.075, 5733.529, 5813.081), stdev = 64.496
[info]   CI (99.9%): [5485.179, 5981.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1501.395 ±(99.9%) 62.267 MB/sec [Average]
[info]   (min, avg, max) = (1480.329, 1501.395, 1517.189), stdev = 16.170
[info]   CI (99.9%): [1439.128, 1563.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   412115.472 ±(99.9%) 10558.780 B/op [Average]
[info]   (min, avg, max) = (409637.745, 412115.472, 416585.977), stdev = 2742.082
[info]   CI (99.9%): [401556.692, 422674.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1507.611 ±(99.9%) 692.695 MB/sec [Average]
[info]   (min, avg, max) = (1306.310, 1507.611, 1644.097), stdev = 179.891
[info]   CI (99.9%): [814.917, 2200.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   413955.221 ±(99.9%) 195001.196 B/op [Average]
[info]   (min, avg, max) = (355938.642, 413955.221, 458438.542), stdev = 50641.191
[info]   CI (99.9%): [218954.026, 608956.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.937 ±(99.9%) 7.283 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.937, 4.309), stdev = 1.891
[info]   CI (99.9%): [≈ 0, 8.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   257.529 ±(99.9%) 2004.834 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 257.529, 1186.042), stdev = 520.649
[info]   CI (99.9%): [≈ 0, 2262.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.000, 21.000), stdev = 6.285
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:06:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6552.415 ops/s
[info] # Warmup Iteration   2: 17677.777 ops/s
[info] # Warmup Iteration   3: 19461.238 ops/s
[info] Iteration   1: 19819.586 ops/s
[info]                  ·gc.alloc.rate:                   1533.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              121739.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105196.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 198.384 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 19881.490 ops/s
[info]                  ·gc.alloc.rate:                   1547.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              122468.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130650.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.821 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 19843.812 ops/s
[info]                  ·gc.alloc.rate:                   1532.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              121580.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104186.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.208 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 19840.245 ops/s
[info]                  ·gc.alloc.rate:                   1562.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              123900.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130675.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.651 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 19989.655 ops/s
[info]                  ·gc.alloc.rate:                   1562.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              122957.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104348.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.639 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   19874.957 ±(99.9%) 261.440 ops/s [Average]
[info]   (min, avg, max) = (19819.586, 19874.957, 19989.655), stdev = 67.895
[info]   CI (99.9%): [19613.517, 20136.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1547.722 ±(99.9%) 56.480 MB/sec [Average]
[info]   (min, avg, max) = (1532.884, 1547.722, 1562.662), stdev = 14.668
[info]   CI (99.9%): [1491.241, 1604.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   122529.465 ±(99.9%) 3647.810 B/op [Average]
[info]   (min, avg, max) = (121580.887, 122529.465, 123900.377), stdev = 947.325
[info]   CI (99.9%): [118881.655, 126177.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1452.674 ±(99.9%) 692.445 MB/sec [Average]
[info]   (min, avg, max) = (1313.578, 1452.674, 1651.066), stdev = 179.826
[info]   CI (99.9%): [760.229, 2145.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   115011.490 ±(99.9%) 55036.750 B/op [Average]
[info]   (min, avg, max) = (104186.621, 115011.490, 130675.693), stdev = 14292.869
[info]   CI (99.9%): [59974.739, 170048.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 4.202 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.804, 2.499), stdev = 1.091
[info]   CI (99.9%): [≈ 0, 5.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   63.741 ±(99.9%) 333.478 B/op [Average]
[info]   (min, avg, max) = (1.639, 63.741, 198.384), stdev = 86.603
[info]   CI (99.9%): [≈ 0, 397.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 2.915
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:05:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8196.977 ops/s
[info] # Warmup Iteration   2: 22853.949 ops/s
[info] # Warmup Iteration   3: 23424.467 ops/s
[info] Iteration   1: 23623.577 ops/s
[info]                  ·gc.alloc.rate:                   1551.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              103298.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109730.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.397 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226.209 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 23649.590 ops/s
[info]                  ·gc.alloc.rate:                   1543.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              102690.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87244.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 23793.425 ops/s
[info]                  ·gc.alloc.rate:                   1568.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              103752.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108285.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.377 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 23842.162 ops/s
[info]                  ·gc.alloc.rate:                   1586.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              104759.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108639.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.374 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 23405.923 ops/s
[info]                  ·gc.alloc.rate:                   1553.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              104436.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89139.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.400 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   23662.936 ±(99.9%) 658.371 ops/s [Average]
[info]   (min, avg, max) = (23405.923, 23662.936, 23842.162), stdev = 170.977
[info]   CI (99.9%): [23004.565, 24321.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1560.689 ±(99.9%) 66.636 MB/sec [Average]
[info]   (min, avg, max) = (1543.382, 1560.689, 1586.861), stdev = 17.305
[info]   CI (99.9%): [1494.052, 1627.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   103787.685 ±(99.9%) 3226.964 B/op [Average]
[info]   (min, avg, max) = (102690.954, 103787.685, 104759.547), stdev = 838.032
[info]   CI (99.9%): [100560.721, 107014.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1513.538 ±(99.9%) 686.137 MB/sec [Average]
[info]   (min, avg, max) = (1311.233, 1513.538, 1647.735), stdev = 178.188
[info]   CI (99.9%): [827.401, 2199.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   100607.970 ±(99.9%) 43767.893 B/op [Average]
[info]   (min, avg, max) = (87244.644, 100607.970, 109730.569), stdev = 11366.383
[info]   CI (99.9%): [56840.078, 144375.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.800 ±(99.9%) 5.657 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.800, 3.397), stdev = 1.469
[info]   CI (99.9%): [≈ 0, 6.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   53.276 ±(99.9%) 376.705 B/op [Average]
[info]   (min, avg, max) = (1.374, 53.276, 226.209), stdev = 97.829
[info]   CI (99.9%): [≈ 0, 429.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 14.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:05:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93011.653 ops/s
[info] # Warmup Iteration   2: 129826.522 ops/s
[info] # Warmup Iteration   3: 133778.478 ops/s
[info] Iteration   1: 131334.272 ops/s
[info]                  ·gc.alloc.rate:                   304.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              3639.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          510.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6109.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 132851.894 ops/s
[info]                  ·gc.alloc.rate:      293.832 MB/sec
[info]                  ·gc.alloc.rate.norm: 3480.629 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 133879.509 ops/s
[info]                  ·gc.alloc.rate:               304.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          3574.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3880.424 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 133594.399 ops/s
[info]                  ·gc.alloc.rate:               307.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          3626.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3888.643 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 132651.687 ops/s
[info]                  ·gc.alloc.rate:                   305.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              3618.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3920.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   132862.352 ±(99.9%) 3826.512 ops/s [Average]
[info]   (min, avg, max) = (131334.272, 132862.352, 133879.509), stdev = 993.733
[info]   CI (99.9%): [129035.841, 136688.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   302.982 ±(99.9%) 20.573 MB/sec [Average]
[info]   (min, avg, max) = (293.832, 302.982, 307.851), stdev = 5.343
[info]   CI (99.9%): [282.409, 323.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3587.943 ±(99.9%) 249.498 B/op [Average]
[info]   (min, avg, max) = (3480.629, 3587.943, 3639.204), stdev = 64.794
[info]   CI (99.9%): [3338.445, 3837.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.233 ±(99.9%) 712.737 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 300.233, 510.475), stdev = 185.095
[info]   CI (99.9%): [≈ 0, 1012.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3559.769 ±(99.9%) 8505.144 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3559.769, 6109.600), stdev = 2208.759
[info]   CI (99.9%): [≈ 0, 12064.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.099 ±(99.9%) 0.523 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.099, 0.249), stdev = 0.136
[info]   CI (99.9%): [≈ 0, 0.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 5.000), stdev = 1.789
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:05:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100021.346 ops/s
[info] # Warmup Iteration   2: 134575.467 ops/s
[info] # Warmup Iteration   3: 139859.241 ops/s
[info] Iteration   1: 133240.047 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 140495.203 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 140107.602 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 137057.588 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 140484.984 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   138277.085 ±(99.9%) 12177.502 ops/s [Average]
[info]   (min, avg, max) = (133240.047, 138277.085, 140495.203), stdev = 3162.459
[info]   CI (99.9%): [126099.583, 150454.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
[info]   CI (99.9%): [0.002, 0.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:05:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6620.733 ops/s
[info] # Warmup Iteration   2: 21805.763 ops/s
[info] # Warmup Iteration   3: 22772.633 ops/s
[info] Iteration   1: 22991.902 ops/s
[info]                  ·gc.alloc.rate:                   1606.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              109910.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113129.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 228.141 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 23287.565 ops/s
[info]                  ·gc.alloc.rate:                   1626.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              109873.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110881.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 23075.125 ops/s
[info]                  ·gc.alloc.rate:                   1606.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              109588.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89391.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.939 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 23379.886 ops/s
[info]                  ·gc.alloc.rate:                   1643.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              110665.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110736.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.401 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 23043.977 ops/s
[info]                  ·gc.alloc.rate:               1621.653 MB/sec
[info]                  ·gc.alloc.rate.norm:          110752.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1657.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113220.002 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   23155.691 ±(99.9%) 648.499 ops/s [Average]
[info]   (min, avg, max) = (22991.902, 23155.691, 23379.886), stdev = 168.413
[info]   CI (99.9%): [22507.191, 23804.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1620.982 ±(99.9%) 59.735 MB/sec [Average]
[info]   (min, avg, max) = (1606.404, 1620.982, 1643.854), stdev = 15.513
[info]   CI (99.9%): [1561.247, 1680.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   110158.087 ±(99.9%) 1997.684 B/op [Average]
[info]   (min, avg, max) = (109588.793, 110158.087, 110752.427), stdev = 518.792
[info]   CI (99.9%): [108160.403, 112155.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1581.583 ±(99.9%) 583.638 MB/sec [Average]
[info]   (min, avg, max) = (1310.708, 1581.583, 1657.784), stdev = 151.569
[info]   CI (99.9%): [997.945, 2165.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   107471.670 ±(99.9%) 39184.633 B/op [Average]
[info]   (min, avg, max) = (89391.797, 107471.670, 113220.002), stdev = 10176.125
[info]   CI (99.9%): [68287.037, 146656.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.854 ±(99.9%) 5.474 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.854, 3.334), stdev = 1.422
[info]   CI (99.9%): [≈ 0, 6.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   58.307 ±(99.9%) 374.624 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 58.307, 228.141), stdev = 97.289
[info]   CI (99.9%): [≈ 0, 432.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 15.000), stdev = 3.782
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:04:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38072.695 ops/s
[info] # Warmup Iteration   2: 104499.040 ops/s
[info] # Warmup Iteration   3: 117517.498 ops/s
[info] Iteration   1: 123492.906 ops/s
[info]                  ·gc.alloc.rate:                   1745.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              22242.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21122.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.265 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 123137.981 ops/s
[info]                  ·gc.alloc.rate:                   1739.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              22229.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21065.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.716 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 122749.714 ops/s
[info]                  ·gc.alloc.rate:                   1747.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              22402.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21117.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.534 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 124417.119 ops/s
[info]                  ·gc.alloc.rate:               1783.930 MB/sec
[info]                  ·gc.alloc.rate.norm:          22566.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1654.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20928.542 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 124652.379 ops/s
[info]                  ·gc.alloc.rate:                   1787.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              22571.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21030.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.788 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   123690.020 ±(99.9%) 3153.406 ops/s [Average]
[info]   (min, avg, max) = (122749.714, 123690.020, 124652.379), stdev = 818.930
[info]   CI (99.9%): [120536.613, 126843.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1760.939 ±(99.9%) 88.716 MB/sec [Average]
[info]   (min, avg, max) = (1739.980, 1760.939, 1787.978), stdev = 23.039
[info]   CI (99.9%): [1672.223, 1849.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22402.794 ±(99.9%) 640.902 B/op [Average]
[info]   (min, avg, max) = (22229.880, 22402.794, 22571.792), stdev = 166.440
[info]   CI (99.9%): [21761.891, 23043.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1654.752 ±(99.9%) 29.030 MB/sec [Average]
[info]   (min, avg, max) = (1647.036, 1654.752, 1665.906), stdev = 7.539
[info]   CI (99.9%): [1625.723, 1683.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21052.796 ±(99.9%) 304.900 B/op [Average]
[info]   (min, avg, max) = (20928.542, 21052.796, 21122.297), stdev = 79.182
[info]   CI (99.9%): [20747.895, 21357.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 5.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.081), stdev = 1.322
[info]   CI (99.9%): [≈ 0, 5.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.661 ±(99.9%) 64.879 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.661, 39.265), stdev = 16.849
[info]   CI (99.9%): [≈ 0, 74.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 2.915
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:04:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.830 ops/s
[info] # Warmup Iteration   2: 500657.920 ops/s
[info] # Warmup Iteration   3: 557209.293 ops/s
[info] Iteration   1: 565300.969 ops/s
[info]                  ·gc.alloc.rate:               596.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          1659.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 903.197 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 544219.837 ops/s
[info]                  ·gc.alloc.rate:                   582.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              1684.542 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1880.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 547833.233 ops/s
[info]                  ·gc.alloc.rate:                   589.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              1693.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1871.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 561443.633 ops/s
[info]                  ·gc.alloc.rate:               600.575 MB/sec
[info]                  ·gc.alloc.rate.norm:          1683.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1828.261 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 557467.749 ops/s
[info]                  ·gc.alloc.rate:                   599.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              1693.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1843.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   555253.084 ±(99.9%) 34493.601 ops/s [Average]
[info]   (min, avg, max) = (544219.837, 555253.084, 565300.969), stdev = 8957.879
[info]   CI (99.9%): [520759.483, 589746.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   593.840 ±(99.9%) 29.048 MB/sec [Average]
[info]   (min, avg, max) = (582.764, 593.840, 600.575), stdev = 7.544
[info]   CI (99.9%): [564.792, 622.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1683.083 ±(99.9%) 54.123 B/op [Average]
[info]   (min, avg, max) = (1659.618, 1683.083, 1693.999), stdev = 14.055
[info]   CI (99.9%): [1628.960, 1737.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   586.332 ±(99.9%) 563.824 MB/sec [Average]
[info]   (min, avg, max) = (324.407, 586.332, 652.800), stdev = 146.423
[info]   CI (99.9%): [22.509, 1150.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1665.320 ±(99.9%) 1642.533 B/op [Average]
[info]   (min, avg, max) = (903.197, 1665.320, 1880.294), stdev = 426.560
[info]   CI (99.9%): [22.787, 3307.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.060), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:04:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91686.358 ops/s
[info] # Warmup Iteration   2: 308654.023 ops/s
[info] # Warmup Iteration   3: 324828.893 ops/s
[info] Iteration   1: 326722.126 ops/s
[info]                  ·gc.alloc.rate:                   459.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              2213.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1570.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 326675.238 ops/s
[info]                  ·gc.alloc.rate:               464.275 MB/sec
[info]                  ·gc.alloc.rate.norm:          2236.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1571.041 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 315778.999 ops/s
[info]                  ·gc.alloc.rate:                   458.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              2282.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3257.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 324080.492 ops/s
[info]                  ·gc.alloc.rate:                   459.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              2229.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1588.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 317753.418 ops/s
[info]                  ·gc.alloc.rate:               450.745 MB/sec
[info]                  ·gc.alloc.rate.norm:          2231.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1620.052 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   322202.054 ±(99.9%) 19730.084 ops/s [Average]
[info]   (min, avg, max) = (315778.999, 322202.054, 326722.126), stdev = 5123.840
[info]   CI (99.9%): [302471.970, 341932.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   458.417 ±(99.9%) 18.813 MB/sec [Average]
[info]   (min, avg, max) = (450.745, 458.417, 464.275), stdev = 4.886
[info]   CI (99.9%): [439.604, 477.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2238.749 ±(99.9%) 100.009 B/op [Average]
[info]   (min, avg, max) = (2213.395, 2238.749, 2282.557), stdev = 25.972
[info]   CI (99.9%): [2138.740, 2338.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   392.101 ±(99.9%) 563.189 MB/sec [Average]
[info]   (min, avg, max) = (326.150, 392.101, 653.734), stdev = 146.258
[info]   CI (99.9%): [≈ 0, 955.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1921.502 ±(99.9%) 2875.939 B/op [Average]
[info]   (min, avg, max) = (1570.854, 1921.502, 3257.066), stdev = 746.872
[info]   CI (99.9%): [≈ 0, 4797.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.082 ±(99.9%) 0.333 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.082, 0.208), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:04:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 415590.471 ops/s
[info] # Warmup Iteration   2: 707379.868 ops/s
[info] # Warmup Iteration   3: 713363.758 ops/s
[info] Iteration   1: 757345.086 ops/s
[info]                  ·gc.alloc.rate:               507.315 MB/sec
[info]                  ·gc.alloc.rate.norm:          1054.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 684.559 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 760947.016 ops/s
[info]                  ·gc.alloc.rate:                   516.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              1068.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1364.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 760964.366 ops/s
[info]                  ·gc.alloc.rate:                   506.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              1046.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     683.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 757906.128 ops/s
[info]                  ·gc.alloc.rate:               512.392 MB/sec
[info]                  ·gc.alloc.rate.norm:          1064.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1373.660 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 760309.372 ops/s
[info]                  ·gc.alloc.rate:                   508.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              1052.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     685.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   759494.394 ±(99.9%) 6690.939 ops/s [Average]
[info]   (min, avg, max) = (757345.086, 759494.394, 760964.366), stdev = 1737.616
[info]   CI (99.9%): [752803.455, 766185.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   510.174 ±(99.9%) 16.343 MB/sec [Average]
[info]   (min, avg, max) = (506.147, 510.174, 516.499), stdev = 4.244
[info]   CI (99.9%): [493.832, 526.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1057.139 ±(99.9%) 33.499 B/op [Average]
[info]   (min, avg, max) = (1046.809, 1057.139, 1068.038), stdev = 8.699
[info]   CI (99.9%): [1023.641, 1090.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.478 ±(99.9%) 696.880 MB/sec [Average]
[info]   (min, avg, max) = (329.397, 462.478, 661.489), stdev = 180.978
[info]   CI (99.9%): [≈ 0, 1159.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   958.325 ±(99.9%) 1444.277 B/op [Average]
[info]   (min, avg, max) = (683.350, 958.325, 1373.660), stdev = 375.074
[info]   CI (99.9%): [≈ 0, 2402.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.139 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.086), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 1.095
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:04:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7240.518 ops/s
[info] # Warmup Iteration   2: 66247.251 ops/s
[info] # Warmup Iteration   3: 73951.322 ops/s
[info] Iteration   1: 76203.613 ops/s
[info]                  ·gc.alloc.rate:                   3012.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              62205.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2938.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60684.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.720 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 77058.770 ops/s
[info]                  ·gc.alloc.rate:                   3083.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              62959.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2971.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60662.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.850 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 77152.544 ops/s
[info]                  ·gc.alloc.rate:                   3095.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              63128.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3009.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61390.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.425 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 76836.361 ops/s
[info]                  ·gc.alloc.rate:               3084.481 MB/sec
[info]                  ·gc.alloc.rate.norm:          63173.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3035.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62175.792 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   5: 76632.844 ops/s
[info]                  ·gc.alloc.rate:               3076.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          63173.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3050.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62641.474 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   76776.826 ±(99.9%) 1458.048 ops/s [Average]
[info]   (min, avg, max) = (76203.613, 76776.826, 77152.544), stdev = 378.650
[info]   CI (99.9%): [75318.778, 78234.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3070.388 ±(99.9%) 128.082 MB/sec [Average]
[info]   (min, avg, max) = (3012.104, 3070.388, 3095.119), stdev = 33.263
[info]   CI (99.9%): [2942.305, 3198.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   62928.350 ±(99.9%) 1591.994 B/op [Average]
[info]   (min, avg, max) = (62205.732, 62928.350, 63173.940), stdev = 413.436
[info]   CI (99.9%): [61336.356, 64520.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3001.172 ±(99.9%) 177.681 MB/sec [Average]
[info]   (min, avg, max) = (2938.430, 3001.172, 3050.376), stdev = 46.143
[info]   CI (99.9%): [2823.491, 3178.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61510.869 ±(99.9%) 3410.596 B/op [Average]
[info]   (min, avg, max) = (60662.490, 61510.869, 62641.474), stdev = 885.721
[info]   CI (99.9%): [58100.273, 64921.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.599 ±(99.9%) 2.768 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.599, 1.720), stdev = 0.719
[info]   CI (99.9%): [≈ 0, 3.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   45.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.000, 9.000), stdev = 0.001
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 12.800, 13.000), stdev = 0.447
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:03:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69613.770 ops/s
[info] # Warmup Iteration   2: 181086.884 ops/s
[info] # Warmup Iteration   3: 197011.506 ops/s
[info] Iteration   1: 196831.178 ops/s
[info]                  ·gc.alloc.rate:                   1430.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              11441.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10562.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.333 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 195466.277 ops/s
[info]                  ·gc.alloc.rate:                   1435.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              11557.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13285.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.668 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 198427.595 ops/s
[info]                  ·gc.alloc.rate:                   1455.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              11542.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10419.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 198570.966 ops/s
[info]                  ·gc.alloc.rate:               1464.606 MB/sec
[info]                  ·gc.alloc.rate.norm:          11603.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10425.252 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 199339.093 ops/s
[info]                  ·gc.alloc.rate:               1482.958 MB/sec
[info]                  ·gc.alloc.rate.norm:          11708.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1653.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13051.908 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   197727.022 ±(99.9%) 6001.114 ops/s [Average]
[info]   (min, avg, max) = (195466.277, 197727.022, 199339.093), stdev = 1558.470
[info]   CI (99.9%): [191725.908, 203728.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1453.954 ±(99.9%) 82.350 MB/sec [Average]
[info]   (min, avg, max) = (1430.932, 1453.954, 1482.958), stdev = 21.386
[info]   CI (99.9%): [1371.604, 1536.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11570.735 ±(99.9%) 373.675 B/op [Average]
[info]   (min, avg, max) = (11441.547, 11570.735, 11708.375), stdev = 97.042
[info]   CI (99.9%): [11197.060, 11944.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1450.882 ±(99.9%) 705.763 MB/sec [Average]
[info]   (min, avg, max) = (1314.194, 1450.882, 1653.127), stdev = 183.284
[info]   CI (99.9%): [745.119, 2156.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11549.202 ±(99.9%) 5706.618 B/op [Average]
[info]   (min, avg, max) = (10419.975, 11549.202, 13285.878), stdev = 1481.991
[info]   CI (99.9%): [5842.584, 17255.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.749 ±(99.9%) 6.319 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.749, 3.685), stdev = 1.641
[info]   CI (99.9%): [≈ 0, 7.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.033 ±(99.9%) 50.878 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.033, 29.668), stdev = 13.213
[info]   CI (99.9%): [≈ 0, 56.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 3.033
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:03:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.802 ops/s
[info] # Warmup Iteration   2: 611635.401 ops/s
[info] # Warmup Iteration   3: 623590.905 ops/s
[info] Iteration   1: 653236.678 ops/s
[info]                  ·gc.alloc.rate:                   360.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              869.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     616.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 651452.827 ops/s
[info]                  ·gc.alloc.rate:               364.132 MB/sec
[info]                  ·gc.alloc.rate.norm:          879.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 785.390 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 646077.127 ops/s
[info]                  ·gc.alloc.rate:                   370.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              902.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1585.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 651960.266 ops/s
[info]                  ·gc.alloc.rate:                   365.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              881.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     786.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 653921.301 ops/s
[info]                  ·gc.alloc.rate:                   366.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              881.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     784.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   651329.640 ±(99.9%) 11923.832 ops/s [Average]
[info]   (min, avg, max) = (646077.127, 651329.640, 653921.301), stdev = 3096.581
[info]   CI (99.9%): [639405.808, 663253.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   365.338 ±(99.9%) 13.589 MB/sec [Average]
[info]   (min, avg, max) = (360.706, 365.338, 370.418), stdev = 3.529
[info]   CI (99.9%): [351.750, 378.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   882.790 ±(99.9%) 46.477 B/op [Average]
[info]   (min, avg, max) = (869.068, 882.790, 902.300), stdev = 12.070
[info]   CI (99.9%): [836.313, 929.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   376.735 ±(99.9%) 601.465 MB/sec [Average]
[info]   (min, avg, max) = (255.800, 376.735, 650.859), stdev = 156.199
[info]   CI (99.9%): [≈ 0, 978.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   911.675 ±(99.9%) 1477.500 B/op [Average]
[info]   (min, avg, max) = (616.311, 911.675, 1585.427), stdev = 383.702
[info]   CI (99.9%): [≈ 0, 2389.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.020 ±(99.9%) 0.077 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.051), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.188 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.124), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 287431.084 ops/s
[info] # Warmup Iteration   2: 595310.881 ops/s
[info] # Warmup Iteration   3: 646439.803 ops/s
[info] Iteration   1: 653730.040 ops/s
[info]                  ·gc.alloc.rate:               492.765 MB/sec
[info]                  ·gc.alloc.rate.norm:          1186.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 786.699 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 652119.580 ops/s
[info]                  ·gc.alloc.rate:               504.347 MB/sec
[info]                  ·gc.alloc.rate.norm:          1216.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1578.895 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 643473.368 ops/s
[info]                  ·gc.alloc.rate:               489.514 MB/sec
[info]                  ·gc.alloc.rate.norm:          1197.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 800.844 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 654337.652 ops/s
[info]                  ·gc.alloc.rate:                   505.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              1216.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1576.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 661209.833 ops/s
[info]                  ·gc.alloc.rate:               497.632 MB/sec
[info]                  ·gc.alloc.rate.norm:          1184.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 781.703 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   652974.095 ±(99.9%) 24448.718 ops/s [Average]
[info]   (min, avg, max) = (643473.368, 652974.095, 661209.833), stdev = 6349.254
[info]   CI (99.9%): [628525.377, 677422.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   497.992 ±(99.9%) 27.169 MB/sec [Average]
[info]   (min, avg, max) = (489.514, 497.992, 505.701), stdev = 7.056
[info]   CI (99.9%): [470.823, 525.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1200.175 ±(99.9%) 60.407 B/op [Average]
[info]   (min, avg, max) = (1184.377, 1200.175, 1216.746), stdev = 15.688
[info]   CI (99.9%): [1139.767, 1260.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   458.532 ±(99.9%) 690.569 MB/sec [Average]
[info]   (min, avg, max) = (326.757, 458.532, 655.514), stdev = 179.339
[info]   CI (99.9%): [≈ 0, 1149.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1104.955 ±(99.9%) 1662.216 B/op [Average]
[info]   (min, avg, max) = (781.703, 1104.955, 1578.895), stdev = 431.672
[info]   CI (99.9%): [≈ 0, 2767.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.086 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.050), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 7.000), stdev = 2.168
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:03:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 550959.481 ops/s
[info] # Warmup Iteration   2: 1028399.602 ops/s
[info] # Warmup Iteration   3: 1082095.876 ops/s
[info] Iteration   1: 1076137.548 ops/s
[info]                  ·gc.alloc.rate:               613.205 MB/sec
[info]                  ·gc.alloc.rate.norm:          896.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 482.247 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1090410.602 ops/s
[info]                  ·gc.alloc.rate:                   616.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              889.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     952.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1103791.333 ops/s
[info]                  ·gc.alloc.rate:               622.110 MB/sec
[info]                  ·gc.alloc.rate.norm:          886.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 943.245 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1101088.421 ops/s
[info]                  ·gc.alloc.rate:               615.826 MB/sec
[info]                  ·gc.alloc.rate.norm:          880.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 946.465 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1113815.805 ops/s
[info]                  ·gc.alloc.rate:                   620.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     937.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1097048.742 ±(99.9%) 55275.819 ops/s [Average]
[info]   (min, avg, max) = (1076137.548, 1097048.742, 1113815.805), stdev = 14354.955
[info]   CI (99.9%): [1041772.923, 1152324.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   617.692 ±(99.9%) 13.813 MB/sec [Average]
[info]   (min, avg, max) = (613.205, 617.692, 622.110), stdev = 3.587
[info]   CI (99.9%): [603.879, 631.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   886.083 ±(99.9%) 30.572 B/op [Average]
[info]   (min, avg, max) = (876.742, 886.083, 896.833), stdev = 7.939
[info]   CI (99.9%): [855.511, 916.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.529 ±(99.9%) 572.159 MB/sec [Average]
[info]   (min, avg, max) = (329.734, 595.529, 663.489), stdev = 148.588
[info]   CI (99.9%): [23.370, 1167.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   852.466 ±(99.9%) 797.210 B/op [Average]
[info]   (min, avg, max) = (482.247, 852.466, 952.828), stdev = 207.033
[info]   CI (99.9%): [55.257, 1649.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.060), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:03:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 509712.529 ops/s
[info] # Warmup Iteration   2: 1130833.687 ops/s
[info] # Warmup Iteration   3: 1184323.720 ops/s
[info] Iteration   1: 1186127.528 ops/s
[info]                  ·gc.alloc.rate:      0.939 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.245 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1195319.067 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1192088.102 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1188102.789 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1185499.334 ops/s
[info]                  ·gc.alloc.rate:      0.056 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.074 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1189427.364 ±(99.9%) 16092.803 ops/s [Average]
[info]   (min, avg, max) = (1185499.334, 1189427.364, 1195319.067), stdev = 4179.250
[info]   CI (99.9%): [1173334.561, 1205520.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.199 ±(99.9%) 1.595 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.199, 0.939), stdev = 0.414
[info]   CI (99.9%): [≈ 0, 1.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.264 ±(99.9%) 2.115 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.264, 1.245), stdev = 0.549
[info]   CI (99.9%): [≈ 0, 2.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:02:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6575.176 ops/s
[info] # Warmup Iteration   2: 31911.596 ops/s
[info] # Warmup Iteration   3: 33405.740 ops/s
[info] Iteration   1: 33873.541 ops/s
[info]                  ·gc.alloc.rate:                   1918.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              89133.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76633.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.163 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 193.441 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 33859.393 ops/s
[info]                  ·gc.alloc.rate:                   1935.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              89964.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91277.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.935 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 34258.827 ops/s
[info]                  ·gc.alloc.rate:               1968.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          90433.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1971.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90584.431 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 34363.596 ops/s
[info]                  ·gc.alloc.rate:                   1975.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              90464.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91131.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.953 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 33699.710 ops/s
[info]                  ·gc.alloc.rate:               1930.393 MB/sec
[info]                  ·gc.alloc.rate.norm:          90115.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1671.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78024.881 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   34011.014 ±(99.9%) 1096.797 ops/s [Average]
[info]   (min, avg, max) = (33699.710, 34011.014, 34363.596), stdev = 284.835
[info]   CI (99.9%): [32914.217, 35107.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1945.607 ±(99.9%) 95.810 MB/sec [Average]
[info]   (min, avg, max) = (1918.308, 1945.607, 1975.200), stdev = 24.882
[info]   CI (99.9%): [1849.797, 2041.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   90022.419 ±(99.9%) 2079.990 B/op [Average]
[info]   (min, avg, max) = (89133.418, 90022.419, 90464.883), stdev = 540.167
[info]   CI (99.9%): [87942.430, 92102.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1849.221 ±(99.9%) 665.582 MB/sec [Average]
[info]   (min, avg, max) = (1649.293, 1849.221, 1989.754), stdev = 172.850
[info]   CI (99.9%): [1183.638, 2514.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   85530.387 ±(99.9%) 28907.220 B/op [Average]
[info]   (min, avg, max) = (76633.731, 85530.387, 91277.448), stdev = 7507.113
[info]   CI (99.9%): [56623.167, 114437.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 7.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 4.163), stdev = 1.855
[info]   CI (99.9%): [≈ 0, 7.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   39.266 ±(99.9%) 331.888 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 39.266, 193.441), stdev = 86.190
[info]   CI (99.9%): [≈ 0, 371.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 15.000), stdev = 3.493
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:02:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22996.564 ops/s
[info] # Warmup Iteration   2: 120814.466 ops/s
[info] # Warmup Iteration   3: 124852.806 ops/s
[info] Iteration   1: 130285.132 ops/s
[info]                  ·gc.alloc.rate:                   1656.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              20004.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19933.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.478 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.997 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 129962.346 ops/s
[info]                  ·gc.alloc.rate:                   1667.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              20183.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19854.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.303 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 131980.911 ops/s
[info]                  ·gc.alloc.rate:               1697.714 MB/sec
[info]                  ·gc.alloc.rate.norm:          20245.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19534.144 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 130803.120 ops/s
[info]                  ·gc.alloc.rate:               1690.762 MB/sec
[info]                  ·gc.alloc.rate.norm:          20341.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1647.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19826.118 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 131771.709 ops/s
[info]                  ·gc.alloc.rate:               1703.042 MB/sec
[info]                  ·gc.alloc.rate.norm:          20340.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1659.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19822.657 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   130960.644 ±(99.9%) 3431.450 ops/s [Average]
[info]   (min, avg, max) = (129962.346, 130960.644, 131980.911), stdev = 891.137
[info]   CI (99.9%): [127529.193, 134392.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1683.049 ±(99.9%) 77.681 MB/sec [Average]
[info]   (min, avg, max) = (1656.571, 1683.049, 1703.042), stdev = 20.174
[info]   CI (99.9%): [1605.368, 1760.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20223.064 ±(99.9%) 535.755 B/op [Average]
[info]   (min, avg, max) = (20004.746, 20223.064, 20341.178), stdev = 139.134
[info]   CI (99.9%): [19687.309, 20758.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1647.265 ±(99.9%) 33.592 MB/sec [Average]
[info]   (min, avg, max) = (1638.081, 1647.265, 1659.690), stdev = 8.724
[info]   CI (99.9%): [1613.673, 1680.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19794.099 ±(99.9%) 585.349 B/op [Average]
[info]   (min, avg, max) = (19534.144, 19794.099, 19933.406), stdev = 152.013
[info]   CI (99.9%): [19208.750, 20379.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.800 ±(99.9%) 5.830 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.800, 3.478), stdev = 1.514
[info]   CI (99.9%): [≈ 0, 6.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.660 ±(99.9%) 70.397 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.660, 41.997), stdev = 18.282
[info]   CI (99.9%): [≈ 0, 80.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 15.000), stdev = 3.647
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59877.471 ops/s
[info] # Warmup Iteration   2: 181803.413 ops/s
[info] # Warmup Iteration   3: 198184.679 ops/s
[info] Iteration   1: 203076.695 ops/s
[info]                  ·gc.alloc.rate:                   1232.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              9548.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7632.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 202501.825 ops/s
[info]                  ·gc.alloc.rate:                   1241.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              9652.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10235.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.518 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.343 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 201649.945 ops/s
[info]                  ·gc.alloc.rate:                   1244.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              9708.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10212.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.195 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 204723.249 ops/s
[info]                  ·gc.alloc.rate:                   1237.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              9509.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7530.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 203988.451 ops/s
[info]                  ·gc.alloc.rate:               1261.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          9733.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10104.800 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   203188.033 ±(99.9%) 4655.358 ops/s [Average]
[info]   (min, avg, max) = (201649.945, 203188.033, 204723.249), stdev = 1208.982
[info]   CI (99.9%): [198532.674, 207843.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1243.434 ±(99.9%) 43.033 MB/sec [Average]
[info]   (min, avg, max) = (1232.046, 1243.434, 1261.556), stdev = 11.176
[info]   CI (99.9%): [1200.401, 1286.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9630.430 ±(99.9%) 378.281 B/op [Average]
[info]   (min, avg, max) = (9509.232, 9630.430, 9733.516), stdev = 98.238
[info]   CI (99.9%): [9252.149, 10008.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1180.072 ±(99.9%) 695.141 MB/sec [Average]
[info]   (min, avg, max) = (979.832, 1180.072, 1316.969), stdev = 180.526
[info]   CI (99.9%): [484.931, 1875.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9143.345 ±(99.9%) 5493.919 B/op [Average]
[info]   (min, avg, max) = (7530.762, 9143.345, 10235.692), stdev = 1426.753
[info]   CI (99.9%): [3649.425, 14637.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 5.856 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 3.518), stdev = 1.521
[info]   CI (99.9%): [≈ 0, 6.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.572 ±(99.9%) 45.510 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.572, 27.343), stdev = 11.819
[info]   CI (99.9%): [≈ 0, 52.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 3.209
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:02:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 132998.041 ops/s
[info] # Warmup Iteration   2: 247593.238 ops/s
[info] # Warmup Iteration   3: 244565.887 ops/s
[info] Iteration   1: 254602.223 ops/s
[info]                  ·gc.alloc.rate:                   1359.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              8405.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8211.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 246689.096 ops/s
[info]                  ·gc.alloc.rate:                   1323.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              8441.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8474.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 251203.777 ops/s
[info]                  ·gc.alloc.rate:               1352.949 MB/sec
[info]                  ·gc.alloc.rate.norm:          8476.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8288.775 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 256278.269 ops/s
[info]                  ·gc.alloc.rate:                   1386.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              8514.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8124.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.639 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 256135.967 ops/s
[info]                  ·gc.alloc.rate:                   1386.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              8514.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8154.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   252981.866 ±(99.9%) 15665.158 ops/s [Average]
[info]   (min, avg, max) = (246689.096, 252981.866, 256278.269), stdev = 4068.192
[info]   CI (99.9%): [237316.708, 268647.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1361.740 ±(99.9%) 101.671 MB/sec [Average]
[info]   (min, avg, max) = (1323.182, 1361.740, 1386.468), stdev = 26.404
[info]   CI (99.9%): [1260.069, 1463.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   8470.526 ±(99.9%) 182.891 B/op [Average]
[info]   (min, avg, max) = (8405.247, 8470.526, 8514.859), stdev = 47.496
[info]   CI (99.9%): [8287.635, 8653.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1326.068 ±(99.9%) 10.786 MB/sec [Average]
[info]   (min, avg, max) = (1322.996, 1326.068, 1328.335), stdev = 2.801
[info]   CI (99.9%): [1315.282, 1336.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8250.705 ±(99.9%) 538.612 B/op [Average]
[info]   (min, avg, max) = (8124.849, 8250.705, 8474.526), stdev = 139.876
[info]   CI (99.9%): [7712.093, 8789.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.637 ±(99.9%) 5.129 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.637, 3.019), stdev = 1.332
[info]   CI (99.9%): [≈ 0, 5.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.056 ±(99.9%) 32.735 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.056, 19.258), stdev = 8.501
[info]   CI (99.9%): [≈ 0, 36.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 10.000), stdev = 2.000
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:01:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4598.857 ops/s
[info] # Warmup Iteration   2: 59608.378 ops/s
[info] # Warmup Iteration   3: 66171.760 ops/s
[info] Iteration   1: 67492.037 ops/s
[info]                  ·gc.alloc.rate:                   2712.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              63253.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2648.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61763.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.942 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 68318.224 ops/s
[info]                  ·gc.alloc.rate:                   2752.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              63404.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2340.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53922.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.480 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 67582.423 ops/s
[info]                  ·gc.alloc.rate:               2751.659 MB/sec
[info]                  ·gc.alloc.rate.norm:          64077.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2694.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62750.432 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 67454.816 ops/s
[info]                  ·gc.alloc.rate:                   2685.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              62661.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2708.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63180.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.914 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 68030.360 ops/s
[info]                  ·gc.alloc.rate:                   2736.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              63307.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2715.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62799.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.298 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   67775.572 ±(99.9%) 1466.245 ops/s [Average]
[info]   (min, avg, max) = (67454.816, 67775.572, 68318.224), stdev = 380.779
[info]   CI (99.9%): [66309.327, 69241.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2727.964 ±(99.9%) 109.569 MB/sec [Average]
[info]   (min, avg, max) = (2685.914, 2727.964, 2752.444), stdev = 28.455
[info]   CI (99.9%): [2618.395, 2837.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63340.850 ±(99.9%) 1941.904 B/op [Average]
[info]   (min, avg, max) = (62661.244, 63340.850, 64077.575), stdev = 504.306
[info]   CI (99.9%): [61398.946, 65282.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2621.513 ±(99.9%) 612.299 MB/sec [Average]
[info]   (min, avg, max) = (2340.821, 2621.513, 2715.004), stdev = 159.012
[info]   CI (99.9%): [2009.214, 3233.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   60883.123 ±(99.9%) 15119.307 B/op [Average]
[info]   (min, avg, max) = (53922.074, 60883.123, 63180.337), stdev = 3926.436
[info]   CI (99.9%): [45763.816, 76002.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.352 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.092, 0.229), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.127 ±(99.9%) 8.156 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.127, 5.298), stdev = 2.118
[info]   CI (99.9%): [≈ 0, 10.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 12.000), stdev = 1.225
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:01:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59129.447 ops/s
[info] # Warmup Iteration   2: 166858.383 ops/s
[info] # Warmup Iteration   3: 178456.787 ops/s
[info] Iteration   1: 178780.475 ops/s
[info]                  ·gc.alloc.rate:                   1201.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              10576.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11623.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 180758.118 ops/s
[info]                  ·gc.alloc.rate:                   1199.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              10442.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8636.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.562 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 181071.878 ops/s
[info]                  ·gc.alloc.rate:                   1219.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              10598.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11470.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.418 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 181643.536 ops/s
[info]                  ·gc.alloc.rate:                   1223.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              10599.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11390.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 181704.839 ops/s
[info]                  ·gc.alloc.rate:                   1217.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              10544.496 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8554.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   180791.769 ±(99.9%) 4590.229 ops/s [Average]
[info]   (min, avg, max) = (178780.475, 180791.769, 181704.839), stdev = 1192.068
[info]   CI (99.9%): [176201.540, 185381.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1212.346 ±(99.9%) 43.034 MB/sec [Average]
[info]   (min, avg, max) = (1199.335, 1212.346, 1223.877), stdev = 11.176
[info]   CI (99.9%): [1169.313, 1255.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10552.229 ±(99.9%) 251.838 B/op [Average]
[info]   (min, avg, max) = (10442.238, 10552.229, 10599.353), stdev = 65.401
[info]   CI (99.9%): [10300.391, 10804.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1187.022 ±(99.9%) 693.334 MB/sec [Average]
[info]   (min, avg, max) = (987.700, 1187.022, 1320.368), stdev = 180.057
[info]   CI (99.9%): [493.689, 1880.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10334.967 ±(99.9%) 6124.825 B/op [Average]
[info]   (min, avg, max) = (8554.352, 10334.967, 11623.412), stdev = 1590.598
[info]   CI (99.9%): [4210.142, 16459.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.724 ±(99.9%) 4.486 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.724, 2.706), stdev = 1.165
[info]   CI (99.9%): [≈ 0, 5.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.305 ±(99.9%) 39.059 B/op [Average]
[info]   (min, avg, max) = (0.180, 6.305, 23.562), stdev = 10.143
[info]   CI (99.9%): [≈ 0, 45.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 3.050
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:01:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 210796.975 ops/s
[info] # Warmup Iteration   2: 696980.987 ops/s
[info] # Warmup Iteration   3: 714878.952 ops/s
[info] Iteration   1: 709727.274 ops/s
[info]                  ·gc.alloc.rate:               749.571 MB/sec
[info]                  ·gc.alloc.rate.norm:          1662.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2174.568 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 715154.951 ops/s
[info]                  ·gc.alloc.rate:                   746.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              1642.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1441.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 636736.534 ops/s
[info]                  ·gc.alloc.rate:                   659.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              1628.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1621.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 702615.392 ops/s
[info]                  ·gc.alloc.rate:                   730.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              1637.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1471.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 702006.097 ops/s
[info]                  ·gc.alloc.rate:                   735.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              1649.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1475.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   693248.050 ±(99.9%) 123423.185 ops/s [Average]
[info]   (min, avg, max) = (636736.534, 693248.050, 715154.951), stdev = 32052.609
[info]   CI (99.9%): [569824.865, 816671.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   724.340 ±(99.9%) 143.580 MB/sec [Average]
[info]   (min, avg, max) = (659.034, 724.340, 749.571), stdev = 37.287
[info]   CI (99.9%): [580.760, 867.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1644.094 ±(99.9%) 48.715 B/op [Average]
[info]   (min, avg, max) = (1628.947, 1644.094, 1662.122), stdev = 12.651
[info]   CI (99.9%): [1595.379, 1692.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   721.342 ±(99.9%) 558.242 MB/sec [Average]
[info]   (min, avg, max) = (654.878, 721.342, 980.670), stdev = 144.974
[info]   CI (99.9%): [163.099, 1279.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1636.891 ±(99.9%) 1188.539 B/op [Average]
[info]   (min, avg, max) = (1441.137, 1636.891, 2174.568), stdev = 308.660
[info]   CI (99.9%): [448.351, 2825.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 6.489 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 3.789), stdev = 1.685
[info]   CI (99.9%): [≈ 0, 7.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.738 ±(99.9%) 14.544 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.738, 8.494), stdev = 3.777
[info]   CI (99.9%): [≈ 0, 16.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:01:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 412031.865 ops/s
[info] # Warmup Iteration   2: 644110.524 ops/s
[info] # Warmup Iteration   3: 692715.764 ops/s
[info] Iteration   1: 660350.971 ops/s
[info]                  ·gc.alloc.rate:                   524.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              1249.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1570.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 675378.035 ops/s
[info]                  ·gc.alloc.rate:               528.608 MB/sec
[info]                  ·gc.alloc.rate.norm:          1231.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 769.213 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 644132.736 ops/s
[info]                  ·gc.alloc.rate:                   516.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              1263.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1614.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 646334.033 ops/s
[info]                  ·gc.alloc.rate:               504.728 MB/sec
[info]                  ·gc.alloc.rate.norm:          1229.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 805.384 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 623796.664 ops/s
[info]                  ·gc.alloc.rate:                   494.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              1246.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1670.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   649998.488 ±(99.9%) 74210.265 ops/s [Average]
[info]   (min, avg, max) = (623796.664, 649998.488, 675378.035), stdev = 19272.170
[info]   CI (99.9%): [575788.223, 724208.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   513.750 ±(99.9%) 54.774 MB/sec [Average]
[info]   (min, avg, max) = (494.128, 513.750, 528.608), stdev = 14.225
[info]   CI (99.9%): [458.975, 568.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1243.906 ±(99.9%) 53.520 B/op [Average]
[info]   (min, avg, max) = (1229.060, 1243.906, 1263.092), stdev = 13.899
[info]   CI (99.9%): [1190.386, 1297.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.614 ±(99.9%) 696.645 MB/sec [Average]
[info]   (min, avg, max) = (330.128, 528.614, 662.274), stdev = 180.917
[info]   CI (99.9%): [≈ 0, 1225.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1286.035 ±(99.9%) 1759.164 B/op [Average]
[info]   (min, avg, max) = (769.213, 1286.035, 1670.676), stdev = 456.849
[info]   CI (99.9%): [≈ 0, 3045.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.215 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.061, 0.105), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:01:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 509341.472 ops/s
[info] # Warmup Iteration   2: 768263.743 ops/s
[info] # Warmup Iteration   3: 763330.127 ops/s
[info] Iteration   1: 753688.323 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 744743.117 ops/s
[info]                  ·gc.alloc.rate:      0.928 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.960 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 777504.071 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 778590.249 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 778630.028 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   766631.158 ±(99.9%) 62441.498 ops/s [Average]
[info]   (min, avg, max) = (744743.117, 766631.158, 778630.028), stdev = 16215.859
[info]   CI (99.9%): [704189.659, 829072.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.186 ±(99.9%) 1.597 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.186, 0.928), stdev = 0.415
[info]   CI (99.9%): [≈ 0, 1.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.392 ±(99.9%) 3.374 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.392, 1.960), stdev = 0.876
[info]   CI (99.9%): [≈ 0, 3.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:00:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93612.397 ops/s
[info] # Warmup Iteration   2: 323189.577 ops/s
[info] # Warmup Iteration   3: 328204.861 ops/s
[info] Iteration   1: 350599.928 ops/s
[info]                  ·gc.alloc.rate:                   991.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              4450.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4355.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 345001.702 ops/s
[info]                  ·gc.alloc.rate:                   963.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              4391.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2963.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 351811.480 ops/s
[info]                  ·gc.alloc.rate:                   992.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              4440.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4379.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 349028.708 ops/s
[info]                  ·gc.alloc.rate:                   989.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              4460.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4444.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.845 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 349454.929 ops/s
[info]                  ·gc.alloc.rate:               991.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          4466.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4462.619 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   349179.349 ±(99.9%) 9910.739 ops/s [Average]
[info]   (min, avg, max) = (345001.702, 349179.349, 351811.480), stdev = 2573.787
[info]   CI (99.9%): [339268.610, 359090.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   985.689 ±(99.9%) 49.052 MB/sec [Average]
[info]   (min, avg, max) = (963.024, 985.689, 992.729), stdev = 12.739
[info]   CI (99.9%): [936.637, 1034.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4441.963 ±(99.9%) 115.582 B/op [Average]
[info]   (min, avg, max) = (4391.255, 4441.963, 4466.936), stdev = 30.016
[info]   CI (99.9%): [4326.381, 4557.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   915.157 ±(99.9%) 571.959 MB/sec [Average]
[info]   (min, avg, max) = (649.802, 915.157, 990.913), stdev = 148.536
[info]   CI (99.9%): [343.198, 1487.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4120.934 ±(99.9%) 2498.343 B/op [Average]
[info]   (min, avg, max) = (2963.006, 4120.934, 4462.619), stdev = 648.812
[info]   CI (99.9%): [1622.591, 6619.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.298 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.187), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.225 ±(99.9%) 1.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.225, 0.845), stdev = 0.349
[info]   CI (99.9%): [≈ 0, 1.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:00:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2077.084 ops/s
[info] # Warmup Iteration   2: 7629.922 ops/s
[info] # Warmup Iteration   3: 8583.098 ops/s
[info] Iteration   1: 8680.468 ops/s
[info]                  ·gc.alloc.rate:                   1091.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              197901.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180056.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.548 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 8622.107 ops/s
[info]                  ·gc.alloc.rate:                   1081.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              197319.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181430.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.600 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 8594.696 ops/s
[info]                  ·gc.alloc.rate:                   1075.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              196816.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181878.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 678.537 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 8663.920 ops/s
[info]                  ·gc.alloc.rate:                   1089.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              197788.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179441.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.937 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 8691.081 ops/s
[info]                  ·gc.alloc.rate:               1098.555 MB/sec
[info]                  ·gc.alloc.rate.norm:          198914.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 237868.615 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   8650.454 ±(99.9%) 156.949 ops/s [Average]
[info]   (min, avg, max) = (8594.696, 8650.454, 8691.081), stdev = 40.759
[info]   CI (99.9%): [8493.506, 8807.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1087.187 ±(99.9%) 35.155 MB/sec [Average]
[info]   (min, avg, max) = (1075.012, 1087.187, 1098.555), stdev = 9.130
[info]   CI (99.9%): [1052.032, 1122.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   197747.955 ±(99.9%) 3005.751 B/op [Average]
[info]   (min, avg, max) = (196816.257, 197747.955, 198914.431), stdev = 780.584
[info]   CI (99.9%): [194742.204, 200753.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1056.584 ±(99.9%) 553.515 MB/sec [Average]
[info]   (min, avg, max) = (988.283, 1056.584, 1313.690), stdev = 143.746
[info]   CI (99.9%): [503.069, 1610.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   192134.980 ±(99.9%) 98518.896 B/op [Average]
[info]   (min, avg, max) = (179441.289, 192134.980, 237868.615), stdev = 25585.044
[info]   CI (99.9%): [93616.084, 290653.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 6.237 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 3.706), stdev = 1.620
[info]   CI (99.9%): [≈ 0, 7.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   149.324 ±(99.9%) 1142.027 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 149.324, 678.537), stdev = 296.581
[info]   CI (99.9%): [≈ 0, 1291.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 12.000), stdev = 3.347
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:00:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1163.453 ops/s
[info] # Warmup Iteration   2: 9092.008 ops/s
[info] # Warmup Iteration   3: 10802.407 ops/s
[info] Iteration   1: 10764.484 ops/s
[info]                  ·gc.alloc.rate:                   1255.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              183538.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192359.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 10978.069 ops/s
[info]                  ·gc.alloc.rate:                   1278.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              183195.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188991.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 582.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 11086.365 ops/s
[info]                  ·gc.alloc.rate:                   1287.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              182704.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     139394.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.926 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 10999.356 ops/s
[info]                  ·gc.alloc.rate:               1283.837 MB/sec
[info]                  ·gc.alloc.rate.norm:          183707.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 186820.195 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 11047.064 ops/s
[info]                  ·gc.alloc.rate:               1303.454 MB/sec
[info]                  ·gc.alloc.rate.norm:          185688.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 186293.301 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   10975.068 ±(99.9%) 481.388 ops/s [Average]
[info]   (min, avg, max) = (10764.484, 10975.068, 11086.365), stdev = 125.015
[info]   CI (99.9%): [10493.680, 11456.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1281.658 ±(99.9%) 66.951 MB/sec [Average]
[info]   (min, avg, max) = (1255.450, 1281.658, 1303.454), stdev = 17.387
[info]   CI (99.9%): [1214.708, 1348.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   183767.129 ±(99.9%) 4391.566 B/op [Average]
[info]   (min, avg, max) = (182704.633, 183767.129, 185688.555), stdev = 1140.476
[info]   CI (99.9%): [179375.563, 188158.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1245.984 ±(99.9%) 568.409 MB/sec [Average]
[info]   (min, avg, max) = (982.105, 1245.984, 1318.745), stdev = 147.614
[info]   CI (99.9%): [677.574, 1814.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   178771.712 ±(99.9%) 85259.896 B/op [Average]
[info]   (min, avg, max) = (139394.032, 178771.712, 192359.056), stdev = 22141.724
[info]   CI (99.9%): [93511.816, 264031.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.921 ±(99.9%) 6.812 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.921, 4.063), stdev = 1.769
[info]   CI (99.9%): [≈ 0, 7.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   131.855 ±(99.9%) 976.360 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 131.855, 582.260), stdev = 253.558
[info]   CI (99.9%): [≈ 0, 1108.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 14.000), stdev = 4.099
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:00:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107770.780 ops/s
[info] # Warmup Iteration   2: 256448.535 ops/s
[info] # Warmup Iteration   3: 270236.553 ops/s
[info] Iteration   1: 271456.184 ops/s
[info]                  ·gc.alloc.rate:                   1805.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              10469.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9620.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.346 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 271657.946 ops/s
[info]                  ·gc.alloc.rate:                   1830.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              10605.206 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11481.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 274876.159 ops/s
[info]                  ·gc.alloc.rate:               1853.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          10612.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1656.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9484.068 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 272513.737 ops/s
[info]                  ·gc.alloc.rate:                   1839.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              10620.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9616.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 272059.626 ops/s
[info]                  ·gc.alloc.rate:                   1849.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              10700.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11630.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   272512.730 ±(99.9%) 5321.015 ops/s [Average]
[info]   (min, avg, max) = (271456.184, 272512.730, 274876.159), stdev = 1381.851
[info]   CI (99.9%): [267191.715, 277833.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1835.775 ±(99.9%) 73.229 MB/sec [Average]
[info]   (min, avg, max) = (1805.778, 1835.775, 1853.387), stdev = 19.017
[info]   CI (99.9%): [1762.546, 1909.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10601.601 ±(99.9%) 320.676 B/op [Average]
[info]   (min, avg, max) = (10469.563, 10601.601, 10700.752), stdev = 83.279
[info]   CI (99.9%): [10280.925, 10922.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1794.696 ±(99.9%) 709.841 MB/sec [Average]
[info]   (min, avg, max) = (1656.382, 1794.696, 2010.651), stdev = 184.344
[info]   CI (99.9%): [1084.855, 2504.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10366.482 ±(99.9%) 4190.590 B/op [Average]
[info]   (min, avg, max) = (9484.068, 10366.482, 11630.334), stdev = 1088.283
[info]   CI (99.9%): [6175.893, 14557.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.645 ±(99.9%) 5.422 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.645, 3.164), stdev = 1.408
[info]   CI (99.9%): [≈ 0, 6.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.741 ±(99.9%) 31.438 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.741, 18.346), stdev = 8.164
[info]   CI (99.9%): [≈ 0, 35.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 10.000), stdev = 1.304
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:00:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 780.657 ops/s
[info] # Warmup Iteration   2: 6279.651 ops/s
[info] # Warmup Iteration   3: 8168.975 ops/s
[info] Iteration   1: 8305.769 ops/s
[info]                  ·gc.alloc.rate:                   1517.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              287469.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311720.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.889 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 8492.873 ops/s
[info]                  ·gc.alloc.rate:                   1538.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              284973.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243659.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 821.611 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 8377.544 ops/s
[info]                  ·gc.alloc.rate:                   1521.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              285886.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     306225.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.839 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 8343.044 ops/s
[info]                  ·gc.alloc.rate:               1528.726 MB/sec
[info]                  ·gc.alloc.rate.norm:          288372.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 246280.283 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 8286.250 ops/s
[info]                  ·gc.alloc.rate:               1532.656 MB/sec
[info]                  ·gc.alloc.rate.norm:          291072.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 311865.328 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   8361.096 ±(99.9%) 314.156 ops/s [Average]
[info]   (min, avg, max) = (8286.250, 8361.096, 8492.873), stdev = 81.585
[info]   CI (99.9%): [8046.940, 8675.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1527.775 ±(99.9%) 32.625 MB/sec [Average]
[info]   (min, avg, max) = (1517.068, 1527.775, 1538.456), stdev = 8.473
[info]   CI (99.9%): [1495.150, 1560.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   287555.126 ±(99.9%) 9130.815 B/op [Average]
[info]   (min, avg, max) = (284973.968, 287555.126, 291072.261), stdev = 2371.244
[info]   CI (99.9%): [278424.310, 296685.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1507.688 ±(99.9%) 693.596 MB/sec [Average]
[info]   (min, avg, max) = (1305.585, 1507.688, 1645.045), stdev = 180.125
[info]   CI (99.9%): [814.091, 2201.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   283950.217 ±(99.9%) 137346.682 B/op [Average]
[info]   (min, avg, max) = (243659.685, 283950.217, 311865.328), stdev = 35668.497
[info]   CI (99.9%): [146603.535, 421296.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.950 ±(99.9%) 7.516 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.950, 4.436), stdev = 1.952
[info]   CI (99.9%): [≈ 0, 8.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   176.068 ±(99.9%) 1391.958 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 176.068, 821.611), stdev = 361.487
[info]   CI (99.9%): [≈ 0, 1568.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.000, 20.000), stdev = 5.788
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 00:59:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5156.910 ops/s
[info] # Warmup Iteration   2: 21767.854 ops/s
[info] # Warmup Iteration   3: 23678.955 ops/s
[info] Iteration   1: 23417.792 ops/s
[info]                  ·gc.alloc.rate:                   1234.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              82916.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88605.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.798 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 23216.361 ops/s
[info]                  ·gc.alloc.rate:                   1226.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              83118.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89548.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.492 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 23479.307 ops/s
[info]                  ·gc.alloc.rate:                   1231.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              82548.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66085.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.535 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 23030.227 ops/s
[info]                  ·gc.alloc.rate:               1207.524 MB/sec
[info]                  ·gc.alloc.rate.norm:          82524.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89585.308 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 23272.931 ops/s
[info]                  ·gc.alloc.rate:               1241.344 MB/sec
[info]                  ·gc.alloc.rate.norm:          83939.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88852.829 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   23283.324 ±(99.9%) 681.089 ops/s [Average]
[info]   (min, avg, max) = (23030.227, 23283.324, 23479.307), stdev = 176.877
[info]   CI (99.9%): [22602.234, 23964.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1228.153 ±(99.9%) 49.058 MB/sec [Average]
[info]   (min, avg, max) = (1207.524, 1228.153, 1241.344), stdev = 12.740
[info]   CI (99.9%): [1179.095, 1277.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   83009.366 ±(99.9%) 2222.954 B/op [Average]
[info]   (min, avg, max) = (82524.439, 83009.366, 83939.199), stdev = 577.294
[info]   CI (99.9%): [80786.412, 85232.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1250.132 ±(99.9%) 568.795 MB/sec [Average]
[info]   (min, avg, max) = (985.990, 1250.132, 1321.148), stdev = 147.714
[info]   CI (99.9%): [681.338, 1818.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   84535.595 ±(99.9%) 39748.840 B/op [Average]
[info]   (min, avg, max) = (66085.785, 84535.595, 89585.308), stdev = 10322.647
[info]   CI (99.9%): [44786.755, 124284.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.770 ±(99.9%) 5.934 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.770, 3.519), stdev = 1.541
[info]   CI (99.9%): [≈ 0, 6.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   52.165 ±(99.9%) 402.305 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.165, 238.492), stdev = 104.477
[info]   CI (99.9%): [≈ 0, 454.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 12.000), stdev = 3.899
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 00:59:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8256.166 ops/s
[info] # Warmup Iteration   2: 30784.051 ops/s
[info] # Warmup Iteration   3: 32545.674 ops/s
[info] Iteration   1: 32320.280 ops/s
[info]                  ·gc.alloc.rate:                   1352.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              65859.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64082.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 32706.864 ops/s
[info]                  ·gc.alloc.rate:                   1359.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              65401.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63388.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 191.433 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 32973.098 ops/s
[info]                  ·gc.alloc.rate:               1379.407 MB/sec
[info]                  ·gc.alloc.rate.norm:          65826.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62513.279 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 33092.105 ops/s
[info]                  ·gc.alloc.rate:               1389.561 MB/sec
[info]                  ·gc.alloc.rate.norm:          66030.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1635.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77715.642 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 33062.440 ops/s
[info]                  ·gc.alloc.rate:               1388.653 MB/sec
[info]                  ·gc.alloc.rate.norm:          66100.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62658.346 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   32830.958 ±(99.9%) 1245.040 ops/s [Average]
[info]   (min, avg, max) = (32320.280, 32830.958, 33092.105), stdev = 323.333
[info]   CI (99.9%): [31585.917, 34075.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1373.897 ±(99.9%) 65.560 MB/sec [Average]
[info]   (min, avg, max) = (1352.726, 1373.897, 1389.561), stdev = 17.026
[info]   CI (99.9%): [1308.337, 1439.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   65843.593 ±(99.9%) 1048.505 B/op [Average]
[info]   (min, avg, max) = (65401.752, 65843.593, 66100.313), stdev = 272.293
[info]   CI (99.9%): [64795.088, 66892.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1379.064 ±(99.9%) 552.043 MB/sec [Average]
[info]   (min, avg, max) = (1309.985, 1379.064, 1635.469), stdev = 143.364
[info]   CI (99.9%): [827.021, 1931.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   66071.589 ±(99.9%) 25180.732 B/op [Average]
[info]   (min, avg, max) = (62513.279, 66071.589, 77715.642), stdev = 6539.356
[info]   CI (99.9%): [40890.857, 91252.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.800 ±(99.9%) 6.842 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.800, 3.978), stdev = 1.777
[info]   CI (99.9%): [≈ 0, 7.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   38.489 ±(99.9%) 329.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.489, 191.433), stdev = 85.499
[info]   CI (99.9%): [≈ 0, 367.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 13.000), stdev = 3.050
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 00:59:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 334474.625 ops/s
[info] # Warmup Iteration   2: 595735.809 ops/s
[info] # Warmup Iteration   3: 622381.021 ops/s
[info] Iteration   1: 621622.038 ops/s
[info]                  ·gc.alloc.rate:                   1147.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              2905.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2519.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 616036.034 ops/s
[info]                  ·gc.alloc.rate:                   1145.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              2926.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3397.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.973 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 623626.718 ops/s
[info]                  ·gc.alloc.rate:                   1158.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              2923.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2505.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.313 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 625977.545 ops/s
[info]                  ·gc.alloc.rate:                   1155.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              2902.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2488.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 610241.738 ops/s
[info]                  ·gc.alloc.rate:               1153.666 MB/sec
[info]                  ·gc.alloc.rate.norm:          2974.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3408.629 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   619500.814 ±(99.9%) 24445.214 ops/s [Average]
[info]   (min, avg, max) = (610241.738, 619500.814, 625977.545), stdev = 6348.344
[info]   CI (99.9%): [595055.601, 643946.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1152.077 ±(99.9%) 20.092 MB/sec [Average]
[info]   (min, avg, max) = (1145.622, 1152.077, 1158.204), stdev = 5.218
[info]   CI (99.9%): [1131.985, 1172.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2926.519 ±(99.9%) 111.044 B/op [Average]
[info]   (min, avg, max) = (2902.960, 2926.519, 2974.688), stdev = 28.838
[info]   CI (99.9%): [2815.475, 3037.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1125.973 ±(99.9%) 703.058 MB/sec [Average]
[info]   (min, avg, max) = (990.307, 1125.973, 1329.937), stdev = 182.582
[info]   CI (99.9%): [422.914, 1829.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2863.717 ±(99.9%) 1895.635 B/op [Average]
[info]   (min, avg, max) = (2488.853, 2863.717, 3408.629), stdev = 492.290
[info]   CI (99.9%): [968.082, 4759.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.663 ±(99.9%) 4.528 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.663, 2.730), stdev = 1.176
[info]   CI (99.9%): [≈ 0, 5.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.689 ±(99.9%) 11.568 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.689, 6.973), stdev = 3.004
[info]   CI (99.9%): [≈ 0, 13.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 10.000), stdev = 2.683
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 00:59:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 473742.318 ops/s
[info] # Warmup Iteration   2: 754171.744 ops/s
[info] # Warmup Iteration   3: 774786.195 ops/s
[info] Iteration   1: 775248.544 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 775994.759 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 776247.595 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 775212.013 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 775376.864 ops/s
[info]                  ·gc.alloc.rate:      0.056 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.113 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   775615.955 ±(99.9%) 1824.273 ops/s [Average]
[info]   (min, avg, max) = (775212.013, 775615.955, 776247.595), stdev = 473.758
[info]   CI (99.9%): [773791.682, 777440.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.011 ±(99.9%) 0.095 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.011, 0.056), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.023 ±(99.9%) 0.193 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.023, 0.113), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 00:59:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8460.464 ops/s
[info] # Warmup Iteration   2: 24084.437 ops/s
[info] # Warmup Iteration   3: 26205.636 ops/s
[info] Iteration   1: 27396.766 ops/s
[info]                  ·gc.alloc.rate:                   1241.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              71304.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56808.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 27366.786 ops/s
[info]                  ·gc.alloc.rate:                   1249.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              71874.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76006.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 185.563 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 28104.017 ops/s
[info]                  ·gc.alloc.rate:                   1285.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              72005.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73563.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 28155.897 ops/s
[info]                  ·gc.alloc.rate:                   1268.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              70891.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54884.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.636 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 28129.416 ops/s
[info]                  ·gc.alloc.rate:               1294.298 MB/sec
[info]                  ·gc.alloc.rate.norm:          72393.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73404.792 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   27830.576 ±(99.9%) 1579.704 ops/s [Average]
[info]   (min, avg, max) = (27366.786, 27830.576, 28155.897), stdev = 410.244
[info]   CI (99.9%): [26250.872, 29410.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1267.924 ±(99.9%) 87.407 MB/sec [Average]
[info]   (min, avg, max) = (1241.216, 1267.924, 1294.298), stdev = 22.699
[info]   CI (99.9%): [1180.516, 1355.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   71693.884 ±(99.9%) 2290.664 B/op [Average]
[info]   (min, avg, max) = (70891.208, 71693.884, 72393.487), stdev = 594.878
[info]   CI (99.9%): [69403.220, 73984.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1183.727 ±(99.9%) 697.208 MB/sec [Average]
[info]   (min, avg, max) = (981.993, 1183.727, 1321.650), stdev = 181.063
[info]   CI (99.9%): [486.520, 1880.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66933.533 ±(99.9%) 39261.771 B/op [Average]
[info]   (min, avg, max) = (54884.451, 66933.533, 76006.532), stdev = 10196.157
[info]   CI (99.9%): [27671.762, 106195.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.849 ±(99.9%) 5.264 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.849, 3.227), stdev = 1.367
[info]   CI (99.9%): [≈ 0, 6.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   48.539 ±(99.9%) 302.911 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.539, 185.563), stdev = 78.665
[info]   CI (99.9%): [≈ 0, 351.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 00:58:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4270.473 ops/s
[info] # Warmup Iteration   2: 29199.723 ops/s
[info] # Warmup Iteration   3: 32705.749 ops/s
[info] Iteration   1: 32839.331 ops/s
[info]                  ·gc.alloc.rate:                   1737.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              83277.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79301.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 165.611 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 32508.302 ops/s
[info]                  ·gc.alloc.rate:                   1730.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              83753.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79595.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.180 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 32735.059 ops/s
[info]                  ·gc.alloc.rate:                   1755.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              84373.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94720.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.001 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 33329.346 ops/s
[info]                  ·gc.alloc.rate:                   1780.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              84032.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78025.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.983 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 32811.962 ops/s
[info]                  ·gc.alloc.rate:               1754.120 MB/sec
[info]                  ·gc.alloc.rate.norm:          84125.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79835.054 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   32844.800 ±(99.9%) 1157.064 ops/s [Average]
[info]   (min, avg, max) = (32508.302, 32844.800, 33329.346), stdev = 300.486
[info]   CI (99.9%): [31687.736, 34001.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   1751.522 ±(99.9%) 74.142 MB/sec [Average]
[info]   (min, avg, max) = (1730.284, 1751.522, 1780.159), stdev = 19.254
[info]   CI (99.9%): [1677.381, 1825.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   83912.342 ±(99.9%) 1612.317 B/op [Average]
[info]   (min, avg, max) = (83277.287, 83912.342, 84373.725), stdev = 418.714
[info]   CI (99.9%): [82300.025, 85524.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1717.465 ±(99.9%) 545.588 MB/sec [Average]
[info]   (min, avg, max) = (1644.390, 1717.465, 1970.595), stdev = 141.687
[info]   CI (99.9%): [1171.877, 2263.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   82295.787 ±(99.9%) 26880.733 B/op [Average]
[info]   (min, avg, max) = (78025.882, 82295.787, 94720.938), stdev = 6980.841
[info]   CI (99.9%): [55415.055, 109176.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 5.779 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 3.456), stdev = 1.501
[info]   CI (99.9%): [≈ 0, 6.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   38.155 ±(99.9%) 276.920 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.155, 165.611), stdev = 71.915
[info]   CI (99.9%): [≈ 0, 315.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 15.000), stdev = 3.782
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 00:58:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3274.693 ops/s
[info] # Warmup Iteration   2: 30432.527 ops/s
[info] # Warmup Iteration   3: 34024.408 ops/s
[info] Iteration   1: 33763.908 ops/s
[info]                  ·gc.alloc.rate:                   1502.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              69997.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61357.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.941 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 33864.778 ops/s
[info]                  ·gc.alloc.rate:                   1509.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              70143.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76249.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.296 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199.603 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 35041.117 ops/s
[info]                  ·gc.alloc.rate:                   1547.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              69477.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58646.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.935 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 34610.387 ops/s
[info]                  ·gc.alloc.rate:                   1528.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              69472.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74428.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.893 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 35105.430 ops/s
[info]                  ·gc.alloc.rate:                   1562.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              70031.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59072.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.933 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   34477.124 ±(99.9%) 2446.190 ops/s [Average]
[info]   (min, avg, max) = (33763.908, 34477.124, 35105.430), stdev = 635.268
[info]   CI (99.9%): [32030.934, 36923.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1529.899 ±(99.9%) 96.824 MB/sec [Average]
[info]   (min, avg, max) = (1502.196, 1529.899, 1562.402), stdev = 25.145
[info]   CI (99.9%): [1433.075, 1626.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   69824.315 ±(99.9%) 1246.549 B/op [Average]
[info]   (min, avg, max) = (69472.089, 69824.315, 70143.278), stdev = 323.725
[info]   CI (99.9%): [68577.766, 71070.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1443.769 ±(99.9%) 686.924 MB/sec [Average]
[info]   (min, avg, max) = (1305.939, 1443.769, 1641.198), stdev = 178.392
[info]   CI (99.9%): [756.845, 2130.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   65950.896 ±(99.9%) 33330.947 B/op [Average]
[info]   (min, avg, max) = (58646.529, 65950.896, 76249.378), stdev = 8655.941
[info]   CI (99.9%): [32619.949, 99281.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.884 ±(99.9%) 7.345 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.884, 4.296), stdev = 1.907
[info]   CI (99.9%): [≈ 0, 8.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   41.061 ±(99.9%) 341.279 B/op [Average]
[info]   (min, avg, max) = (0.933, 41.061, 199.603), stdev = 88.629
[info]   CI (99.9%): [≈ 0, 382.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 14.000), stdev = 3.421
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 00:58:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 253740.878 ops/s
[info] # Warmup Iteration   2: 445948.955 ops/s
[info] # Warmup Iteration   3: 476448.580 ops/s
[info] Iteration   1: 478965.019 ops/s
[info]                  ·gc.alloc.rate:               1274.265 MB/sec
[info]                  ·gc.alloc.rate.norm:          4187.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3272.422 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 444059.474 ops/s
[info]                  ·gc.alloc.rate:                   1195.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              4236.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4708.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.371 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 474310.344 ops/s
[info]                  ·gc.alloc.rate:                   1277.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              4237.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4392.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 483100.375 ops/s
[info]                  ·gc.alloc.rate:                   1283.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              4181.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3231.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 476710.512 ops/s
[info]                  ·gc.alloc.rate:               1274.085 MB/sec
[info]                  ·gc.alloc.rate.norm:          4206.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1325.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4376.673 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   471429.145 ±(99.9%) 60219.814 ops/s [Average]
[info]   (min, avg, max) = (444059.474, 471429.145, 483100.375), stdev = 15638.894
[info]   CI (99.9%): [411209.331, 531648.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1260.976 ±(99.9%) 141.958 MB/sec [Average]
[info]   (min, avg, max) = (1195.419, 1260.976, 1283.983), stdev = 36.866
[info]   CI (99.9%): [1119.018, 1402.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4210.051 ±(99.9%) 102.538 B/op [Average]
[info]   (min, avg, max) = (4181.723, 4210.051, 4237.980), stdev = 26.629
[info]   CI (99.9%): [4107.513, 4312.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1193.138 ±(99.9%) 699.895 MB/sec [Average]
[info]   (min, avg, max) = (992.240, 1193.138, 1328.324), stdev = 181.760
[info]   CI (99.9%): [493.244, 1893.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3996.159 ±(99.9%) 2665.518 B/op [Average]
[info]   (min, avg, max) = (3231.563, 3996.159, 4708.000), stdev = 692.226
[info]   CI (99.9%): [1330.642, 6661.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.595 ±(99.9%) 4.439 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.595, 2.644), stdev = 1.153
[info]   CI (99.9%): [≈ 0, 5.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.095 ±(99.9%) 15.753 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.095, 9.371), stdev = 4.091
[info]   CI (99.9%): [≈ 0, 17.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.581
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 00:58:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1287.446 ops/s
[info] # Warmup Iteration   2: 14151.462 ops/s
[info] # Warmup Iteration   3: 19017.017 ops/s
[info] Iteration   1: 18948.966 ops/s
[info]                  ·gc.alloc.rate:                   1895.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              157424.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163779.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 354.464 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 18800.077 ops/s
[info]                  ·gc.alloc.rate:                   1906.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              159552.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163738.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.142 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 19085.008 ops/s
[info]                  ·gc.alloc.rate:               1929.937 MB/sec
[info]                  ·gc.alloc.rate.norm:          159087.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1634.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 134697.630 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 19072.922 ops/s
[info]                  ·gc.alloc.rate:                   1952.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              161047.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163099.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.718 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 18816.367 ops/s
[info]                  ·gc.alloc.rate:               1900.093 MB/sec
[info]                  ·gc.alloc.rate.norm:          158922.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1662.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139018.923 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   18944.668 ±(99.9%) 522.080 ops/s [Average]
[info]   (min, avg, max) = (18800.077, 18944.668, 19085.008), stdev = 135.582
[info]   CI (99.9%): [18422.588, 19466.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1916.897 ±(99.9%) 91.112 MB/sec [Average]
[info]   (min, avg, max) = (1895.681, 1916.897, 1952.025), stdev = 23.662
[info]   CI (99.9%): [1825.785, 2008.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   159206.904 ±(99.9%) 5012.526 B/op [Average]
[info]   (min, avg, max) = (157424.600, 159206.904, 161047.303), stdev = 1301.737
[info]   CI (99.9%): [154194.378, 164219.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1840.413 ±(99.9%) 677.728 MB/sec [Average]
[info]   (min, avg, max) = (1634.058, 1840.413, 1976.900), stdev = 176.004
[info]   CI (99.9%): [1162.684, 2518.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   152866.912 ±(99.9%) 56588.823 B/op [Average]
[info]   (min, avg, max) = (134697.630, 152866.912, 163779.482), stdev = 14695.938
[info]   CI (99.9%): [96278.088, 209455.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.920 ±(99.9%) 7.225 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.920, 4.268), stdev = 1.876
[info]   CI (99.9%): [≈ 0, 8.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   76.465 ±(99.9%) 599.937 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 76.465, 354.464), stdev = 155.802
[info]   CI (99.9%): [≈ 0, 676.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 19.000), stdev = 5.050
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 00:57:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13866.229 ops/s
[info] # Warmup Iteration   2: 50254.499 ops/s
[info] # Warmup Iteration   3: 54143.961 ops/s
[info] Iteration   1: 54637.808 ops/s
[info]                  ·gc.alloc.rate:                   1667.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              48025.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47642.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.541 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 54800.744 ops/s
[info]                  ·gc.alloc.rate:                   1684.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              48365.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47237.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 55026.705 ops/s
[info]                  ·gc.alloc.rate:                   1690.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              48358.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46983.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.977 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 55094.640 ops/s
[info]                  ·gc.alloc.rate:                   1706.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              48747.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47162.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.595 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 56100.682 ops/s
[info]                  ·gc.alloc.rate:                   1737.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              48729.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46617.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.752 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   55132.116 ±(99.9%) 2199.240 ops/s [Average]
[info]   (min, avg, max) = (54637.808, 55132.116, 56100.682), stdev = 571.136
[info]   CI (99.9%): [52932.877, 57331.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1697.132 ±(99.9%) 101.485 MB/sec [Average]
[info]   (min, avg, max) = (1667.275, 1697.132, 1737.005), stdev = 26.355
[info]   CI (99.9%): [1595.647, 1798.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   48445.006 ±(99.9%) 1158.760 B/op [Average]
[info]   (min, avg, max) = (48025.220, 48445.006, 48747.263), stdev = 300.926
[info]   CI (99.9%): [47286.245, 49603.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1650.860 ±(99.9%) 29.219 MB/sec [Average]
[info]   (min, avg, max) = (1642.761, 1650.860, 1661.740), stdev = 7.588
[info]   CI (99.9%): [1621.640, 1680.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   47128.735 ±(99.9%) 1439.611 B/op [Average]
[info]   (min, avg, max) = (46617.705, 47128.735, 47642.486), stdev = 373.862
[info]   CI (99.9%): [45689.124, 48568.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.799 ±(99.9%) 5.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.799, 3.143), stdev = 1.336
[info]   CI (99.9%): [≈ 0, 5.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   22.999 ±(99.9%) 148.276 B/op [Average]
[info]   (min, avg, max) = (0.595, 22.999, 90.541), stdev = 38.507
[info]   CI (99.9%): [≈ 0, 171.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 15.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 00:57:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47433.044 ops/s
[info] # Warmup Iteration   2: 152898.695 ops/s
[info] # Warmup Iteration   3: 155217.326 ops/s
[info] Iteration   1: 156065.460 ops/s
[info]                  ·gc.alloc.rate:                   1883.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              18984.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19910.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 157722.149 ops/s
[info]                  ·gc.alloc.rate:                   1901.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              18970.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16351.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.662 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 156387.060 ops/s
[info]                  ·gc.alloc.rate:               1912.575 MB/sec
[info]                  ·gc.alloc.rate.norm:          19241.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1975.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19876.788 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 157367.989 ops/s
[info]                  ·gc.alloc.rate:                   1919.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              19180.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19895.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 153194.097 ops/s
[info]                  ·gc.alloc.rate:                   1870.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              19212.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17181.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   156147.351 ±(99.9%) 6876.344 ops/s [Average]
[info]   (min, avg, max) = (153194.097, 156147.351, 157722.149), stdev = 1785.765
[info]   CI (99.9%): [149271.007, 163023.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1897.238 ±(99.9%) 78.432 MB/sec [Average]
[info]   (min, avg, max) = (1870.188, 1897.238, 1919.137), stdev = 20.369
[info]   CI (99.9%): [1818.806, 1975.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   19118.010 ±(99.9%) 501.042 B/op [Average]
[info]   (min, avg, max) = (18970.481, 19118.010, 19241.801), stdev = 130.119
[info]   CI (99.9%): [18616.968, 19619.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1850.509 ±(99.9%) 687.186 MB/sec [Average]
[info]   (min, avg, max) = (1638.691, 1850.509, 1990.661), stdev = 178.460
[info]   CI (99.9%): [1163.322, 2537.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18643.217 ±(99.9%) 6692.528 B/op [Average]
[info]   (min, avg, max) = (16351.803, 18643.217, 19910.946), stdev = 1738.028
[info]   CI (99.9%): [11950.688, 25335.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 6.266 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.688), stdev = 1.627
[info]   CI (99.9%): [≈ 0, 7.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.852 ±(99.9%) 63.179 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.852, 37.179), stdev = 16.407
[info]   CI (99.9%): [≈ 0, 71.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 11.000), stdev = 1.924
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 00:57:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 573450.032 ops/s
[info] # Warmup Iteration   2: 1067548.961 ops/s
[info] # Warmup Iteration   3: 1174833.521 ops/s
[info] Iteration   1: 1151834.122 ops/s
[info]                  ·gc.alloc.rate:                   1269.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              1734.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1360.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1167458.920 ops/s
[info]                  ·gc.alloc.rate:                   1287.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              1735.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1790.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.241 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1155316.811 ops/s
[info]                  ·gc.alloc.rate:                   1281.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              1746.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1798.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.482 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1165815.095 ops/s
[info]                  ·gc.alloc.rate:                   1302.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              1758.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1781.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1171391.102 ops/s
[info]                  ·gc.alloc.rate:                   1295.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              1740.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1332.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   1162363.210 ±(99.9%) 32210.932 ops/s [Average]
[info]   (min, avg, max) = (1151834.122, 1162363.210, 1171391.102), stdev = 8365.077
[info]   CI (99.9%): [1130152.278, 1194574.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1287.552 ±(99.9%) 48.736 MB/sec [Average]
[info]   (min, avg, max) = (1269.845, 1287.552, 1302.576), stdev = 12.657
[info]   CI (99.9%): [1238.815, 1336.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1743.190 ±(99.9%) 37.489 B/op [Average]
[info]   (min, avg, max) = (1734.838, 1743.190, 1758.490), stdev = 9.736
[info]   CI (99.9%): [1705.701, 1780.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1191.233 ±(99.9%) 693.683 MB/sec [Average]
[info]   (min, avg, max) = (991.775, 1191.233, 1328.649), stdev = 180.147
[info]   CI (99.9%): [497.549, 1884.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1612.753 ±(99.9%) 936.725 B/op [Average]
[info]   (min, avg, max) = (1332.317, 1612.753, 1798.593), stdev = 243.265
[info]   CI (99.9%): [676.028, 2549.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.717 ±(99.9%) 5.258 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.717, 3.146), stdev = 1.366
[info]   CI (99.9%): [≈ 0, 5.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.967 ±(99.9%) 7.086 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.967, 4.241), stdev = 1.840
[info]   CI (99.9%): [≈ 0, 8.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 00:57:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 611281.455 ops/s
[info] # Warmup Iteration   2: 1202340.784 ops/s
[info] # Warmup Iteration   3: 1371412.287 ops/s
[info] Iteration   1: 1352169.623 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1372546.513 ops/s
[info]                  ·gc.alloc.rate:      0.182 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.209 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1377679.287 ops/s
[info]                  ·gc.alloc.rate:      0.030 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.034 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1377645.717 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1377494.171 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   1371507.062 ±(99.9%) 42472.531 ops/s [Average]
[info]   (min, avg, max) = (1352169.623, 1371507.062, 1377679.287), stdev = 11029.981
[info]   CI (99.9%): [1329034.532, 1413979.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.043 ±(99.9%) 0.305 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.043, 0.182), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.049 ±(99.9%) 0.349 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.049, 0.209), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 00:57:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14303.198 ops/s
[info] # Warmup Iteration   2: 60251.052 ops/s
[info] # Warmup Iteration   3: 66119.787 ops/s
[info] Iteration   1: 67183.032 ops/s
[info]                  ·gc.alloc.rate:                   1693.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              39682.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38655.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80.956 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 67704.630 ops/s
[info]                  ·gc.alloc.rate:                   1706.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              39653.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38112.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.519 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 68772.961 ops/s
[info]                  ·gc.alloc.rate:                   1745.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              39935.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37457.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.953 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 68766.922 ops/s
[info]                  ·gc.alloc.rate:               1752.540 MB/sec
[info]                  ·gc.alloc.rate.norm:          40100.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1647.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37697.446 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 68611.801 ops/s
[info]                  ·gc.alloc.rate:                   1763.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              40430.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45705.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.955 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   68207.869 ±(99.9%) 2789.106 ops/s [Average]
[info]   (min, avg, max) = (67183.032, 68207.869, 68772.961), stdev = 724.322
[info]   CI (99.9%): [65418.763, 70996.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1732.237 ±(99.9%) 117.204 MB/sec [Average]
[info]   (min, avg, max) = (1693.846, 1732.237, 1763.054), stdev = 30.438
[info]   CI (99.9%): [1615.033, 1849.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   39960.513 ±(99.9%) 1238.340 B/op [Average]
[info]   (min, avg, max) = (39653.069, 39960.513, 40430.975), stdev = 321.593
[info]   CI (99.9%): [38722.173, 41198.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1713.546 ±(99.9%) 601.979 MB/sec [Average]
[info]   (min, avg, max) = (1637.415, 1713.546, 1993.044), stdev = 156.332
[info]   CI (99.9%): [1111.568, 2315.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   39525.722 ±(99.9%) 13416.486 B/op [Average]
[info]   (min, avg, max) = (37457.854, 39525.722, 45705.200), stdev = 3484.219
[info]   CI (99.9%): [26109.236, 52942.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 5.733 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 3.456), stdev = 1.489
[info]   CI (99.9%): [≈ 0, 6.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   19.476 ±(99.9%) 134.356 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19.476, 80.956), stdev = 34.892
[info]   CI (99.9%): [≈ 0, 153.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 15.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 00:56:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2567.904 ops/s
[info] # Warmup Iteration   2: 15879.890 ops/s
[info] # Warmup Iteration   3: 18316.202 ops/s
[info] Iteration   1: 18073.491 ops/s
[info]                  ·gc.alloc.rate:                   1605.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              139830.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144145.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 235.650 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 17750.111 ops/s
[info]                  ·gc.alloc.rate:                   1582.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              140303.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146067.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 112.592 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 18334.922 ops/s
[info]                  ·gc.alloc.rate:               1632.744 MB/sec
[info]                  ·gc.alloc.rate.norm:          140159.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1639.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140778.390 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 18019.339 ops/s
[info]                  ·gc.alloc.rate:                   1597.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              139507.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115057.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.666 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 17818.838 ops/s
[info]                  ·gc.alloc.rate:               1583.225 MB/sec
[info]                  ·gc.alloc.rate.norm:          139831.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1656.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146295.827 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   17999.340 ±(99.9%) 889.010 ops/s [Average]
[info]   (min, avg, max) = (17750.111, 17999.340, 18334.922), stdev = 230.873
[info]   CI (99.9%): [17110.330, 18888.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1600.287 ±(99.9%) 79.396 MB/sec [Average]
[info]   (min, avg, max) = (1582.474, 1600.287, 1632.744), stdev = 20.619
[info]   CI (99.9%): [1520.891, 1679.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   139926.472 ±(99.9%) 1203.357 B/op [Average]
[info]   (min, avg, max) = (139507.187, 139926.472, 140303.566), stdev = 312.508
[info]   CI (99.9%): [138723.115, 141129.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1583.290 ±(99.9%) 573.068 MB/sec [Average]
[info]   (min, avg, max) = (1317.331, 1583.290, 1656.422), stdev = 148.824
[info]   CI (99.9%): [1010.222, 2156.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   138468.699 ±(99.9%) 51108.447 B/op [Average]
[info]   (min, avg, max) = (115057.099, 138468.699, 146295.827), stdev = 13272.701
[info]   CI (99.9%): [87360.251, 189577.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.872 ±(99.9%) 4.424 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.872, 2.706), stdev = 1.149
[info]   CI (99.9%): [≈ 0, 5.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   76.382 ±(99.9%) 385.884 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 76.382, 235.650), stdev = 100.213
[info]   CI (99.9%): [≈ 0, 462.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 19.000), stdev = 5.657
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1828.944 ops/s
[info] # Warmup Iteration   2: 15437.606 ops/s
[info] # Warmup Iteration   3: 17111.226 ops/s
[info] Iteration   1: 17024.646 ops/s
[info]                  ·gc.alloc.rate:                   1386.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              128103.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121565.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.849 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 17281.024 ops/s
[info]                  ·gc.alloc.rate:                   1397.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              127274.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119818.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 369.892 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 17438.776 ops/s
[info]                  ·gc.alloc.rate:                   1401.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              126429.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117884.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.693 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 17436.807 ops/s
[info]                  ·gc.alloc.rate:                   1414.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              127689.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147305.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.758 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 17502.796 ops/s
[info]                  ·gc.alloc.rate:               1419.886 MB/sec
[info]                  ·gc.alloc.rate.norm:          127633.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 118059.139 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   17336.810 ±(99.9%) 741.951 ops/s [Average]
[info]   (min, avg, max) = (17024.646, 17336.810, 17502.796), stdev = 192.682
[info]   CI (99.9%): [16594.859, 18078.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1403.821 ±(99.9%) 52.308 MB/sec [Average]
[info]   (min, avg, max) = (1386.050, 1403.821, 1419.886), stdev = 13.584
[info]   CI (99.9%): [1351.513, 1456.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   127425.930 ±(99.9%) 2424.724 B/op [Average]
[info]   (min, avg, max) = (126429.946, 127425.930, 128103.309), stdev = 629.693
[info]   CI (99.9%): [125001.206, 129850.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1376.523 ±(99.9%) 550.024 MB/sec [Average]
[info]   (min, avg, max) = (1306.315, 1376.523, 1631.953), stdev = 142.839
[info]   CI (99.9%): [826.499, 1926.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   124926.504 ±(99.9%) 48515.582 B/op [Average]
[info]   (min, avg, max) = (117884.397, 124926.504, 147305.688), stdev = 12599.343
[info]   CI (99.9%): [76410.922, 173442.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.908 ±(99.9%) 6.816 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.908, 4.062), stdev = 1.770
[info]   CI (99.9%): [≈ 0, 7.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   82.638 ±(99.9%) 620.831 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 82.638, 369.892), stdev = 161.228
[info]   CI (99.9%): [≈ 0, 703.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 14.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 00:56:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 305451.101 ops/s
[info] # Warmup Iteration   2: 633267.657 ops/s
[info] # Warmup Iteration   3: 665895.541 ops/s
[info] Iteration   1: 678085.528 ops/s
[info]                  ·gc.alloc.rate:                   1804.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              4188.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3850.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.006 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 669575.460 ops/s
[info]                  ·gc.alloc.rate:                   1806.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              4244.650 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4659.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 680168.456 ops/s
[info]                  ·gc.alloc.rate:                   1835.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              4247.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3832.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 680125.549 ops/s
[info]                  ·gc.alloc.rate:                   1836.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              4248.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3853.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 680170.408 ops/s
[info]                  ·gc.alloc.rate:               1836.717 MB/sec
[info]                  ·gc.alloc.rate.norm:          4248.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1675.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3875.217 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   677625.080 ±(99.9%) 17667.722 ops/s [Average]
[info]   (min, avg, max) = (669575.460, 677625.080, 680170.408), stdev = 4588.251
[info]   CI (99.9%): [659957.358, 695292.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1823.977 ±(99.9%) 65.209 MB/sec [Average]
[info]   (min, avg, max) = (1804.764, 1823.977, 1836.802), stdev = 16.935
[info]   CI (99.9%): [1758.768, 1889.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4235.481 ±(99.9%) 101.202 B/op [Average]
[info]   (min, avg, max) = (4188.553, 4235.481, 4248.766), stdev = 26.282
[info]   CI (99.9%): [4134.279, 4336.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1727.943 ±(99.9%) 549.308 MB/sec [Average]
[info]   (min, avg, max) = (1656.375, 1727.943, 1982.793), stdev = 142.653
[info]   CI (99.9%): [1178.635, 2277.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4014.402 ±(99.9%) 1390.603 B/op [Average]
[info]   (min, avg, max) = (3832.742, 4014.402, 4659.858), stdev = 361.135
[info]   CI (99.9%): [2623.800, 5405.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.650 ±(99.9%) 5.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.650, 3.019), stdev = 1.325
[info]   CI (99.9%): [≈ 0, 5.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.508 ±(99.9%) 11.844 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.508, 7.006), stdev = 3.076
[info]   CI (99.9%): [≈ 0, 13.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 9.000), stdev = 0.894
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 00:56:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 888.627 ops/s
[info] # Warmup Iteration   2: 10584.993 ops/s
[info] # Warmup Iteration   3: 12676.550 ops/s
[info] Iteration   1: 12701.428 ops/s
[info]                  ·gc.alloc.rate:                   1680.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              208196.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204135.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 392.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 12781.925 ops/s
[info]                  ·gc.alloc.rate:                   1700.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              209303.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201693.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 187.114 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 12754.487 ops/s
[info]                  ·gc.alloc.rate:               1702.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          210015.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1956.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 241410.027 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 12842.830 ops/s
[info]                  ·gc.alloc.rate:                   1720.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              210862.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201102.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.551 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 12863.717 ops/s
[info]                  ·gc.alloc.rate:               1724.487 MB/sec
[info]                  ·gc.alloc.rate.norm:          210979.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1653.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 202323.171 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   12788.877 ±(99.9%) 253.897 ops/s [Average]
[info]   (min, avg, max) = (12701.428, 12788.877, 12863.717), stdev = 65.936
[info]   CI (99.9%): [12534.980, 13042.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1705.646 ±(99.9%) 68.600 MB/sec [Average]
[info]   (min, avg, max) = (1680.397, 1705.646, 1724.487), stdev = 17.815
[info]   CI (99.9%): [1637.046, 1774.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   209871.457 ±(99.9%) 4456.606 B/op [Average]
[info]   (min, avg, max) = (208196.387, 209871.457, 210979.270), stdev = 1157.367
[info]   CI (99.9%): [205414.850, 214328.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1707.541 ±(99.9%) 537.019 MB/sec [Average]
[info]   (min, avg, max) = (1638.246, 1707.541, 1956.790), stdev = 139.462
[info]   CI (99.9%): [1170.523, 2244.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   210132.927 ±(99.9%) 67468.448 B/op [Average]
[info]   (min, avg, max) = (201102.918, 210132.927, 241410.027), stdev = 17521.342
[info]   CI (99.9%): [142664.478, 277601.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.941 ±(99.9%) 5.411 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.941, 3.165), stdev = 1.405
[info]   CI (99.9%): [≈ 0, 6.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   116.351 ±(99.9%) 669.906 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 116.351, 392.091), stdev = 173.972
[info]   CI (99.9%): [≈ 0, 786.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.200, 20.000), stdev = 5.495
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 00:56:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13184.523 ops/s
[info] # Warmup Iteration   2: 42874.763 ops/s
[info] # Warmup Iteration   3: 43681.673 ops/s
[info] Iteration   1: 44164.403 ops/s
[info]                  ·gc.alloc.rate:                   1732.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              61754.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58921.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 44440.292 ops/s
[info]                  ·gc.alloc.rate:                   1737.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              61524.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58204.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.161 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 44661.540 ops/s
[info]                  ·gc.alloc.rate:                   1738.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              61273.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57926.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.734 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 44547.636 ops/s
[info]                  ·gc.alloc.rate:                   1754.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              61983.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58401.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.471 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 44281.900 ops/s
[info]                  ·gc.alloc.rate:                   1758.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              62509.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71030.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.480 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   44419.154 ±(99.9%) 768.785 ops/s [Average]
[info]   (min, avg, max) = (44164.403, 44419.154, 44661.540), stdev = 199.651
[info]   CI (99.9%): [43650.370, 45187.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1744.618 ±(99.9%) 44.022 MB/sec [Average]
[info]   (min, avg, max) = (1732.959, 1744.618, 1758.801), stdev = 11.432
[info]   CI (99.9%): [1700.595, 1788.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   61809.392 ±(99.9%) 1818.564 B/op [Average]
[info]   (min, avg, max) = (61273.715, 61809.392, 62509.959), stdev = 472.275
[info]   CI (99.9%): [59990.827, 63627.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1718.632 ±(99.9%) 602.800 MB/sec [Average]
[info]   (min, avg, max) = (1643.877, 1718.632, 1998.538), stdev = 156.545
[info]   CI (99.9%): [1115.832, 2321.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   60897.064 ±(99.9%) 21857.889 B/op [Average]
[info]   (min, avg, max) = (57926.863, 60897.064, 71030.506), stdev = 5676.424
[info]   CI (99.9%): [39039.175, 82754.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 6.277 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.791, 3.706), stdev = 1.630
[info]   CI (99.9%): [≈ 0, 7.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   28.179 ±(99.9%) 223.691 B/op [Average]
[info]   (min, avg, max) = (0.734, 28.179, 132.051), stdev = 58.092
[info]   CI (99.9%): [≈ 0, 251.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 13.000), stdev = 2.966
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 00:55:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18327.876 ops/s
[info] # Warmup Iteration   2: 56263.353 ops/s
[info] # Warmup Iteration   3: 57784.706 ops/s
[info] Iteration   1: 58501.443 ops/s
[info]                  ·gc.alloc.rate:               1803.469 MB/sec
[info]                  ·gc.alloc.rate.norm:          48504.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1958.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52678.798 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 59067.010 ops/s
[info]                  ·gc.alloc.rate:                   1804.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              48066.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43886.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.555 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 59208.598 ops/s
[info]                  ·gc.alloc.rate:               1829.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          48622.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1662.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44172.470 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 58901.579 ops/s
[info]                  ·gc.alloc.rate:                   1834.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              49006.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53684.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.556 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 59000.121 ops/s
[info]                  ·gc.alloc.rate:                   1824.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              48657.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44913.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.555 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   58935.750 ±(99.9%) 1028.938 ops/s [Average]
[info]   (min, avg, max) = (58501.443, 58935.750, 59208.598), stdev = 267.212
[info]   CI (99.9%): [57906.813, 59964.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1819.177 ±(99.9%) 56.011 MB/sec [Average]
[info]   (min, avg, max) = (1803.469, 1819.177, 1834.389), stdev = 14.546
[info]   CI (99.9%): [1763.166, 1875.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   48571.159 ±(99.9%) 1303.341 B/op [Average]
[info]   (min, avg, max) = (48066.592, 48571.159, 49006.132), stdev = 338.474
[info]   CI (99.9%): [47267.818, 49874.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1792.307 ±(99.9%) 679.571 MB/sec [Average]
[info]   (min, avg, max) = (1647.166, 1792.307, 2009.512), stdev = 176.482
[info]   CI (99.9%): [1112.736, 2471.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   47867.117 ±(99.9%) 18787.043 B/op [Average]
[info]   (min, avg, max) = (43886.655, 47867.117, 53684.585), stdev = 4878.935
[info]   CI (99.9%): [29080.074, 66654.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.333 ±(99.9%) 1.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.333, 0.556), stdev = 0.304
[info]   CI (99.9%): [≈ 0, 1.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 8.000), stdev = 0.837
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 00:55:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 534175.164 ops/s
[info] # Warmup Iteration   2: 1219383.483 ops/s
[info] # Warmup Iteration   3: 1309579.952 ops/s
[info] Iteration   1: 1302535.497 ops/s
[info]                  ·gc.alloc.rate:                   1209.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              1461.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1200.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1295395.878 ops/s
[info]                  ·gc.alloc.rate:                   1225.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              1488.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1613.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.938 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.569 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1281135.771 ops/s
[info]                  ·gc.alloc.rate:                   1197.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              1471.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1216.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1297669.208 ops/s
[info]                  ·gc.alloc.rate:                   1219.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              1479.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1599.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1294864.046 ops/s
[info]                  ·gc.alloc.rate:               1230.565 MB/sec
[info]                  ·gc.alloc.rate.norm:          1495.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1606.412 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1294320.080 ±(99.9%) 30683.917 ops/s [Average]
[info]   (min, avg, max) = (1281135.771, 1294320.080, 1302535.497), stdev = 7968.516
[info]   CI (99.9%): [1263636.162, 1325003.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1216.571 ±(99.9%) 50.104 MB/sec [Average]
[info]   (min, avg, max) = (1197.891, 1216.571, 1230.565), stdev = 13.012
[info]   CI (99.9%): [1166.467, 1266.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1479.123 ±(99.9%) 52.098 B/op [Average]
[info]   (min, avg, max) = (1461.050, 1479.123, 1495.306), stdev = 13.530
[info]   CI (99.9%): [1427.025, 1531.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1190.701 ±(99.9%) 697.201 MB/sec [Average]
[info]   (min, avg, max) = (990.539, 1190.701, 1327.744), stdev = 181.061
[info]   CI (99.9%): [493.501, 1887.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1447.395 ±(99.9%) 838.787 B/op [Average]
[info]   (min, avg, max) = (1200.946, 1447.395, 1613.037), stdev = 217.830
[info]   CI (99.9%): [608.607, 2286.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.667 ±(99.9%) 4.905 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.667, 2.938), stdev = 1.274
[info]   CI (99.9%): [≈ 0, 5.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.811 ±(99.9%) 5.958 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.811, 3.569), stdev = 1.547
[info]   CI (99.9%): [≈ 0, 6.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 00:55:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 957702.770 ops/s
[info] # Warmup Iteration   2: 1521856.915 ops/s
[info] # Warmup Iteration   3: 1525753.999 ops/s
[info] Iteration   1: 1572786.246 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1573111.094 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1540704.212 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1575663.021 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1573925.732 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1567238.061 ±(99.9%) 57277.111 ops/s [Average]
[info]   (min, avg, max) = (1540704.212, 1567238.061, 1575663.021), stdev = 14874.684
[info]   CI (99.9%): [1509960.950, 1624515.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 00:55:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1069.507 ops/s
[info] # Warmup Iteration   2: 3352.956 ops/s
[info] # Warmup Iteration   3: 3394.212 ops/s
[info] Iteration   1: 3504.130 ops/s
[info]                  ·gc.alloc.rate:               484.486 MB/sec
[info]                  ·gc.alloc.rate.norm:          217590.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147189.555 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3508.655 ops/s
[info]                  ·gc.alloc.rate:                   474.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              212758.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     294258.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.848 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3465.111 ops/s
[info]                  ·gc.alloc.rate:                   475.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              215999.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149148.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.454 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3483.385 ops/s
[info]                  ·gc.alloc.rate:               479.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          216660.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 148678.687 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 3475.849 ops/s
[info]                  ·gc.alloc.rate:                   476.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              215558.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     297956.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.848 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3487.426 ±(99.9%) 71.471 ops/s [Average]
[info]   (min, avg, max) = (3465.111, 3487.426, 3508.655), stdev = 18.561
[info]   CI (99.9%): [3415.955, 3558.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   478.042 ±(99.9%) 15.667 MB/sec [Average]
[info]   (min, avg, max) = (474.378, 478.042, 484.486), stdev = 4.069
[info]   CI (99.9%): [462.374, 493.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   215713.359 ±(99.9%) 7009.866 B/op [Average]
[info]   (min, avg, max) = (212758.423, 215713.359, 217590.131), stdev = 1820.440
[info]   CI (99.9%): [208703.492, 222723.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   459.916 ±(99.9%) 693.513 MB/sec [Average]
[info]   (min, avg, max) = (327.732, 459.916, 658.319), stdev = 180.103
[info]   CI (99.9%): [≈ 0, 1153.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   207446.212 ±(99.9%) 311709.179 B/op [Average]
[info]   (min, avg, max) = (147189.555, 207446.212, 297956.022), stdev = 80949.884
[info]   CI (99.9%): [≈ 0, 519155.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.031 ±(99.9%) 0.149 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.093), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   14.030 ±(99.9%) 67.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.030, 41.848), stdev = 17.405
[info]   CI (99.9%): [≈ 0, 81.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 2.191
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 00:54:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36010.548 ops/s
[info] # Warmup Iteration   2: 108840.054 ops/s
[info] # Warmup Iteration   3: 119193.950 ops/s
[info] Iteration   1: 122366.575 ops/s
[info]                  ·gc.alloc.rate:                   1922.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              24717.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25524.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.731 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 122569.953 ops/s
[info]                  ·gc.alloc.rate:                   1925.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              24728.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21094.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.337 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 122993.004 ops/s
[info]                  ·gc.alloc.rate:                   1959.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              25065.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25309.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 123177.157 ops/s
[info]                  ·gc.alloc.rate:                   1969.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              25159.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25467.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 122169.774 ops/s
[info]                  ·gc.alloc.rate:               1949.471 MB/sec
[info]                  ·gc.alloc.rate.norm:          25096.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2006.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25833.326 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   122655.293 ±(99.9%) 1625.456 ops/s [Average]
[info]   (min, avg, max) = (122169.774, 122655.293, 123177.157), stdev = 422.126
[info]   CI (99.9%): [121029.837, 124280.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   1945.308 ±(99.9%) 79.605 MB/sec [Average]
[info]   (min, avg, max) = (1922.400, 1945.308, 1969.747), stdev = 20.673
[info]   CI (99.9%): [1865.703, 2024.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24953.749 ±(99.9%) 820.936 B/op [Average]
[info]   (min, avg, max) = (24717.913, 24953.749, 25159.771), stdev = 213.195
[info]   CI (99.9%): [24132.813, 25774.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1921.326 ±(99.9%) 600.957 MB/sec [Average]
[info]   (min, avg, max) = (1642.796, 1921.326, 2006.685), stdev = 156.067
[info]   CI (99.9%): [1320.369, 2522.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24645.909 ±(99.9%) 7679.903 B/op [Average]
[info]   (min, avg, max) = (21094.357, 24645.909, 25833.326), stdev = 1994.446
[info]   CI (99.9%): [16966.006, 32325.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 6.466 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 3.790), stdev = 1.679
[info]   CI (99.9%): [≈ 0, 7.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.120 ±(99.9%) 83.136 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.120, 48.731), stdev = 21.590
[info]   CI (99.9%): [≈ 0, 93.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 13.000), stdev = 2.510
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:54:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.776 ops/s
[info] # Warmup Iteration   2: 348596.765 ops/s
[info] # Warmup Iteration   3: 369975.272 ops/s
[info] Iteration   1: 374592.989 ops/s
[info]                  ·gc.alloc.rate:               768.230 MB/sec
[info]                  ·gc.alloc.rate.norm:          3227.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2731.840 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 367222.131 ops/s
[info]                  ·gc.alloc.rate:               782.087 MB/sec
[info]                  ·gc.alloc.rate.norm:          3351.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2792.274 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 378308.600 ops/s
[info]                  ·gc.alloc.rate:                   786.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              3270.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4075.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 373008.655 ops/s
[info]                  ·gc.alloc.rate:                   766.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              3236.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2760.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 376877.758 ops/s
[info]                  ·gc.alloc.rate:                   769.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              3213.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2730.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.654 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   374002.027 ±(99.9%) 16575.603 ops/s [Average]
[info]   (min, avg, max) = (367222.131, 374002.027, 378308.600), stdev = 4304.632
[info]   CI (99.9%): [357426.424, 390577.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   774.589 ±(99.9%) 33.989 MB/sec [Average]
[info]   (min, avg, max) = (766.989, 774.589, 786.076), stdev = 8.827
[info]   CI (99.9%): [740.600, 808.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3259.907 ±(99.9%) 212.938 B/op [Average]
[info]   (min, avg, max) = (3213.662, 3259.907, 3351.549), stdev = 55.299
[info]   CI (99.9%): [3046.969, 3472.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   717.882 ±(99.9%) 563.398 MB/sec [Average]
[info]   (min, avg, max) = (650.190, 717.882, 979.597), stdev = 146.313
[info]   CI (99.9%): [154.483, 1281.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3018.047 ±(99.9%) 2277.943 B/op [Average]
[info]   (min, avg, max) = (2730.420, 3018.047, 4075.323), stdev = 591.575
[info]   CI (99.9%): [740.105, 5295.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.904 ±(99.9%) 7.669 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.904, 4.467), stdev = 1.992
[info]   CI (99.9%): [≈ 0, 8.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   3.777 ±(99.9%) 32.026 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.777, 18.654), stdev = 8.317
[info]   CI (99.9%): [≈ 0, 35.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:54:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85125.669 ops/s
[info] # Warmup Iteration   2: 234649.365 ops/s
[info] # Warmup Iteration   3: 246202.093 ops/s
[info] Iteration   1: 254620.366 ops/s
[info]                  ·gc.alloc.rate:                   565.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              3493.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4025.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.608 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 260034.791 ops/s
[info]                  ·gc.alloc.rate:               564.765 MB/sec
[info]                  ·gc.alloc.rate.norm:          3416.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1967.589 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 253634.491 ops/s
[info]                  ·gc.alloc.rate:                   563.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              3493.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4017.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 257792.119 ops/s
[info]                  ·gc.alloc.rate:                   570.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              3481.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3953.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 256749.427 ops/s
[info]                  ·gc.alloc.rate:               564.801 MB/sec
[info]                  ·gc.alloc.rate.norm:          3462.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3973.240 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   256566.239 ±(99.9%) 9807.576 ops/s [Average]
[info]   (min, avg, max) = (253634.491, 256566.239, 260034.791), stdev = 2546.996
[info]   CI (99.9%): [246758.662, 266373.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   565.632 ±(99.9%) 10.442 MB/sec [Average]
[info]   (min, avg, max) = (563.074, 565.632, 570.247), stdev = 2.712
[info]   CI (99.9%): [555.190, 576.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3469.487 ±(99.9%) 123.559 B/op [Average]
[info]   (min, avg, max) = (3416.869, 3469.487, 3493.841), stdev = 32.088
[info]   CI (99.9%): [3345.928, 3593.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   583.954 ±(99.9%) 556.980 MB/sec [Average]
[info]   (min, avg, max) = (325.218, 583.954, 651.235), stdev = 144.646
[info]   CI (99.9%): [26.974, 1140.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3587.366 ±(99.9%) 3488.619 B/op [Average]
[info]   (min, avg, max) = (1967.589, 3587.366, 4025.161), stdev = 905.983
[info]   CI (99.9%): [98.747, 7075.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 7.117 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.837, 4.143), stdev = 1.848
[info]   CI (99.9%): [≈ 0, 7.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.173 ±(99.9%) 43.988 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.173, 25.608), stdev = 11.424
[info]   CI (99.9%): [≈ 0, 49.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 6.000), stdev = 1.871
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:54:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 324789.912 ops/s
[info] # Warmup Iteration   2: 507370.713 ops/s
[info] # Warmup Iteration   3: 498395.450 ops/s
[info] Iteration   1: 503735.354 ops/s
[info]                  ·gc.alloc.rate:                   669.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              2090.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2062.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 501770.510 ops/s
[info]                  ·gc.alloc.rate:                   651.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              2043.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2074.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 513307.605 ops/s
[info]                  ·gc.alloc.rate:                   670.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              2054.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2031.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 515901.180 ops/s
[info]                  ·gc.alloc.rate:               671.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          2048.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2023.152 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 514241.764 ops/s
[info]                  ·gc.alloc.rate:                   662.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              2026.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2032.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.646 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   509791.283 ±(99.9%) 25140.697 ops/s [Average]
[info]   (min, avg, max) = (501770.510, 509791.283, 515901.180), stdev = 6528.959
[info]   CI (99.9%): [484650.586, 534931.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   665.102 ±(99.9%) 31.545 MB/sec [Average]
[info]   (min, avg, max) = (651.889, 665.102, 671.631), stdev = 8.192
[info]   CI (99.9%): [633.557, 696.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   2052.926 ±(99.9%) 89.827 B/op [Average]
[info]   (min, avg, max) = (2026.887, 2052.926, 2090.267), stdev = 23.328
[info]   CI (99.9%): [1963.099, 2142.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   662.485 ±(99.9%) 5.618 MB/sec [Average]
[info]   (min, avg, max) = (660.498, 662.485, 664.341), stdev = 1.459
[info]   CI (99.9%): [656.868, 668.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2044.963 ±(99.9%) 86.566 B/op [Average]
[info]   (min, avg, max) = (2023.152, 2044.963, 2074.919), stdev = 22.481
[info]   CI (99.9%): [1958.397, 2131.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.525 ±(99.9%) 4.250 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.525, 2.499), stdev = 1.104
[info]   CI (99.9%): [≈ 0, 4.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.607 ±(99.9%) 13.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.607, 7.646), stdev = 3.377
[info]   CI (99.9%): [≈ 0, 14.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:54:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6083.078 ops/s
[info] # Warmup Iteration   2: 59921.626 ops/s
[info] # Warmup Iteration   3: 71044.189 ops/s
[info] Iteration   1: 72545.667 ops/s
[info]                  ·gc.alloc.rate:                   3043.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              66021.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2937.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63728.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.613 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 72432.364 ops/s
[info]                  ·gc.alloc.rate:                   3066.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              66635.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2968.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64493.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.905 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 73249.763 ops/s
[info]                  ·gc.alloc.rate:                   3101.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              66649.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3009.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64661.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 72642.791 ops/s
[info]                  ·gc.alloc.rate:                   3080.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              66739.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3035.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65760.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.451 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 71921.772 ops/s
[info]                  ·gc.alloc.rate:               3034.362 MB/sec
[info]                  ·gc.alloc.rate.norm:          66400.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2710.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59316.777 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   72558.471 ±(99.9%) 1833.050 ops/s [Average]
[info]   (min, avg, max) = (71921.772, 72558.471, 73249.763), stdev = 476.037
[info]   CI (99.9%): [70725.421, 74391.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3065.426 ±(99.9%) 105.520 MB/sec [Average]
[info]   (min, avg, max) = (3034.362, 3065.426, 3101.954), stdev = 27.403
[info]   CI (99.9%): [2959.905, 3170.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   66489.280 ±(99.9%) 1117.459 B/op [Average]
[info]   (min, avg, max) = (66021.025, 66489.280, 66739.451), stdev = 290.200
[info]   CI (99.9%): [65371.822, 67606.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2932.284 ±(99.9%) 498.347 MB/sec [Average]
[info]   (min, avg, max) = (2710.647, 2932.284, 3035.268), stdev = 129.419
[info]   CI (99.9%): [2433.938, 3430.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63592.158 ±(99.9%) 9617.979 B/op [Average]
[info]   (min, avg, max) = (59316.777, 63592.158, 65760.602), stdev = 2497.759
[info]   CI (99.9%): [53974.179, 73210.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.257 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.167), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.083 ±(99.9%) 5.583 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.083, 3.613), stdev = 1.450
[info]   CI (99.9%): [≈ 0, 6.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   44.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.000, 13.000), stdev = 1.225
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:53:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39466.390 ops/s
[info] # Warmup Iteration   2: 125094.405 ops/s
[info] # Warmup Iteration   3: 128877.804 ops/s
[info] Iteration   1: 131638.516 ops/s
[info]                  ·gc.alloc.rate:                   1161.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              13882.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15778.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.498 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 133577.926 ops/s
[info]                  ·gc.alloc.rate:                   1173.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              13828.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11683.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.887 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 133942.422 ops/s
[info]                  ·gc.alloc.rate:                   1178.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              13827.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15450.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.720 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 133462.107 ops/s
[info]                  ·gc.alloc.rate:                   1171.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              13812.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11618.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.491 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 134373.803 ops/s
[info]                  ·gc.alloc.rate:                   1179.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              13812.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11543.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.488 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   133398.955 ±(99.9%) 4029.791 ops/s [Average]
[info]   (min, avg, max) = (131638.516, 133398.955, 134373.803), stdev = 1046.524
[info]   CI (99.9%): [129369.163, 137428.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1172.824 ±(99.9%) 27.124 MB/sec [Average]
[info]   (min, avg, max) = (1161.568, 1172.824, 1179.292), stdev = 7.044
[info]   CI (99.9%): [1145.701, 1199.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   13832.640 ±(99.9%) 110.900 B/op [Average]
[info]   (min, avg, max) = (13812.351, 13832.640, 13882.317), stdev = 28.800
[info]   CI (99.9%): [13721.740, 13943.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1119.841 ±(99.9%) 697.532 MB/sec [Average]
[info]   (min, avg, max) = (985.377, 1119.841, 1320.189), stdev = 181.147
[info]   CI (99.9%): [422.309, 1817.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13214.931 ±(99.9%) 8448.097 B/op [Average]
[info]   (min, avg, max) = (11543.666, 13214.931, 15778.061), stdev = 2193.944
[info]   CI (99.9%): [4766.834, 21663.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 4.472 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.766, 2.707), stdev = 1.161
[info]   CI (99.9%): [≈ 0, 5.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.017 ±(99.9%) 52.670 B/op [Average]
[info]   (min, avg, max) = (0.488, 9.017, 31.887), stdev = 13.678
[info]   CI (99.9%): [≈ 0, 61.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.421
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:53:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.692 ops/s
[info] # Warmup Iteration   2: 201728.555 ops/s
[info] # Warmup Iteration   3: 204845.152 ops/s
[info] Iteration   1: 208279.216 ops/s
[info]                  ·gc.alloc.rate:               167.011 MB/sec
[info]                  ·gc.alloc.rate.norm:          1261.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1932.887 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 208842.719 ops/s
[info]                  ·gc.alloc.rate:      163.480 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 208138.886 ops/s
[info]                  ·gc.alloc.rate:               167.961 MB/sec
[info]                  ·gc.alloc.rate.norm:          1270.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1934.354 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 209149.255 ops/s
[info]                  ·gc.alloc.rate:      163.725 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 208376.806 ops/s
[info]                  ·gc.alloc.rate:                   171.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              1293.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2450.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.220 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   208557.376 ±(99.9%) 1630.117 ops/s [Average]
[info]   (min, avg, max) = (208138.886, 208557.376, 209149.255), stdev = 423.336
[info]   CI (99.9%): [206927.260, 210187.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   166.701 ±(99.9%) 12.524 MB/sec [Average]
[info]   (min, avg, max) = (163.480, 166.701, 171.327), stdev = 3.253
[info]   CI (99.9%): [154.176, 179.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1257.970 ±(99.9%) 102.019 B/op [Average]
[info]   (min, avg, max) = (1232.002, 1257.970, 1293.999), stdev = 26.494
[info]   CI (99.9%): [1155.951, 1359.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   167.217 ±(99.9%) 597.605 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.217, 324.435), stdev = 155.196
[info]   CI (99.9%): [≈ 0, 764.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1263.526 ±(99.9%) 4515.156 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1263.526, 2450.391), stdev = 1172.572
[info]   CI (99.9%): [≈ 0, 5778.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.050 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.379 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.220), stdev = 0.098
[info]   CI (99.9%): [≈ 0, 0.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.871
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:53:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168772.079 ops/s
[info] # Warmup Iteration   2: 398756.621 ops/s
[info] # Warmup Iteration   3: 426280.080 ops/s
[info] Iteration   1: 424584.824 ops/s
[info]                  ·gc.alloc.rate:               436.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          1616.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:      582.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2157.091 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 416640.407 ops/s
[info]                  ·gc.alloc.rate:               420.180 MB/sec
[info]                  ·gc.alloc.rate.norm:          1587.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1231.795 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 421112.005 ops/s
[info]                  ·gc.alloc.rate:                   423.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              1581.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1222.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 426953.169 ops/s
[info]                  ·gc.alloc.rate:               431.191 MB/sec
[info]                  ·gc.alloc.rate.norm:          1589.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1205.663 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 425906.170 ops/s
[info]                  ·gc.alloc.rate:                   437.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              1618.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2422.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   423039.315 ±(99.9%) 16175.712 ops/s [Average]
[info]   (min, avg, max) = (416640.407, 423039.315, 426953.169), stdev = 4200.781
[info]   CI (99.9%): [406863.603, 439215.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   429.726 ±(99.9%) 30.107 MB/sec [Average]
[info]   (min, avg, max) = (420.180, 429.726, 437.987), stdev = 7.819
[info]   CI (99.9%): [399.619, 459.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1598.547 ±(99.9%) 66.897 B/op [Average]
[info]   (min, avg, max) = (1581.600, 1598.547, 1618.432), stdev = 17.373
[info]   CI (99.9%): [1531.650, 1665.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   443.563 ±(99.9%) 623.943 MB/sec [Average]
[info]   (min, avg, max) = (326.134, 443.563, 655.504), stdev = 162.036
[info]   CI (99.9%): [≈ 0, 1067.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1647.832 ±(99.9%) 2285.025 B/op [Average]
[info]   (min, avg, max) = (1205.663, 1647.832, 2422.194), stdev = 593.414
[info]   CI (99.9%): [≈ 0, 3932.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.326 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.156), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:53:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 217043.147 ops/s
[info] # Warmup Iteration   2: 452322.356 ops/s
[info] # Warmup Iteration   3: 467054.155 ops/s
[info] Iteration   1: 469230.584 ops/s
[info]                  ·gc.alloc.rate:               380.100 MB/sec
[info]                  ·gc.alloc.rate.norm:          1274.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 858.042 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 471288.737 ops/s
[info]                  ·gc.alloc.rate:               377.666 MB/sec
[info]                  ·gc.alloc.rate.norm:          1261.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1101.174 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 468171.711 ops/s
[info]                  ·gc.alloc.rate:               376.269 MB/sec
[info]                  ·gc.alloc.rate.norm:          1264.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1108.533 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 470023.768 ops/s
[info]                  ·gc.alloc.rate:               382.942 MB/sec
[info]                  ·gc.alloc.rate.norm:          1280.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2205.707 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 472381.582 ops/s
[info]                  ·gc.alloc.rate:               379.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          1265.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1101.912 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   470219.276 ±(99.9%) 6393.568 ops/s [Average]
[info]   (min, avg, max) = (468171.711, 470219.276, 472381.582), stdev = 1660.389
[info]   CI (99.9%): [463825.708, 476612.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   379.366 ±(99.9%) 9.826 MB/sec [Average]
[info]   (min, avg, max) = (376.269, 379.366, 382.942), stdev = 2.552
[info]   CI (99.9%): [369.540, 389.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1269.407 ±(99.9%) 31.395 B/op [Average]
[info]   (min, avg, max) = (1261.008, 1269.407, 1280.867), stdev = 8.153
[info]   CI (99.9%): [1238.013, 1300.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.118 ±(99.9%) 611.777 MB/sec [Average]
[info]   (min, avg, max) = (255.847, 381.118, 659.443), stdev = 158.877
[info]   CI (99.9%): [≈ 0, 992.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1275.074 ±(99.9%) 2044.794 B/op [Average]
[info]   (min, avg, max) = (858.042, 1275.074, 2205.707), stdev = 531.027
[info]   CI (99.9%): [≈ 0, 3319.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:53:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 308166.778 ops/s
[info] # Warmup Iteration   2: 461970.389 ops/s
[info] # Warmup Iteration   3: 481604.739 ops/s
[info] Iteration   1: 499671.019 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 500793.976 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 498829.147 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 500935.761 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 500702.291 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   500186.439 ±(99.9%) 3499.952 ops/s [Average]
[info]   (min, avg, max) = (498829.147, 500186.439, 500935.761), stdev = 908.926
[info]   CI (99.9%): [496686.487, 503686.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:52:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3762.549 ops/s
[info] # Warmup Iteration   2: 25485.527 ops/s
[info] # Warmup Iteration   3: 28126.198 ops/s
[info] Iteration   1: 28245.442 ops/s
[info]                  ·gc.alloc.rate:                   1530.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              85258.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73458.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.160 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 27673.266 ops/s
[info]                  ·gc.alloc.rate:                   1547.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              87996.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93499.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 230.861 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 28558.308 ops/s
[info]                  ·gc.alloc.rate:                   1557.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              85822.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90128.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.147 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 28340.803 ops/s
[info]                  ·gc.alloc.rate:                   1538.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              85442.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72919.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.312 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 28575.177 ops/s
[info]                  ·gc.alloc.rate:                   1570.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              86489.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90998.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.293 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   28278.599 ±(99.9%) 1411.659 ops/s [Average]
[info]   (min, avg, max) = (27673.266, 28278.599, 28575.177), stdev = 366.603
[info]   CI (99.9%): [26866.940, 29690.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1548.783 ±(99.9%) 60.741 MB/sec [Average]
[info]   (min, avg, max) = (1530.154, 1548.783, 1570.428), stdev = 15.774
[info]   CI (99.9%): [1488.042, 1609.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   86202.203 ±(99.9%) 4267.950 B/op [Average]
[info]   (min, avg, max) = (85258.905, 86202.203, 87996.875), stdev = 1108.373
[info]   CI (99.9%): [81934.253, 90470.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1512.675 ±(99.9%) 692.675 MB/sec [Average]
[info]   (min, avg, max) = (1313.103, 1512.675, 1652.297), stdev = 179.886
[info]   CI (99.9%): [820.000, 2205.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   84200.924 ±(99.9%) 39008.278 B/op [Average]
[info]   (min, avg, max) = (72919.003, 84200.924, 93499.731), stdev = 10130.326
[info]   CI (99.9%): [45192.645, 123209.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 6.937 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.837, 4.059), stdev = 1.801
[info]   CI (99.9%): [≈ 0, 7.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   47.555 ±(99.9%) 394.586 B/op [Average]
[info]   (min, avg, max) = (1.147, 47.555, 230.861), stdev = 102.473
[info]   CI (99.9%): [≈ 0, 442.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 14.000), stdev = 3.271
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:52:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1110.512 ops/s
[info] # Warmup Iteration   2: 7274.577 ops/s
[info] # Warmup Iteration   3: 7502.748 ops/s
[info] Iteration   1: 8266.365 ops/s
[info]                  ·gc.alloc.rate:                   1190.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              226538.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188966.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.963 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 8131.077 ops/s
[info]                  ·gc.alloc.rate:                   1175.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              227594.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     256374.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 547.946 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 8323.216 ops/s
[info]                  ·gc.alloc.rate:                   1196.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              226344.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187358.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 181.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 8303.729 ops/s
[info]                  ·gc.alloc.rate:                   1206.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              228767.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     248981.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.292 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 8298.313 ops/s
[info]                  ·gc.alloc.rate:                   1212.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              230032.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186911.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.948 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   8264.540 ±(99.9%) 297.864 ops/s [Average]
[info]   (min, avg, max) = (8131.077, 8264.540, 8323.216), stdev = 77.354
[info]   CI (99.9%): [7966.676, 8562.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1196.572 ±(99.9%) 55.910 MB/sec [Average]
[info]   (min, avg, max) = (1175.909, 1196.572, 1212.870), stdev = 14.520
[info]   CI (99.9%): [1140.661, 1252.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   227855.355 ±(99.9%) 5983.881 B/op [Average]
[info]   (min, avg, max) = (226344.045, 227855.355, 230032.682), stdev = 1553.995
[info]   CI (99.9%): [221871.474, 233839.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1121.460 ±(99.9%) 695.057 MB/sec [Average]
[info]   (min, avg, max) = (985.511, 1121.460, 1324.605), stdev = 180.504
[info]   CI (99.9%): [426.403, 1816.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   213718.581 ±(99.9%) 137348.748 B/op [Average]
[info]   (min, avg, max) = (186911.830, 213718.581, 256374.447), stdev = 35669.034
[info]   CI (99.9%): [76369.832, 351067.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 4.573 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.820, 2.831), stdev = 1.188
[info]   CI (99.9%): [≈ 0, 5.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   157.642 ±(99.9%) 885.303 B/op [Average]
[info]   (min, avg, max) = (3.948, 157.642, 547.946), stdev = 229.910
[info]   CI (99.9%): [≈ 0, 1042.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 15.000), stdev = 4.970
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:52:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1158.598 ops/s
[info] # Warmup Iteration   2: 6985.738 ops/s
[info] # Warmup Iteration   3: 8327.143 ops/s
[info] Iteration   1: 8333.976 ops/s
[info]                  ·gc.alloc.rate:                   1122.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              212016.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     247804.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.862 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 8254.216 ops/s
[info]                  ·gc.alloc.rate:                   1095.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              208852.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188098.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.969 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 8326.935 ops/s
[info]                  ·gc.alloc.rate:                   1108.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              209438.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186472.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 756.726 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 8420.440 ops/s
[info]                  ·gc.alloc.rate:                   1132.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              211615.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244277.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.597 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 8380.199 ops/s
[info]                  ·gc.alloc.rate:                   1135.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              213101.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     183916.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.910 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   8343.153 ±(99.9%) 240.495 ops/s [Average]
[info]   (min, avg, max) = (8254.216, 8343.153, 8420.440), stdev = 62.456
[info]   CI (99.9%): [8102.659, 8583.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1118.865 ±(99.9%) 63.781 MB/sec [Average]
[info]   (min, avg, max) = (1095.890, 1118.865, 1135.071), stdev = 16.564
[info]   CI (99.9%): [1055.084, 1182.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   211004.822 ±(99.9%) 6909.790 B/op [Average]
[info]   (min, avg, max) = (208852.032, 211004.822, 213101.327), stdev = 1794.450
[info]   CI (99.9%): [204095.033, 217914.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1114.545 ±(99.9%) 686.019 MB/sec [Average]
[info]   (min, avg, max) = (979.621, 1114.545, 1312.280), stdev = 178.157
[info]   CI (99.9%): [428.527, 1800.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   210113.848 ±(99.9%) 126509.944 B/op [Average]
[info]   (min, avg, max) = (183916.802, 210113.848, 247804.069), stdev = 32854.231
[info]   CI (99.9%): [83603.904, 336623.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.909 ±(99.9%) 6.701 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.909, 4.004), stdev = 1.740
[info]   CI (99.9%): [≈ 0, 7.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   171.613 ±(99.9%) 1266.621 B/op [Average]
[info]   (min, avg, max) = (3.910, 171.613, 756.726), stdev = 328.938
[info]   CI (99.9%): [≈ 0, 1438.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 15.000), stdev = 4.147
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:52:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64719.205 ops/s
[info] # Warmup Iteration   2: 175582.655 ops/s
[info] # Warmup Iteration   3: 188997.977 ops/s
[info] Iteration   1: 190071.296 ops/s
[info]                  ·gc.alloc.rate:                   1653.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              13689.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13745.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 189373.051 ops/s
[info]                  ·gc.alloc.rate:                   1657.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              13778.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13734.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 191410.031 ops/s
[info]                  ·gc.alloc.rate:               1679.206 MB/sec
[info]                  ·gc.alloc.rate.norm:          13806.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1652.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13584.010 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 190161.321 ops/s
[info]                  ·gc.alloc.rate:               1674.750 MB/sec
[info]                  ·gc.alloc.rate.norm:          13858.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1660.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13736.840 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 190225.051 ops/s
[info]                  ·gc.alloc.rate:               1674.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          13853.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1669.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13809.381 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   190248.150 ±(99.9%) 2826.432 ops/s [Average]
[info]   (min, avg, max) = (189373.051, 190248.150, 191410.031), stdev = 734.016
[info]   CI (99.9%): [187421.718, 193074.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1667.932 ±(99.9%) 44.369 MB/sec [Average]
[info]   (min, avg, max) = (1653.241, 1667.932, 1679.206), stdev = 11.523
[info]   CI (99.9%): [1623.563, 1712.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   13797.317 ±(99.9%) 264.453 B/op [Average]
[info]   (min, avg, max) = (13689.680, 13797.317, 13858.089), stdev = 68.677
[info]   CI (99.9%): [13532.864, 14061.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1658.823 ±(99.9%) 26.640 MB/sec [Average]
[info]   (min, avg, max) = (1652.132, 1658.823, 1669.144), stdev = 6.918
[info]   CI (99.9%): [1632.182, 1685.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   13722.192 ±(99.9%) 320.027 B/op [Average]
[info]   (min, avg, max) = (13584.010, 13722.192, 13809.381), stdev = 83.110
[info]   CI (99.9%): [13402.165, 14042.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.633 ±(99.9%) 4.929 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.633, 2.914), stdev = 1.280
[info]   CI (99.9%): [≈ 0, 5.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.242 ±(99.9%) 40.811 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.242, 24.132), stdev = 10.598
[info]   CI (99.9%): [≈ 0, 46.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 13.000), stdev = 2.950
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:52:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 642.631 ops/s
[info] # Warmup Iteration   2: 6161.795 ops/s
[info] # Warmup Iteration   3: 7529.818 ops/s
[info] Iteration   1: 7828.894 ops/s
[info]                  ·gc.alloc.rate:                   1317.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              264703.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263784.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.184 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 7857.660 ops/s
[info]                  ·gc.alloc.rate:                   1313.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              263089.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263511.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 847.750 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 7938.505 ops/s
[info]                  ·gc.alloc.rate:                   1335.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              264831.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258842.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.793 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 7900.473 ops/s
[info]                  ·gc.alloc.rate:               1317.337 MB/sec
[info]                  ·gc.alloc.rate.norm:          262304.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1303.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 259556.398 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 7955.811 ops/s
[info]                  ·gc.alloc.rate:               1345.583 MB/sec
[info]                  ·gc.alloc.rate.norm:          266167.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1306.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 258421.206 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   7896.269 ±(99.9%) 205.360 ops/s [Average]
[info]   (min, avg, max) = (7828.894, 7896.269, 7955.811), stdev = 53.331
[info]   CI (99.9%): [7690.909, 8101.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1325.911 ±(99.9%) 53.971 MB/sec [Average]
[info]   (min, avg, max) = (1313.747, 1325.911, 1345.583), stdev = 14.016
[info]   CI (99.9%): [1271.941, 1379.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   264219.207 ±(99.9%) 5887.800 B/op [Average]
[info]   (min, avg, max) = (262304.098, 264219.207, 266167.873), stdev = 1529.043
[info]   CI (99.9%): [258331.407, 270107.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1308.784 ±(99.9%) 19.885 MB/sec [Average]
[info]   (min, avg, max) = (1303.537, 1308.784, 1315.857), stdev = 5.164
[info]   CI (99.9%): [1288.900, 1328.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   260823.183 ±(99.9%) 10058.447 B/op [Average]
[info]   (min, avg, max) = (258421.206, 260823.183, 263784.283), stdev = 2612.147
[info]   CI (99.9%): [250764.736, 270881.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.942 ±(99.9%) 7.124 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.942, 4.233), stdev = 1.850
[info]   CI (99.9%): [≈ 0, 8.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   188.545 ±(99.9%) 1426.810 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 188.545, 847.750), stdev = 370.538
[info]   CI (99.9%): [≈ 0, 1615.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 16.000), stdev = 5.030
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:51:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6950.111 ops/s
[info] # Warmup Iteration   2: 20318.943 ops/s
[info] # Warmup Iteration   3: 21077.569 ops/s
[info] Iteration   1: 20352.171 ops/s
[info]                  ·gc.alloc.rate:                   1177.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              91014.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76653.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.220 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 20806.729 ops/s
[info]                  ·gc.alloc.rate:                   1182.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              89432.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100121.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 234.620 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 21223.116 ops/s
[info]                  ·gc.alloc.rate:                   1204.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              89303.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73257.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.204 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 21110.012 ops/s
[info]                  ·gc.alloc.rate:                   1200.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              89517.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97939.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.552 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 21131.693 ops/s
[info]                  ·gc.alloc.rate:                   1190.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              88676.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73424.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.550 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   20924.744 ±(99.9%) 1372.182 ops/s [Average]
[info]   (min, avg, max) = (20352.171, 20924.744, 21223.116), stdev = 356.351
[info]   CI (99.9%): [19552.563, 22296.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1191.166 ±(99.9%) 44.227 MB/sec [Average]
[info]   (min, avg, max) = (1177.491, 1191.166, 1204.263), stdev = 11.486
[info]   CI (99.9%): [1146.940, 1235.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   89589.044 ±(99.9%) 3322.312 B/op [Average]
[info]   (min, avg, max) = (88676.184, 89589.044, 91014.983), stdev = 862.794
[info]   CI (99.9%): [86266.732, 92911.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1120.616 ±(99.9%) 696.445 MB/sec [Average]
[info]   (min, avg, max) = (986.119, 1120.616, 1323.679), stdev = 180.865
[info]   CI (99.9%): [424.171, 1817.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   84279.108 ±(99.9%) 52198.069 B/op [Average]
[info]   (min, avg, max) = (73257.559, 84279.108, 100121.120), stdev = 13555.673
[info]   CI (99.9%): [32081.039, 136477.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.799 ±(99.9%) 5.126 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.799, 3.102), stdev = 1.331
[info]   CI (99.9%): [≈ 0, 5.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   60.229 ±(99.9%) 387.694 B/op [Average]
[info]   (min, avg, max) = (1.550, 60.229, 234.620), stdev = 100.683
[info]   CI (99.9%): [≈ 0, 447.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 12.000), stdev = 3.464
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:51:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7900.782 ops/s
[info] # Warmup Iteration   2: 22218.100 ops/s
[info] # Warmup Iteration   3: 25584.956 ops/s
[info] Iteration   1: 25961.532 ops/s
[info]                  ·gc.alloc.rate:                   1147.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              69560.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59809.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 25559.423 ops/s
[info]                  ·gc.alloc.rate:                   1136.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              69933.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81177.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 189.209 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 26049.850 ops/s
[info]                  ·gc.alloc.rate:                   1155.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              69818.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59606.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.083 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 26079.634 ops/s
[info]                  ·gc.alloc.rate:               1155.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          69695.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59216.825 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 26148.042 ops/s
[info]                  ·gc.alloc.rate:                   1151.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              69279.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78790.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.253 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   25959.696 ±(99.9%) 899.372 ops/s [Average]
[info]   (min, avg, max) = (25559.423, 25959.696, 26148.042), stdev = 233.564
[info]   CI (99.9%): [25060.325, 26859.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1149.249 ±(99.9%) 30.502 MB/sec [Average]
[info]   (min, avg, max) = (1136.279, 1149.249, 1155.883), stdev = 7.921
[info]   CI (99.9%): [1118.747, 1179.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   69657.262 ±(99.9%) 974.069 B/op [Average]
[info]   (min, avg, max) = (69279.150, 69657.262, 69933.080), stdev = 252.963
[info]   CI (99.9%): [68683.192, 70631.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1116.670 ±(99.9%) 694.098 MB/sec [Average]
[info]   (min, avg, max) = (981.373, 1116.670, 1318.974), stdev = 180.255
[info]   CI (99.9%): [422.573, 1810.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67720.112 ±(99.9%) 43238.851 B/op [Average]
[info]   (min, avg, max) = (59216.825, 67720.112, 81177.166), stdev = 11228.992
[info]   CI (99.9%): [24481.261, 110958.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.802 ±(99.9%) 5.107 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.802, 3.074), stdev = 1.326
[info]   CI (99.9%): [≈ 0, 5.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   49.161 ±(99.9%) 314.270 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.161, 189.209), stdev = 81.615
[info]   CI (99.9%): [≈ 0, 363.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 13.000), stdev = 3.715
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:51:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 182568.202 ops/s
[info] # Warmup Iteration   2: 346138.369 ops/s
[info] # Warmup Iteration   3: 366380.315 ops/s
[info] Iteration   1: 365233.265 ops/s
[info]                  ·gc.alloc.rate:                   851.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              3669.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2850.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 361475.000 ops/s
[info]                  ·gc.alloc.rate:                   837.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              3646.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2882.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 361863.161 ops/s
[info]                  ·gc.alloc.rate:               838.672 MB/sec
[info]                  ·gc.alloc.rate.norm:          3647.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2885.845 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 367353.238 ops/s
[info]                  ·gc.alloc.rate:                   855.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              3663.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4253.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.194 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 368182.705 ops/s
[info]                  ·gc.alloc.rate:               854.810 MB/sec
[info]                  ·gc.alloc.rate.norm:          3653.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2822.044 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   364821.474 ±(99.9%) 11841.557 ops/s [Average]
[info]   (min, avg, max) = (361475.000, 364821.474, 368182.705), stdev = 3075.215
[info]   CI (99.9%): [352979.917, 376663.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   847.636 ±(99.9%) 33.781 MB/sec [Average]
[info]   (min, avg, max) = (837.649, 847.636, 855.384), stdev = 8.773
[info]   CI (99.9%): [813.856, 881.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3656.129 ±(99.9%) 39.067 B/op [Average]
[info]   (min, avg, max) = (3646.940, 3656.129, 3669.806), stdev = 10.145
[info]   CI (99.9%): [3617.062, 3695.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   728.151 ±(99.9%) 570.547 MB/sec [Average]
[info]   (min, avg, max) = (660.302, 728.151, 993.196), stdev = 148.169
[info]   CI (99.9%): [157.604, 1298.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3138.946 ±(99.9%) 2401.439 B/op [Average]
[info]   (min, avg, max) = (2822.044, 3138.946, 4253.580), stdev = 623.646
[info]   CI (99.9%): [737.507, 5540.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.684 ±(99.9%) 5.664 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.684, 3.314), stdev = 1.471
[info]   CI (99.9%): [≈ 0, 6.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.929 ±(99.9%) 24.253 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.929, 14.194), stdev = 6.298
[info]   CI (99.9%): [≈ 0, 27.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 6.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:51:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 241223.706 ops/s
[info] # Warmup Iteration   2: 419588.269 ops/s
[info] # Warmup Iteration   3: 431642.523 ops/s
[info] Iteration   1: 411036.808 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 430383.000 ops/s
[info]                  ·gc.alloc.rate:      0.930 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.401 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 432660.882 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 431821.924 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 431912.034 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   427562.930 ±(99.9%) 35715.026 ops/s [Average]
[info]   (min, avg, max) = (411036.808, 427562.930, 432660.882), stdev = 9275.079
[info]   CI (99.9%): [391847.904, 463277.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.186 ±(99.9%) 1.601 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.186, 0.930), stdev = 0.416
[info]   CI (99.9%): [≈ 0, 1.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.681 ±(99.9%) 5.855 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.681, 3.401), stdev = 1.521
[info]   CI (99.9%): [≈ 0, 6.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:50:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5252.159 ops/s
[info] # Warmup Iteration   2: 20880.538 ops/s
[info] # Warmup Iteration   3: 24862.550 ops/s
[info] Iteration   1: 25201.387 ops/s
[info]                  ·gc.alloc.rate:                   1212.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              75669.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61778.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.600 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 24850.381 ops/s
[info]                  ·gc.alloc.rate:                   1197.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              75851.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83664.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 188.542 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 24386.733 ops/s
[info]                  ·gc.alloc.rate:                   1198.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              77376.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84862.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.203 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 25462.737 ops/s
[info]                  ·gc.alloc.rate:               1216.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          75203.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60690.345 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 25468.250 ops/s
[info]                  ·gc.alloc.rate:                   1243.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              76812.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80935.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.573 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   25073.898 ±(99.9%) 1769.955 ops/s [Average]
[info]   (min, avg, max) = (24386.733, 25073.898, 25468.250), stdev = 459.652
[info]   CI (99.9%): [23303.943, 26843.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1213.764 ±(99.9%) 70.606 MB/sec [Average]
[info]   (min, avg, max) = (1197.931, 1213.764, 1243.142), stdev = 18.336
[info]   CI (99.9%): [1143.157, 1284.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   76182.572 ±(99.9%) 3418.815 B/op [Average]
[info]   (min, avg, max) = (75203.562, 76182.572, 77376.377), stdev = 887.855
[info]   CI (99.9%): [72763.757, 79601.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1183.528 ±(99.9%) 695.496 MB/sec [Average]
[info]   (min, avg, max) = (981.918, 1183.528, 1321.330), stdev = 180.618
[info]   CI (99.9%): [488.033, 1879.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   74386.438 ±(99.9%) 46577.963 B/op [Average]
[info]   (min, avg, max) = (60690.345, 74386.438, 84862.819), stdev = 12096.149
[info]   CI (99.9%): [27808.475, 120964.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 4.953 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 2.978), stdev = 1.286
[info]   CI (99.9%): [≈ 0, 5.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   52.983 ±(99.9%) 313.980 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.983, 188.542), stdev = 81.540
[info]   CI (99.9%): [≈ 0, 366.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 14.000), stdev = 4.147
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:50:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1871.264 ops/s
[info] # Warmup Iteration   2: 11405.919 ops/s
[info] # Warmup Iteration   3: 13289.042 ops/s
[info] Iteration   1: 13369.307 ops/s
[info]                  ·gc.alloc.rate:                   1303.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              153481.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155812.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.450 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 13419.839 ops/s
[info]                  ·gc.alloc.rate:                   1300.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              152567.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155466.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 402.825 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 13252.001 ops/s
[info]                  ·gc.alloc.rate:                   1301.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              154518.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156329.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.280 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 13492.885 ops/s
[info]                  ·gc.alloc.rate:                   1317.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              153694.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153226.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.713 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 13396.421 ops/s
[info]                  ·gc.alloc.rate:               1321.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          155294.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 154559.116 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   13386.091 ±(99.9%) 338.508 ops/s [Average]
[info]   (min, avg, max) = (13252.001, 13386.091, 13492.885), stdev = 87.909
[info]   CI (99.9%): [13047.583, 13724.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1309.111 ±(99.9%) 38.248 MB/sec [Average]
[info]   (min, avg, max) = (1300.953, 1309.111, 1321.899), stdev = 9.933
[info]   CI (99.9%): [1270.863, 1347.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   153911.078 ±(99.9%) 4001.136 B/op [Average]
[info]   (min, avg, max) = (152567.409, 153911.078, 155294.067), stdev = 1039.082
[info]   CI (99.9%): [149909.942, 157912.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1319.011 ±(99.9%) 20.523 MB/sec [Average]
[info]   (min, avg, max) = (1313.670, 1319.011, 1325.670), stdev = 5.330
[info]   CI (99.9%): [1298.488, 1339.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   155078.612 ±(99.9%) 4697.228 B/op [Average]
[info]   (min, avg, max) = (153226.519, 155078.612, 156329.121), stdev = 1219.855
[info]   CI (99.9%): [150381.384, 159775.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 5.701 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 3.435), stdev = 1.481
[info]   CI (99.9%): [≈ 0, 6.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   95.854 ±(99.9%) 668.508 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 95.854, 402.825), stdev = 173.609
[info]   CI (99.9%): [≈ 0, 764.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 13.000), stdev = 3.782
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:50:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1313.279 ops/s
[info] # Warmup Iteration   2: 11595.645 ops/s
[info] # Warmup Iteration   3: 13526.618 ops/s
[info] Iteration   1: 13613.862 ops/s
[info]                  ·gc.alloc.rate:                   1209.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              139788.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113967.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.813 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 13546.205 ops/s
[info]                  ·gc.alloc.rate:                   1208.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              140325.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153002.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 382.120 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 13649.466 ops/s
[info]                  ·gc.alloc.rate:                   1228.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              141594.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151233.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124.812 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 13662.977 ops/s
[info]                  ·gc.alloc.rate:               1214.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          139864.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112799.614 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 13573.270 ops/s
[info]                  ·gc.alloc.rate:               1227.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          142276.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 151551.095 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13609.156 ±(99.9%) 190.543 ops/s [Average]
[info]   (min, avg, max) = (13546.205, 13609.156, 13662.977), stdev = 49.483
[info]   CI (99.9%): [13418.613, 13799.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1217.433 ±(99.9%) 36.838 MB/sec [Average]
[info]   (min, avg, max) = (1208.108, 1217.433, 1228.146), stdev = 9.567
[info]   CI (99.9%): [1180.595, 1254.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   140769.987 ±(99.9%) 4274.981 B/op [Average]
[info]   (min, avg, max) = (139788.816, 140769.987, 142276.806), stdev = 1110.199
[info]   CI (99.9%): [136495.006, 145044.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1180.301 ±(99.9%) 694.733 MB/sec [Average]
[info]   (min, avg, max) = (979.258, 1180.301, 1317.250), stdev = 180.420
[info]   CI (99.9%): [485.568, 1875.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   136510.949 ±(99.9%) 81352.505 B/op [Average]
[info]   (min, avg, max) = (112799.614, 136510.949, 153002.786), stdev = 21126.987
[info]   CI (99.9%): [55158.444, 217863.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 5.479 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.883, 3.290), stdev = 1.423
[info]   CI (99.9%): [≈ 0, 6.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   102.349 ±(99.9%) 636.348 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 102.349, 382.120), stdev = 165.258
[info]   CI (99.9%): [≈ 0, 738.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 15.000), stdev = 4.658
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:50:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133200.625 ops/s
[info] # Warmup Iteration   2: 277539.304 ops/s
[info] # Warmup Iteration   3: 284043.987 ops/s
[info] Iteration   1: 286698.741 ops/s
[info]                  ·gc.alloc.rate:                   1703.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              9352.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9109.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.971 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 283616.781 ops/s
[info]                  ·gc.alloc.rate:                   1706.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              9470.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9171.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.733 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 287174.404 ops/s
[info]                  ·gc.alloc.rate:                   1715.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              9393.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10867.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.911 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 290257.500 ops/s
[info]                  ·gc.alloc.rate:               1745.504 MB/sec
[info]                  ·gc.alloc.rate.norm:          9464.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9017.651 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 289767.791 ops/s
[info]                  ·gc.alloc.rate:                   1742.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              9462.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9083.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   287503.043 ±(99.9%) 10291.752 ops/s [Average]
[info]   (min, avg, max) = (283616.781, 287503.043, 290257.500), stdev = 2672.735
[info]   CI (99.9%): [277211.291, 297794.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1722.703 ±(99.9%) 76.510 MB/sec [Average]
[info]   (min, avg, max) = (1703.642, 1722.703, 1745.504), stdev = 19.869
[info]   CI (99.9%): [1646.192, 1799.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9428.833 ±(99.9%) 203.950 B/op [Average]
[info]   (min, avg, max) = (9352.414, 9428.833, 9470.318), stdev = 52.965
[info]   CI (99.9%): [9224.883, 9632.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1726.463 ±(99.9%) 556.014 MB/sec [Average]
[info]   (min, avg, max) = (1652.853, 1726.463, 1984.452), stdev = 144.395
[info]   CI (99.9%): [1170.449, 2282.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9450.045 ±(99.9%) 3058.322 B/op [Average]
[info]   (min, avg, max) = (9017.651, 9450.045, 10867.376), stdev = 794.236
[info]   CI (99.9%): [6391.723, 12508.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.645 ±(99.9%) 4.507 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.645, 2.727), stdev = 1.171
[info]   CI (99.9%): [≈ 0, 5.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.546 ±(99.9%) 24.740 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.546, 14.971), stdev = 6.425
[info]   CI (99.9%): [≈ 0, 28.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 12.000), stdev = 2.345
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:50:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 713.687 ops/s
[info] # Warmup Iteration   2: 9921.371 ops/s
[info] # Warmup Iteration   3: 12438.643 ops/s
[info] Iteration   1: 12623.698 ops/s
[info]                  ·gc.alloc.rate:                   1568.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              195504.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202680.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.572 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 12666.713 ops/s
[info]                  ·gc.alloc.rate:                   1568.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              194846.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162898.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.935 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 12585.787 ops/s
[info]                  ·gc.alloc.rate:                   1558.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              194826.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206291.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.206 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 12664.189 ops/s
[info]                  ·gc.alloc.rate:               1581.131 MB/sec
[info]                  ·gc.alloc.rate.norm:          196486.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1328.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 165076.626 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 12654.361 ops/s
[info]                  ·gc.alloc.rate:               1593.922 MB/sec
[info]                  ·gc.alloc.rate.norm:          198148.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1671.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 207776.614 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   12638.950 ±(99.9%) 132.052 ops/s [Average]
[info]   (min, avg, max) = (12585.787, 12638.950, 12666.713), stdev = 34.294
[info]   CI (99.9%): [12506.897, 12771.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1574.017 ±(99.9%) 53.023 MB/sec [Average]
[info]   (min, avg, max) = (1558.262, 1574.017, 1593.922), stdev = 13.770
[info]   CI (99.9%): [1520.995, 1627.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   195962.608 ±(99.9%) 5377.050 B/op [Average]
[info]   (min, avg, max) = (194826.638, 195962.608, 198148.831), stdev = 1396.403
[info]   CI (99.9%): [190585.558, 201339.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1517.375 ±(99.9%) 697.562 MB/sec [Average]
[info]   (min, avg, max) = (1311.276, 1517.375, 1671.368), stdev = 181.155
[info]   CI (99.9%): [819.813, 2214.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   188944.846 ±(99.9%) 88068.111 B/op [Average]
[info]   (min, avg, max) = (162898.450, 188944.846, 207776.614), stdev = 22871.009
[info]   CI (99.9%): [100876.735, 277012.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.160 ±(99.9%) 1.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.160, 0.635), stdev = 0.270
[info]   CI (99.9%): [≈ 0, 1.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   19.943 ±(99.9%) 129.324 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19.943, 78.935), stdev = 33.585
[info]   CI (99.9%): [≈ 0, 149.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:49:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9300.903 ops/s
[info] # Warmup Iteration   2: 30086.614 ops/s
[info] # Warmup Iteration   3: 31728.821 ops/s
[info] Iteration   1: 32453.079 ops/s
[info]                  ·gc.alloc.rate:                   1405.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              68149.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64124.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 32179.679 ops/s
[info]                  ·gc.alloc.rate:                   1391.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              68027.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64638.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 32634.184 ops/s
[info]                  ·gc.alloc.rate:                   1414.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              68179.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63417.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 32831.291 ops/s
[info]                  ·gc.alloc.rate:                   1430.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              68556.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63037.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.998 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 32782.998 ops/s
[info]                  ·gc.alloc.rate:                   1428.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              68578.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63419.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.999 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   32576.246 ±(99.9%) 1025.289 ops/s [Average]
[info]   (min, avg, max) = (32179.679, 32576.246, 32831.291), stdev = 266.264
[info]   CI (99.9%): [31550.957, 33601.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1413.942 ±(99.9%) 63.339 MB/sec [Average]
[info]   (min, avg, max) = (1391.022, 1413.942, 1430.321), stdev = 16.449
[info]   CI (99.9%): [1350.603, 1477.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   68298.150 ±(99.9%) 972.010 B/op [Average]
[info]   (min, avg, max) = (68027.440, 68298.150, 68578.514), stdev = 252.428
[info]   CI (99.9%): [67326.141, 69270.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1319.202 ±(99.9%) 13.890 MB/sec [Average]
[info]   (min, avg, max) = (1315.173, 1319.202, 1322.514), stdev = 3.607
[info]   CI (99.9%): [1305.312, 1333.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   63727.358 ±(99.9%) 2476.401 B/op [Average]
[info]   (min, avg, max) = (63037.186, 63727.358, 64638.023), stdev = 643.114
[info]   CI (99.9%): [61250.956, 66203.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 5.823 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.758, 3.456), stdev = 1.512
[info]   CI (99.9%): [≈ 0, 6.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   37.013 ±(99.9%) 284.836 B/op [Average]
[info]   (min, avg, max) = (0.998, 37.013, 169.007), stdev = 73.971
[info]   CI (99.9%): [≈ 0, 321.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 12.000), stdev = 2.608
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:49:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23021.216 ops/s
[info] # Warmup Iteration   2: 76247.176 ops/s
[info] # Warmup Iteration   3: 76378.474 ops/s
[info] Iteration   1: 79134.017 ops/s
[info]                  ·gc.alloc.rate:                   1973.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              39234.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32738.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.800 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 77909.435 ops/s
[info]                  ·gc.alloc.rate:                   1968.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              39763.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39757.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.887 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 79687.704 ops/s
[info]                  ·gc.alloc.rate:                   1987.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              39244.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39102.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.233 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 79780.802 ops/s
[info]                  ·gc.alloc.rate:                   2008.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              39626.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39365.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.875 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 79439.797 ops/s
[info]                  ·gc.alloc.rate:               2013.414 MB/sec
[info]                  ·gc.alloc.rate.norm:          39885.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2010.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39818.674 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   79190.351 ±(99.9%) 2921.250 ops/s [Average]
[info]   (min, avg, max) = (77909.435, 79190.351, 79780.802), stdev = 758.639
[info]   CI (99.9%): [76269.101, 82111.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1990.122 ±(99.9%) 78.438 MB/sec [Average]
[info]   (min, avg, max) = (1968.454, 1990.122, 2013.414), stdev = 20.370
[info]   CI (99.9%): [1911.684, 2068.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   39550.991 ±(99.9%) 1149.306 B/op [Average]
[info]   (min, avg, max) = (39234.770, 39550.991, 39885.298), stdev = 298.471
[info]   CI (99.9%): [38401.685, 40700.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1919.969 ±(99.9%) 592.178 MB/sec [Average]
[info]   (min, avg, max) = (1646.327, 1919.969, 2010.050), stdev = 153.787
[info]   CI (99.9%): [1327.790, 2512.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   38156.572 ±(99.9%) 11717.014 B/op [Average]
[info]   (min, avg, max) = (32738.603, 38156.572, 39818.674), stdev = 3042.871
[info]   CI (99.9%): [26439.559, 49873.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 5.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 3.560), stdev = 1.540
[info]   CI (99.9%): [≈ 0, 6.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.159 ±(99.9%) 117.925 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.159, 70.800), stdev = 30.625
[info]   CI (99.9%): [≈ 0, 134.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 10.000), stdev = 1.140
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:49:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 311088.388 ops/s
[info] # Warmup Iteration   2: 611342.257 ops/s
[info] # Warmup Iteration   3: 620745.859 ops/s
[info] Iteration   1: 631944.731 ops/s
[info]                  ·gc.alloc.rate:               889.517 MB/sec
[info]                  ·gc.alloc.rate.norm:          2215.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1647.429 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 627631.095 ops/s
[info]                  ·gc.alloc.rate:                   884.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              2218.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2492.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 626647.220 ops/s
[info]                  ·gc.alloc.rate:                   880.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              2211.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2501.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.431 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 623501.798 ops/s
[info]                  ·gc.alloc.rate:                   875.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              2209.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1674.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.314 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 632192.734 ops/s
[info]                  ·gc.alloc.rate:               906.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          2256.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:      992.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2469.474 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   628383.516 ±(99.9%) 14227.130 ops/s [Average]
[info]   (min, avg, max) = (623501.798, 628383.516, 632192.734), stdev = 3694.740
[info]   CI (99.9%): [614156.386, 642610.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   887.391 ±(99.9%) 46.156 MB/sec [Average]
[info]   (min, avg, max) = (875.211, 887.391, 906.649), stdev = 11.986
[info]   CI (99.9%): [841.236, 933.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2222.223 ±(99.9%) 74.789 B/op [Average]
[info]   (min, avg, max) = (2209.241, 2222.223, 2256.451), stdev = 19.422
[info]   CI (99.9%): [2147.434, 2297.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   861.489 ±(99.9%) 699.572 MB/sec [Average]
[info]   (min, avg, max) = (661.450, 861.489, 995.898), stdev = 181.677
[info]   CI (99.9%): [161.917, 1561.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2157.087 ±(99.9%) 1744.292 B/op [Average]
[info]   (min, avg, max) = (1647.429, 2157.087, 2501.258), stdev = 452.987
[info]   CI (99.9%): [412.795, 3901.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.625 ±(99.9%) 4.253 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.625, 2.561), stdev = 1.104
[info]   CI (99.9%): [≈ 0, 4.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.570 ±(99.9%) 10.680 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.570, 6.431), stdev = 2.774
[info]   CI (99.9%): [≈ 0, 12.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 9.000), stdev = 2.588
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:49:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 287878.496 ops/s
[info] # Warmup Iteration   2: 729485.273 ops/s
[info] # Warmup Iteration   3: 727648.379 ops/s
[info] Iteration   1: 730573.582 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 730791.016 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 731064.451 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 731359.628 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 731355.248 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   731028.785 ±(99.9%) 1335.363 ops/s [Average]
[info]   (min, avg, max) = (730573.582, 731028.785, 731359.628), stdev = 346.789
[info]   CI (99.9%): [729693.422, 732364.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:49:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18086.599 ops/s
[info] # Warmup Iteration   2: 70352.917 ops/s
[info] # Warmup Iteration   3: 68769.669 ops/s
[info] Iteration   1: 72950.493 ops/s
[info]                  ·gc.alloc.rate:                   2098.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              45279.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42283.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.449 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 73229.271 ops/s
[info]                  ·gc.alloc.rate:                   2111.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              45373.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49319.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 73430.109 ops/s
[info]                  ·gc.alloc.rate:               2137.006 MB/sec
[info]                  ·gc.alloc.rate.norm:          45801.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1987.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 42589.521 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 72933.877 ops/s
[info]                  ·gc.alloc.rate:                   2124.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              45836.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43267.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.898 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 72356.798 ops/s
[info]                  ·gc.alloc.rate:                   2108.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              45863.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43904.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.358 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   72980.110 ±(99.9%) 1559.526 ops/s [Average]
[info]   (min, avg, max) = (72356.798, 72980.110, 73430.109), stdev = 405.004
[info]   CI (99.9%): [71420.584, 74539.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2116.021 ±(99.9%) 56.925 MB/sec [Average]
[info]   (min, avg, max) = (2098.938, 2116.021, 2137.006), stdev = 14.783
[info]   CI (99.9%): [2059.097, 2172.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   45630.872 ±(99.9%) 1080.607 B/op [Average]
[info]   (min, avg, max) = (45279.913, 45630.872, 45863.044), stdev = 280.630
[info]   CI (99.9%): [44550.265, 46711.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2053.188 ±(99.9%) 527.613 MB/sec [Average]
[info]   (min, avg, max) = (1960.061, 2053.188, 2295.148), stdev = 137.019
[info]   CI (99.9%): [1525.575, 2580.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   44273.138 ±(99.9%) 11128.555 B/op [Average]
[info]   (min, avg, max) = (42283.956, 44273.138, 49319.994), stdev = 2890.050
[info]   CI (99.9%): [33144.583, 55401.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.631 ±(99.9%) 1.987 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.631, 1.358), stdev = 0.516
[info]   CI (99.9%): [≈ 0, 2.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:48:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1736.034 ops/s
[info] # Warmup Iteration   2: 13538.407 ops/s
[info] # Warmup Iteration   3: 16399.543 ops/s
[info] Iteration   1: 16477.296 ops/s
[info]                  ·gc.alloc.rate:                   861.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              82270.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63118.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.977 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 16273.444 ops/s
[info]                  ·gc.alloc.rate:                   872.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              84386.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96057.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 16271.119 ops/s
[info]                  ·gc.alloc.rate:                   864.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              83664.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96068.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 16405.919 ops/s
[info]                  ·gc.alloc.rate:                   857.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              82255.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63582.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 349.467 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 16030.625 ops/s
[info]                  ·gc.alloc.rate:                   892.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              87623.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96983.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.437 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   16291.681 ±(99.9%) 656.897 ops/s [Average]
[info]   (min, avg, max) = (16030.625, 16291.681, 16477.296), stdev = 170.594
[info]   CI (99.9%): [15634.784, 16948.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   869.954 ±(99.9%) 53.200 MB/sec [Average]
[info]   (min, avg, max) = (857.770, 869.954, 892.635), stdev = 13.816
[info]   CI (99.9%): [816.754, 923.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   84039.826 ±(99.9%) 8483.670 B/op [Average]
[info]   (min, avg, max) = (82255.503, 84039.826, 87623.034), stdev = 2203.182
[info]   CI (99.9%): [75556.157, 92523.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   859.752 ±(99.9%) 694.917 MB/sec [Average]
[info]   (min, avg, max) = (661.099, 859.752, 993.403), stdev = 180.468
[info]   CI (99.9%): [164.834, 1554.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   83162.226 ±(99.9%) 69658.664 B/op [Average]
[info]   (min, avg, max) = (63118.167, 83162.226, 96983.797), stdev = 18090.134
[info]   CI (99.9%): [13503.562, 152820.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 6.148 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.791, 3.644), stdev = 1.597
[info]   CI (99.9%): [≈ 0, 6.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   75.984 ±(99.9%) 589.390 B/op [Average]
[info]   (min, avg, max) = (2.013, 75.984, 349.467), stdev = 153.063
[info]   CI (99.9%): [≈ 0, 665.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 2.966
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:48:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5308.506 ops/s
[info] # Warmup Iteration   2: 16419.884 ops/s
[info] # Warmup Iteration   3: 17234.390 ops/s
[info] Iteration   1: 17406.051 ops/s
[info]                  ·gc.alloc.rate:                   761.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              68810.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59268.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.764 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 17625.924 ops/s
[info]                  ·gc.alloc.rate:                   777.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              69410.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58647.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.718 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 17654.272 ops/s
[info]                  ·gc.alloc.rate:               776.281 MB/sec
[info]                  ·gc.alloc.rate.norm:          69187.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87950.448 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 17281.124 ops/s
[info]                  ·gc.alloc.rate:                   773.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              70459.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59969.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 278.891 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 17727.940 ops/s
[info]                  ·gc.alloc.rate:                   777.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              68971.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58342.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 101.649 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   17539.062 ±(99.9%) 722.233 ops/s [Average]
[info]   (min, avg, max) = (17281.124, 17539.062, 17727.940), stdev = 187.562
[info]   CI (99.9%): [16816.829, 18261.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   773.084 ±(99.9%) 26.581 MB/sec [Average]
[info]   (min, avg, max) = (761.016, 773.084, 777.353), stdev = 6.903
[info]   CI (99.9%): [746.502, 799.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   69368.043 ±(99.9%) 2505.762 B/op [Average]
[info]   (min, avg, max) = (68810.252, 69368.043, 70459.571), stdev = 650.738
[info]   CI (99.9%): [66862.280, 71873.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   722.985 ±(99.9%) 567.885 MB/sec [Average]
[info]   (min, avg, max) = (655.483, 722.985, 986.794), stdev = 147.478
[info]   CI (99.9%): [155.100, 1290.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   64835.744 ±(99.9%) 49814.045 B/op [Average]
[info]   (min, avg, max) = (58342.934, 64835.744, 87950.448), stdev = 12936.549
[info]   CI (99.9%): [15021.700, 114649.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 5.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.062), stdev = 1.324
[info]   CI (99.9%): [≈ 0, 5.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   77.604 ±(99.9%) 463.793 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 77.604, 278.891), stdev = 120.446
[info]   CI (99.9%): [≈ 0, 541.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:48:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67679.145 ops/s
[info] # Warmup Iteration   2: 124508.716 ops/s
[info] # Warmup Iteration   3: 129389.112 ops/s
[info] Iteration   1: 128247.993 ops/s
[info]                  ·gc.alloc.rate:               334.605 MB/sec
[info]                  ·gc.alloc.rate.norm:          4106.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3139.278 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 130331.104 ops/s
[info]                  ·gc.alloc.rate:               337.734 MB/sec
[info]                  ·gc.alloc.rate.norm:          4078.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3982.056 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 130298.072 ops/s
[info]                  ·gc.alloc.rate:               334.820 MB/sec
[info]                  ·gc.alloc.rate.norm:          4044.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3983.126 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 128531.536 ops/s
[info]                  ·gc.alloc.rate:               338.814 MB/sec
[info]                  ·gc.alloc.rate.norm:          4148.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4045.973 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 129956.118 ops/s
[info]                  ·gc.alloc.rate:               344.324 MB/sec
[info]                  ·gc.alloc.rate.norm:          4169.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4001.521 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   129472.965 ±(99.9%) 3868.644 ops/s [Average]
[info]   (min, avg, max) = (128247.993, 129472.965, 130331.104), stdev = 1004.675
[info]   CI (99.9%): [125604.320, 133341.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   338.060 ±(99.9%) 15.202 MB/sec [Average]
[info]   (min, avg, max) = (334.605, 338.060, 344.324), stdev = 3.948
[info]   CI (99.9%): [322.858, 353.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4109.264 ±(99.9%) 195.429 B/op [Average]
[info]   (min, avg, max) = (4044.168, 4109.264, 4169.181), stdev = 50.752
[info]   CI (99.9%): [3913.835, 4304.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   315.253 ±(99.9%) 127.960 MB/sec [Average]
[info]   (min, avg, max) = (255.811, 315.253, 330.477), stdev = 33.231
[info]   CI (99.9%): [187.292, 443.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3830.391 ±(99.9%) 1491.011 B/op [Average]
[info]   (min, avg, max) = (3139.278, 3830.391, 4045.973), stdev = 387.211
[info]   CI (99.9%): [2339.380, 5321.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:48:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 806.064 ops/s
[info] # Warmup Iteration   2: 11789.645 ops/s
[info] # Warmup Iteration   3: 14211.168 ops/s
[info] Iteration   1: 15053.139 ops/s
[info]                  ·gc.alloc.rate:                   1141.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              119325.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103151.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.177 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 14870.356 ops/s
[info]                  ·gc.alloc.rate:                   1133.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              119886.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     139382.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.406 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 14887.007 ops/s
[info]                  ·gc.alloc.rate:                   1132.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              119735.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104364.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 444.536 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 14771.301 ops/s
[info]                  ·gc.alloc.rate:                   1129.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              120331.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104474.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 14947.473 ops/s
[info]                  ·gc.alloc.rate:               1136.669 MB/sec
[info]                  ·gc.alloc.rate.norm:          119672.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 137341.080 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   14905.855 ±(99.9%) 399.915 ops/s [Average]
[info]   (min, avg, max) = (14771.301, 14905.855, 15053.139), stdev = 103.857
[info]   CI (99.9%): [14505.941, 15305.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1134.615 ±(99.9%) 17.934 MB/sec [Average]
[info]   (min, avg, max) = (1129.275, 1134.615, 1141.504), stdev = 4.657
[info]   CI (99.9%): [1116.681, 1152.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   119790.379 ±(99.9%) 1408.037 B/op [Average]
[info]   (min, avg, max) = (119325.822, 119790.379, 120331.633), stdev = 365.663
[info]   CI (99.9%): [118382.342, 121198.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1115.240 ±(99.9%) 687.980 MB/sec [Average]
[info]   (min, avg, max) = (980.459, 1115.240, 1317.266), stdev = 178.666
[info]   CI (99.9%): [427.260, 1803.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   117742.734 ±(99.9%) 72559.561 B/op [Average]
[info]   (min, avg, max) = (103151.183, 117742.734, 139382.421), stdev = 18843.487
[info]   CI (99.9%): [45183.174, 190302.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 7.103 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 4.205), stdev = 1.845
[info]   CI (99.9%): [≈ 0, 8.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   96.434 ±(99.9%) 750.882 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 96.434, 444.536), stdev = 195.002
[info]   CI (99.9%): [≈ 0, 847.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 14.000), stdev = 3.975
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:47:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13481.223 ops/s
[info] # Warmup Iteration   2: 46817.605 ops/s
[info] # Warmup Iteration   3: 47299.461 ops/s
[info] Iteration   1: 47193.602 ops/s
[info]                  ·gc.alloc.rate:                   1444.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              48158.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44055.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.694 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 47709.257 ops/s
[info]                  ·gc.alloc.rate:                   1467.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              48407.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54368.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116.747 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 46291.494 ops/s
[info]                  ·gc.alloc.rate:               1454.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          49452.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44661.696 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 48006.430 ops/s
[info]                  ·gc.alloc.rate:                   1471.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              48237.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43165.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 47981.963 ops/s
[info]                  ·gc.alloc.rate:                   1469.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              48214.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54287.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.731 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   47436.549 ±(99.9%) 2767.904 ops/s [Average]
[info]   (min, avg, max) = (46291.494, 47436.549, 48006.430), stdev = 718.816
[info]   CI (99.9%): [44668.645, 50204.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1461.569 ±(99.9%) 45.049 MB/sec [Average]
[info]   (min, avg, max) = (1444.348, 1461.569, 1471.309), stdev = 11.699
[info]   CI (99.9%): [1416.520, 1506.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   48494.158 ±(99.9%) 2094.347 B/op [Average]
[info]   (min, avg, max) = (48158.840, 48494.158, 49452.894), stdev = 543.895
[info]   CI (99.9%): [46399.811, 50588.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1451.005 ±(99.9%) 705.732 MB/sec [Average]
[info]   (min, avg, max) = (1313.656, 1451.005, 1655.072), stdev = 183.276
[info]   CI (99.9%): [745.273, 2156.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   48107.606 ±(99.9%) 21960.466 B/op [Average]
[info]   (min, avg, max) = (43165.611, 48107.606, 54368.166), stdev = 5703.063
[info]   CI (99.9%): [26147.141, 70068.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.741 ±(99.9%) 6.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.741, 3.540), stdev = 1.565
[info]   CI (99.9%): [≈ 0, 6.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   24.444 ±(99.9%) 198.732 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.444, 116.747), stdev = 51.610
[info]   CI (99.9%): [≈ 0, 223.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 12.000), stdev = 2.550
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:47:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16218.078 ops/s
[info] # Warmup Iteration   2: 70762.647 ops/s
[info] # Warmup Iteration   3: 74084.193 ops/s
[info] Iteration   1: 74720.010 ops/s
[info]                  ·gc.alloc.rate:                   1579.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              33261.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27767.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.939 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 74066.505 ops/s
[info]                  ·gc.alloc.rate:                   1574.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              33446.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34893.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 76177.293 ops/s
[info]                  ·gc.alloc.rate:                   1610.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              33266.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33870.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.290 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 74440.937 ops/s
[info]                  ·gc.alloc.rate:                   1591.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              33642.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27836.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.440 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 75710.713 ops/s
[info]                  ·gc.alloc.rate:                   1600.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              33276.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34434.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.029 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   75023.092 ±(99.9%) 3417.554 ops/s [Average]
[info]   (min, avg, max) = (74066.505, 75023.092, 76177.293), stdev = 887.528
[info]   CI (99.9%): [71605.538, 78440.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1591.210 ±(99.9%) 57.701 MB/sec [Average]
[info]   (min, avg, max) = (1574.235, 1591.210, 1610.496), stdev = 14.985
[info]   CI (99.9%): [1533.509, 1648.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   33378.983 ±(99.9%) 640.695 B/op [Average]
[info]   (min, avg, max) = (33261.939, 33378.983, 33642.620), stdev = 166.386
[info]   CI (99.9%): [32738.288, 34019.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1514.712 ±(99.9%) 693.709 MB/sec [Average]
[info]   (min, avg, max) = (1316.674, 1514.712, 1656.530), stdev = 180.154
[info]   CI (99.9%): [821.003, 2208.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   31760.425 ±(99.9%) 13984.166 B/op [Average]
[info]   (min, avg, max) = (27767.277, 31760.425, 34893.081), stdev = 3631.643
[info]   CI (99.9%): [17776.259, 45744.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 5.021 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.804, 3.083), stdev = 1.304
[info]   CI (99.9%): [≈ 0, 5.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.948 ±(99.9%) 105.774 B/op [Average]
[info]   (min, avg, max) = (0.440, 16.948, 64.939), stdev = 27.469
[info]   CI (99.9%): [≈ 0, 122.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 13.000), stdev = 2.775
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:47:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138172.947 ops/s
[info] # Warmup Iteration   2: 295884.636 ops/s
[info] # Warmup Iteration   3: 325119.848 ops/s
[info] Iteration   1: 325836.196 ops/s
[info]                  ·gc.alloc.rate:                   645.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              3117.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3188.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 308370.178 ops/s
[info]                  ·gc.alloc.rate:               606.918 MB/sec
[info]                  ·gc.alloc.rate.norm:          3097.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1686.437 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 324366.907 ops/s
[info]                  ·gc.alloc.rate:                   640.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              3106.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3209.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 325269.237 ops/s
[info]                  ·gc.alloc.rate:                   639.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              3092.543 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3203.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 326695.944 ops/s
[info]                  ·gc.alloc.rate:                   640.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              3083.568 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3193.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   322107.693 ±(99.9%) 29750.586 ops/s [Average]
[info]   (min, avg, max) = (308370.178, 322107.693, 326695.944), stdev = 7726.133
[info]   CI (99.9%): [292357.107, 351858.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   634.433 ±(99.9%) 60.072 MB/sec [Average]
[info]   (min, avg, max) = (606.918, 634.433, 645.768), stdev = 15.600
[info]   CI (99.9%): [574.362, 694.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3099.538 ±(99.9%) 50.492 B/op [Average]
[info]   (min, avg, max) = (3083.568, 3099.538, 3117.762), stdev = 13.113
[info]   CI (99.9%): [3049.046, 3150.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.478 ±(99.9%) 570.508 MB/sec [Average]
[info]   (min, avg, max) = (330.447, 595.478, 662.831), stdev = 148.159
[info]   CI (99.9%): [24.970, 1165.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2896.328 ±(99.9%) 2604.577 B/op [Average]
[info]   (min, avg, max) = (1686.437, 2896.328, 3209.541), stdev = 676.400
[info]   CI (99.9%): [291.751, 5500.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.022 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.276 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.105, 0.201), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:47:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 188540.944 ops/s
[info] # Warmup Iteration   2: 360043.381 ops/s
[info] # Warmup Iteration   3: 365380.643 ops/s
[info] Iteration   1: 365201.766 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 365088.461 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 365414.310 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 363617.920 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 365272.413 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   364918.974 ±(99.9%) 2837.298 ops/s [Average]
[info]   (min, avg, max) = (363617.920, 364918.974, 365414.310), stdev = 736.837
[info]   CI (99.9%): [362081.676, 367756.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:47:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18023.583 ops/s
[info] # Warmup Iteration   2: 61905.098 ops/s
[info] # Warmup Iteration   3: 65878.483 ops/s
[info] Iteration   1: 66404.973 ops/s
[info]                  ·gc.alloc.rate:                   1526.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              36175.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39170.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.633 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 66729.964 ops/s
[info]                  ·gc.alloc.rate:                   1545.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              36447.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38837.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.465 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 65863.514 ops/s
[info]                  ·gc.alloc.rate:                   1519.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              36310.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31326.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.995 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 66954.334 ops/s
[info]                  ·gc.alloc.rate:                   1564.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              36771.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38684.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.489 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 67130.405 ops/s
[info]                  ·gc.alloc.rate:                   1555.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              36470.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31046.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.976 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   66616.638 ±(99.9%) 1928.050 ops/s [Average]
[info]   (min, avg, max) = (65863.514, 66616.638, 67130.405), stdev = 500.709
[info]   CI (99.9%): [64688.588, 68544.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1542.354 ±(99.9%) 72.957 MB/sec [Average]
[info]   (min, avg, max) = (1519.764, 1542.354, 1564.340), stdev = 18.947
[info]   CI (99.9%): [1469.397, 1615.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   36435.091 ±(99.9%) 856.531 B/op [Average]
[info]   (min, avg, max) = (36175.181, 36435.091, 36771.720), stdev = 222.438
[info]   CI (99.9%): [35578.560, 37291.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1516.192 ±(99.9%) 697.881 MB/sec [Average]
[info]   (min, avg, max) = (1311.189, 1516.192, 1652.792), stdev = 181.238
[info]   CI (99.9%): [818.310, 2214.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   35813.326 ±(99.9%) 16281.399 B/op [Average]
[info]   (min, avg, max) = (31046.708, 35813.326, 39170.625), stdev = 4228.228
[info]   CI (99.9%): [19531.927, 52094.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 4.571 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.808, 2.727), stdev = 1.187
[info]   CI (99.9%): [≈ 0, 5.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   19.112 ±(99.9%) 108.291 B/op [Average]
[info]   (min, avg, max) = (0.489, 19.112, 64.633), stdev = 28.123
[info]   CI (99.9%): [≈ 0, 127.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 16.000), stdev = 4.278
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:46:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43301.609 ops/s
[info] # Warmup Iteration   2: 131628.788 ops/s
[info] # Warmup Iteration   3: 135363.856 ops/s
[info] Iteration   1: 139840.807 ops/s
[info]                  ·gc.alloc.rate:                   1818.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              20465.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18638.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.470 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 144046.278 ops/s
[info]                  ·gc.alloc.rate:                   1879.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              20533.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21587.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.910 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 143739.793 ops/s
[info]                  ·gc.alloc.rate:                   1890.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              20697.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18063.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 143955.478 ops/s
[info]                  ·gc.alloc.rate:                   1905.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              20829.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21791.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 142040.354 ops/s
[info]                  ·gc.alloc.rate:               1869.886 MB/sec
[info]                  ·gc.alloc.rate.norm:          20709.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1672.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18523.952 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   142724.542 ±(99.9%) 6962.367 ops/s [Average]
[info]   (min, avg, max) = (139840.807, 142724.542, 144046.278), stdev = 1808.105
[info]   CI (99.9%): [135762.175, 149686.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   1872.710 ±(99.9%) 127.382 MB/sec [Average]
[info]   (min, avg, max) = (1818.370, 1872.710, 1905.228), stdev = 33.081
[info]   CI (99.9%): [1745.328, 2000.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20647.108 ±(99.9%) 563.970 B/op [Average]
[info]   (min, avg, max) = (20465.287, 20647.108, 20829.828), stdev = 146.461
[info]   CI (99.9%): [20083.138, 21211.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1789.567 ±(99.9%) 687.268 MB/sec [Average]
[info]   (min, avg, max) = (1649.692, 1789.567, 1993.213), stdev = 178.481
[info]   CI (99.9%): [1102.300, 2476.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19721.072 ±(99.9%) 6975.366 B/op [Average]
[info]   (min, avg, max) = (18063.428, 19721.072, 21791.770), stdev = 1811.480
[info]   CI (99.9%): [12745.706, 26696.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 6.284 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 3.685), stdev = 1.632
[info]   CI (99.9%): [≈ 0, 7.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8.613 ±(99.9%) 70.739 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.613, 41.470), stdev = 18.371
[info]   CI (99.9%): [≈ 0, 79.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 11.000), stdev = 1.673
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:46:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.719 ops/s
[info] # Warmup Iteration   2: 749973.828 ops/s
[info] # Warmup Iteration   3: 819386.805 ops/s
[info] Iteration   1: 847143.438 ops/s
[info]                  ·gc.alloc.rate:               487.641 MB/sec
[info]                  ·gc.alloc.rate.norm:          905.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1207.948 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 853421.054 ops/s
[info]                  ·gc.alloc.rate:                   482.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              889.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     599.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 849383.021 ops/s
[info]                  ·gc.alloc.rate:               478.572 MB/sec
[info]                  ·gc.alloc.rate.norm:          886.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 602.394 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 850193.121 ops/s
[info]                  ·gc.alloc.rate:                   493.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              913.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1206.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 853701.984 ops/s
[info]                  ·gc.alloc.rate:               481.557 MB/sec
[info]                  ·gc.alloc.rate.norm:          887.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 601.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   850768.524 ±(99.9%) 10725.454 ops/s [Average]
[info]   (min, avg, max) = (847143.438, 850768.524, 853701.984), stdev = 2785.366
[info]   CI (99.9%): [840043.070, 861493.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   484.708 ±(99.9%) 22.808 MB/sec [Average]
[info]   (min, avg, max) = (478.572, 484.708, 493.540), stdev = 5.923
[info]   CI (99.9%): [461.900, 507.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   896.647 ±(99.9%) 47.321 B/op [Average]
[info]   (min, avg, max) = (886.727, 896.647, 913.583), stdev = 12.289
[info]   CI (99.9%): [849.327, 943.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   455.621 ±(99.9%) 686.397 MB/sec [Average]
[info]   (min, avg, max) = (325.112, 455.621, 651.542), stdev = 178.255
[info]   CI (99.9%): [≈ 0, 1142.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   843.422 ±(99.9%) 1278.047 B/op [Average]
[info]   (min, avg, max) = (599.530, 843.422, 1207.948), stdev = 331.905
[info]   CI (99.9%): [≈ 0, 2121.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.067), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:46:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101481.251 ops/s
[info] # Warmup Iteration   2: 399219.727 ops/s
[info] # Warmup Iteration   3: 413168.544 ops/s
[info] Iteration   1: 430134.874 ops/s
[info]                  ·gc.alloc.rate:                   449.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              1645.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          582.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2130.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 432003.881 ops/s
[info]                  ·gc.alloc.rate:               442.223 MB/sec
[info]                  ·gc.alloc.rate.norm:          1611.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1189.181 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 432081.207 ops/s
[info]                  ·gc.alloc.rate:                   437.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1191.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 426093.654 ops/s
[info]                  ·gc.alloc.rate:                   445.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              1644.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2417.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 423764.188 ops/s
[info]                  ·gc.alloc.rate:                   431.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              1602.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1216.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   428815.561 ±(99.9%) 14342.752 ops/s [Average]
[info]   (min, avg, max) = (423764.188, 428815.561, 432081.207), stdev = 3724.767
[info]   CI (99.9%): [414472.808, 443158.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   441.127 ±(99.9%) 27.478 MB/sec [Average]
[info]   (min, avg, max) = (431.335, 441.127, 449.717), stdev = 7.136
[info]   CI (99.9%): [413.649, 468.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1618.858 ±(99.9%) 94.128 B/op [Average]
[info]   (min, avg, max) = (1592.020, 1618.858, 1645.097), stdev = 24.445
[info]   CI (99.9%): [1524.730, 1712.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   443.609 ±(99.9%) 622.746 MB/sec [Average]
[info]   (min, avg, max) = (326.425, 443.609, 654.695), stdev = 161.725
[info]   CI (99.9%): [≈ 0, 1066.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1628.925 ±(99.9%) 2301.373 B/op [Average]
[info]   (min, avg, max) = (1189.181, 1628.925, 2417.593), stdev = 597.659
[info]   CI (99.9%): [≈ 0, 3930.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.077 ±(99.9%) 0.211 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.077, 0.155), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 2.049
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:46:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 622805.092 ops/s
[info] # Warmup Iteration   2: 1107587.265 ops/s
[info] # Warmup Iteration   3: 1086298.380 ops/s
[info] Iteration   1: 1136349.602 ops/s
[info]                  ·gc.alloc.rate:                   401.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              556.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1104476.445 ops/s
[info]                  ·gc.alloc.rate:                   402.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              572.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     937.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1153876.925 ops/s
[info]                  ·gc.alloc.rate:               406.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          554.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 450.667 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1153104.364 ops/s
[info]                  ·gc.alloc.rate:               407.041 MB/sec
[info]                  ·gc.alloc.rate.norm:          555.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 450.973 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1124938.149 ops/s
[info]                  ·gc.alloc.rate:               413.698 MB/sec
[info]                  ·gc.alloc.rate.norm:          578.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 462.733 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1134549.097 ±(99.9%) 79798.486 ops/s [Average]
[info]   (min, avg, max) = (1104476.445, 1134549.097, 1153876.925), stdev = 20723.413
[info]   CI (99.9%): [1054750.611, 1214347.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   406.282 ±(99.9%) 18.692 MB/sec [Average]
[info]   (min, avg, max) = (401.531, 406.282, 413.698), stdev = 4.854
[info]   CI (99.9%): [387.590, 424.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   563.547 ±(99.9%) 43.643 B/op [Average]
[info]   (min, avg, max) = (554.919, 563.547, 578.789), stdev = 11.334
[info]   CI (99.9%): [519.904, 607.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.203 ±(99.9%) 609.691 MB/sec [Average]
[info]   (min, avg, max) = (255.841, 381.203, 658.462), stdev = 158.335
[info]   CI (99.9%): [≈ 0, 990.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   531.192 ±(99.9%) 890.265 B/op [Average]
[info]   (min, avg, max) = (354.298, 531.192, 937.289), stdev = 231.199
[info]   CI (99.9%): [≈ 0, 1421.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.148 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.089), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:46:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6290.394 ops/s
[info] # Warmup Iteration   2: 69160.948 ops/s
[info] # Warmup Iteration   3: 75168.291 ops/s
[info] Iteration   1: 77014.543 ops/s
[info]                  ·gc.alloc.rate:                   3072.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              62780.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2938.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60052.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.276 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 77465.435 ops/s
[info]                  ·gc.alloc.rate:                   3135.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              63702.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2975.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60437.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.961 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 77576.186 ops/s
[info]                  ·gc.alloc.rate:                   3141.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              63731.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3012.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61123.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.422 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 77619.830 ops/s
[info]                  ·gc.alloc.rate:                   3144.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              63759.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3037.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61590.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.844 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 76771.559 ops/s
[info]                  ·gc.alloc.rate:                   3116.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              63878.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62546.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.854 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   77289.511 ±(99.9%) 1448.635 ops/s [Average]
[info]   (min, avg, max) = (76771.559, 77289.511, 77619.830), stdev = 376.206
[info]   CI (99.9%): [75840.875, 78738.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3122.195 ±(99.9%) 115.786 MB/sec [Average]
[info]   (min, avg, max) = (3072.139, 3122.195, 3144.909), stdev = 30.069
[info]   CI (99.9%): [3006.409, 3237.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63570.239 ±(99.9%) 1720.242 B/op [Average]
[info]   (min, avg, max) = (62780.109, 63570.239, 63878.305), stdev = 446.741
[info]   CI (99.9%): [61849.997, 65290.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3003.248 ±(99.9%) 178.365 MB/sec [Average]
[info]   (min, avg, max) = (2938.642, 3003.248, 3051.479), stdev = 46.321
[info]   CI (99.9%): [2824.883, 3181.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61149.906 ±(99.9%) 3780.962 B/op [Average]
[info]   (min, avg, max) = (60052.047, 61149.906, 62546.112), stdev = 981.904
[info]   CI (99.9%): [57368.944, 64930.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.146), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.271 ±(99.9%) 3.818 B/op [Average]
[info]   (min, avg, max) = (0.422, 1.271, 2.961), stdev = 0.991
[info]   CI (99.9%): [≈ 0, 5.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   45.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.000, 9.000), stdev = 0.001
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 12.600, 13.000), stdev = 0.548
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:45:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62326.935 ops/s
[info] # Warmup Iteration   2: 254242.143 ops/s
[info] # Warmup Iteration   3: 255647.350 ops/s
[info] Iteration   1: 268183.842 ops/s
[info]                  ·gc.alloc.rate:                   1623.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              9517.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9680.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.139 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.408 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 266222.288 ops/s
[info]                  ·gc.alloc.rate:                   1613.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              9539.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7781.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.584 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 266547.942 ops/s
[info]                  ·gc.alloc.rate:                   1615.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              9538.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9699.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.983 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 267439.464 ops/s
[info]                  ·gc.alloc.rate:               1640.814 MB/sec
[info]                  ·gc.alloc.rate.norm:          9656.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1649.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9706.605 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 270628.912 ops/s
[info]                  ·gc.alloc.rate:                   1660.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              9654.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9660.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   267804.490 ±(99.9%) 6762.455 ops/s [Average]
[info]   (min, avg, max) = (266222.288, 267804.490, 270628.912), stdev = 1756.188
[info]   CI (99.9%): [261042.035, 274566.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1630.817 ±(99.9%) 75.713 MB/sec [Average]
[info]   (min, avg, max) = (1613.987, 1630.817, 1660.410), stdev = 19.662
[info]   CI (99.9%): [1555.104, 1706.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   9581.203 ±(99.9%) 262.893 B/op [Average]
[info]   (min, avg, max) = (9517.575, 9581.203, 9656.100), stdev = 68.273
[info]   CI (99.9%): [9318.310, 9844.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1584.258 ±(99.9%) 576.655 MB/sec [Average]
[info]   (min, avg, max) = (1316.627, 1584.258, 1661.334), stdev = 149.755
[info]   CI (99.9%): [1007.603, 2160.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9305.666 ±(99.9%) 3281.136 B/op [Average]
[info]   (min, avg, max) = (7781.728, 9305.666, 9706.605), stdev = 852.101
[info]   CI (99.9%): [6024.531, 12586.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.753 ±(99.9%) 5.181 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.753, 3.139), stdev = 1.346
[info]   CI (99.9%): [≈ 0, 5.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.419 ±(99.9%) 30.372 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.419, 18.408), stdev = 7.888
[info]   CI (99.9%): [≈ 0, 34.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 14.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:45:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.788 ops/s
[info] # Warmup Iteration   2: 1150016.494 ops/s
[info] # Warmup Iteration   3: 1218000.642 ops/s
[info] Iteration   1: 1228537.500 ops/s
[info]                  ·gc.alloc.rate:                   426.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              545.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     415.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1221539.983 ops/s
[info]                  ·gc.alloc.rate:               436.229 MB/sec
[info]                  ·gc.alloc.rate.norm:          561.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 417.988 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1218709.217 ops/s
[info]                  ·gc.alloc.rate:                   443.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              573.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1231077.331 ops/s
[info]                  ·gc.alloc.rate:                   428.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              547.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1193327.630 ops/s
[info]                  ·gc.alloc.rate:                   419.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1218638.332 ±(99.9%) 57816.700 ops/s [Average]
[info]   (min, avg, max) = (1193327.630, 1218638.332, 1231077.331), stdev = 15014.813
[info]   CI (99.9%): [1160821.632, 1276455.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   430.767 ±(99.9%) 36.702 MB/sec [Average]
[info]   (min, avg, max) = (419.281, 430.767, 443.949), stdev = 9.531
[info]   CI (99.9%): [394.065, 467.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   556.238 ±(99.9%) 43.780 B/op [Average]
[info]   (min, avg, max) = (545.893, 556.238, 573.283), stdev = 11.370
[info]   CI (99.9%): [512.458, 600.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   390.166 ±(99.9%) 559.726 MB/sec [Average]
[info]   (min, avg, max) = (324.424, 390.166, 650.189), stdev = 145.359
[info]   CI (99.9%): [≈ 0, 949.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   503.857 ±(99.9%) 723.054 B/op [Average]
[info]   (min, avg, max) = (415.597, 503.857, 839.605), stdev = 187.775
[info]   CI (99.9%): [≈ 0, 1226.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.033 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.027), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:45:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 219821.156 ops/s
[info] # Warmup Iteration   2: 911197.202 ops/s
[info] # Warmup Iteration   3: 899422.822 ops/s
[info] Iteration   1: 923181.938 ops/s
[info]                  ·gc.alloc.rate:               564.323 MB/sec
[info]                  ·gc.alloc.rate.norm:          961.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1114.122 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 902782.356 ops/s
[info]                  ·gc.alloc.rate:               536.867 MB/sec
[info]                  ·gc.alloc.rate.norm:          935.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 570.800 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 923363.663 ops/s
[info]                  ·gc.alloc.rate:                   560.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              955.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1117.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 926568.118 ops/s
[info]                  ·gc.alloc.rate:                   557.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              947.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1115.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 925142.059 ops/s
[info]                  ·gc.alloc.rate:               560.119 MB/sec
[info]                  ·gc.alloc.rate.norm:          952.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 558.693 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   920207.627 ±(99.9%) 37887.853 ops/s [Average]
[info]   (min, avg, max) = (902782.356, 920207.627, 926568.118), stdev = 9839.355
[info]   CI (99.9%): [882319.774, 958095.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   555.873 ±(99.9%) 41.934 MB/sec [Average]
[info]   (min, avg, max) = (536.867, 555.873, 564.323), stdev = 10.890
[info]   CI (99.9%): [513.939, 597.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   950.631 ±(99.9%) 37.533 B/op [Average]
[info]   (min, avg, max) = (935.932, 950.631, 961.844), stdev = 9.747
[info]   CI (99.9%): [913.099, 988.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   524.294 ±(99.9%) 690.341 MB/sec [Average]
[info]   (min, avg, max) = (327.421, 524.294, 656.517), stdev = 179.279
[info]   CI (99.9%): [≈ 0, 1214.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   895.210 ±(99.9%) 1161.753 B/op [Average]
[info]   (min, avg, max) = (558.693, 895.210, 1117.287), stdev = 301.703
[info]   CI (99.9%): [≈ 0, 2056.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.071), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:45:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 970194.823 ops/s
[info] # Warmup Iteration   2: 1772126.752 ops/s
[info] # Warmup Iteration   3: 1862964.132 ops/s
[info] Iteration   1: 1878081.496 ops/s
[info]                  ·gc.alloc.rate:               660.536 MB/sec
[info]                  ·gc.alloc.rate.norm:          553.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 552.939 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1872782.866 ops/s
[info]                  ·gc.alloc.rate:               658.914 MB/sec
[info]                  ·gc.alloc.rate.norm:          553.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 555.073 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 1876248.316 ops/s
[info]                  ·gc.alloc.rate:                   656.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1877081.613 ops/s
[info]                  ·gc.alloc.rate:                   658.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     555.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1874329.891 ops/s
[info]                  ·gc.alloc.rate:                   652.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              547.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     556.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.185 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   1875704.837 ±(99.9%) 8228.985 ops/s [Average]
[info]   (min, avg, max) = (1872782.866, 1875704.837, 1878081.496), stdev = 2137.041
[info]   CI (99.9%): [1867475.852, 1883933.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   657.329 ±(99.9%) 12.521 MB/sec [Average]
[info]   (min, avg, max) = (652.094, 657.329, 660.536), stdev = 3.252
[info]   CI (99.9%): [644.809, 669.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   551.519 ±(99.9%) 9.632 B/op [Average]
[info]   (min, avg, max) = (547.571, 551.519, 553.581), stdev = 2.501
[info]   CI (99.9%): [541.887, 561.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   661.527 ±(99.9%) 5.150 MB/sec [Average]
[info]   (min, avg, max) = (659.813, 661.527, 663.139), stdev = 1.338
[info]   CI (99.9%): [656.377, 666.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   555.042 ±(99.9%) 5.412 B/op [Average]
[info]   (min, avg, max) = (552.939, 555.042, 556.845), stdev = 1.406
[info]   CI (99.9%): [549.630, 560.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.529 ±(99.9%) 4.463 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.529, 2.602), stdev = 1.159
[info]   CI (99.9%): [≈ 0, 4.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.444 ±(99.9%) 3.748 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.444, 2.185), stdev = 0.973
[info]   CI (99.9%): [≈ 0, 4.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:44:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1190875.136 ops/s
[info] # Warmup Iteration   2: 1972633.560 ops/s
[info] # Warmup Iteration   3: 2054150.707 ops/s
[info] Iteration   1: 2053981.032 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2051353.273 ops/s
[info]                  ·gc.alloc.rate:      0.105 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.080 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2050946.847 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2057058.027 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2056765.279 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2054020.892 ±(99.9%) 11114.192 ops/s [Average]
[info]   (min, avg, max) = (2050946.847, 2054020.892, 2057058.027), stdev = 2886.320
[info]   CI (99.9%): [2042906.700, 2065135.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.021 ±(99.9%) 0.180 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.021, 0.105), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.016 ±(99.9%) 0.138 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.016, 0.080), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:44:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7895.078 ops/s
[info] # Warmup Iteration   2: 37847.975 ops/s
[info] # Warmup Iteration   3: 41011.770 ops/s
[info] Iteration   1: 40704.456 ops/s
[info]                  ·gc.alloc.rate:                   2051.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              79328.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76320.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.226 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 163.401 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 41508.885 ops/s
[info]                  ·gc.alloc.rate:                   2060.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              78091.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74438.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.157 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 41471.792 ops/s
[info]                  ·gc.alloc.rate:                   2091.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              79363.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87497.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.160 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 41788.690 ops/s
[info]                  ·gc.alloc.rate:                   2095.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              78889.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75138.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.568 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 41465.664 ops/s
[info]                  ·gc.alloc.rate:               2080.089 MB/sec
[info]                  ·gc.alloc.rate.norm:          78943.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2010.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76308.803 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   41387.897 ±(99.9%) 1558.739 ops/s [Average]
[info]   (min, avg, max) = (40704.456, 41387.897, 41788.690), stdev = 404.800
[info]   CI (99.9%): [39829.158, 42946.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2075.766 ±(99.9%) 74.072 MB/sec [Average]
[info]   (min, avg, max) = (2051.608, 2075.766, 2095.539), stdev = 19.236
[info]   CI (99.9%): [2001.695, 2149.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   78923.378 ±(99.9%) 1973.724 B/op [Average]
[info]   (min, avg, max) = (78091.726, 78923.378, 79363.653), stdev = 512.570
[info]   CI (99.9%): [76949.654, 80897.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2049.985 ±(99.9%) 555.039 MB/sec [Average]
[info]   (min, avg, max) = (1963.810, 2049.985, 2305.737), stdev = 144.142
[info]   CI (99.9%): [1494.946, 2605.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77940.624 ±(99.9%) 20801.960 B/op [Average]
[info]   (min, avg, max) = (74438.211, 77940.624, 87497.204), stdev = 5402.203
[info]   CI (99.9%): [57138.664, 98742.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.887 ±(99.9%) 7.189 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.887, 4.226), stdev = 1.867
[info]   CI (99.9%): [≈ 0, 8.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34.257 ±(99.9%) 278.038 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.257, 163.401), stdev = 72.206
[info]   CI (99.9%): [≈ 0, 312.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 14.000), stdev = 2.775
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:44:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5507.500 ops/s
[info] # Warmup Iteration   2: 13227.846 ops/s
[info] # Warmup Iteration   3: 15128.670 ops/s
[info] Iteration   1: 15087.914 ops/s
[info]                  ·gc.alloc.rate:                   1843.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              192217.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172608.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 345.269 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 15005.584 ops/s
[info]                  ·gc.alloc.rate:                   1851.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              194080.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207004.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.664 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 15118.319 ops/s
[info]                  ·gc.alloc.rate:               1871.164 MB/sec
[info]                  ·gc.alloc.rate.norm:          194758.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1648.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 171595.881 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 15135.601 ops/s
[info]                  ·gc.alloc.rate:                   1887.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              196195.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207110.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.329 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 15049.673 ops/s
[info]                  ·gc.alloc.rate:                   1860.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              194486.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174751.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.062 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   15079.418 ±(99.9%) 202.647 ops/s [Average]
[info]   (min, avg, max) = (15005.584, 15079.418, 15135.601), stdev = 52.627
[info]   CI (99.9%): [14876.771, 15282.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   1862.692 ±(99.9%) 67.136 MB/sec [Average]
[info]   (min, avg, max) = (1843.105, 1862.692, 1887.658), stdev = 17.435
[info]   CI (99.9%): [1795.556, 1929.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   194347.718 ±(99.9%) 5518.238 B/op [Average]
[info]   (min, avg, max) = (192217.171, 194347.718, 196195.908), stdev = 1433.069
[info]   CI (99.9%): [188829.480, 199865.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1788.484 ±(99.9%) 687.014 MB/sec [Average]
[info]   (min, avg, max) = (1648.626, 1788.484, 1992.673), stdev = 178.415
[info]   CI (99.9%): [1101.470, 2475.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   186614.142 ±(99.9%) 71995.593 B/op [Average]
[info]   (min, avg, max) = (171595.881, 186614.142, 207110.731), stdev = 18697.027
[info]   CI (99.9%): [114618.549, 258609.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 5.486 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.311), stdev = 1.425
[info]   CI (99.9%): [≈ 0, 6.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   81.265 ±(99.9%) 572.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 81.265, 345.269), stdev = 148.565
[info]   CI (99.9%): [≈ 0, 653.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 11.000), stdev = 2.121
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:44:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30413.713 ops/s
[info] # Warmup Iteration   2: 90426.544 ops/s
[info] # Warmup Iteration   3: 93500.090 ops/s
[info] Iteration   1: 98267.779 ops/s
[info]                  ·gc.alloc.rate:                   1322.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              21186.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21061.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.000 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 97708.452 ops/s
[info]                  ·gc.alloc.rate:                   1312.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              21143.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21213.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.852 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 99829.435 ops/s
[info]                  ·gc.alloc.rate:                   1351.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              21311.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20648.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.939 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 98837.819 ops/s
[info]                  ·gc.alloc.rate:                   1338.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              21319.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20844.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 99359.717 ops/s
[info]                  ·gc.alloc.rate:               1352.711 MB/sec
[info]                  ·gc.alloc.rate.norm:          21425.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20814.292 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   98800.640 ±(99.9%) 3249.852 ops/s [Average]
[info]   (min, avg, max) = (97708.452, 98800.640, 99829.435), stdev = 843.976
[info]   CI (99.9%): [95550.788, 102050.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1335.821 ±(99.9%) 67.827 MB/sec [Average]
[info]   (min, avg, max) = (1312.863, 1335.821, 1352.711), stdev = 17.615
[info]   CI (99.9%): [1267.994, 1403.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   21277.335 ±(99.9%) 434.995 B/op [Average]
[info]   (min, avg, max) = (21143.744, 21277.335, 21425.956), stdev = 112.967
[info]   CI (99.9%): [20842.339, 21712.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1313.029 ±(99.9%) 13.599 MB/sec [Average]
[info]   (min, avg, max) = (1309.032, 1313.029, 1317.213), stdev = 3.532
[info]   CI (99.9%): [1299.430, 1326.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20916.384 ±(99.9%) 854.011 B/op [Average]
[info]   (min, avg, max) = (20648.661, 20916.384, 21213.810), stdev = 221.784
[info]   CI (99.9%): [20062.373, 21770.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 6.501 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.837, 3.852), stdev = 1.688
[info]   CI (99.9%): [≈ 0, 7.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.461 ±(99.9%) 104.730 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.461, 62.035), stdev = 27.198
[info]   CI (99.9%): [≈ 0, 118.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.742
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:44:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111930.674 ops/s
[info] # Warmup Iteration   2: 250541.649 ops/s
[info] # Warmup Iteration   3: 248197.984 ops/s
[info] Iteration   1: 250897.286 ops/s
[info]                  ·gc.alloc.rate:                   854.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              5358.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6222.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 237195.382 ops/s
[info]                  ·gc.alloc.rate:                   790.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              5241.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4395.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 239194.290 ops/s
[info]                  ·gc.alloc.rate:                   797.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              5243.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4363.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 253516.472 ops/s
[info]                  ·gc.alloc.rate:                   851.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5287.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6187.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.706 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 253716.511 ops/s
[info]                  ·gc.alloc.rate:                   851.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              5279.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4107.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.517 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   246903.988 ±(99.9%) 31031.646 ops/s [Average]
[info]   (min, avg, max) = (237195.382, 246903.988, 253716.511), stdev = 8058.820
[info]   CI (99.9%): [215872.342, 277935.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   828.914 ±(99.9%) 124.151 MB/sec [Average]
[info]   (min, avg, max) = (790.229, 828.914, 854.202), stdev = 32.242
[info]   CI (99.9%): [704.764, 953.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5281.906 ±(99.9%) 183.435 B/op [Average]
[info]   (min, avg, max) = (5241.020, 5281.906, 5358.498), stdev = 47.637
[info]   CI (99.9%): [5098.471, 5465.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   795.427 ±(99.9%) 699.217 MB/sec [Average]
[info]   (min, avg, max) = (662.190, 795.427, 996.761), stdev = 181.584
[info]   CI (99.9%): [96.209, 1494.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5055.290 ±(99.9%) 4063.430 B/op [Average]
[info]   (min, avg, max) = (4107.590, 5055.290, 6222.321), stdev = 1055.260
[info]   CI (99.9%): [991.860, 9118.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.604 ±(99.9%) 4.842 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.604, 2.853), stdev = 1.257
[info]   CI (99.9%): [≈ 0, 5.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.752 ±(99.9%) 30.044 B/op [Average]
[info]   (min, avg, max) = (0.137, 3.752, 17.706), stdev = 7.802
[info]   CI (99.9%): [≈ 0, 33.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 8.000), stdev = 2.302
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:43:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1107.524 ops/s
[info] # Warmup Iteration   2: 10696.377 ops/s
[info] # Warmup Iteration   3: 12712.340 ops/s
[info] Iteration   1: 12942.126 ops/s
[info]                  ·gc.alloc.rate:                   2075.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              252323.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     239929.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 501.202 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 13035.936 ops/s
[info]                  ·gc.alloc.rate:                   2081.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              251164.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236568.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.265 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 12934.864 ops/s
[info]                  ·gc.alloc.rate:               2090.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          254426.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1968.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 239572.628 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 12958.983 ops/s
[info]                  ·gc.alloc.rate:                   2096.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              254617.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     241331.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.528 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 13027.159 ops/s
[info]                  ·gc.alloc.rate:               2107.381 MB/sec
[info]                  ·gc.alloc.rate.norm:          254492.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 242245.281 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   12979.814 ±(99.9%) 185.332 ops/s [Average]
[info]   (min, avg, max) = (12934.864, 12979.814, 13035.936), stdev = 48.130
[info]   CI (99.9%): [12794.482, 13165.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2090.341 ±(99.9%) 48.116 MB/sec [Average]
[info]   (min, avg, max) = (2075.639, 2090.341, 2107.381), stdev = 12.496
[info]   CI (99.9%): [2042.225, 2138.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   253404.804 ±(99.9%) 6053.440 B/op [Average]
[info]   (min, avg, max) = (251164.390, 253404.804, 254617.215), stdev = 1572.059
[info]   CI (99.9%): [247351.365, 259458.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1979.185 ±(99.9%) 68.548 MB/sec [Average]
[info]   (min, avg, max) = (1960.377, 1979.185, 2005.967), stdev = 17.802
[info]   CI (99.9%): [1910.637, 2047.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   239929.567 ±(99.9%) 8336.873 B/op [Average]
[info]   (min, avg, max) = (236568.976, 239929.567, 242245.281), stdev = 2165.059
[info]   CI (99.9%): [231592.694, 248266.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 6.945 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 4.123), stdev = 1.804
[info]   CI (99.9%): [≈ 0, 7.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   110.799 ±(99.9%) 844.412 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 110.799, 501.202), stdev = 219.291
[info]   CI (99.9%): [≈ 0, 955.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.800, 15.000), stdev = 2.950
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:43:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8664.823 ops/s
[info] # Warmup Iteration   2: 31283.794 ops/s
[info] # Warmup Iteration   3: 32126.891 ops/s
[info] Iteration   1: 32548.757 ops/s
[info]                  ·gc.alloc.rate:                   2717.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              131390.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2635.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127395.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.092 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 32240.340 ops/s
[info]                  ·gc.alloc.rate:                   2704.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              131993.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2651.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129397.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.033 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 32287.060 ops/s
[info]                  ·gc.alloc.rate:                   2691.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              131182.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2677.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130507.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.044 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 32767.314 ops/s
[info]                  ·gc.alloc.rate:                   2757.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              132420.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2697.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129548.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.999 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 32083.125 ops/s
[info]                  ·gc.alloc.rate:                   2688.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              131857.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2709.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132901.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.042 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   32385.319 ±(99.9%) 1045.056 ops/s [Average]
[info]   (min, avg, max) = (32083.125, 32385.319, 32767.314), stdev = 271.398
[info]   CI (99.9%): [31340.263, 33430.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2711.729 ±(99.9%) 107.665 MB/sec [Average]
[info]   (min, avg, max) = (2688.001, 2711.729, 2757.047), stdev = 27.960
[info]   CI (99.9%): [2604.064, 2819.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   131768.959 ±(99.9%) 1896.070 B/op [Average]
[info]   (min, avg, max) = (131182.802, 131768.959, 132420.751), stdev = 492.403
[info]   CI (99.9%): [129872.889, 133665.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2674.091 ±(99.9%) 118.910 MB/sec [Average]
[info]   (min, avg, max) = (2635.202, 2674.091, 2709.296), stdev = 30.881
[info]   CI (99.9%): [2555.180, 2793.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   129950.176 ±(99.9%) 7705.352 B/op [Average]
[info]   (min, avg, max) = (127395.666, 129950.176, 132901.976), stdev = 2001.056
[info]   CI (99.9%): [122244.823, 137655.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.104 ±(99.9%) 0.409 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.104, 0.292), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.042 ±(99.9%) 19.733 B/op [Average]
[info]   (min, avg, max) = (2.033, 5.042, 14.092), stdev = 5.125
[info]   CI (99.9%): [≈ 0, 24.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 12.000), stdev = 0.837
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:43:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44103.149 ops/s
[info] # Warmup Iteration   2: 98174.295 ops/s
[info] # Warmup Iteration   3: 99845.608 ops/s
[info] Iteration   1: 102950.308 ops/s
[info]                  ·gc.alloc.rate:                   1439.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              22009.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20117.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.826 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 104436.348 ops/s
[info]                  ·gc.alloc.rate:                   1470.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              22150.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19801.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.725 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 104917.468 ops/s
[info]                  ·gc.alloc.rate:                   1483.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              22251.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24582.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.498 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 105036.973 ops/s
[info]                  ·gc.alloc.rate:               1490.815 MB/sec
[info]                  ·gc.alloc.rate.norm:          22329.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19704.409 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 104906.596 ops/s
[info]                  ·gc.alloc.rate:               1489.550 MB/sec
[info]                  ·gc.alloc.rate.norm:          22346.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19837.627 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   104449.539 ±(99.9%) 3346.298 ops/s [Average]
[info]   (min, avg, max) = (102950.308, 104449.539, 105036.973), stdev = 869.023
[info]   CI (99.9%): [101103.241, 107795.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1474.799 ±(99.9%) 81.851 MB/sec [Average]
[info]   (min, avg, max) = (1439.740, 1474.799, 1490.815), stdev = 21.256
[info]   CI (99.9%): [1392.949, 1556.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   22217.460 ±(99.9%) 537.796 B/op [Average]
[info]   (min, avg, max) = (22009.365, 22217.460, 22346.124), stdev = 139.664
[info]   CI (99.9%): [21679.664, 22755.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1381.461 ±(99.9%) 555.070 MB/sec [Average]
[info]   (min, avg, max) = (1314.161, 1381.461, 1639.262), stdev = 144.150
[info]   CI (99.9%): [826.390, 1936.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20808.727 ±(99.9%) 8143.960 B/op [Average]
[info]   (min, avg, max) = (19704.409, 20808.727, 24582.089), stdev = 2114.961
[info]   CI (99.9%): [12664.767, 28952.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 4.919 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.762, 2.998), stdev = 1.277
[info]   CI (99.9%): [≈ 0, 5.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.610 ±(99.9%) 75.233 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.610, 45.826), stdev = 19.538
[info]   CI (99.9%): [≈ 0, 86.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 13.000), stdev = 3.209
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:43:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76927.462 ops/s
[info] # Warmup Iteration   2: 171525.149 ops/s
[info] # Warmup Iteration   3: 175699.152 ops/s
[info] Iteration   1: 177569.929 ops/s
[info]                  ·gc.alloc.rate:                   586.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              5194.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5833.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 177195.623 ops/s
[info]                  ·gc.alloc.rate:                   585.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              5202.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5857.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 177486.541 ops/s
[info]                  ·gc.alloc.rate:               584.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          5185.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5859.848 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 177973.551 ops/s
[info]                  ·gc.alloc.rate:               575.794 MB/sec
[info]                  ·gc.alloc.rate.norm:          5091.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2921.908 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 177440.862 ops/s
[info]                  ·gc.alloc.rate:                   584.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              5186.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5867.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   177533.301 ±(99.9%) 1088.989 ops/s [Average]
[info]   (min, avg, max) = (177195.623, 177533.301, 177973.551), stdev = 282.807
[info]   CI (99.9%): [176444.312, 178622.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   583.469 ±(99.9%) 16.650 MB/sec [Average]
[info]   (min, avg, max) = (575.794, 583.469, 586.102), stdev = 4.324
[info]   CI (99.9%): [566.819, 600.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5172.187 ±(99.9%) 174.573 B/op [Average]
[info]   (min, avg, max) = (5091.942, 5172.187, 5202.048), stdev = 45.336
[info]   CI (99.9%): [4997.614, 5346.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   594.132 ±(99.9%) 567.709 MB/sec [Average]
[info]   (min, avg, max) = (330.408, 594.132, 661.691), stdev = 147.432
[info]   CI (99.9%): [26.423, 1161.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5268.065 ±(99.9%) 5050.516 B/op [Average]
[info]   (min, avg, max) = (2921.908, 5268.065, 5867.275), stdev = 1311.603
[info]   CI (99.9%): [217.549, 10318.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.082 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.052), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.729 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.462), stdev = 0.189
[info]   CI (99.9%): [≈ 0, 0.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 6.000), stdev = 1.789
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:43:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111875.598 ops/s
[info] # Warmup Iteration   2: 181669.986 ops/s
[info] # Warmup Iteration   3: 194103.537 ops/s
[info] Iteration   1: 194086.094 ops/s
[info]                  ·gc.alloc.rate:      0.107 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.870 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 194629.146 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 194565.456 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 194047.486 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 194188.144 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   194303.265 ±(99.9%) 1055.915 ops/s [Average]
[info]   (min, avg, max) = (194047.486, 194303.265, 194629.146), stdev = 274.218
[info]   CI (99.9%): [193247.351, 195359.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.022 ±(99.9%) 0.184 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.022, 0.107), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.176 ±(99.9%) 1.495 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.176, 0.870), stdev = 0.388
[info]   CI (99.9%): [≈ 0, 1.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:42:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12796.601 ops/s
[info] # Warmup Iteration   2: 44688.869 ops/s
[info] # Warmup Iteration   3: 47454.433 ops/s
[info] Iteration   1: 48255.950 ops/s
[info]                  ·gc.alloc.rate:                   3419.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              111497.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3297.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107534.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.679 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 48308.951 ops/s
[info]                  ·gc.alloc.rate:                   3425.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              111563.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3341.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108840.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.678 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 48526.296 ops/s
[info]                  ·gc.alloc.rate:                   3427.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              111158.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3034.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98401.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.675 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 48198.691 ops/s
[info]                  ·gc.alloc.rate:                   3419.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              111651.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110635.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.360 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 48430.729 ops/s
[info]                  ·gc.alloc.rate:                   3443.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              111869.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3398.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110408.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.353 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   48344.123 ±(99.9%) 512.475 ops/s [Average]
[info]   (min, avg, max) = (48198.691, 48344.123, 48526.296), stdev = 133.088
[info]   CI (99.9%): [47831.649, 48856.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3426.889 ±(99.9%) 37.545 MB/sec [Average]
[info]   (min, avg, max) = (3419.150, 3426.889, 3443.152), stdev = 9.750
[info]   CI (99.9%): [3389.345, 3464.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   111548.236 ±(99.9%) 996.982 B/op [Average]
[info]   (min, avg, max) = (111158.915, 111548.236, 111869.239), stdev = 258.913
[info]   CI (99.9%): [110551.254, 112545.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3291.971 ±(99.9%) 576.353 MB/sec [Average]
[info]   (min, avg, max) = (3034.043, 3291.971, 3398.187), stdev = 149.677
[info]   CI (99.9%): [2715.618, 3868.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   107163.951 ±(99.9%) 19472.935 B/op [Average]
[info]   (min, avg, max) = (98401.900, 107163.951, 110635.166), stdev = 5057.059
[info]   CI (99.9%): [87691.015, 126636.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.949 ±(99.9%) 1.432 B/op [Average]
[info]   (min, avg, max) = (0.675, 0.949, 1.360), stdev = 0.372
[info]   CI (99.9%): [≈ 0, 2.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.600, 15.000), stdev = 0.894
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:42:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5131.188 ops/s
[info] # Warmup Iteration   2: 23516.488 ops/s
[info] # Warmup Iteration   3: 26149.880 ops/s
[info] Iteration   1: 25895.296 ops/s
[info]                  ·gc.alloc.rate:                   1390.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              84517.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80303.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.530 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 25852.511 ops/s
[info]                  ·gc.alloc.rate:                   1411.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              85900.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100578.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 231.930 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 26245.019 ops/s
[info]                  ·gc.alloc.rate:                   1412.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              84691.337 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78696.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.987 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 26427.829 ops/s
[info]                  ·gc.alloc.rate:                   1415.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              84284.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78270.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.479 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 26447.170 ops/s
[info]                  ·gc.alloc.rate:                   1413.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              84118.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78534.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.239 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   26173.565 ±(99.9%) 1097.813 ops/s [Average]
[info]   (min, avg, max) = (25852.511, 26173.565, 26447.170), stdev = 285.098
[info]   CI (99.9%): [25075.752, 27271.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1408.916 ±(99.9%) 39.282 MB/sec [Average]
[info]   (min, avg, max) = (1390.885, 1408.916, 1415.666), stdev = 10.201
[info]   CI (99.9%): [1369.634, 1448.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   84702.745 ±(99.9%) 2712.523 B/op [Average]
[info]   (min, avg, max) = (84118.922, 84702.745, 85900.733), stdev = 704.434
[info]   CI (99.9%): [81990.221, 87415.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1384.295 ±(99.9%) 577.463 MB/sec [Average]
[info]   (min, avg, max) = (1312.876, 1384.295, 1652.484), stdev = 149.965
[info]   CI (99.9%): [806.832, 1961.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   83276.531 ±(99.9%) 37370.442 B/op [Average]
[info]   (min, avg, max) = (78270.295, 83276.531, 100578.939), stdev = 9704.985
[info]   CI (99.9%): [45906.089, 120646.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 6.449 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.816, 3.811), stdev = 1.675
[info]   CI (99.9%): [≈ 0, 7.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   49.633 ±(99.9%) 392.634 B/op [Average]
[info]   (min, avg, max) = (1.239, 49.633, 231.930), stdev = 101.966
[info]   CI (99.9%): [≈ 0, 442.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 13.000), stdev = 3.782
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:42:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4841.927 ops/s
[info] # Warmup Iteration   2: 26710.917 ops/s
[info] # Warmup Iteration   3: 29044.095 ops/s
[info] Iteration   1: 28979.249 ops/s
[info]                  ·gc.alloc.rate:               1192.543 MB/sec
[info]                  ·gc.alloc.rate.norm:          64744.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71306.352 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 29072.081 ops/s
[info]                  ·gc.alloc.rate:                   1200.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              64989.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53445.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 173.555 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 29738.471 ops/s
[info]                  ·gc.alloc.rate:                   1216.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              64362.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69383.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 29631.834 ops/s
[info]                  ·gc.alloc.rate:                   1209.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              64253.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52013.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.211 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 29876.596 ops/s
[info]                  ·gc.alloc.rate:                   1240.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              65323.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68849.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   29459.646 ±(99.9%) 1566.776 ops/s [Average]
[info]   (min, avg, max) = (28979.249, 29459.646, 29876.596), stdev = 406.887
[info]   CI (99.9%): [27892.870, 31026.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1212.080 ±(99.9%) 70.786 MB/sec [Average]
[info]   (min, avg, max) = (1192.543, 1212.080, 1240.610), stdev = 18.383
[info]   CI (99.9%): [1141.294, 1282.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   64734.829 ±(99.9%) 1702.395 B/op [Average]
[info]   (min, avg, max) = (64253.786, 64734.829, 65323.886), stdev = 442.107
[info]   CI (99.9%): [63032.434, 66437.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1179.875 ±(99.9%) 690.743 MB/sec [Average]
[info]   (min, avg, max) = (979.419, 1179.875, 1313.409), stdev = 179.384
[info]   CI (99.9%): [489.132, 1870.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   62999.689 ±(99.9%) 36324.866 B/op [Average]
[info]   (min, avg, max) = (52013.049, 62999.689, 71306.352), stdev = 9433.452
[info]   CI (99.9%): [26674.823, 99324.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 5.326 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.862, 3.206), stdev = 1.383
[info]   CI (99.9%): [≈ 0, 6.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   46.390 ±(99.9%) 288.167 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.390, 173.555), stdev = 74.836
[info]   CI (99.9%): [≈ 0, 334.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.600, 14.000), stdev = 4.219
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:42:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 329079.021 ops/s
[info] # Warmup Iteration   2: 601708.595 ops/s
[info] # Warmup Iteration   3: 624121.954 ops/s
[info] Iteration   1: 635511.777 ops/s
[info]                  ·gc.alloc.rate:                   1699.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              4207.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4112.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.702 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 638828.274 ops/s
[info]                  ·gc.alloc.rate:                   1721.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              4240.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4078.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 631472.959 ops/s
[info]                  ·gc.alloc.rate:                   1715.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              4275.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4129.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.571 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 640165.422 ops/s
[info]                  ·gc.alloc.rate:                   1732.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              4258.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4092.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 632846.051 ops/s
[info]                  ·gc.alloc.rate:                   1714.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              4261.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4154.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   635764.897 ±(99.9%) 14376.028 ops/s [Average]
[info]   (min, avg, max) = (631472.959, 635764.897, 640165.422), stdev = 3733.409
[info]   CI (99.9%): [621388.869, 650140.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1716.634 ±(99.9%) 45.871 MB/sec [Average]
[info]   (min, avg, max) = (1699.437, 1716.634, 1732.274), stdev = 11.913
[info]   CI (99.9%): [1670.763, 1762.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4248.601 ±(99.9%) 100.187 B/op [Average]
[info]   (min, avg, max) = (4207.671, 4248.601, 4275.369), stdev = 26.018
[info]   CI (99.9%): [4148.413, 4348.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1662.023 ±(99.9%) 25.556 MB/sec [Average]
[info]   (min, avg, max) = (1655.429, 1662.023, 1671.832), stdev = 6.637
[info]   CI (99.9%): [1636.467, 1687.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4113.519 ±(99.9%) 115.747 B/op [Average]
[info]   (min, avg, max) = (4078.191, 4113.519, 4154.673), stdev = 30.059
[info]   CI (99.9%): [3997.772, 4229.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.650 ±(99.9%) 4.447 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.650, 2.707), stdev = 1.155
[info]   CI (99.9%): [≈ 0, 5.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.608 ±(99.9%) 11.010 B/op [Average]
[info]   (min, avg, max) = (0.052, 1.608, 6.702), stdev = 2.859
[info]   CI (99.9%): [≈ 0, 12.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 10.000), stdev = 1.414
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:41:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1750.146 ops/s
[info] # Warmup Iteration   2: 19706.902 ops/s
[info] # Warmup Iteration   3: 23922.609 ops/s
[info] Iteration   1: 24191.160 ops/s
[info]                  ·gc.alloc.rate:               1765.404 MB/sec
[info]                  ·gc.alloc.rate.norm:          114855.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1622.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 105551.017 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 24242.484 ops/s
[info]                  ·gc.alloc.rate:                   1782.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              115754.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106366.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.351 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 24150.936 ops/s
[info]                  ·gc.alloc.rate:               1791.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          116718.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1988.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 129574.406 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 23923.286 ops/s
[info]                  ·gc.alloc.rate:               1774.925 MB/sec
[info]                  ·gc.alloc.rate.norm:          116745.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1672.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 110024.661 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 24240.082 ops/s
[info]                  ·gc.alloc.rate:               1798.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          116793.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1681.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109148.271 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   24149.590 ±(99.9%) 508.523 ops/s [Average]
[info]   (min, avg, max) = (23923.286, 24149.590, 24242.484), stdev = 132.062
[info]   CI (99.9%): [23641.067, 24658.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1782.722 ±(99.9%) 50.885 MB/sec [Average]
[info]   (min, avg, max) = (1765.404, 1782.722, 1798.928), stdev = 13.215
[info]   CI (99.9%): [1731.837, 1833.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   116173.233 ±(99.9%) 3289.946 B/op [Average]
[info]   (min, avg, max) = (114855.506, 116173.233, 116793.030), stdev = 854.388
[info]   CI (99.9%): [112883.287, 119463.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1720.679 ±(99.9%) 584.397 MB/sec [Average]
[info]   (min, avg, max) = (1622.388, 1720.679, 1988.706), stdev = 151.766
[info]   CI (99.9%): [1136.282, 2305.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   112133.058 ±(99.9%) 38222.679 B/op [Average]
[info]   (min, avg, max) = (105551.017, 112133.058, 129574.406), stdev = 9926.308
[info]   CI (99.9%): [73910.379, 150355.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.270 ±(99.9%) 2.327 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.270, 1.351), stdev = 0.604
[info]   CI (99.9%): [≈ 0, 2.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 9.000), stdev = 0.837
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:41:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21162.642 ops/s
[info] # Warmup Iteration   2: 69018.861 ops/s
[info] # Warmup Iteration   3: 68224.553 ops/s
[info] Iteration   1: 71414.279 ops/s
[info]                  ·gc.alloc.rate:                   1886.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              41571.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36417.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.536 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 72251.555 ops/s
[info]                  ·gc.alloc.rate:                   1912.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              41655.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42967.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.895 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 72472.809 ops/s
[info]                  ·gc.alloc.rate:                   1916.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              41607.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42967.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.713 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 72590.223 ops/s
[info]                  ·gc.alloc.rate:                   1932.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              41905.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35992.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.903 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 72190.577 ops/s
[info]                  ·gc.alloc.rate:                   1936.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              42223.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43721.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.908 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   72183.888 ±(99.9%) 1770.359 ops/s [Average]
[info]   (min, avg, max) = (71414.279, 72183.888, 72590.223), stdev = 459.757
[info]   CI (99.9%): [70413.529, 73954.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1917.092 ±(99.9%) 76.752 MB/sec [Average]
[info]   (min, avg, max) = (1886.621, 1917.092, 1936.812), stdev = 19.932
[info]   CI (99.9%): [1840.340, 1993.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   41792.323 ±(99.9%) 1055.376 B/op [Average]
[info]   (min, avg, max) = (41571.012, 41792.323, 42223.184), stdev = 274.078
[info]   CI (99.9%): [40736.947, 42847.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1854.092 ±(99.9%) 696.267 MB/sec [Average]
[info]   (min, avg, max) = (1652.728, 1854.092, 2005.543), stdev = 180.818
[info]   CI (99.9%): [1157.825, 2550.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   40413.208 ±(99.9%) 14851.674 B/op [Average]
[info]   (min, avg, max) = (35992.443, 40413.208, 43721.528), stdev = 3856.933
[info]   CI (99.9%): [25561.534, 55264.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.800 ±(99.9%) 5.865 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.800, 3.519), stdev = 1.523
[info]   CI (99.9%): [≈ 0, 6.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   17.591 ±(99.9%) 129.275 B/op [Average]
[info]   (min, avg, max) = (0.903, 17.591, 77.536), stdev = 33.572
[info]   CI (99.9%): [≈ 0, 146.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 12.000), stdev = 1.924
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:41:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55102.195 ops/s
[info] # Warmup Iteration   2: 169256.857 ops/s
[info] # Warmup Iteration   3: 176577.622 ops/s
[info] Iteration   1: 176501.883 ops/s
[info]                  ·gc.alloc.rate:                   1965.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              17527.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14689.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.632 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.391 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 181463.006 ops/s
[info]                  ·gc.alloc.rate:                   2012.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              17448.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17070.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.541 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 182324.420 ops/s
[info]                  ·gc.alloc.rate:                   2027.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              17500.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14246.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.719 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 181653.254 ops/s
[info]                  ·gc.alloc.rate:                   2034.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              17623.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17291.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.902 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 179171.422 ops/s
[info]                  ·gc.alloc.rate:               2021.360 MB/sec
[info]                  ·gc.alloc.rate.norm:          17751.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2011.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17660.301 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   180222.797 ±(99.9%) 9223.826 ops/s [Average]
[info]   (min, avg, max) = (176501.883, 180222.797, 182324.420), stdev = 2395.398
[info]   CI (99.9%): [170998.971, 189446.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2012.183 ±(99.9%) 104.845 MB/sec [Average]
[info]   (min, avg, max) = (1965.622, 2012.183, 2034.079), stdev = 27.228
[info]   CI (99.9%): [1907.338, 2117.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   17570.604 ±(99.9%) 459.398 B/op [Average]
[info]   (min, avg, max) = (17448.983, 17570.604, 17751.203), stdev = 119.304
[info]   CI (99.9%): [17111.206, 18030.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1854.663 ±(99.9%) 725.703 MB/sec [Average]
[info]   (min, avg, max) = (1647.284, 1854.663, 2011.008), stdev = 188.463
[info]   CI (99.9%): [1128.960, 2580.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   16191.844 ±(99.9%) 6143.149 B/op [Average]
[info]   (min, avg, max) = (14246.722, 16191.844, 17660.301), stdev = 1595.356
[info]   CI (99.9%): [10048.695, 22334.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.776 ±(99.9%) 6.149 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.776, 3.632), stdev = 1.597
[info]   CI (99.9%): [≈ 0, 6.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.911 ±(99.9%) 54.864 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.911, 32.391), stdev = 14.248
[info]   CI (99.9%): [≈ 0, 61.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 9.000), stdev = 1.095
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:41:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 897444.897 ops/s
[info] # Warmup Iteration   2: 1359895.833 ops/s
[info] # Warmup Iteration   3: 1481227.577 ops/s
[info] Iteration   1: 1502403.084 ops/s
[info]                  ·gc.alloc.rate:                   1268.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1042.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1471223.307 ops/s
[info]                  ·gc.alloc.rate:                   1266.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              1353.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1420.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.832 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1494859.059 ops/s
[info]                  ·gc.alloc.rate:                   1276.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              1343.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1391.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.351 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1495953.796 ops/s
[info]                  ·gc.alloc.rate:               1291.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          1358.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1389.855 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1497435.431 ops/s
[info]                  ·gc.alloc.rate:                   1288.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              1354.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1043.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1492374.935 ±(99.9%) 46866.579 ops/s [Average]
[info]   (min, avg, max) = (1471223.307, 1492374.935, 1502403.084), stdev = 12171.102
[info]   CI (99.9%): [1445508.356, 1539241.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1278.169 ±(99.9%) 44.499 MB/sec [Average]
[info]   (min, avg, max) = (1266.087, 1278.169, 1291.628), stdev = 11.556
[info]   CI (99.9%): [1233.670, 1322.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1347.721 ±(99.9%) 47.312 B/op [Average]
[info]   (min, avg, max) = (1328.096, 1347.721, 1358.848), stdev = 12.287
[info]   CI (99.9%): [1300.409, 1395.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1192.049 ±(99.9%) 695.639 MB/sec [Average]
[info]   (min, avg, max) = (992.529, 1192.049, 1328.557), stdev = 180.655
[info]   CI (99.9%): [496.410, 1887.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1257.648 ±(99.9%) 755.548 B/op [Average]
[info]   (min, avg, max) = (1042.990, 1257.648, 1420.626), stdev = 196.213
[info]   CI (99.9%): [502.100, 2013.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.641 ±(99.9%) 4.746 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.641, 2.832), stdev = 1.233
[info]   CI (99.9%): [≈ 0, 5.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.685 ±(99.9%) 5.077 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.685, 3.029), stdev = 1.318
[info]   CI (99.9%): [≈ 0, 5.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:41:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1096430.356 ops/s
[info] # Warmup Iteration   2: 1754395.922 ops/s
[info] # Warmup Iteration   3: 1777221.050 ops/s
[info] Iteration   1: 1773523.137 ops/s
[info]                  ·gc.alloc.rate:      1.013 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.899 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1777522.545 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1773463.731 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1777206.753 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1778243.421 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1775991.918 ±(99.9%) 8901.261 ops/s [Average]
[info]   (min, avg, max) = (1773463.731, 1775991.918, 1778243.421), stdev = 2311.629
[info]   CI (99.9%): [1767090.657, 1784893.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.203 ±(99.9%) 1.743 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.203, 1.013), stdev = 0.453
[info]   CI (99.9%): [≈ 0, 1.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.180 ±(99.9%) 1.547 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.180, 0.899), stdev = 0.402
[info]   CI (99.9%): [≈ 0, 1.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:40:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22190.055 ops/s
[info] # Warmup Iteration   2: 134274.498 ops/s
[info] # Warmup Iteration   3: 144210.381 ops/s
[info] Iteration   1: 150977.402 ops/s
[info]                  ·gc.alloc.rate:                   1956.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              20396.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1962.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20457.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 152412.014 ops/s
[info]                  ·gc.alloc.rate:                   1972.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              20368.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1958.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20227.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.215 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 152166.439 ops/s
[info]                  ·gc.alloc.rate:               1990.627 MB/sec
[info]                  ·gc.alloc.rate.norm:          20582.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1975.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20429.266 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 151402.002 ops/s
[info]                  ·gc.alloc.rate:                   1968.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              20461.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17261.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 152496.885 ops/s
[info]                  ·gc.alloc.rate:                   1995.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              20595.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20727.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   151890.949 ±(99.9%) 2574.609 ops/s [Average]
[info]   (min, avg, max) = (150977.402, 151890.949, 152496.885), stdev = 668.618
[info]   CI (99.9%): [149316.339, 154465.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1976.828 ±(99.9%) 61.940 MB/sec [Average]
[info]   (min, avg, max) = (1956.749, 1976.828, 1995.664), stdev = 16.086
[info]   CI (99.9%): [1914.888, 2038.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   20481.167 ±(99.9%) 402.607 B/op [Average]
[info]   (min, avg, max) = (20368.271, 20481.167, 20595.793), stdev = 104.556
[info]   CI (99.9%): [20078.560, 20883.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1913.274 ±(99.9%) 548.951 MB/sec [Average]
[info]   (min, avg, max) = (1660.657, 1913.274, 2008.462), stdev = 142.561
[info]   CI (99.9%): [1364.323, 2462.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   19820.754 ±(99.9%) 5551.810 B/op [Average]
[info]   (min, avg, max) = (17261.351, 19820.754, 20727.873), stdev = 1441.788
[info]   CI (99.9%): [14268.944, 25372.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.216 ±(99.9%) 0.585 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.216, 0.430), stdev = 0.152
[info]   CI (99.9%): [≈ 0, 0.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 9.000), stdev = 1.225
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:40:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8238.495 ops/s
[info] # Warmup Iteration   2: 39855.573 ops/s
[info] # Warmup Iteration   3: 42087.219 ops/s
[info] Iteration   1: 41681.803 ops/s
[info]                  ·gc.alloc.rate:                   1553.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              58676.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49688.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.618 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 43178.252 ops/s
[info]                  ·gc.alloc.rate:                   1582.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              57696.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59696.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.940 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 43012.379 ops/s
[info]                  ·gc.alloc.rate:               1586.810 MB/sec
[info]                  ·gc.alloc.rate.norm:          58061.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1632.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59741.045 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 43151.716 ops/s
[info]                  ·gc.alloc.rate:                   1590.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              57992.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47864.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.519 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 42570.916 ops/s
[info]                  ·gc.alloc.rate:               1590.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          58785.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1652.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61076.837 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   42719.013 ±(99.9%) 2421.572 ops/s [Average]
[info]   (min, avg, max) = (41681.803, 42719.013, 43178.252), stdev = 628.875
[info]   CI (99.9%): [40297.441, 45140.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1580.800 ±(99.9%) 58.842 MB/sec [Average]
[info]   (min, avg, max) = (1553.996, 1580.800, 1590.242), stdev = 15.281
[info]   CI (99.9%): [1521.958, 1639.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   58242.531 ±(99.9%) 1802.650 B/op [Average]
[info]   (min, avg, max) = (57696.679, 58242.531, 58785.444), stdev = 468.142
[info]   CI (99.9%): [56439.881, 60045.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1510.196 ±(99.9%) 689.376 MB/sec [Average]
[info]   (min, avg, max) = (1312.526, 1510.196, 1652.054), stdev = 179.029
[info]   CI (99.9%): [820.820, 2199.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   55613.453 ±(99.9%) 24254.825 B/op [Average]
[info]   (min, avg, max) = (47864.650, 55613.453, 61076.837), stdev = 6298.901
[info]   CI (99.9%): [31358.627, 79868.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.866 ±(99.9%) 5.405 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.866, 3.247), stdev = 1.404
[info]   CI (99.9%): [≈ 0, 6.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   32.415 ±(99.9%) 203.967 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32.415, 122.618), stdev = 52.970
[info]   CI (99.9%): [≈ 0, 236.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 15.000), stdev = 3.715
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:40:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 291110.582 ops/s
[info] # Warmup Iteration   2: 761657.617 ops/s
[info] # Warmup Iteration   3: 778020.611 ops/s
[info] Iteration   1: 772513.749 ops/s
[info]                  ·gc.alloc.rate:                   1568.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              3195.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3382.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.759 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.619 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 721321.290 ops/s
[info]                  ·gc.alloc.rate:                   1452.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              3169.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2886.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.818 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 722918.398 ops/s
[info]                  ·gc.alloc.rate:                   1462.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              3184.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2877.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 724366.371 ops/s
[info]                  ·gc.alloc.rate:               1466.291 MB/sec
[info]                  ·gc.alloc.rate.norm:          3185.717 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1324.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2877.478 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 720345.927 ops/s
[info]                  ·gc.alloc.rate:               1472.070 MB/sec
[info]                  ·gc.alloc.rate.norm:          3216.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3633.733 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   732293.147 ±(99.9%) 86779.160 ops/s [Average]
[info]   (min, avg, max) = (720345.927, 732293.147, 772513.749), stdev = 22536.272
[info]   CI (99.9%): [645513.988, 819072.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1484.540 ±(99.9%) 182.822 MB/sec [Average]
[info]   (min, avg, max) = (1452.874, 1484.540, 1568.551), stdev = 47.478
[info]   CI (99.9%): [1301.718, 1667.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3190.280 ±(99.9%) 66.179 B/op [Average]
[info]   (min, avg, max) = (3169.440, 3190.280, 3216.201), stdev = 17.186
[info]   CI (99.9%): [3124.101, 3256.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1458.574 ±(99.9%) 714.065 MB/sec [Average]
[info]   (min, avg, max) = (1321.755, 1458.574, 1663.175), stdev = 185.440
[info]   CI (99.9%): [744.509, 2172.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3131.490 ±(99.9%) 1366.770 B/op [Average]
[info]   (min, avg, max) = (2877.478, 3131.490, 3633.733), stdev = 354.946
[info]   CI (99.9%): [1764.721, 4498.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.643 ±(99.9%) 4.592 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.643, 2.759), stdev = 1.192
[info]   CI (99.9%): [≈ 0, 5.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.324 ±(99.9%) 9.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.324, 5.619), stdev = 2.425
[info]   CI (99.9%): [≈ 0, 10.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 12.000), stdev = 2.683
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:40:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 776.574 ops/s
[info] # Warmup Iteration   2: 21158.684 ops/s
[info] # Warmup Iteration   3: 30057.383 ops/s
[info] Iteration   1: 30114.261 ops/s
[info]                  ·gc.alloc.rate:                   2135.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              111581.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120096.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.695 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 30119.646 ops/s
[info]                  ·gc.alloc.rate:                   2130.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              111274.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103820.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.088 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 30213.204 ops/s
[info]                  ·gc.alloc.rate:                   2159.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              112495.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104264.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.591 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 30351.506 ops/s
[info]                  ·gc.alloc.rate:                   2170.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              112540.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104460.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.079 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 30210.788 ops/s
[info]                  ·gc.alloc.rate:                   2174.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              113272.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2362.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123077.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.084 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   30201.881 ±(99.9%) 370.518 ops/s [Average]
[info]   (min, avg, max) = (30114.261, 30201.881, 30351.506), stdev = 96.222
[info]   CI (99.9%): [29831.363, 30572.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2154.071 ±(99.9%) 77.660 MB/sec [Average]
[info]   (min, avg, max) = (2130.554, 2154.071, 2174.433), stdev = 20.168
[info]   CI (99.9%): [2076.411, 2231.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   112232.934 ±(99.9%) 3096.491 B/op [Average]
[info]   (min, avg, max) = (111274.893, 112232.934, 113272.423), stdev = 804.149
[info]   CI (99.9%): [109136.444, 115329.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2132.982 ±(99.9%) 700.334 MB/sec [Average]
[info]   (min, avg, max) = (1987.822, 2132.982, 2362.649), stdev = 181.874
[info]   CI (99.9%): [1432.649, 2833.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   111143.658 ±(99.9%) 36943.330 B/op [Average]
[info]   (min, avg, max) = (103820.268, 111143.658, 123077.107), stdev = 9594.066
[info]   CI (99.9%): [74200.328, 148086.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.217 ±(99.9%) 1.431 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.217, 0.874), stdev = 0.372
[info]   CI (99.9%): [≈ 0, 1.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   11.308 ±(99.9%) 74.813 B/op [Average]
[info]   (min, avg, max) = (1.079, 11.308, 45.695), stdev = 19.429
[info]   CI (99.9%): [≈ 0, 86.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 13.000), stdev = 1.871
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:40:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116352.102 ops/s
[info] # Warmup Iteration   2: 327545.364 ops/s
[info] # Warmup Iteration   3: 335615.022 ops/s
[info] Iteration   1: 336190.846 ops/s
[info]                  ·gc.alloc.rate:                   1631.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              7636.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6178.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.911 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 335745.960 ops/s
[info]                  ·gc.alloc.rate:                   1621.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              7597.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6151.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.464 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 338536.992 ops/s
[info]                  ·gc.alloc.rate:               1654.125 MB/sec
[info]                  ·gc.alloc.rate.norm:          7690.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1640.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7624.588 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 335829.360 ops/s
[info]                  ·gc.alloc.rate:                   1654.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              7755.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7729.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 339856.570 ops/s
[info]                  ·gc.alloc.rate:                   1674.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              7754.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7694.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   337231.946 ±(99.9%) 7165.479 ops/s [Average]
[info]   (min, avg, max) = (335745.960, 337231.946, 339856.570), stdev = 1860.852
[info]   CI (99.9%): [330066.466, 344397.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1647.327 ±(99.9%) 81.011 MB/sec [Average]
[info]   (min, avg, max) = (1621.140, 1647.327, 1674.561), stdev = 21.038
[info]   CI (99.9%): [1566.316, 1728.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7686.914 ±(99.9%) 271.870 B/op [Average]
[info]   (min, avg, max) = (7597.061, 7686.914, 7755.821), stdev = 70.604
[info]   CI (99.9%): [7415.044, 7958.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1516.772 ±(99.9%) 704.804 MB/sec [Average]
[info]   (min, avg, max) = (1312.771, 1516.772, 1661.496), stdev = 183.035
[info]   CI (99.9%): [811.968, 2221.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7075.749 ±(99.9%) 3204.822 B/op [Average]
[info]   (min, avg, max) = (6151.966, 7075.749, 7729.813), stdev = 832.282
[info]   CI (99.9%): [3870.927, 10280.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.708 ±(99.9%) 5.358 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.708, 3.186), stdev = 1.391
[info]   CI (99.9%): [≈ 0, 6.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.314 ±(99.9%) 25.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.314, 14.911), stdev = 6.511
[info]   CI (99.9%): [≈ 0, 28.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 12.000), stdev = 2.387
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:39:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 795852.006 ops/s
[info] # Warmup Iteration   2: 1789701.547 ops/s
[info] # Warmup Iteration   3: 1960894.662 ops/s
[info] Iteration   1: 1938763.918 ops/s
[info]                  ·gc.alloc.rate:                   1166.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1075.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1968230.889 ops/s
[info]                  ·gc.alloc.rate:                   1182.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              945.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     795.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.613 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.089 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1962571.377 ops/s
[info]                  ·gc.alloc.rate:                   1191.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              955.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1060.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.467 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1971382.512 ops/s
[info]                  ·gc.alloc.rate:                   1190.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              950.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     789.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1964731.221 ops/s
[info]                  ·gc.alloc.rate:                   1200.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              961.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1058.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1961135.983 ±(99.9%) 49866.375 ops/s [Average]
[info]   (min, avg, max) = (1938763.918, 1961135.983, 1971382.512), stdev = 12950.139
[info]   CI (99.9%): [1911269.608, 2011002.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1186.390 ±(99.9%) 49.931 MB/sec [Average]
[info]   (min, avg, max) = (1166.499, 1186.390, 1200.959), stdev = 12.967
[info]   CI (99.9%): [1136.459, 1236.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   952.065 ±(99.9%) 26.130 B/op [Average]
[info]   (min, avg, max) = (945.241, 952.065, 961.989), stdev = 6.786
[info]   CI (99.9%): [925.935, 978.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1190.487 ±(99.9%) 696.780 MB/sec [Average]
[info]   (min, avg, max) = (989.293, 1190.487, 1324.317), stdev = 180.952
[info]   CI (99.9%): [493.707, 1887.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   955.871 ±(99.9%) 573.812 B/op [Average]
[info]   (min, avg, max) = (789.759, 955.871, 1075.070), stdev = 149.017
[info]   CI (99.9%): [382.059, 1529.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.664 ±(99.9%) 4.291 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.664, 2.613), stdev = 1.114
[info]   CI (99.9%): [≈ 0, 4.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.531 ±(99.9%) 3.431 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.531, 2.089), stdev = 0.891
[info]   CI (99.9%): [≈ 0, 3.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.646
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:39:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1072200.846 ops/s
[info] # Warmup Iteration   2: 2190115.240 ops/s
[info] # Warmup Iteration   3: 2250077.766 ops/s
[info] Iteration   1: 2210424.197 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2254886.792 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2228997.403 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2254768.540 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2254729.625 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   2240761.312 ±(99.9%) 78196.887 ops/s [Average]
[info]   (min, avg, max) = (2210424.197, 2240761.312, 2254886.792), stdev = 20307.483
[info]   CI (99.9%): [2162564.425, 2318958.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:39:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73795.018 ops/s
[info] # Warmup Iteration   2: 210629.037 ops/s
[info] # Warmup Iteration   3: 241925.002 ops/s
[info] Iteration   1: 241405.015 ops/s
[info]                  ·gc.alloc.rate:                   1614.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              10528.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10701.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.518 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.937 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 245312.964 ops/s
[info]                  ·gc.alloc.rate:                   1633.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              10477.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10479.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.606 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 246993.255 ops/s
[info]                  ·gc.alloc.rate:                   1628.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              10375.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8323.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 246387.221 ops/s
[info]                  ·gc.alloc.rate:                   1658.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              10594.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10484.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.399 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 246428.799 ops/s
[info]                  ·gc.alloc.rate:                   1658.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              10594.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10570.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   245305.451 ±(99.9%) 8716.050 ops/s [Average]
[info]   (min, avg, max) = (241405.015, 245305.451, 246993.255), stdev = 2263.530
[info]   CI (99.9%): [236589.401, 254021.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1638.740 ±(99.9%) 74.676 MB/sec [Average]
[info]   (min, avg, max) = (1614.916, 1638.740, 1658.906), stdev = 19.393
[info]   CI (99.9%): [1564.064, 1713.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10513.942 ±(99.9%) 353.042 B/op [Average]
[info]   (min, avg, max) = (10375.515, 10513.942, 10594.405), stdev = 91.684
[info]   CI (99.9%): [10160.900, 10866.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1575.566 ±(99.9%) 580.389 MB/sec [Average]
[info]   (min, avg, max) = (1306.304, 1575.566, 1655.225), stdev = 150.725
[info]   CI (99.9%): [995.177, 2155.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10112.110 ±(99.9%) 3864.678 B/op [Average]
[info]   (min, avg, max) = (8323.952, 10112.110, 10701.572), stdev = 1003.644
[info]   CI (99.9%): [6247.433, 13976.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 5.839 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.837, 3.518), stdev = 1.516
[info]   CI (99.9%): [≈ 0, 6.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.442 ±(99.9%) 38.084 B/op [Average]
[info]   (min, avg, max) = (0.133, 5.442, 22.937), stdev = 9.890
[info]   CI (99.9%): [≈ 0, 43.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 16.000), stdev = 4.087
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:39:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19111.291 ops/s
[info] # Warmup Iteration   2: 67812.037 ops/s
[info] # Warmup Iteration   3: 69396.660 ops/s
[info] Iteration   1: 71425.735 ops/s
[info]                  ·gc.alloc.rate:                   1577.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              34755.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36359.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.311 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 72537.913 ops/s
[info]                  ·gc.alloc.rate:                   1591.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              34523.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28473.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.809 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 73491.635 ops/s
[info]                  ·gc.alloc.rate:                   1629.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              34900.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35037.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.446 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 72958.137 ops/s
[info]                  ·gc.alloc.rate:               1632.461 MB/sec
[info]                  ·gc.alloc.rate.norm:          35215.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35464.576 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 72643.905 ops/s
[info]                  ·gc.alloc.rate:               1626.770 MB/sec
[info]                  ·gc.alloc.rate.norm:          35236.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1657.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35900.252 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   72611.465 ±(99.9%) 2924.524 ops/s [Average]
[info]   (min, avg, max) = (71425.735, 72611.465, 73491.635), stdev = 759.490
[info]   CI (99.9%): [69686.941, 75535.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1611.602 ±(99.9%) 97.389 MB/sec [Average]
[info]   (min, avg, max) = (1577.565, 1611.602, 1632.461), stdev = 25.292
[info]   CI (99.9%): [1514.213, 1708.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34926.170 ±(99.9%) 1174.107 B/op [Average]
[info]   (min, avg, max) = (34523.114, 34926.170, 35236.507), stdev = 304.912
[info]   CI (99.9%): [33752.063, 36100.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1580.102 ±(99.9%) 576.646 MB/sec [Average]
[info]   (min, avg, max) = (1312.584, 1580.102, 1657.413), stdev = 149.753
[info]   CI (99.9%): [1003.456, 2156.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   34246.948 ±(99.9%) 12571.500 B/op [Average]
[info]   (min, avg, max) = (28473.490, 34246.948, 36359.246), stdev = 3264.779
[info]   CI (99.9%): [21675.448, 46818.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.825 ±(99.9%) 5.616 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.825, 3.373), stdev = 1.459
[info]   CI (99.9%): [≈ 0, 6.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   18.113 ±(99.9%) 123.758 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.113, 74.311), stdev = 32.140
[info]   CI (99.9%): [≈ 0, 141.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 15.000), stdev = 3.834
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:39:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20677.175 ops/s
[info] # Warmup Iteration   2: 79787.812 ops/s
[info] # Warmup Iteration   3: 84294.268 ops/s
[info] Iteration   1: 86771.968 ops/s
[info]                  ·gc.alloc.rate:                   1137.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              20627.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17839.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.510 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 87730.753 ops/s
[info]                  ·gc.alloc.rate:                   1147.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              20583.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23566.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 84691.503 ops/s
[info]                  ·gc.alloc.rate:                   1106.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              20562.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18266.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.117 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 85163.227 ops/s
[info]                  ·gc.alloc.rate:                   1118.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              20653.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18060.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 84955.315 ops/s
[info]                  ·gc.alloc.rate:                   1127.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              20874.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24131.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   85862.553 ±(99.9%) 5094.178 ops/s [Average]
[info]   (min, avg, max) = (84691.503, 85862.553, 87730.753), stdev = 1322.942
[info]   CI (99.9%): [80768.376, 90956.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1127.389 ±(99.9%) 61.827 MB/sec [Average]
[info]   (min, avg, max) = (1106.455, 1127.389, 1147.577), stdev = 16.056
[info]   CI (99.9%): [1065.562, 1189.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20660.321 ±(99.9%) 481.678 B/op [Average]
[info]   (min, avg, max) = (20562.014, 20660.321, 20874.772), stdev = 125.090
[info]   CI (99.9%): [20178.643, 21141.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1112.303 ±(99.9%) 690.576 MB/sec [Average]
[info]   (min, avg, max) = (977.653, 1112.303, 1313.838), stdev = 179.340
[info]   CI (99.9%): [421.727, 1802.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20372.731 ±(99.9%) 12256.846 B/op [Average]
[info]   (min, avg, max) = (17839.747, 20372.731, 24131.416), stdev = 3183.064
[info]   CI (99.9%): [8115.885, 32629.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.920 ±(99.9%) 5.508 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.920, 3.352), stdev = 1.430
[info]   CI (99.9%): [≈ 0, 6.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.658 ±(99.9%) 98.850 B/op [Average]
[info]   (min, avg, max) = (0.385, 16.658, 60.125), stdev = 25.671
[info]   CI (99.9%): [≈ 0, 115.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 14.000), stdev = 4.301
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:38:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48038.389 ops/s
[info] # Warmup Iteration   2: 92125.977 ops/s
[info] # Warmup Iteration   3: 92538.242 ops/s
[info] Iteration   1: 95666.972 ops/s
[info]                  ·gc.alloc.rate:                   1175.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              19342.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16335.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.685 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 95051.455 ops/s
[info]                  ·gc.alloc.rate:                   1183.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              19588.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21972.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.845 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 95814.394 ops/s
[info]                  ·gc.alloc.rate:                   1178.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              19354.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16293.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.207 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 94249.042 ops/s
[info]                  ·gc.alloc.rate:               1177.799 MB/sec
[info]                  ·gc.alloc.rate.norm:          19661.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22025.402 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 96533.976 ops/s
[info]                  ·gc.alloc.rate:                   1183.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              19295.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16149.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   95463.168 ±(99.9%) 3309.725 ops/s [Average]
[info]   (min, avg, max) = (94249.042, 95463.168, 96533.976), stdev = 859.525
[info]   CI (99.9%): [92153.443, 98772.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1179.767 ±(99.9%) 13.092 MB/sec [Average]
[info]   (min, avg, max) = (1175.740, 1179.767, 1183.512), stdev = 3.400
[info]   CI (99.9%): [1166.675, 1192.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   19448.327 ±(99.9%) 633.322 B/op [Average]
[info]   (min, avg, max) = (19295.524, 19448.327, 19661.068), stdev = 164.472
[info]   CI (99.9%): [18815.005, 20081.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1124.464 ±(99.9%) 698.899 MB/sec [Average]
[info]   (min, avg, max) = (990.567, 1124.464, 1327.096), stdev = 181.502
[info]   CI (99.9%): [425.565, 1823.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   18555.288 ±(99.9%) 12108.318 B/op [Average]
[info]   (min, avg, max) = (16149.817, 18555.288, 22025.402), stdev = 3144.492
[info]   CI (99.9%): [6446.970, 30663.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.675 ±(99.9%) 4.575 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.675, 2.769), stdev = 1.188
[info]   CI (99.9%): [≈ 0, 5.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.151 ±(99.9%) 75.774 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.151, 45.845), stdev = 19.678
[info]   CI (99.9%): [≈ 0, 86.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:38:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2859.624 ops/s
[info] # Warmup Iteration   2: 38094.344 ops/s
[info] # Warmup Iteration   3: 44446.931 ops/s
[info] Iteration   1: 42840.064 ops/s
[info]                  ·gc.alloc.rate:                   2019.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              74175.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72034.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.434 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.896 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 45545.128 ops/s
[info]                  ·gc.alloc.rate:                   2120.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              73270.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67435.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.439 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 45532.643 ops/s
[info]                  ·gc.alloc.rate:                   2140.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              73997.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67923.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.439 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 45308.535 ops/s
[info]                  ·gc.alloc.rate:                   2132.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              74056.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68999.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.446 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 45283.604 ops/s
[info]                  ·gc.alloc.rate:               2144.134 MB/sec
[info]                  ·gc.alloc.rate.norm:          74519.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2339.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81298.152 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   44901.995 ±(99.9%) 4463.176 ops/s [Average]
[info]   (min, avg, max) = (42840.064, 44901.995, 45545.128), stdev = 1159.073
[info]   CI (99.9%): [40438.819, 49365.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2111.271 ±(99.9%) 201.683 MB/sec [Average]
[info]   (min, avg, max) = (2019.049, 2111.271, 2144.134), stdev = 52.376
[info]   CI (99.9%): [1909.588, 2312.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   74003.662 ±(99.9%) 1760.243 B/op [Average]
[info]   (min, avg, max) = (73270.261, 74003.662, 74519.008), stdev = 457.129
[info]   CI (99.9%): [72243.419, 75763.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2040.597 ±(99.9%) 644.642 MB/sec [Average]
[info]   (min, avg, max) = (1951.418, 2040.597, 2339.191), stdev = 167.411
[info]   CI (99.9%): [1395.955, 2685.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   71538.241 ±(99.9%) 22107.729 B/op [Average]
[info]   (min, avg, max) = (67435.094, 71538.241, 81298.152), stdev = 5741.307
[info]   CI (99.9%): [49430.512, 93645.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 7.582 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 4.434), stdev = 1.969
[info]   CI (99.9%): [≈ 0, 8.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   33.444 ±(99.9%) 278.665 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.444, 162.896), stdev = 72.368
[info]   CI (99.9%): [≈ 0, 312.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 14.000), stdev = 2.345
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:38:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41717.401 ops/s
[info] # Warmup Iteration   2: 106674.574 ops/s
[info] # Warmup Iteration   3: 110295.171 ops/s
[info] Iteration   1: 112096.806 ops/s
[info]                  ·gc.alloc.rate:                   1072.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              15057.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13842.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 111872.336 ops/s
[info]                  ·gc.alloc.rate:                   1068.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              15024.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13898.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.586 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 114431.980 ops/s
[info]                  ·gc.alloc.rate:                   1094.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              15051.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13587.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.966 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 114647.137 ops/s
[info]                  ·gc.alloc.rate:                   1109.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              15233.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17978.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.858 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 115158.203 ops/s
[info]                  ·gc.alloc.rate:                   1099.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              15020.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13410.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.854 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   113641.292 ±(99.9%) 5919.410 ops/s [Average]
[info]   (min, avg, max) = (111872.336, 113641.292, 115158.203), stdev = 1537.252
[info]   CI (99.9%): [107721.882, 119560.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1088.746 ±(99.9%) 68.543 MB/sec [Average]
[info]   (min, avg, max) = (1068.098, 1088.746, 1109.660), stdev = 17.800
[info]   CI (99.9%): [1020.203, 1157.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   15077.538 ±(99.9%) 340.970 B/op [Average]
[info]   (min, avg, max) = (15020.929, 15077.538, 15233.307), stdev = 88.549
[info]   CI (99.9%): [14736.567, 15418.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1050.589 ±(99.9%) 557.779 MB/sec [Average]
[info]   (min, avg, max) = (981.257, 1050.589, 1309.663), stdev = 144.853
[info]   CI (99.9%): [492.810, 1608.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14543.805 ±(99.9%) 7433.161 B/op [Average]
[info]   (min, avg, max) = (13410.830, 14543.805, 17978.933), stdev = 1930.368
[info]   CI (99.9%): [7110.644, 21976.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 6.245 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.808, 3.706), stdev = 1.622
[info]   CI (99.9%): [≈ 0, 7.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   11.111 ±(99.9%) 85.878 B/op [Average]
[info]   (min, avg, max) = (0.292, 11.111, 50.966), stdev = 22.302
[info]   CI (99.9%): [≈ 0, 96.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.050
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:38:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151554.364 ops/s
[info] # Warmup Iteration   2: 320610.023 ops/s
[info] # Warmup Iteration   3: 320042.520 ops/s
[info] Iteration   1: 331323.037 ops/s
[info]                  ·gc.alloc.rate:               506.618 MB/sec
[info]                  ·gc.alloc.rate.norm:          2406.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3094.694 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 328476.773 ops/s
[info]                  ·gc.alloc.rate:                   497.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              2385.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1563.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 329055.801 ops/s
[info]                  ·gc.alloc.rate:               511.942 MB/sec
[info]                  ·gc.alloc.rate.norm:          2447.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3125.636 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 335428.506 ops/s
[info]                  ·gc.alloc.rate:                   507.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              2379.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1534.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 330031.010 ops/s
[info]                  ·gc.alloc.rate:               505.116 MB/sec
[info]                  ·gc.alloc.rate.norm:          2408.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3125.886 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   330863.025 ±(99.9%) 10669.086 ops/s [Average]
[info]   (min, avg, max) = (328476.773, 330863.025, 335428.506), stdev = 2770.728
[info]   CI (99.9%): [320193.939, 341532.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   505.767 ±(99.9%) 19.512 MB/sec [Average]
[info]   (min, avg, max) = (497.937, 505.767, 511.942), stdev = 5.067
[info]   CI (99.9%): [486.255, 525.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2405.680 ±(99.9%) 103.161 B/op [Average]
[info]   (min, avg, max) = (2379.846, 2405.680, 2447.981), stdev = 26.790
[info]   CI (99.9%): [2302.519, 2508.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   522.854 ±(99.9%) 689.280 MB/sec [Average]
[info]   (min, avg, max) = (326.447, 522.854, 655.470), stdev = 179.004
[info]   CI (99.9%): [≈ 0, 1212.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2488.983 ±(99.9%) 3303.549 B/op [Average]
[info]   (min, avg, max) = (1534.710, 2488.983, 3125.886), stdev = 857.921
[info]   CI (99.9%): [≈ 0, 5792.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.208 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.100), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:37:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 301727.507 ops/s
[info] # Warmup Iteration   2: 667055.027 ops/s
[info] # Warmup Iteration   3: 686562.110 ops/s
[info] Iteration   1: 673711.400 ops/s
[info]                  ·gc.alloc.rate:                   866.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              2023.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2314.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 686987.962 ops/s
[info]                  ·gc.alloc.rate:                   881.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              2019.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2273.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 683628.011 ops/s
[info]                  ·gc.alloc.rate:                   867.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              1996.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1525.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 670557.240 ops/s
[info]                  ·gc.alloc.rate:                   864.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              2029.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2332.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 681583.436 ops/s
[info]                  ·gc.alloc.rate:                   865.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              1998.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1524.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   679293.610 ±(99.9%) 26588.872 ops/s [Average]
[info]   (min, avg, max) = (670557.240, 679293.610, 686987.962), stdev = 6905.046
[info]   CI (99.9%): [652704.738, 705882.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   869.172 ±(99.9%) 26.774 MB/sec [Average]
[info]   (min, avg, max) = (864.799, 869.172, 881.485), stdev = 6.953
[info]   CI (99.9%): [842.397, 895.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2013.590 ±(99.9%) 57.536 B/op [Average]
[info]   (min, avg, max) = (1996.796, 2013.590, 2029.507), stdev = 14.942
[info]   CI (99.9%): [1956.054, 2071.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   860.141 ±(99.9%) 697.911 MB/sec [Average]
[info]   (min, avg, max) = (660.265, 860.141, 994.042), stdev = 181.245
[info]   CI (99.9%): [162.230, 1558.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1994.274 ±(99.9%) 1650.874 B/op [Average]
[info]   (min, avg, max) = (1524.415, 1994.274, 2332.813), stdev = 428.727
[info]   CI (99.9%): [343.400, 3645.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.625 ±(99.9%) 5.109 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.625, 2.998), stdev = 1.327
[info]   CI (99.9%): [≈ 0, 5.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.465 ±(99.9%) 11.993 B/op [Average]
[info]   (min, avg, max) = (0.048, 1.465, 7.036), stdev = 3.114
[info]   CI (99.9%): [≈ 0, 13.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 8.000), stdev = 2.049
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:37:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 355138.539 ops/s
[info] # Warmup Iteration   2: 745801.865 ops/s
[info] # Warmup Iteration   3: 732565.998 ops/s
[info] Iteration   1: 752413.538 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 749585.511 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 767487.753 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 740814.638 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 743373.703 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   750735.028 ±(99.9%) 40266.203 ops/s [Average]
[info]   (min, avg, max) = (740814.638, 750735.028, 767487.753), stdev = 10457.005
[info]   CI (99.9%): [710468.825, 791001.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:37:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82650.595 ops/s
[info] # Warmup Iteration   2: 223580.689 ops/s
[info] # Warmup Iteration   3: 231662.529 ops/s
[info] Iteration   1: 234940.689 ops/s
[info]                  ·gc.alloc.rate:               774.134 MB/sec
[info]                  ·gc.alloc.rate.norm:          5184.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4391.156 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 237030.021 ops/s
[info]                  ·gc.alloc.rate:                   776.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              5153.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4361.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 237552.621 ops/s
[info]                  ·gc.alloc.rate:                   786.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6536.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 237153.410 ops/s
[info]                  ·gc.alloc.rate:                   779.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              5172.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4370.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.414 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 239194.579 ops/s
[info]                  ·gc.alloc.rate:                   785.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              5169.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4323.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.794 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   237174.264 ±(99.9%) 5850.865 ops/s [Average]
[info]   (min, avg, max) = (234940.689, 237174.264, 239194.579), stdev = 1519.451
[info]   CI (99.9%): [231323.399, 243025.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   780.301 ±(99.9%) 20.980 MB/sec [Average]
[info]   (min, avg, max) = (774.134, 780.301, 786.094), stdev = 5.448
[info]   CI (99.9%): [759.321, 801.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   5177.610 ±(99.9%) 78.230 B/op [Average]
[info]   (min, avg, max) = (5153.757, 5177.610, 5208.191), stdev = 20.316
[info]   CI (99.9%): [5099.380, 5255.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   722.955 ±(99.9%) 567.470 MB/sec [Average]
[info]   (min, avg, max) = (655.664, 722.955, 986.572), stdev = 147.370
[info]   CI (99.9%): [155.485, 1290.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4796.549 ±(99.9%) 3746.427 B/op [Average]
[info]   (min, avg, max) = (4323.812, 4796.549, 6536.442), stdev = 972.935
[info]   CI (99.9%): [1050.122, 8542.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.799 ±(99.9%) 5.359 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.799, 3.227), stdev = 1.392
[info]   CI (99.9%): [≈ 0, 6.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.297 ±(99.9%) 35.568 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.297, 21.414), stdev = 9.237
[info]   CI (99.9%): [≈ 0, 40.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 11.000), stdev = 2.828
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:37:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27624.489 ops/s
[info] # Warmup Iteration   2: 116989.000 ops/s
[info] # Warmup Iteration   3: 120094.904 ops/s
[info] Iteration   1: 124840.986 ops/s
[info]                  ·gc.alloc.rate:                   1750.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              22068.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20760.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.290 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 124892.067 ops/s
[info]                  ·gc.alloc.rate:                   1753.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              22081.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20641.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.312 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 125369.712 ops/s
[info]                  ·gc.alloc.rate:                   1765.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              22164.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20584.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.523 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 125100.265 ops/s
[info]                  ·gc.alloc.rate:                   1788.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              22500.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24928.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 125386.155 ops/s
[info]                  ·gc.alloc.rate:               1780.540 MB/sec
[info]                  ·gc.alloc.rate.norm:          22343.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1665.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20895.430 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   125117.837 ±(99.9%) 988.053 ops/s [Average]
[info]   (min, avg, max) = (124840.986, 125117.837, 125386.155), stdev = 256.594
[info]   CI (99.9%): [124129.784, 126105.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1767.759 ±(99.9%) 63.695 MB/sec [Average]
[info]   (min, avg, max) = (1750.958, 1767.759, 1788.457), stdev = 16.541
[info]   CI (99.9%): [1704.064, 1831.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22231.575 ±(99.9%) 716.285 B/op [Average]
[info]   (min, avg, max) = (22068.782, 22231.575, 22500.359), stdev = 186.017
[info]   CI (99.9%): [21515.290, 22947.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1714.504 ±(99.9%) 576.087 MB/sec [Average]
[info]   (min, avg, max) = (1638.756, 1714.504, 1981.466), stdev = 149.608
[info]   CI (99.9%): [1138.417, 2290.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21562.236 ±(99.9%) 7260.824 B/op [Average]
[info]   (min, avg, max) = (20584.988, 21562.236, 24928.581), stdev = 1885.613
[info]   CI (99.9%): [14301.411, 28823.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.800 ±(99.9%) 6.528 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.800, 3.831), stdev = 1.695
[info]   CI (99.9%): [≈ 0, 7.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.077 ±(99.9%) 82.278 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.077, 48.290), stdev = 21.367
[info]   CI (99.9%): [≈ 0, 92.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 14.000), stdev = 3.050
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:37:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46537.394 ops/s
[info] # Warmup Iteration   2: 169173.801 ops/s
[info] # Warmup Iteration   3: 177915.125 ops/s
[info] Iteration   1: 180690.028 ops/s
[info]                  ·gc.alloc.rate:                   1095.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              9537.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8570.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 178046.106 ops/s
[info]                  ·gc.alloc.rate:                   1076.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              9509.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8715.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 180332.310 ops/s
[info]                  ·gc.alloc.rate:                   1087.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              9487.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8598.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 183274.730 ops/s
[info]                  ·gc.alloc.rate:                   1123.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              9644.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11217.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.358 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 184591.992 ops/s
[info]                  ·gc.alloc.rate:               1117.661 MB/sec
[info]                  ·gc.alloc.rate.norm:          9526.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8349.575 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   181387.033 ±(99.9%) 9928.990 ops/s [Average]
[info]   (min, avg, max) = (178046.106, 181387.033, 184591.992), stdev = 2578.527
[info]   CI (99.9%): [171458.043, 191316.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1099.818 ±(99.9%) 77.167 MB/sec [Average]
[info]   (min, avg, max) = (1076.216, 1099.818, 1123.160), stdev = 20.040
[info]   CI (99.9%): [1022.652, 1176.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9541.142 ±(99.9%) 234.071 B/op [Average]
[info]   (min, avg, max) = (9487.493, 9541.142, 9644.382), stdev = 60.787
[info]   CI (99.9%): [9307.072, 9775.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1048.304 ±(99.9%) 555.624 MB/sec [Average]
[info]   (min, avg, max) = (979.539, 1048.304, 1306.382), stdev = 144.294
[info]   CI (99.9%): [492.679, 1603.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9090.447 ±(99.9%) 4607.297 B/op [Average]
[info]   (min, avg, max) = (8349.575, 9090.447, 11217.684), stdev = 1196.500
[info]   CI (99.9%): [4483.149, 13697.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.824 ±(99.9%) 6.919 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.824, 4.039), stdev = 1.797
[info]   CI (99.9%): [≈ 0, 7.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.194 ±(99.9%) 60.388 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.194, 35.247), stdev = 15.683
[info]   CI (99.9%): [≈ 0, 67.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 15.000), stdev = 4.278
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:36:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 196593.150 ops/s
[info] # Warmup Iteration   2: 507256.016 ops/s
[info] # Warmup Iteration   3: 510980.803 ops/s
[info] Iteration   1: 521419.629 ops/s
[info]                  ·gc.alloc.rate:               350.339 MB/sec
[info]                  ·gc.alloc.rate.norm:          1057.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 772.187 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 524047.408 ops/s
[info]                  ·gc.alloc.rate:               349.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          1049.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 989.334 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 522770.967 ops/s
[info]                  ·gc.alloc.rate:                   352.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              1059.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     991.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 519540.550 ops/s
[info]                  ·gc.alloc.rate:               350.445 MB/sec
[info]                  ·gc.alloc.rate.norm:          1061.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 999.949 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 524251.856 ops/s
[info]                  ·gc.alloc.rate:               353.869 MB/sec
[info]                  ·gc.alloc.rate.norm:          1062.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 990.921 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   522406.082 ±(99.9%) 7560.005 ops/s [Average]
[info]   (min, avg, max) = (519540.550, 522406.082, 524251.856), stdev = 1963.309
[info]   CI (99.9%): [514846.077, 529966.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   351.232 ±(99.9%) 6.753 MB/sec [Average]
[info]   (min, avg, max) = (349.434, 351.232, 353.869), stdev = 1.754
[info]   CI (99.9%): [344.478, 357.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1058.079 ±(99.9%) 20.050 B/op [Average]
[info]   (min, avg, max) = (1049.440, 1058.079, 1062.228), stdev = 5.207
[info]   CI (99.9%): [1038.030, 1078.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   314.991 ±(99.9%) 127.216 MB/sec [Average]
[info]   (min, avg, max) = (255.894, 314.991, 330.114), stdev = 33.038
[info]   CI (99.9%): [187.774, 442.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   948.836 ±(99.9%) 380.578 B/op [Average]
[info]   (min, avg, max) = (772.187, 948.836, 999.949), stdev = 98.835
[info]   CI (99.9%): [568.258, 1329.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.063), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:36:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5701.911 ops/s
[info] # Warmup Iteration   2: 59055.538 ops/s
[info] # Warmup Iteration   3: 65581.026 ops/s
[info] Iteration   1: 62965.340 ops/s
[info]                  ·gc.alloc.rate:                   2516.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              62881.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57572.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.448 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 68057.865 ops/s
[info]                  ·gc.alloc.rate:                   2742.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              63416.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2662.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61574.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.407 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 67459.535 ops/s
[info]                  ·gc.alloc.rate:                   2733.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              63771.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2688.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62711.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.486 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 67314.944 ops/s
[info]                  ·gc.alloc.rate:                   2728.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              63796.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2703.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63204.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.973 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 68031.113 ops/s
[info]                  ·gc.alloc.rate:               2757.088 MB/sec
[info]                  ·gc.alloc.rate.norm:          63780.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2712.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62755.206 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   66765.759 ±(99.9%) 8280.400 ops/s [Average]
[info]   (min, avg, max) = (62965.340, 66765.759, 68057.865), stdev = 2150.394
[info]   CI (99.9%): [58485.359, 75046.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2695.566 ±(99.9%) 388.518 MB/sec [Average]
[info]   (min, avg, max) = (2516.117, 2695.566, 2757.088), stdev = 100.897
[info]   CI (99.9%): [2307.048, 3084.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63529.234 ±(99.9%) 1522.097 B/op [Average]
[info]   (min, avg, max) = (62881.601, 63529.234, 63796.247), stdev = 395.284
[info]   CI (99.9%): [62007.136, 65051.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2614.138 ±(99.9%) 672.236 MB/sec [Average]
[info]   (min, avg, max) = (2303.678, 2614.138, 2712.765), stdev = 174.577
[info]   CI (99.9%): [1941.902, 3286.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61563.681 ±(99.9%) 8898.107 B/op [Average]
[info]   (min, avg, max) = (57572.437, 61563.681, 63204.572), stdev = 2310.810
[info]   CI (99.9%): [52665.574, 70461.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.733 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.125, 0.458), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 0.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.063 ±(99.9%) 18.379 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.063, 11.448), stdev = 4.773
[info]   CI (99.9%): [≈ 0, 21.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.200, 12.000), stdev = 1.095
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:36:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52329.166 ops/s
[info] # Warmup Iteration   2: 160995.606 ops/s
[info] # Warmup Iteration   3: 169404.366 ops/s
[info] Iteration   1: 174973.265 ops/s
[info]                  ·gc.alloc.rate:                   1140.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              10254.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8904.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 174331.831 ops/s
[info]                  ·gc.alloc.rate:                   1134.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              10241.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11937.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.875 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 174472.895 ops/s
[info]                  ·gc.alloc.rate:                   1139.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              10276.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8935.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.634 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 175837.143 ops/s
[info]                  ·gc.alloc.rate:               1146.890 MB/sec
[info]                  ·gc.alloc.rate.norm:          10263.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:      985.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8818.728 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 175645.811 ops/s
[info]                  ·gc.alloc.rate:               1164.227 MB/sec
[info]                  ·gc.alloc.rate.norm:          10431.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11783.295 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   175052.189 ±(99.9%) 2604.005 ops/s [Average]
[info]   (min, avg, max) = (174331.831, 175052.189, 175837.143), stdev = 676.252
[info]   CI (99.9%): [172448.184, 177656.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1145.054 ±(99.9%) 44.660 MB/sec [Average]
[info]   (min, avg, max) = (1134.410, 1145.054, 1164.227), stdev = 11.598
[info]   CI (99.9%): [1100.395, 1189.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10293.599 ±(99.9%) 301.634 B/op [Average]
[info]   (min, avg, max) = (10241.213, 10293.599, 10431.811), stdev = 78.333
[info]   CI (99.9%): [9991.965, 10595.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1120.742 ±(99.9%) 695.959 MB/sec [Average]
[info]   (min, avg, max) = (985.425, 1120.742, 1322.337), stdev = 180.738
[info]   CI (99.9%): [424.783, 1816.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10075.920 ±(99.9%) 6278.867 B/op [Average]
[info]   (min, avg, max) = (8818.728, 10075.920, 11937.779), stdev = 1630.602
[info]   CI (99.9%): [3797.053, 16354.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.725 ±(99.9%) 4.957 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.725, 2.977), stdev = 1.287
[info]   CI (99.9%): [≈ 0, 5.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.539 ±(99.9%) 44.750 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.539, 26.875), stdev = 11.621
[info]   CI (99.9%): [≈ 0, 51.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.271
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:36:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 229877.062 ops/s
[info] # Warmup Iteration   2: 530960.034 ops/s
[info] # Warmup Iteration   3: 534900.296 ops/s
[info] Iteration   1: 545307.888 ops/s
[info]                  ·gc.alloc.rate:                   553.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              1596.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1884.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 545418.731 ops/s
[info]                  ·gc.alloc.rate:                   558.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              1610.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1887.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 543962.455 ops/s
[info]                  ·gc.alloc.rate:                   553.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              1599.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     948.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 544811.539 ops/s
[info]                  ·gc.alloc.rate:                   558.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              1612.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1894.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 540107.827 ops/s
[info]                  ·gc.alloc.rate:               547.487 MB/sec
[info]                  ·gc.alloc.rate.norm:          1595.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1913.896 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   543921.688 ±(99.9%) 8502.367 ops/s [Average]
[info]   (min, avg, max) = (540107.827, 543921.688, 545418.731), stdev = 2208.038
[info]   CI (99.9%): [535419.321, 552424.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   554.116 ±(99.9%) 17.389 MB/sec [Average]
[info]   (min, avg, max) = (547.487, 554.116, 558.393), stdev = 4.516
[info]   CI (99.9%): [536.727, 571.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1603.127 ±(99.9%) 31.650 B/op [Average]
[info]   (min, avg, max) = (1595.329, 1603.127, 1612.960), stdev = 8.219
[info]   CI (99.9%): [1571.477, 1634.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   589.550 ±(99.9%) 563.492 MB/sec [Average]
[info]   (min, avg, max) = (327.786, 589.550, 656.813), stdev = 146.337
[info]   CI (99.9%): [26.058, 1153.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1705.708 ±(99.9%) 1631.051 B/op [Average]
[info]   (min, avg, max) = (948.266, 1705.708, 1913.896), stdev = 423.579
[info]   CI (99.9%): [74.657, 3336.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.060, 0.120), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 7.000), stdev = 1.673
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:36:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 636974.606 ops/s
[info] # Warmup Iteration   2: 1033539.205 ops/s
[info] # Warmup Iteration   3: 1130720.778 ops/s
[info] Iteration   1: 1138907.639 ops/s
[info]                  ·gc.alloc.rate:                   864.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              1193.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     913.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1135752.796 ops/s
[info]                  ·gc.alloc.rate:                   866.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              1199.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1375.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1138570.804 ops/s
[info]                  ·gc.alloc.rate:                   864.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              1195.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     916.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1134872.524 ops/s
[info]                  ·gc.alloc.rate:                   873.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              1211.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1378.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.215 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1148715.673 ops/s
[info]                  ·gc.alloc.rate:               872.664 MB/sec
[info]                  ·gc.alloc.rate.norm:          1195.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 904.497 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1139363.887 ±(99.9%) 21222.722 ops/s [Average]
[info]   (min, avg, max) = (1134872.524, 1139363.887, 1148715.673), stdev = 5511.474
[info]   CI (99.9%): [1118141.165, 1160586.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   868.271 ±(99.9%) 17.853 MB/sec [Average]
[info]   (min, avg, max) = (864.070, 868.271, 873.850), stdev = 4.636
[info]   CI (99.9%): [850.418, 886.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1199.252 ±(99.9%) 28.563 B/op [Average]
[info]   (min, avg, max) = (1193.825, 1199.252, 1211.868), stdev = 7.418
[info]   CI (99.9%): [1170.690, 1227.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   794.255 ±(99.9%) 700.729 MB/sec [Average]
[info]   (min, avg, max) = (660.176, 794.255, 993.936), stdev = 181.977
[info]   CI (99.9%): [93.526, 1494.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1097.676 ±(99.9%) 982.669 B/op [Average]
[info]   (min, avg, max) = (904.497, 1097.676, 1378.405), stdev = 255.196
[info]   CI (99.9%): [115.007, 2080.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.625 ±(99.9%) 5.199 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.625, 3.039), stdev = 1.350
[info]   CI (99.9%): [≈ 0, 5.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.866 ±(99.9%) 7.210 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.866, 4.215), stdev = 1.872
[info]   CI (99.9%): [≈ 0, 8.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 9.000), stdev = 2.191
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:35:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 705725.287 ops/s
[info] # Warmup Iteration   2: 1250012.323 ops/s
[info] # Warmup Iteration   3: 1285365.633 ops/s
[info] Iteration   1: 1274041.774 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1266244.290 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1284977.428 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1277398.919 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1280540.062 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1276640.495 ±(99.9%) 27236.381 ops/s [Average]
[info]   (min, avg, max) = (1266244.290, 1276640.495, 1284977.428), stdev = 7073.202
[info]   CI (99.9%): [1249404.114, 1303876.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:35:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67031.249 ops/s
[info] # Warmup Iteration   2: 325464.243 ops/s
[info] # Warmup Iteration   3: 349006.832 ops/s
[info] Iteration   1: 347806.025 ops/s
[info]                  ·gc.alloc.rate:                   981.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              4441.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4432.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 351418.041 ops/s
[info]                  ·gc.alloc.rate:               976.802 MB/sec
[info]                  ·gc.alloc.rate.norm:          4372.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2932.733 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 344121.318 ops/s
[info]                  ·gc.alloc.rate:                   964.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              4412.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4502.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.566 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 347278.456 ops/s
[info]                  ·gc.alloc.rate:                   971.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              4401.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4453.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.453 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 348713.514 ops/s
[info]                  ·gc.alloc.rate:                   979.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              4421.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4419.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   347867.471 ±(99.9%) 10134.349 ops/s [Average]
[info]   (min, avg, max) = (344121.318, 347867.471, 351418.041), stdev = 2631.858
[info]   CI (99.9%): [337733.121, 358001.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   974.843 ±(99.9%) 26.096 MB/sec [Average]
[info]   (min, avg, max) = (964.919, 974.843, 981.470), stdev = 6.777
[info]   CI (99.9%): [948.747, 1000.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4409.823 ±(99.9%) 97.881 B/op [Average]
[info]   (min, avg, max) = (4372.491, 4409.823, 4441.069), stdev = 25.419
[info]   CI (99.9%): [4311.942, 4507.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   916.314 ±(99.9%) 562.207 MB/sec [Average]
[info]   (min, avg, max) = (655.164, 916.314, 984.656), stdev = 146.003
[info]   CI (99.9%): [354.107, 1478.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4148.316 ±(99.9%) 2619.463 B/op [Average]
[info]   (min, avg, max) = (2932.733, 4148.316, 4502.981), stdev = 680.266
[info]   CI (99.9%): [1528.853, 6767.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 6.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 3.623), stdev = 1.572
[info]   CI (99.9%): [≈ 0, 6.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.841 ±(99.9%) 27.680 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.841, 16.566), stdev = 7.188
[info]   CI (99.9%): [≈ 0, 31.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 3.317
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:35:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 137.659 ops/s
[info] # Warmup Iteration   2: 496.801 ops/s
[info] # Warmup Iteration   3: 589.832 ops/s
[info] Iteration   1: 600.993 ops/s
[info]                  ·gc.alloc.rate:                   1287.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              3378854.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3435741.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 272.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 604.557 ops/s
[info]                  ·gc.alloc.rate:                   1276.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              3320601.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2570311.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.434 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8936.727 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 597.751 ops/s
[info]                  ·gc.alloc.rate:                   1287.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              3387220.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3447325.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2246.635 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 609.186 ops/s
[info]                  ·gc.alloc.rate:                   1295.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              3345622.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3369195.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268.590 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 609.233 ops/s
[info]                  ·gc.alloc.rate:                   1316.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              3398604.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3379508.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.718 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   604.344 ±(99.9%) 19.454 ops/s [Average]
[info]   (min, avg, max) = (597.751, 604.344, 609.233), stdev = 5.052
[info]   CI (99.9%): [584.890, 623.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1292.614 ±(99.9%) 57.898 MB/sec [Average]
[info]   (min, avg, max) = (1276.104, 1292.614, 1316.380), stdev = 15.036
[info]   CI (99.9%): [1234.716, 1350.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3366180.617 ±(99.9%) 124101.739 B/op [Average]
[info]   (min, avg, max) = (3320601.058, 3366180.617, 3398604.852), stdev = 32228.827
[info]   CI (99.9%): [3242078.878, 3490282.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1244.197 ±(99.9%) 552.030 MB/sec [Average]
[info]   (min, avg, max) = (987.769, 1244.197, 1309.980), stdev = 143.361
[info]   CI (99.9%): [692.167, 1796.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3240416.245 ±(99.9%) 1448393.422 B/op [Average]
[info]   (min, avg, max) = (2570311.088, 3240416.245, 3447325.110), stdev = 376143.172
[info]   CI (99.9%): [1792022.822, 4688809.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.903 ±(99.9%) 5.602 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.903, 3.434), stdev = 1.455
[info]   CI (99.9%): [≈ 0, 6.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2355.566 ±(99.9%) 14576.366 B/op [Average]
[info]   (min, avg, max) = (53.718, 2355.566, 8936.727), stdev = 3785.436
[info]   CI (99.9%): [≈ 0, 16931.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 15.000), stdev = 3.701
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:35:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 165.899 ops/s
[info] # Warmup Iteration   2: 493.232 ops/s
[info] # Warmup Iteration   3: 595.529 ops/s
[info] Iteration   1: 597.795 ops/s
[info]                  ·gc.alloc.rate:                   1273.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              3351534.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3433297.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 219.184 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 598.951 ops/s
[info]                  ·gc.alloc.rate:                   1264.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              3319862.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2570758.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.179 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13598.720 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 601.671 ops/s
[info]                  ·gc.alloc.rate:                   1287.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              3366815.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3382615.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1796.252 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 598.362 ops/s
[info]                  ·gc.alloc.rate:               1272.763 MB/sec
[info]                  ·gc.alloc.rate.norm:          3346794.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1286.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3383802.017 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 599.179 ops/s
[info]                  ·gc.alloc.rate:               1288.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          3382919.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1292.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3393890.987 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   599.191 ±(99.9%) 5.726 ops/s [Average]
[info]   (min, avg, max) = (597.795, 599.191, 601.671), stdev = 1.487
[info]   CI (99.9%): [593.466, 604.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1277.256 ±(99.9%) 40.267 MB/sec [Average]
[info]   (min, avg, max) = (1264.313, 1277.256, 1288.733), stdev = 10.457
[info]   CI (99.9%): [1236.989, 1317.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3353585.235 ±(99.9%) 90776.896 B/op [Average]
[info]   (min, avg, max) = (3319862.960, 3353585.235, 3382919.187), stdev = 23574.472
[info]   CI (99.9%): [3262808.339, 3444362.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1231.271 ±(99.9%) 543.504 MB/sec [Average]
[info]   (min, avg, max) = (979.029, 1231.271, 1304.218), stdev = 141.146
[info]   CI (99.9%): [687.767, 1774.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3232872.954 ±(99.9%) 1427460.115 B/op [Average]
[info]   (min, avg, max) = (2570758.827, 3232872.954, 3433297.338), stdev = 370706.859
[info]   CI (99.9%): [1805412.839, 4660333.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.190 ±(99.9%) 8.658 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.190, 5.179), stdev = 2.248
[info]   CI (99.9%): [≈ 0, 9.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3122.831 ±(99.9%) 22735.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3122.831, 13598.720), stdev = 5904.223
[info]   CI (99.9%): [≈ 0, 25857.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 16.000), stdev = 4.827
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:34:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20125.145 ops/s
[info] # Warmup Iteration   2: 41262.839 ops/s
[info] # Warmup Iteration   3: 44146.293 ops/s
[info] Iteration   1: 43139.699 ops/s
[info]                  ·gc.alloc.rate:               778.349 MB/sec
[info]                  ·gc.alloc.rate.norm:          28388.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24058.826 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 43331.095 ops/s
[info]                  ·gc.alloc.rate:                   793.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              28803.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35932.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.512 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 41407.228 ops/s
[info]                  ·gc.alloc.rate:               744.916 MB/sec
[info]                  ·gc.alloc.rate.norm:          28308.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25066.772 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 41855.188 ops/s
[info]                  ·gc.alloc.rate:                   745.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              28025.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24799.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.498 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 41657.563 ops/s
[info]                  ·gc.alloc.rate:                   746.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              28215.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24815.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.449 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   42278.155 ±(99.9%) 3429.825 ops/s [Average]
[info]   (min, avg, max) = (41407.228, 42278.155, 43331.095), stdev = 890.715
[info]   CI (99.9%): [38848.330, 45707.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   761.751 ±(99.9%) 86.699 MB/sec [Average]
[info]   (min, avg, max) = (744.916, 761.751, 793.115), stdev = 22.515
[info]   CI (99.9%): [675.053, 848.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   28348.414 ±(99.9%) 1109.926 B/op [Average]
[info]   (min, avg, max) = (28025.464, 28348.414, 28803.681), stdev = 288.244
[info]   CI (99.9%): [27238.488, 29458.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   725.039 ±(99.9%) 569.095 MB/sec [Average]
[info]   (min, avg, max) = (656.815, 725.039, 989.408), stdev = 147.792
[info]   CI (99.9%): [155.944, 1294.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   26934.460 ±(99.9%) 19423.240 B/op [Average]
[info]   (min, avg, max) = (24058.826, 26934.460, 35932.511), stdev = 5044.154
[info]   CI (99.9%): [7511.220, 46357.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.016 ±(99.9%) 7.547 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.016, 4.498), stdev = 1.960
[info]   CI (99.9%): [≈ 0, 8.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   38.209 ±(99.9%) 283.686 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.209, 169.085), stdev = 73.672
[info]   CI (99.9%): [≈ 0, 321.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:34:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142.929 ops/s
[info] # Warmup Iteration   2: 407.687 ops/s
[info] # Warmup Iteration   3: 563.580 ops/s
[info] Iteration   1: 572.856 ops/s
[info]                  ·gc.alloc.rate:                   1260.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              3461940.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3590412.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.373 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 565.533 ops/s
[info]                  ·gc.alloc.rate:                   1239.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448284.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3644079.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.580 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9957.767 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 568.049 ops/s
[info]                  ·gc.alloc.rate:                   1249.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              3460653.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2705289.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2533.905 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 564.267 ops/s
[info]                  ·gc.alloc.rate:                   1234.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              3439866.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3623618.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.996 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 583.314 ops/s
[info]                  ·gc.alloc.rate:                   1280.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              3453674.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3516500.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 112.219 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   570.804 ±(99.9%) 29.753 ops/s [Average]
[info]   (min, avg, max) = (564.267, 570.804, 583.314), stdev = 7.727
[info]   CI (99.9%): [541.051, 600.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1252.948 ±(99.9%) 71.330 MB/sec [Average]
[info]   (min, avg, max) = (1234.059, 1252.948, 1280.661), stdev = 18.524
[info]   CI (99.9%): [1181.618, 1324.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3452883.816 ±(99.9%) 35166.684 B/op [Average]
[info]   (min, avg, max) = (3439866.011, 3452883.816, 3461940.175), stdev = 9132.676
[info]   CI (99.9%): [3417717.132, 3488050.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1239.674 ±(99.9%) 565.858 MB/sec [Average]
[info]   (min, avg, max) = (976.886, 1239.674, 1310.047), stdev = 146.952
[info]   CI (99.9%): [673.815, 1805.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3415979.955 ±(99.9%) 1541166.405 B/op [Average]
[info]   (min, avg, max) = (2705289.223, 3415979.955, 3644079.491), stdev = 400236.021
[info]   CI (99.9%): [1874813.550, 4957146.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.920 ±(99.9%) 5.911 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.920, 3.580), stdev = 1.535
[info]   CI (99.9%): [≈ 0, 6.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2555.252 ±(99.9%) 16445.480 B/op [Average]
[info]   (min, avg, max) = (57.996, 2555.252, 9957.767), stdev = 4270.839
[info]   CI (99.9%): [≈ 0, 19000.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.600, 15.000), stdev = 4.336
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:34:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5590.813 ops/s
[info] # Warmup Iteration   2: 14405.376 ops/s
[info] # Warmup Iteration   3: 14755.066 ops/s
[info] Iteration   1: 14975.535 ops/s
[info]                  ·gc.alloc.rate:               1173.811 MB/sec
[info]                  ·gc.alloc.rate.norm:          123343.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 103401.439 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 15164.894 ops/s
[info]                  ·gc.alloc.rate:                   1196.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              124147.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     136395.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 416.945 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 15201.665 ops/s
[info]                  ·gc.alloc.rate:                   1198.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              124064.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101443.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73.273 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 15072.190 ops/s
[info]                  ·gc.alloc.rate:                   1205.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              125867.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135889.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.695 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 15191.688 ops/s
[info]                  ·gc.alloc.rate:               1205.954 MB/sec
[info]                  ·gc.alloc.rate.norm:          124898.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 101269.186 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   15121.194 ±(99.9%) 370.205 ops/s [Average]
[info]   (min, avg, max) = (14975.535, 15121.194, 15201.665), stdev = 96.141
[info]   CI (99.9%): [14750.990, 15491.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1196.206 ±(99.9%) 50.905 MB/sec [Average]
[info]   (min, avg, max) = (1173.811, 1196.206, 1205.982), stdev = 13.220
[info]   CI (99.9%): [1145.301, 1247.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   124464.209 ±(99.9%) 3690.836 B/op [Average]
[info]   (min, avg, max) = (123343.345, 124464.209, 125867.774), stdev = 958.498
[info]   CI (99.9%): [120773.373, 128155.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1111.715 ±(99.9%) 691.102 MB/sec [Average]
[info]   (min, avg, max) = (977.804, 1111.715, 1314.496), stdev = 179.477
[info]   CI (99.9%): [420.612, 1802.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   115679.738 ±(99.9%) 72003.417 B/op [Average]
[info]   (min, avg, max) = (101269.186, 115679.738, 136395.072), stdev = 18699.059
[info]   CI (99.9%): [43676.321, 187683.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.962 ±(99.9%) 6.677 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.962, 4.018), stdev = 1.734
[info]   CI (99.9%): [≈ 0, 7.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   99.783 ±(99.9%) 692.862 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 99.783, 416.945), stdev = 179.934
[info]   CI (99.9%): [≈ 0, 792.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 13.000), stdev = 3.975
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:34:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4644.481 ops/s
[info] # Warmup Iteration   2: 16578.956 ops/s
[info] # Warmup Iteration   3: 17863.960 ops/s
[info] Iteration   1: 17859.020 ops/s
[info]                  ·gc.alloc.rate:                   1079.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              95095.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86177.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.669 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 17761.642 ops/s
[info]                  ·gc.alloc.rate:                   1065.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              94370.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86830.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.534 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 17765.457 ops/s
[info]                  ·gc.alloc.rate:                   1069.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              94758.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86692.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 470.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 17950.907 ops/s
[info]                  ·gc.alloc.rate:               1086.988 MB/sec
[info]                  ·gc.alloc.rate.norm:          95266.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:      970.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 85093.864 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 18060.149 ops/s
[info]                  ·gc.alloc.rate:               1105.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          96290.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1293.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112677.076 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   17879.435 ±(99.9%) 491.047 ops/s [Average]
[info]   (min, avg, max) = (17761.642, 17879.435, 18060.149), stdev = 127.523
[info]   CI (99.9%): [17388.388, 18370.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1081.192 ±(99.9%) 60.734 MB/sec [Average]
[info]   (min, avg, max) = (1065.166, 1081.192, 1105.029), stdev = 15.773
[info]   CI (99.9%): [1020.457, 1141.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   95156.379 ±(99.9%) 2776.072 B/op [Average]
[info]   (min, avg, max) = (94370.412, 95156.379, 96290.724), stdev = 720.937
[info]   CI (99.9%): [92380.307, 97932.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1040.118 ±(99.9%) 544.686 MB/sec [Average]
[info]   (min, avg, max) = (970.916, 1040.118, 1293.078), stdev = 141.453
[info]   CI (99.9%): [495.431, 1584.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   91494.413 ±(99.9%) 45672.995 B/op [Average]
[info]   (min, avg, max) = (85093.864, 91494.413, 112677.076), stdev = 11861.132
[info]   CI (99.9%): [45821.418, 137167.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.083 ±(99.9%) 9.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.083, 5.309), stdev = 2.363
[info]   CI (99.9%): [≈ 0, 10.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   95.896 ±(99.9%) 805.932 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 95.896, 470.275), stdev = 209.298
[info]   CI (99.9%): [≈ 0, 901.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 11.000), stdev = 3.271
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:34:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 129052.273 ops/s
[info] # Warmup Iteration   2: 203818.905 ops/s
[info] # Warmup Iteration   3: 215071.691 ops/s
[info] Iteration   1: 212702.831 ops/s
[info]                  ·gc.alloc.rate:                   768.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              5689.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4835.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 216282.151 ops/s
[info]                  ·gc.alloc.rate:                   790.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              5751.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7162.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 214286.257 ops/s
[info]                  ·gc.alloc.rate:                   784.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              5761.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4833.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 217907.865 ops/s
[info]                  ·gc.alloc.rate:                   784.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              5668.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4760.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.645 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 216051.905 ops/s
[info]                  ·gc.alloc.rate:                   784.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              5712.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7196.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.398 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   215446.202 ±(99.9%) 7700.572 ops/s [Average]
[info]   (min, avg, max) = (212702.831, 215446.202, 217907.865), stdev = 1999.814
[info]   CI (99.9%): [207745.630, 223146.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   782.569 ±(99.9%) 30.953 MB/sec [Average]
[info]   (min, avg, max) = (768.953, 782.569, 790.438), stdev = 8.038
[info]   CI (99.9%): [751.616, 813.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5716.831 ±(99.9%) 153.353 B/op [Average]
[info]   (min, avg, max) = (5668.198, 5716.831, 5761.475), stdev = 39.825
[info]   CI (99.9%): [5563.479, 5870.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   788.579 ±(99.9%) 694.235 MB/sec [Average]
[info]   (min, avg, max) = (653.473, 788.579, 987.897), stdev = 180.290
[info]   CI (99.9%): [94.344, 1482.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5757.705 ±(99.9%) 4998.589 B/op [Average]
[info]   (min, avg, max) = (4760.984, 5757.705, 7196.486), stdev = 1298.118
[info]   CI (99.9%): [759.117, 10756.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 4.248 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.658, 2.581), stdev = 1.103
[info]   CI (99.9%): [≈ 0, 4.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.761 ±(99.9%) 30.674 B/op [Average]
[info]   (min, avg, max) = (0.154, 4.761, 18.645), stdev = 7.966
[info]   CI (99.9%): [≈ 0, 35.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 9.000), stdev = 1.732
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:33:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 149281.342 ops/s
[info] # Warmup Iteration   2: 243564.029 ops/s
[info] # Warmup Iteration   3: 246288.278 ops/s
[info] Iteration   1: 248870.269 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 249611.086 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 248508.424 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 247630.627 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 249240.383 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   248772.158 ±(99.9%) 2923.263 ops/s [Average]
[info]   (min, avg, max) = (247630.627, 248772.158, 249611.086), stdev = 759.162
[info]   CI (99.9%): [245848.895, 251695.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:33:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6074.464 ops/s
[info] # Warmup Iteration   2: 14222.865 ops/s
[info] # Warmup Iteration   3: 17921.506 ops/s
[info] Iteration   1: 17465.685 ops/s
[info]                  ·gc.alloc.rate:                   1119.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              100849.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88356.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.876 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 17422.269 ops/s
[info]                  ·gc.alloc.rate:                   1117.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              100954.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118246.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 421.236 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 17762.357 ops/s
[info]                  ·gc.alloc.rate:                   1135.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              100625.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86643.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 17525.429 ops/s
[info]                  ·gc.alloc.rate:               1131.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          101615.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:      968.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86977.552 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 17878.103 ops/s
[info]                  ·gc.alloc.rate:               1167.453 MB/sec
[info]                  ·gc.alloc.rate.norm:          102757.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1292.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113735.985 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   17610.769 ±(99.9%) 766.053 ops/s [Average]
[info]   (min, avg, max) = (17422.269, 17610.769, 17878.103), stdev = 198.942
[info]   CI (99.9%): [16844.716, 18376.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1134.345 ±(99.9%) 77.121 MB/sec [Average]
[info]   (min, avg, max) = (1117.771, 1134.345, 1167.453), stdev = 20.028
[info]   CI (99.9%): [1057.223, 1211.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   101360.381 ±(99.9%) 3324.570 B/op [Average]
[info]   (min, avg, max) = (100625.657, 101360.381, 102757.129), stdev = 863.380
[info]   CI (99.9%): [98035.811, 104684.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1105.694 ±(99.9%) 686.126 MB/sec [Average]
[info]   (min, avg, max) = (968.528, 1105.694, 1309.236), stdev = 178.185
[info]   CI (99.9%): [419.568, 1791.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   98792.144 ±(99.9%) 60819.312 B/op [Average]
[info]   (min, avg, max) = (86643.565, 98792.144, 118246.877), stdev = 15794.582
[info]   CI (99.9%): [37972.832, 159611.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.149 ±(99.9%) 7.767 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.149, 4.664), stdev = 2.017
[info]   CI (99.9%): [≈ 0, 8.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   103.435 ±(99.9%) 701.613 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 103.435, 421.236), stdev = 182.207
[info]   CI (99.9%): [≈ 0, 805.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 16.000), stdev = 5.128
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:33:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 869287.353 ops/s
[info] # Warmup Iteration   2: 1483905.476 ops/s
[info] # Warmup Iteration   3: 1530913.813 ops/s
[info] Iteration   1: 1553840.578 ops/s
[info]                  ·gc.alloc.rate:      63.184 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1555638.626 ops/s
[info]                  ·gc.alloc.rate:      63.259 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1539819.125 ops/s
[info]                  ·gc.alloc.rate:                   66.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              67.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.567 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.579 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1556956.192 ops/s
[info]                  ·gc.alloc.rate:      63.427 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.105 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1555726.161 ops/s
[info]                  ·gc.alloc.rate:      63.559 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.299 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1552396.136 ±(99.9%) 27408.940 ops/s [Average]
[info]   (min, avg, max) = (1539819.125, 1552396.136, 1556956.192), stdev = 7118.015
[info]   CI (99.9%): [1524987.197, 1579805.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   63.991 ±(99.9%) 5.482 MB/sec [Average]
[info]   (min, avg, max) = (63.184, 63.991, 66.524), stdev = 1.424
[info]   CI (99.9%): [58.509, 69.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   64.880 ±(99.9%) 6.719 B/op [Average]
[info]   (min, avg, max) = (64.000, 64.880, 67.993), stdev = 1.745
[info]   CI (99.9%): [58.161, 71.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.161 ±(99.9%) 440.509 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.161, 255.803), stdev = 114.399
[info]   CI (99.9%): [≈ 0, 491.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   52.291 ±(99.9%) 450.240 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.291, 261.454), stdev = 116.926
[info]   CI (99.9%): [≈ 0, 502.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.113 ±(99.9%) 0.976 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.113, 0.567), stdev = 0.253
[info]   CI (99.9%): [≈ 0, 1.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.997 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.579), stdev = 0.259
[info]   CI (99.9%): [≈ 0, 1.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:33:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3839.190 ops/s
[info] # Warmup Iteration   2: 62681.422 ops/s
[info] # Warmup Iteration   3: 77383.885 ops/s
[info] Iteration   1: 78695.861 ops/s
[info]                  ·gc.alloc.rate:                   3356.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              67120.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3318.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66354.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.082 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 78366.590 ops/s
[info]                  ·gc.alloc.rate:                   3364.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              67572.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3354.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67361.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 79027.264 ops/s
[info]                  ·gc.alloc.rate:                   3379.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              67296.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3041.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60562.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.829 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 77437.319 ops/s
[info]                  ·gc.alloc.rate:                   3328.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              67639.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68941.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.269 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 79127.013 ops/s
[info]                  ·gc.alloc.rate:               3385.561 MB/sec
[info]                  ·gc.alloc.rate.norm:          67321.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3058.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60825.517 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   78530.809 ±(99.9%) 2620.035 ops/s [Average]
[info]   (min, avg, max) = (77437.319, 78530.809, 79127.013), stdev = 680.415
[info]   CI (99.9%): [75910.774, 81150.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3363.141 ±(99.9%) 86.219 MB/sec [Average]
[info]   (min, avg, max) = (3328.839, 3363.141, 3385.561), stdev = 22.391
[info]   CI (99.9%): [3276.922, 3449.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   67390.116 ±(99.9%) 819.595 B/op [Average]
[info]   (min, avg, max) = (67120.789, 67390.116, 67639.078), stdev = 212.846
[info]   CI (99.9%): [66570.521, 68209.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3233.220 ±(99.9%) 651.385 MB/sec [Average]
[info]   (min, avg, max) = (3041.705, 3233.220, 3392.961), stdev = 169.163
[info]   CI (99.9%): [2581.835, 3884.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64809.199 ±(99.9%) 14899.099 B/op [Average]
[info]   (min, avg, max) = (60562.634, 64809.199, 68941.973), stdev = 3869.249
[info]   CI (99.9%): [49910.100, 79708.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.920 ±(99.9%) 3.091 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.920, 2.082), stdev = 0.803
[info]   CI (99.9%): [≈ 0, 4.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.400, 14.000), stdev = 0.548
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:33:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 451432.657 ops/s
[info] # Warmup Iteration   2: 1768488.700 ops/s
[info] # Warmup Iteration   3: 1775730.098 ops/s
[info] Iteration   1: 1780540.488 ops/s
[info]                  ·gc.alloc.rate:                   977.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              863.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     867.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1849784.143 ops/s
[info]                  ·gc.alloc.rate:                   999.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              850.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     837.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1830689.639 ops/s
[info]                  ·gc.alloc.rate:                   985.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              846.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     848.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1848924.133 ops/s
[info]                  ·gc.alloc.rate:                   1001.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     836.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1823841.688 ops/s
[info]                  ·gc.alloc.rate:                   987.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   1826756.018 ±(99.9%) 108598.430 ops/s [Average]
[info]   (min, avg, max) = (1780540.488, 1826756.018, 1849784.143), stdev = 28202.667
[info]   CI (99.9%): [1718157.589, 1935354.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   990.186 ±(99.9%) 38.786 MB/sec [Average]
[info]   (min, avg, max) = (977.554, 990.186, 1001.149), stdev = 10.073
[info]   CI (99.9%): [951.400, 1028.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   853.026 ±(99.9%) 24.706 B/op [Average]
[info]   (min, avg, max) = (846.936, 853.026, 863.927), stdev = 6.416
[info]   CI (99.9%): [828.320, 877.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   983.481 ±(99.9%) 9.812 MB/sec [Average]
[info]   (min, avg, max) = (980.595, 983.481, 986.992), stdev = 2.548
[info]   CI (99.9%): [973.669, 993.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   847.337 ±(99.9%) 48.041 B/op [Average]
[info]   (min, avg, max) = (836.430, 847.337, 867.676), stdev = 12.476
[info]   CI (99.9%): [799.296, 895.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 6.447 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.816, 3.810), stdev = 1.674
[info]   CI (99.9%): [≈ 0, 7.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.702 ±(99.9%) 5.542 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.702, 3.275), stdev = 1.439
[info]   CI (99.9%): [≈ 0, 6.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.793
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:32:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 849252.022 ops/s
[info] # Warmup Iteration   2: 2009471.998 ops/s
[info] # Warmup Iteration   3: 2182435.301 ops/s
[info] Iteration   1: 2240059.960 ops/s
[info]                  ·gc.alloc.rate:                   649.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              455.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     461.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2165729.669 ops/s
[info]                  ·gc.alloc.rate:               633.287 MB/sec
[info]                  ·gc.alloc.rate.norm:          460.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 239.630 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2183816.892 ops/s
[info]                  ·gc.alloc.rate:                   629.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              453.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     476.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2242707.667 ops/s
[info]                  ·gc.alloc.rate:                   644.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              452.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     464.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2236742.021 ops/s
[info]                  ·gc.alloc.rate:               642.867 MB/sec
[info]                  ·gc.alloc.rate.norm:          452.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 465.916 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   2213811.242 ±(99.9%) 139653.118 ops/s [Average]
[info]   (min, avg, max) = (2165729.669, 2213811.242, 2242707.667), stdev = 36267.471
[info]   CI (99.9%): [2074158.124, 2353464.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   639.967 ±(99.9%) 31.633 MB/sec [Average]
[info]   (min, avg, max) = (629.655, 639.967, 649.388), stdev = 8.215
[info]   CI (99.9%): [608.334, 671.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   454.862 ±(99.9%) 12.430 B/op [Average]
[info]   (min, avg, max) = (452.335, 454.862, 460.085), stdev = 3.228
[info]   CI (99.9%): [442.432, 467.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   594.470 ±(99.9%) 569.671 MB/sec [Average]
[info]   (min, avg, max) = (329.840, 594.470, 662.169), stdev = 147.942
[info]   CI (99.9%): [24.800, 1164.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   421.558 ±(99.9%) 392.192 B/op [Average]
[info]   (min, avg, max) = (239.630, 421.558, 476.264), stdev = 101.851
[info]   CI (99.9%): [29.366, 813.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.015), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 7.000), stdev = 1.949
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:32:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1205256.415 ops/s
[info] # Warmup Iteration   2: 2343358.926 ops/s
[info] # Warmup Iteration   3: 2401747.713 ops/s
[info] Iteration   1: 2344392.782 ops/s
[info]                  ·gc.alloc.rate:               31.683 MB/sec
[info]                  ·gc.alloc.rate.norm:          21.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 171.734 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2401822.016 ops/s
[info]                  ·gc.alloc.rate:      24.470 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.033 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2402174.111 ops/s
[info]                  ·gc.alloc.rate:      24.421 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2401579.591 ops/s
[info]                  ·gc.alloc.rate:      24.416 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2377851.057 ops/s
[info]                  ·gc.alloc.rate:      24.175 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2385563.911 ±(99.9%) 97248.330 ops/s [Average]
[info]   (min, avg, max) = (2344392.782, 2385563.911, 2402174.111), stdev = 25255.082
[info]   CI (99.9%): [2288315.582, 2482812.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   25.833 ±(99.9%) 12.601 MB/sec [Average]
[info]   (min, avg, max) = (24.175, 25.833, 31.683), stdev = 3.272
[info]   CI (99.9%): [13.232, 38.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   17.060 ±(99.9%) 9.052 B/op [Average]
[info]   (min, avg, max) = (16.000, 17.060, 21.265), stdev = 2.351
[info]   CI (99.9%): [8.008, 26.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.175 ±(99.9%) 440.633 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.175, 255.876), stdev = 114.431
[info]   CI (99.9%): [≈ 0, 491.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   34.347 ±(99.9%) 295.737 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.347, 171.734), stdev = 76.802
[info]   CI (99.9%): [≈ 0, 330.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:32:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7633.968 ops/s
[info] # Warmup Iteration   2: 46527.799 ops/s
[info] # Warmup Iteration   3: 49096.098 ops/s
[info] Iteration   1: 50196.731 ops/s
[info]                  ·gc.alloc.rate:                   2149.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              67393.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61489.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 133.803 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 50653.668 ops/s
[info]                  ·gc.alloc.rate:                   2188.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              67989.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2284.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70961.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.881 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 50845.856 ops/s
[info]                  ·gc.alloc.rate:               2198.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          68026.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1975.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61136.348 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 50597.277 ops/s
[info]                  ·gc.alloc.rate:                   2202.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              68484.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2328.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72392.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.294 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 50854.220 ops/s
[info]                  ·gc.alloc.rate:                   2198.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              68044.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62280.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.644 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   50629.550 ±(99.9%) 1030.039 ops/s [Average]
[info]   (min, avg, max) = (50196.731, 50629.550, 50854.220), stdev = 267.498
[info]   CI (99.9%): [49599.511, 51659.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2187.556 ±(99.9%) 83.506 MB/sec [Average]
[info]   (min, avg, max) = (2149.876, 2187.556, 2202.416), stdev = 21.686
[info]   CI (99.9%): [2104.050, 2271.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   67987.772 ±(99.9%) 1497.764 B/op [Average]
[info]   (min, avg, max) = (67393.398, 67987.772, 68484.893), stdev = 388.965
[info]   CI (99.9%): [66490.008, 69485.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2112.367 ±(99.9%) 687.456 MB/sec [Average]
[info]   (min, avg, max) = (1961.533, 2112.367, 2328.077), stdev = 178.530
[info]   CI (99.9%): [1424.911, 2799.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65651.864 ±(99.9%) 21327.759 B/op [Average]
[info]   (min, avg, max) = (61136.348, 65651.864, 72392.357), stdev = 5538.751
[info]   CI (99.9%): [44324.105, 86979.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.891 ±(99.9%) 7.272 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.891, 4.268), stdev = 1.889
[info]   CI (99.9%): [≈ 0, 8.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   27.924 ±(99.9%) 227.982 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 27.924, 133.803), stdev = 59.206
[info]   CI (99.9%): [≈ 0, 255.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 12.000), stdev = 1.673
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:32:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88168.390 ops/s
[info] # Warmup Iteration   2: 705235.028 ops/s
[info] # Warmup Iteration   3: 829646.346 ops/s
[info] Iteration   1: 859353.044 ops/s
[info]                  ·gc.alloc.rate:                   2759.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              5051.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2627.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4810.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.991 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 857894.071 ops/s
[info]                  ·gc.alloc.rate:                   2795.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              5123.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2970.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5444.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 862849.312 ops/s
[info]                  ·gc.alloc.rate:                   2803.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2672.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4872.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 862629.033 ops/s
[info]                  ·gc.alloc.rate:                   2804.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              5115.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2693.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4913.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 861011.202 ops/s
[info]                  ·gc.alloc.rate:                   2799.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              5116.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2707.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4948.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   860747.332 ±(99.9%) 8194.249 ops/s [Average]
[info]   (min, avg, max) = (857894.071, 860747.332, 862849.312), stdev = 2128.020
[info]   CI (99.9%): [852553.084, 868941.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   2792.357 ±(99.9%) 72.407 MB/sec [Average]
[info]   (min, avg, max) = (2759.365, 2792.357, 2804.138), stdev = 18.804
[info]   CI (99.9%): [2719.950, 2864.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   5103.858 ±(99.9%) 113.762 B/op [Average]
[info]   (min, avg, max) = (5051.537, 5103.858, 5123.498), stdev = 29.544
[info]   CI (99.9%): [4990.096, 5217.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2734.217 ±(99.9%) 520.895 MB/sec [Average]
[info]   (min, avg, max) = (2627.744, 2734.217, 2970.104), stdev = 135.275
[info]   CI (99.9%): [2213.322, 3255.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4997.895 ±(99.9%) 981.140 B/op [Average]
[info]   (min, avg, max) = (4810.580, 4997.895, 5444.309), stdev = 254.799
[info]   CI (99.9%): [4016.755, 5979.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.137 ±(99.9%) 0.876 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.137, 0.541), stdev = 0.227
[info]   CI (99.9%): [≈ 0, 1.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.251 ±(99.9%) 1.604 B/op [Average]
[info]   (min, avg, max) = (0.038, 0.251, 0.991), stdev = 0.416
[info]   CI (99.9%): [≈ 0, 1.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.000, 12.000), stdev = 0.707
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:31:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.634 ops/s
[info] # Warmup Iteration   2: 4504384.447 ops/s
[info] # Warmup Iteration   3: 4916121.384 ops/s
[info] Iteration   1: 5178277.663 ops/s
[info]                  ·gc.alloc.rate:                   322.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5152130.289 ops/s
[info]                  ·gc.alloc.rate:                   322.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5179437.226 ops/s
[info]                  ·gc.alloc.rate:               322.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.584 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 4988514.166 ops/s
[info]                  ·gc.alloc.rate:               310.992 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 102.462 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 5169354.466 ops/s
[info]                  ·gc.alloc.rate:                   328.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              100.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   5133542.762 ±(99.9%) 315005.158 ops/s [Average]
[info]   (min, avg, max) = (4988514.166, 5133542.762, 5179437.226), stdev = 81805.839
[info]   CI (99.9%): [4818537.604, 5448547.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   321.542 ±(99.9%) 24.861 MB/sec [Average]
[info]   (min, avg, max) = (310.992, 321.542, 328.705), stdev = 6.456
[info]   CI (99.9%): [296.681, 346.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   98.565 ±(99.9%) 3.256 B/op [Average]
[info]   (min, avg, max) = (98.079, 98.565, 100.056), stdev = 0.846
[info]   CI (99.9%): [95.309, 101.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   310.877 ±(99.9%) 118.544 MB/sec [Average]
[info]   (min, avg, max) = (255.807, 310.877, 324.846), stdev = 30.786
[info]   CI (99.9%): [192.333, 429.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   95.356 ±(99.9%) 38.382 B/op [Average]
[info]   (min, avg, max) = (77.748, 95.356, 102.462), stdev = 9.968
[info]   CI (99.9%): [56.974, 133.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.121 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.074), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.022), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:31:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37881.302 ops/s
[info] # Warmup Iteration   2: 904751.474 ops/s
[info] # Warmup Iteration   3: 997904.073 ops/s
[info] Iteration   1: 994155.757 ops/s
[info]                  ·gc.alloc.rate:                   1172.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2071.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1000386.658 ops/s
[info]                  ·gc.alloc.rate:                   1178.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              1853.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1547.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 996519.796 ops/s
[info]                  ·gc.alloc.rate:                   1180.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              1863.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2068.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.249 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.707 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1005033.735 ops/s
[info]                  ·gc.alloc.rate:                   1179.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              1847.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1530.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 992794.994 ops/s
[info]                  ·gc.alloc.rate:               1187.451 MB/sec
[info]                  ·gc.alloc.rate.norm:          1881.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2067.315 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   997778.188 ±(99.9%) 19155.247 ops/s [Average]
[info]   (min, avg, max) = (992794.994, 997778.188, 1005033.735), stdev = 4974.557
[info]   CI (99.9%): [978622.941, 1016933.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1179.729 ±(99.9%) 20.067 MB/sec [Average]
[info]   (min, avg, max) = (1172.936, 1179.729, 1187.451), stdev = 5.211
[info]   CI (99.9%): [1159.662, 1199.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1860.582 ±(99.9%) 50.534 B/op [Average]
[info]   (min, avg, max) = (1847.740, 1860.582, 1881.846), stdev = 13.124
[info]   CI (99.9%): [1810.048, 1911.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1176.955 ±(99.9%) 690.045 MB/sec [Average]
[info]   (min, avg, max) = (977.358, 1176.955, 1310.291), stdev = 179.202
[info]   CI (99.9%): [486.910, 1867.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1857.201 ±(99.9%) 1118.123 B/op [Average]
[info]   (min, avg, max) = (1530.428, 1857.201, 2071.818), stdev = 290.373
[info]   CI (99.9%): [739.078, 2975.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.866 ±(99.9%) 7.281 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.866, 4.249), stdev = 1.891
[info]   CI (99.9%): [≈ 0, 8.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.368 ±(99.9%) 11.494 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.368, 6.707), stdev = 2.985
[info]   CI (99.9%): [≈ 0, 12.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.600, 14.000), stdev = 3.847
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:31:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2059398.518 ops/s
[info] # Warmup Iteration   2: 8124692.261 ops/s
[info] # Warmup Iteration   3: 8554463.178 ops/s
[info] Iteration   1: 8610879.870 ops/s
[info]                  ·gc.alloc.rate:               402.060 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.756 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 8677612.075 ops/s
[info]                  ·gc.alloc.rate:               414.242 MB/sec
[info]                  ·gc.alloc.rate.norm:          75.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.929 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 8419969.586 ops/s
[info]                  ·gc.alloc.rate:                   397.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              74.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 8663745.749 ops/s
[info]                  ·gc.alloc.rate:                   417.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 8795411.433 ops/s
[info]                  ·gc.alloc.rate:               411.422 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.366 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   8633523.743 ±(99.9%) 527913.655 ops/s [Average]
[info]   (min, avg, max) = (8419969.586, 8633523.743, 8795411.433), stdev = 137097.500
[info]   CI (99.9%): [8105610.088, 9161437.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   408.543 ±(99.9%) 33.390 MB/sec [Average]
[info]   (min, avg, max) = (397.107, 408.543, 417.881), stdev = 8.671
[info]   CI (99.9%): [375.153, 441.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   74.468 ±(99.9%) 3.966 B/op [Average]
[info]   (min, avg, max) = (73.486, 74.468, 75.909), stdev = 1.030
[info]   CI (99.9%): [70.502, 78.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   382.152 ±(99.9%) 615.668 MB/sec [Average]
[info]   (min, avg, max) = (255.814, 382.152, 662.186), stdev = 159.887
[info]   CI (99.9%): [≈ 0, 997.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   69.620 ±(99.9%) 111.448 B/op [Average]
[info]   (min, avg, max) = (46.756, 69.620, 120.287), stdev = 28.943
[info]   CI (99.9%): [≈ 0, 181.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:31:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5600.830 ops/s
[info] # Warmup Iteration   2: 139667.379 ops/s
[info] # Warmup Iteration   3: 487399.276 ops/s
[info] Iteration   1: 487711.003 ops/s
[info]                  ·gc.alloc.rate:                   2123.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              6853.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6352.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.754 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 491813.705 ops/s
[info]                  ·gc.alloc.rate:                   2136.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              6837.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6346.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.666 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 497120.702 ops/s
[info]                  ·gc.alloc.rate:               2158.971 MB/sec
[info]                  ·gc.alloc.rate.norm:          6835.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2327.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7369.188 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 497758.186 ops/s
[info]                  ·gc.alloc.rate:                   2174.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              6875.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6350.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 488474.066 ops/s
[info]                  ·gc.alloc.rate:               2136.672 MB/sec
[info]                  ·gc.alloc.rate.norm:          6882.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2020.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6508.609 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   492575.532 ±(99.9%) 18121.005 ops/s [Average]
[info]   (min, avg, max) = (487711.003, 492575.532, 497758.186), stdev = 4705.967
[info]   CI (99.9%): [474454.528, 510696.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2146.168 ±(99.9%) 78.037 MB/sec [Average]
[info]   (min, avg, max) = (2123.859, 2146.168, 2174.517), stdev = 20.266
[info]   CI (99.9%): [2068.131, 2224.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   6857.004 ±(99.9%) 83.320 B/op [Average]
[info]   (min, avg, max) = (6835.140, 6857.004, 6882.625), stdev = 21.638
[info]   CI (99.9%): [6773.684, 6940.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2061.718 ±(99.9%) 577.830 MB/sec [Average]
[info]   (min, avg, max) = (1968.577, 2061.718, 2327.658), stdev = 150.061
[info]   CI (99.9%): [1483.889, 2639.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   6585.548 ±(99.9%) 1707.474 B/op [Average]
[info]   (min, avg, max) = (6346.621, 6585.548, 7369.188), stdev = 443.425
[info]   CI (99.9%): [4878.075, 8293.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.279 ±(99.9%) 1.505 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.279, 0.854), stdev = 0.391
[info]   CI (99.9%): [≈ 0, 1.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.897 ±(99.9%) 4.848 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.897, 2.754), stdev = 1.259
[info]   CI (99.9%): [≈ 0, 5.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 11.000), stdev = 1.517
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:31:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 827.742 ops/s
[info] # Warmup Iteration   2: 3964.157 ops/s
[info] # Warmup Iteration   3: 4009.887 ops/s
[info] Iteration   1: 4515.515 ops/s
[info]                  ·gc.alloc.rate:                   2258.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              787254.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     798793.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.413 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1537.927 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 4553.717 ops/s
[info]                  ·gc.alloc.rate:                   2283.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              789200.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2285.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     789827.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 187.040 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 4564.790 ops/s
[info]                  ·gc.alloc.rate:                   2302.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              793761.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     680678.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.236 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4594.536 ops/s
[info]                  ·gc.alloc.rate:                   2331.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              798587.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2327.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     797040.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 99.815 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4601.376 ops/s
[info]                  ·gc.alloc.rate:                   2335.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              798632.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     802435.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.594 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   4565.987 ±(99.9%) 132.929 ops/s [Average]
[info]   (min, avg, max) = (4515.515, 4565.987, 4601.376), stdev = 34.521
[info]   CI (99.9%): [4433.058, 4698.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   2302.406 ±(99.9%) 124.642 MB/sec [Average]
[info]   (min, avg, max) = (2258.916, 2302.406, 2335.250), stdev = 32.369
[info]   CI (99.9%): [2177.764, 2427.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   793487.368 ±(99.9%) 20172.672 B/op [Average]
[info]   (min, avg, max) = (787254.727, 793487.368, 798632.683), stdev = 5238.779
[info]   CI (99.9%): [773314.695, 813660.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2245.107 ±(99.9%) 590.585 MB/sec [Average]
[info]   (min, avg, max) = (1974.446, 2245.107, 2346.369), stdev = 153.373
[info]   CI (99.9%): [1654.522, 2835.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   773755.164 ±(99.9%) 201131.377 B/op [Average]
[info]   (min, avg, max) = (680678.770, 773755.164, 802435.142), stdev = 52233.180
[info]   CI (99.9%): [572623.787, 974886.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.099 ±(99.9%) 7.164 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 1.099, 4.413), stdev = 1.860
[info]   CI (99.9%): [≈ 0, 8.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   382.122 ±(99.9%) 2498.374 B/op [Average]
[info]   (min, avg, max) = (35.594, 382.122, 1537.927), stdev = 648.820
[info]   CI (99.9%): [≈ 0, 2880.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 14.000), stdev = 1.924
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:30:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 670.614 ops/s
[info] # Warmup Iteration   2: 5510.476 ops/s
[info] # Warmup Iteration   3: 6172.712 ops/s
[info] Iteration   1: 6481.955 ops/s
[info]                  ·gc.alloc.rate:                   2186.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              530931.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     477948.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 146.579 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 6491.293 ops/s
[info]                  ·gc.alloc.rate:                   2228.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              540106.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2320.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     562561.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.653 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 6553.478 ops/s
[info]                  ·gc.alloc.rate:               2243.006 MB/sec
[info]                  ·gc.alloc.rate.norm:          538667.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2003.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 481257.192 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 6417.226 ops/s
[info]                  ·gc.alloc.rate:                   2198.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              538982.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     494475.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.315 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 6510.662 ops/s
[info]                  ·gc.alloc.rate:                   2242.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              542078.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2364.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     571467.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.032 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   6490.923 ±(99.9%) 190.739 ops/s [Average]
[info]   (min, avg, max) = (6417.226, 6490.923, 6553.478), stdev = 49.534
[info]   CI (99.9%): [6300.184, 6681.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2219.829 ±(99.9%) 99.704 MB/sec [Average]
[info]   (min, avg, max) = (2186.607, 2219.829, 2243.006), stdev = 25.893
[info]   CI (99.9%): [2120.125, 2319.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   538153.349 ±(99.9%) 16373.178 B/op [Average]
[info]   (min, avg, max) = (530931.866, 538153.349, 542078.143), stdev = 4252.062
[info]   CI (99.9%): [521780.171, 554526.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2134.912 ±(99.9%) 735.505 MB/sec [Average]
[info]   (min, avg, max) = (1968.400, 2134.912, 2364.257), stdev = 191.008
[info]   CI (99.9%): [1399.406, 2870.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   517542.218 ±(99.9%) 175943.379 B/op [Average]
[info]   (min, avg, max) = (477948.801, 517542.218, 571467.479), stdev = 45691.937
[info]   CI (99.9%): [341598.839, 693485.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.196 ±(99.9%) 0.986 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.196, 0.604), stdev = 0.256
[info]   CI (99.9%): [≈ 0, 1.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   47.516 ±(99.9%) 239.302 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 47.516, 146.579), stdev = 62.146
[info]   CI (99.9%): [≈ 0, 286.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:30:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22614.119 ops/s
[info] # Warmup Iteration   2: 46507.319 ops/s
[info] # Warmup Iteration   3: 47587.450 ops/s
[info] Iteration   1: 47703.350 ops/s
[info]                  ·gc.alloc.rate:                   792.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              26149.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21825.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.687 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 47430.925 ops/s
[info]                  ·gc.alloc.rate:                   792.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              26305.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32969.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 47570.194 ops/s
[info]                  ·gc.alloc.rate:                   781.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              25855.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21940.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.689 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 47771.961 ops/s
[info]                  ·gc.alloc.rate:                   789.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              26022.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21870.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.498 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 82.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 48337.989 ops/s
[info]                  ·gc.alloc.rate:                   806.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              26249.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32372.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.368 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   47762.884 ±(99.9%) 1336.260 ops/s [Average]
[info]   (min, avg, max) = (47430.925, 47762.884, 48337.989), stdev = 347.023
[info]   CI (99.9%): [46426.623, 49099.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   792.606 ±(99.9%) 34.294 MB/sec [Average]
[info]   (min, avg, max) = (781.450, 792.606, 806.221), stdev = 8.906
[info]   CI (99.9%): [758.312, 826.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26116.579 ±(99.9%) 698.810 B/op [Average]
[info]   (min, avg, max) = (25855.072, 26116.579, 26305.529), stdev = 181.479
[info]   CI (99.9%): [25417.769, 26815.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   795.285 ±(99.9%) 698.270 MB/sec [Average]
[info]   (min, avg, max) = (661.604, 795.285, 994.262), stdev = 181.338
[info]   CI (99.9%): [97.016, 1493.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   26195.352 ±(99.9%) 22776.409 B/op [Average]
[info]   (min, avg, max) = (21825.186, 26195.352, 32969.014), stdev = 5914.961
[info]   CI (99.9%): [3418.943, 48971.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 4.120 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.654, 2.498), stdev = 1.070
[info]   CI (99.9%): [≈ 0, 4.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   21.485 ±(99.9%) 135.712 B/op [Average]
[info]   (min, avg, max) = (0.687, 21.485, 82.301), stdev = 35.244
[info]   CI (99.9%): [≈ 0, 157.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 9.000), stdev = 1.732
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:30:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1471.271 ops/s
[info] # Warmup Iteration   2: 4110.916 ops/s
[info] # Warmup Iteration   3: 4414.188 ops/s
[info] Iteration   1: 4572.305 ops/s
[info]                  ·gc.alloc.rate:                   999.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              343909.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339245.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.828 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4544.786 ops/s
[info]                  ·gc.alloc.rate:                   997.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              345532.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     341836.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.832 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 4580.696 ops/s
[info]                  ·gc.alloc.rate:                   999.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              343311.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339608.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.209 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1102.223 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4573.367 ops/s
[info]                  ·gc.alloc.rate:                   1006.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              346424.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338597.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 336.707 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4546.586 ops/s
[info]                  ·gc.alloc.rate:                   1006.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              348332.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339150.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.410 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   4563.548 ±(99.9%) 64.054 ops/s [Average]
[info]   (min, avg, max) = (4544.786, 4563.548, 4580.696), stdev = 16.635
[info]   CI (99.9%): [4499.494, 4627.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   1002.016 ±(99.9%) 16.525 MB/sec [Average]
[info]   (min, avg, max) = (997.946, 1002.016, 1006.947), stdev = 4.291
[info]   CI (99.9%): [985.491, 1018.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   345502.013 ±(99.9%) 7748.688 B/op [Average]
[info]   (min, avg, max) = (343311.384, 345502.013, 348332.109), stdev = 2012.310
[info]   CI (99.9%): [337753.325, 353250.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   985.159 ±(99.9%) 13.280 MB/sec [Average]
[info]   (min, avg, max) = (979.850, 985.159, 988.874), stdev = 3.449
[info]   CI (99.9%): [971.879, 998.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   339687.729 ±(99.9%) 4831.300 B/op [Average]
[info]   (min, avg, max) = (338597.891, 339687.729, 341836.699), stdev = 1254.673
[info]   CI (99.9%): [334856.429, 344519.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 5.229 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.883, 3.209), stdev = 1.358
[info]   CI (99.9%): [≈ 0, 6.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   303.600 ±(99.9%) 1795.536 B/op [Average]
[info]   (min, avg, max) = (14.410, 303.600, 1102.223), stdev = 466.295
[info]   CI (99.9%): [≈ 0, 2099.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 11.000), stdev = 3.240
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:30:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 925.251 ops/s
[info] # Warmup Iteration   2: 4234.453 ops/s
[info] # Warmup Iteration   3: 4896.452 ops/s
[info] Iteration   1: 5077.582 ops/s
[info]                  ·gc.alloc.rate:                   639.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              198175.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198814.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.452 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5098.688 ops/s
[info]                  ·gc.alloc.rate:               637.695 MB/sec
[info]                  ·gc.alloc.rate.norm:          196798.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 198818.234 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 5129.369 ops/s
[info]                  ·gc.alloc.rate:                   646.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              198327.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198434.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.386 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5123.096 ops/s
[info]                  ·gc.alloc.rate:               644.934 MB/sec
[info]                  ·gc.alloc.rate.norm:          198127.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 199524.122 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 5066.607 ops/s
[info]                  ·gc.alloc.rate:               640.172 MB/sec
[info]                  ·gc.alloc.rate.norm:          198829.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 202556.414 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   5099.069 ±(99.9%) 105.648 ops/s [Average]
[info]   (min, avg, max) = (5066.607, 5099.069, 5129.369), stdev = 27.436
[info]   CI (99.9%): [4993.421, 5204.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   641.723 ±(99.9%) 14.472 MB/sec [Average]
[info]   (min, avg, max) = (637.695, 641.723, 646.425), stdev = 3.758
[info]   CI (99.9%): [627.251, 656.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   198051.710 ±(99.9%) 2901.322 B/op [Average]
[info]   (min, avg, max) = (196798.966, 198051.710, 198829.001), stdev = 753.464
[info]   CI (99.9%): [195150.388, 200953.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   646.823 ±(99.9%) 16.251 MB/sec [Average]
[info]   (min, avg, max) = (641.450, 646.823, 652.173), stdev = 4.220
[info]   CI (99.9%): [630.573, 663.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   199629.543 ±(99.9%) 6480.200 B/op [Average]
[info]   (min, avg, max) = (198434.476, 199629.543, 202556.414), stdev = 1682.887
[info]   CI (99.9%): [193149.343, 206109.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.568 ±(99.9%) 13.538 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.568, 6.452), stdev = 3.516
[info]   CI (99.9%): [≈ 0, 16.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 1.095
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:30:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3753.500 ops/s
[info] # Warmup Iteration   2: 6091.564 ops/s
[info] # Warmup Iteration   3: 6227.992 ops/s
[info] Iteration   1: 6164.425 ops/s
[info]                  ·gc.alloc.rate:               310.491 MB/sec
[info]                  ·gc.alloc.rate.norm:          79256.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65302.171 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 6475.308 ops/s
[info]                  ·gc.alloc.rate:               322.633 MB/sec
[info]                  ·gc.alloc.rate.norm:          78375.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80136.656 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 6472.592 ops/s
[info]                  ·gc.alloc.rate:                   326.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              79294.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80173.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.061 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6477.105 ops/s
[info]                  ·gc.alloc.rate:               328.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          79828.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80286.153 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 6338.186 ops/s
[info]                  ·gc.alloc.rate:                   317.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              78934.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82046.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.169 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6385.523 ±(99.9%) 527.816 ops/s [Average]
[info]   (min, avg, max) = (6164.425, 6385.523, 6477.105), stdev = 137.072
[info]   CI (99.9%): [5857.708, 6913.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   321.151 ±(99.9%) 27.686 MB/sec [Average]
[info]   (min, avg, max) = (310.491, 321.151, 328.585), stdev = 7.190
[info]   CI (99.9%): [293.465, 348.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   79137.929 ±(99.9%) 2054.182 B/op [Average]
[info]   (min, avg, max) = (78375.233, 79137.929, 79828.458), stdev = 533.465
[info]   CI (99.9%): [77083.747, 81192.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   315.274 ±(99.9%) 127.979 MB/sec [Average]
[info]   (min, avg, max) = (255.823, 315.274, 330.469), stdev = 33.236
[info]   CI (99.9%): [187.296, 443.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   77589.083 ±(99.9%) 26628.192 B/op [Average]
[info]   (min, avg, max) = (65302.171, 77589.083, 82046.647), stdev = 6915.257
[info]   CI (99.9%): [50960.891, 104217.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.046 ±(99.9%) 10.790 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.046, 5.169), stdev = 2.802
[info]   CI (99.9%): [≈ 0, 12.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:29:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3777.544 ops/s
[info] # Warmup Iteration   2: 6259.690 ops/s
[info] # Warmup Iteration   3: 6663.126 ops/s
[info] Iteration   1: 6672.162 ops/s
[info]                  ·gc.alloc.rate:                   282.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              66517.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60331.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.354 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6670.042 ops/s
[info]                  ·gc.alloc.rate:               283.922 MB/sec
[info]                  ·gc.alloc.rate.norm:          66988.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60358.744 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 6620.915 ops/s
[info]                  ·gc.alloc.rate:                   283.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              67306.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78370.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.470 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6676.222 ops/s
[info]                  ·gc.alloc.rate:               284.957 MB/sec
[info]                  ·gc.alloc.rate.norm:          67153.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77736.277 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 6665.027 ops/s
[info]                  ·gc.alloc.rate:               284.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          67177.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77864.554 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6660.874 ±(99.9%) 87.407 ops/s [Average]
[info]   (min, avg, max) = (6620.915, 6660.874, 6676.222), stdev = 22.699
[info]   CI (99.9%): [6573.467, 6748.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   283.732 ±(99.9%) 4.503 MB/sec [Average]
[info]   (min, avg, max) = (282.026, 283.732, 284.957), stdev = 1.170
[info]   CI (99.9%): [279.229, 288.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   67028.836 ±(99.9%) 1183.155 B/op [Average]
[info]   (min, avg, max) = (66517.689, 67028.836, 67306.615), stdev = 307.262
[info]   CI (99.9%): [65845.681, 68211.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   300.212 ±(99.9%) 156.081 MB/sec [Average]
[info]   (min, avg, max) = (255.798, 300.212, 329.864), stdev = 40.534
[info]   CI (99.9%): [144.131, 456.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   70932.256 ±(99.9%) 37226.271 B/op [Average]
[info]   (min, avg, max) = (60331.613, 70932.256, 78370.092), stdev = 9667.544
[info]   CI (99.9%): [33705.985, 108158.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.035), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.365 ±(99.9%) 14.130 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.365, 8.354), stdev = 3.670
[info]   CI (99.9%): [≈ 0, 16.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:29:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2151.163 ops/s
[info] # Warmup Iteration   2: 6516.729 ops/s
[info] # Warmup Iteration   3: 7809.359 ops/s
[info] Iteration   1: 7796.064 ops/s
[info]                  ·gc.alloc.rate:                   1647.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              332598.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     333387.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.172 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 640.444 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 7809.148 ops/s
[info]                  ·gc.alloc.rate:                   1657.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              333861.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     330818.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.908 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 182.904 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 7817.887 ops/s
[info]                  ·gc.alloc.rate:               1675.559 MB/sec
[info]                  ·gc.alloc.rate.norm:          337283.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1639.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 330035.239 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 7970.068 ops/s
[info]                  ·gc.alloc.rate:                   1708.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              337427.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325345.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.200 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.434 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 7985.532 ops/s
[info]                  ·gc.alloc.rate:                   1712.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              337403.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     327097.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.191 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.693 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   7875.740 ±(99.9%) 360.615 ops/s [Average]
[info]   (min, avg, max) = (7796.064, 7875.740, 7985.532), stdev = 93.651
[info]   CI (99.9%): [7515.125, 8236.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1680.319 ±(99.9%) 113.343 MB/sec [Average]
[info]   (min, avg, max) = (1647.489, 1680.319, 1712.325), stdev = 29.435
[info]   CI (99.9%): [1566.976, 1793.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   335714.701 ±(99.9%) 8905.408 B/op [Average]
[info]   (min, avg, max) = (332598.231, 335714.701, 337427.573), stdev = 2312.706
[info]   CI (99.9%): [326809.293, 344620.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1648.180 ±(99.9%) 31.064 MB/sec [Average]
[info]   (min, avg, max) = (1639.551, 1648.180, 1660.024), stdev = 8.067
[info]   CI (99.9%): [1617.116, 1679.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   329336.699 ±(99.9%) 12182.180 B/op [Average]
[info]   (min, avg, max) = (325345.301, 329336.699, 333387.188), stdev = 3163.673
[info]   CI (99.9%): [317154.519, 341518.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.894 ±(99.9%) 5.082 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.894, 3.172), stdev = 1.320
[info]   CI (99.9%): [≈ 0, 5.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   180.095 ±(99.9%) 1026.807 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 180.095, 640.444), stdev = 266.659
[info]   CI (99.9%): [≈ 0, 1206.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 15.000), stdev = 3.493
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:29:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.813 ops/s
[info] # Warmup Iteration   2: 16599.474 ops/s
[info] # Warmup Iteration   3: 18529.522 ops/s
[info] Iteration   1: 18950.731 ops/s
[info]                  ·gc.alloc.rate:               473.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          39307.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26831.242 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 18912.164 ops/s
[info]                  ·gc.alloc.rate:               484.202 MB/sec
[info]                  ·gc.alloc.rate.norm:          40293.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53800.846 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 18745.842 ops/s
[info]                  ·gc.alloc.rate:                   474.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              39851.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27152.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.108 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 18268.404 ops/s
[info]                  ·gc.alloc.rate:               495.810 MB/sec
[info]                  ·gc.alloc.rate.norm:          42713.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55840.646 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 18510.216 ops/s
[info]                  ·gc.alloc.rate:                   468.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              39823.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27611.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.594 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   18677.472 ±(99.9%) 1105.571 ops/s [Average]
[info]   (min, avg, max) = (18268.404, 18677.472, 18950.731), stdev = 287.113
[info]   CI (99.9%): [17571.901, 19783.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   479.309 ±(99.9%) 41.717 MB/sec [Average]
[info]   (min, avg, max) = (468.550, 479.309, 495.810), stdev = 10.834
[info]   CI (99.9%): [437.592, 521.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   40397.846 ±(99.9%) 5162.439 B/op [Average]
[info]   (min, avg, max) = (39307.782, 40397.846, 42713.311), stdev = 1340.669
[info]   CI (99.9%): [35235.407, 45560.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   453.215 ±(99.9%) 682.425 MB/sec [Average]
[info]   (min, avg, max) = (323.075, 453.215, 648.191), stdev = 177.224
[info]   CI (99.9%): [≈ 0, 1135.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   38247.460 ±(99.9%) 58333.370 B/op [Average]
[info]   (min, avg, max) = (26831.242, 38247.460, 55840.646), stdev = 15148.991
[info]   CI (99.9%): [≈ 0, 96580.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.016 ±(99.9%) 0.087 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.049), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.340 ±(99.9%) 7.362 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.340, 4.108), stdev = 1.912
[info]   CI (99.9%): [≈ 0, 8.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:29:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2454.049 ops/s
[info] # Warmup Iteration   2: 12940.142 ops/s
[info] # Warmup Iteration   3: 15381.895 ops/s
[info] Iteration   1: 15427.511 ops/s
[info]                  ·gc.alloc.rate:               422.236 MB/sec
[info]                  ·gc.alloc.rate.norm:          43062.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32619.344 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 15412.756 ops/s
[info]                  ·gc.alloc.rate:               422.746 MB/sec
[info]                  ·gc.alloc.rate.norm:          43161.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32651.085 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 15049.843 ops/s
[info]                  ·gc.alloc.rate:               407.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          42557.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33540.779 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 15016.309 ops/s
[info]                  ·gc.alloc.rate:                   415.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              43516.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67368.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.363 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 14756.157 ops/s
[info]                  ·gc.alloc.rate:                   412.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              44023.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34353.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.220 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   15132.515 ±(99.9%) 1101.887 ops/s [Average]
[info]   (min, avg, max) = (14756.157, 15132.515, 15427.511), stdev = 286.156
[info]   CI (99.9%): [14030.629, 16234.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   416.013 ±(99.9%) 25.469 MB/sec [Average]
[info]   (min, avg, max) = (407.077, 416.013, 422.746), stdev = 6.614
[info]   CI (99.9%): [390.544, 441.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43264.240 ±(99.9%) 2101.953 B/op [Average]
[info]   (min, avg, max) = (42557.147, 43264.240, 44023.803), stdev = 545.871
[info]   CI (99.9%): [41162.287, 45366.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   385.080 ±(99.9%) 554.823 MB/sec [Average]
[info]   (min, avg, max) = (319.804, 385.080, 642.824), stdev = 144.086
[info]   CI (99.9%): [≈ 0, 939.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   40106.621 ±(99.9%) 58748.148 B/op [Average]
[info]   (min, avg, max) = (32619.344, 40106.621, 67368.565), stdev = 15256.708
[info]   CI (99.9%): [≈ 0, 98854.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.317 ±(99.9%) 7.531 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.317, 4.363), stdev = 1.956
[info]   CI (99.9%): [≈ 0, 8.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:29:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12783.712 ops/s
[info] # Warmup Iteration   2: 21371.566 ops/s
[info] # Warmup Iteration   3: 22268.608 ops/s
[info] Iteration   1: 23251.409 ops/s
[info]                  ·gc.alloc.rate:               439.197 MB/sec
[info]                  ·gc.alloc.rate.norm:          29724.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22319.721 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 22893.485 ops/s
[info]                  ·gc.alloc.rate:               438.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          30117.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22669.686 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 23050.597 ops/s
[info]                  ·gc.alloc.rate:               439.122 MB/sec
[info]                  ·gc.alloc.rate.norm:          29950.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44973.297 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 23184.002 ops/s
[info]                  ·gc.alloc.rate:               439.360 MB/sec
[info]                  ·gc.alloc.rate.norm:          29824.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22474.654 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 23189.873 ops/s
[info]                  ·gc.alloc.rate:                   435.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              29584.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22468.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.413 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   23113.873 ±(99.9%) 551.950 ops/s [Average]
[info]   (min, avg, max) = (22893.485, 23113.873, 23251.409), stdev = 143.340
[info]   CI (99.9%): [22561.924, 23665.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   438.344 ±(99.9%) 5.522 MB/sec [Average]
[info]   (min, avg, max) = (435.934, 438.344, 439.360), stdev = 1.434
[info]   CI (99.9%): [432.822, 443.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29840.390 ±(99.9%) 789.970 B/op [Average]
[info]   (min, avg, max) = (29584.321, 29840.390, 30117.779), stdev = 205.153
[info]   CI (99.9%): [29050.420, 30630.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   396.220 ±(99.9%) 566.472 MB/sec [Average]
[info]   (min, avg, max) = (329.765, 396.220, 659.377), stdev = 147.111
[info]   CI (99.9%): [≈ 0, 962.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   26981.240 ±(99.9%) 38732.217 B/op [Average]
[info]   (min, avg, max) = (22319.721, 26981.240, 44973.297), stdev = 10058.634
[info]   CI (99.9%): [≈ 0, 65713.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.283 ±(99.9%) 2.433 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.283, 1.413), stdev = 0.632
[info]   CI (99.9%): [≈ 0, 2.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:28:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84.967 ops/s
[info] # Warmup Iteration   2: 2459.574 ops/s
[info] # Warmup Iteration   3: 3814.636 ops/s
[info] Iteration   1: 3825.815 ops/s
[info]                  ·gc.alloc.rate:                   2385.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              981109.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2300.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     946239.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 692.212 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 3776.012 ops/s
[info]                  ·gc.alloc.rate:                   2331.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              971663.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     965567.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.378 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 3912.663 ops/s
[info]                  ·gc.alloc.rate:                   2454.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              986687.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2335.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     939003.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.208 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3871.112 ops/s
[info]                  ·gc.alloc.rate:                   2429.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              987384.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     955552.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.926 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 3906.825 ops/s
[info]                  ·gc.alloc.rate:               2451.140 MB/sec
[info]                  ·gc.alloc.rate.norm:          987298.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2362.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 951580.037 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   3858.486 ±(99.9%) 222.044 ops/s [Average]
[info]   (min, avg, max) = (3776.012, 3858.486, 3912.663), stdev = 57.664
[info]   CI (99.9%): [3636.442, 4080.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2410.236 ±(99.9%) 200.090 MB/sec [Average]
[info]   (min, avg, max) = (2331.478, 2410.236, 2454.141), stdev = 51.963
[info]   CI (99.9%): [2210.146, 2610.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   982828.741 ±(99.9%) 26063.257 B/op [Average]
[info]   (min, avg, max) = (971663.125, 982828.741, 987384.442), stdev = 6768.545
[info]   CI (99.9%): [956765.483, 1008891.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2333.237 ±(99.9%) 96.793 MB/sec [Average]
[info]   (min, avg, max) = (2300.320, 2333.237, 2362.462), stdev = 25.137
[info]   CI (99.9%): [2236.444, 2430.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   951588.494 ±(99.9%) 38415.983 B/op [Average]
[info]   (min, avg, max) = (939003.291, 951588.494, 965567.204), stdev = 9976.509
[info]   CI (99.9%): [913172.511, 990004.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.424 ±(99.9%) 2.743 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.424, 1.683), stdev = 0.712
[info]   CI (99.9%): [≈ 0, 3.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   173.945 ±(99.9%) 1128.869 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 173.945, 692.212), stdev = 293.164
[info]   CI (99.9%): [≈ 0, 1302.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 13.000), stdev = 1.140
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:28:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1469.328 ops/s
[info] # Warmup Iteration   2: 8577.137 ops/s
[info] # Warmup Iteration   3: 10006.911 ops/s
[info] Iteration   1: 10191.592 ops/s
[info]                  ·gc.alloc.rate:                   2175.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              335921.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2297.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354754.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.944 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 609.005 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 10270.787 ops/s
[info]                  ·gc.alloc.rate:                   2202.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              337524.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     300905.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.451 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 10332.333 ops/s
[info]                  ·gc.alloc.rate:                   2229.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              339597.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2309.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351706.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.431 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 10174.630 ops/s
[info]                  ·gc.alloc.rate:                   2184.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              337896.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309050.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.220 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 10182.285 ops/s
[info]                  ·gc.alloc.rate:               2187.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          338103.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2012.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 311051.463 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   10230.326 ±(99.9%) 265.057 ops/s [Average]
[info]   (min, avg, max) = (10174.630, 10230.326, 10332.333), stdev = 68.834
[info]   CI (99.9%): [9965.269, 10495.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   2195.932 ±(99.9%) 81.663 MB/sec [Average]
[info]   (min, avg, max) = (2175.367, 2195.932, 2229.535), stdev = 21.208
[info]   CI (99.9%): [2114.269, 2277.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   337808.689 ±(99.9%) 5071.616 B/op [Average]
[info]   (min, avg, max) = (335921.022, 337808.689, 339597.700), stdev = 1317.082
[info]   CI (99.9%): [332737.074, 342880.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2116.125 ±(99.9%) 661.261 MB/sec [Average]
[info]   (min, avg, max) = (1963.720, 2116.125, 2309.034), stdev = 171.727
[info]   CI (99.9%): [1454.865, 2777.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   325493.699 ±(99.9%) 98678.587 B/op [Average]
[info]   (min, avg, max) = (300905.485, 325493.699, 354754.668), stdev = 25626.516
[info]   CI (99.9%): [226815.112, 424172.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.802 ±(99.9%) 6.763 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.802, 3.944), stdev = 1.756
[info]   CI (99.9%): [≈ 0, 7.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   123.821 ±(99.9%) 1044.410 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 123.821, 609.005), stdev = 271.230
[info]   CI (99.9%): [≈ 0, 1168.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 15.000), stdev = 3.114
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:28:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.754 ops/s
[info] # Warmup Iteration   2: 43154.856 ops/s
[info] # Warmup Iteration   3: 57039.318 ops/s
[info] Iteration   1: 55673.383 ops/s
[info]                  ·gc.alloc.rate:               560.938 MB/sec
[info]                  ·gc.alloc.rate.norm:          15855.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9152.441 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 57089.658 ops/s
[info]                  ·gc.alloc.rate:                   549.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              15153.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17887.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.574 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 56942.385 ops/s
[info]                  ·gc.alloc.rate:                   554.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              15324.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17970.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.575 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 57407.519 ops/s
[info]                  ·gc.alloc.rate:               547.786 MB/sec
[info]                  ·gc.alloc.rate.norm:          15016.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8921.681 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 57220.170 ops/s
[info]                  ·gc.alloc.rate:                   553.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              15227.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17919.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.573 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   56866.623 ±(99.9%) 2651.687 ops/s [Average]
[info]   (min, avg, max) = (55673.383, 56866.623, 57407.519), stdev = 688.635
[info]   CI (99.9%): [54214.936, 59518.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   553.338 ±(99.9%) 19.488 MB/sec [Average]
[info]   (min, avg, max) = (547.786, 553.338, 560.938), stdev = 5.061
[info]   CI (99.9%): [533.850, 572.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   15315.592 ±(99.9%) 1239.663 B/op [Average]
[info]   (min, avg, max) = (15016.901, 15315.592, 15855.224), stdev = 321.937
[info]   CI (99.9%): [14075.929, 16555.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.004 ±(99.9%) 686.802 MB/sec [Average]
[info]   (min, avg, max) = (323.802, 520.004, 651.505), stdev = 178.360
[info]   CI (99.9%): [≈ 0, 1206.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14370.355 ±(99.9%) 18750.256 B/op [Average]
[info]   (min, avg, max) = (8921.681, 14370.355, 17970.328), stdev = 4869.382
[info]   CI (99.9%): [≈ 0, 33120.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.344 ±(99.9%) 1.211 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.344, 0.575), stdev = 0.314
[info]   CI (99.9%): [≈ 0, 1.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 2.588
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:28:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7402.873 ops/s
[info] # Warmup Iteration   2: 42548.661 ops/s
[info] # Warmup Iteration   3: 45189.452 ops/s
[info] Iteration   1: 44390.119 ops/s
[info]                  ·gc.alloc.rate:                        654.926 MB/sec
[info]                  ·gc.alloc.rate.norm:                   23218.771 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.013 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.467 B/op
[info]                  ·gc.churn.Metaspace:                   0.039 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              1.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:               724.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          25683.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.597 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      162.970 B/op
[info]                  ·gc.count:                             4.000 counts
[info]                  ·gc.time:                              35.000 ms
[info] Iteration   2: 45340.559 ops/s
[info]                  ·gc.alloc.rate:                   669.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              23250.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22383.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.723 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 45720.356 ops/s
[info]                  ·gc.alloc.rate:               672.753 MB/sec
[info]                  ·gc.alloc.rate.norm:          23156.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22151.561 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 45339.331 ops/s
[info]                  ·gc.alloc.rate:               666.203 MB/sec
[info]                  ·gc.alloc.rate.norm:          23118.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22383.927 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 45029.302 ops/s
[info]                  ·gc.alloc.rate:                   664.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              23208.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22562.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.728 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   45163.933 ±(99.9%) 1914.202 ops/s [Average]
[info]   (min, avg, max) = (44390.119, 45163.933, 45720.356), stdev = 497.112
[info]   CI (99.9%): [43249.731, 47078.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   665.558 ±(99.9%) 26.294 MB/sec [Average]
[info]   (min, avg, max) = (654.926, 665.558, 672.753), stdev = 6.828
[info]   CI (99.9%): [639.265, 691.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23190.488 ±(99.9%) 203.486 B/op [Average]
[info]   (min, avg, max) = (23118.126, 23190.488, 23250.880), stdev = 52.845
[info]   CI (99.9%): [22987.002, 23393.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.023 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.093 ±(99.9%) 0.804 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.093, 0.467), stdev = 0.209
[info]   CI (99.9%): [≈ 0, 0.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.008 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.039), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.273 ±(99.9%) 2.352 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.273, 1.366), stdev = 0.611
[info]   CI (99.9%): [≈ 0, 2.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   660.701 ±(99.9%) 137.250 MB/sec [Average]
[info]   (min, avg, max) = (643.563, 660.701, 724.448), stdev = 35.643
[info]   CI (99.9%): [523.450, 797.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23033.048 ±(99.9%) 5732.985 B/op [Average]
[info]   (min, avg, max) = (22151.561, 23033.048, 25683.526), stdev = 1488.838
[info]   CI (99.9%): [17300.063, 28766.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.928 ±(99.9%) 7.898 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.928, 4.597), stdev = 2.051
[info]   CI (99.9%): [≈ 0, 8.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   32.884 ±(99.9%) 280.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32.884, 162.970), stdev = 72.721
[info]   CI (99.9%): [≈ 0, 312.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 9.000, 35.000), stdev = 14.543
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:27:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36221.341 ops/s
[info] # Warmup Iteration   2: 83711.141 ops/s
[info] # Warmup Iteration   3: 86880.811 ops/s
[info] Iteration   1: 89235.024 ops/s
[info]                  ·gc.alloc.rate:               690.738 MB/sec
[info]                  ·gc.alloc.rate.norm:          12182.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11644.056 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 89408.532 ops/s
[info]                  ·gc.alloc.rate:                   696.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              12258.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11633.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 88180.176 ops/s
[info]                  ·gc.alloc.rate:                   686.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              12255.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11807.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.372 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 89214.934 ops/s
[info]                  ·gc.alloc.rate:               685.644 MB/sec
[info]                  ·gc.alloc.rate.norm:          12095.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11681.530 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 89455.018 ops/s
[info]                  ·gc.alloc.rate:                   687.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              12097.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11661.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.641 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.448 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   89098.737 ±(99.9%) 2018.137 ops/s [Average]
[info]   (min, avg, max) = (88180.176, 89098.737, 89455.018), stdev = 524.104
[info]   CI (99.9%): [87080.600, 91116.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   689.444 ±(99.9%) 16.653 MB/sec [Average]
[info]   (min, avg, max) = (685.644, 689.444, 696.391), stdev = 4.325
[info]   CI (99.9%): [672.791, 706.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   12177.674 ±(99.9%) 309.616 B/op [Average]
[info]   (min, avg, max) = (12095.237, 12177.674, 12258.091), stdev = 80.406
[info]   CI (99.9%): [11868.058, 12487.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   661.573 ±(99.9%) 4.205 MB/sec [Average]
[info]   (min, avg, max) = (660.217, 661.573, 663.014), stdev = 1.092
[info]   CI (99.9%): [657.368, 665.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11685.526 ±(99.9%) 271.154 B/op [Average]
[info]   (min, avg, max) = (11633.124, 11685.526, 11807.137), stdev = 70.418
[info]   CI (99.9%): [11414.372, 11956.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.545 ±(99.9%) 4.513 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.545, 2.641), stdev = 1.172
[info]   CI (99.9%): [≈ 0, 5.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9.584 ±(99.9%) 79.371 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.584, 46.448), stdev = 20.613
[info]   CI (99.9%): [≈ 0, 88.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:27:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48985.200 ops/s
[info] # Warmup Iteration   2: 102370.407 ops/s
[info] # Warmup Iteration   3: 104507.525 ops/s
[info] Iteration   1: 105263.654 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 104961.233 ops/s
[info]                  ·gc.alloc.rate:      0.431 MB/sec
[info]                  ·gc.alloc.rate.norm: 6.456 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 105176.461 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 105270.213 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 100136.529 ops/s
[info]                  ·gc.alloc.rate:      0.056 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.874 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   104161.618 ±(99.9%) 8677.649 ops/s [Average]
[info]   (min, avg, max) = (100136.529, 104161.618, 105270.213), stdev = 2253.558
[info]   CI (99.9%): [95483.969, 112839.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.097 ±(99.9%) 0.723 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.097, 0.431), stdev = 0.188
[info]   CI (99.9%): [≈ 0, 0.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.469 ±(99.9%) 10.832 B/op [Average]
[info]   (min, avg, max) = (0.004, 1.469, 6.456), stdev = 2.813
[info]   CI (99.9%): [≈ 0, 12.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:27:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 528.499 ops/s
[info] # Warmup Iteration   2: 5645.861 ops/s
[info] # Warmup Iteration   3: 6989.769 ops/s
[info] Iteration   1: 7080.582 ops/s
[info]                  ·gc.alloc.rate:                   2326.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              516964.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2304.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     511997.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 166.593 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 7120.565 ops/s
[info]                  ·gc.alloc.rate:                   2335.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              516243.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2324.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     513761.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.413 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 7091.203 ops/s
[info]                  ·gc.alloc.rate:               2354.005 MB/sec
[info]                  ·gc.alloc.rate.norm:          522401.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2344.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 520369.886 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 7144.063 ops/s
[info]                  ·gc.alloc.rate:                   2357.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              519408.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445112.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.586 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 7084.087 ops/s
[info]                  ·gc.alloc.rate:                   2353.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              522644.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2366.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     525693.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.624 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   7104.100 ±(99.9%) 105.244 ops/s [Average]
[info]   (min, avg, max) = (7080.582, 7104.100, 7144.063), stdev = 27.332
[info]   CI (99.9%): [6998.856, 7209.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2345.558 ±(99.9%) 51.899 MB/sec [Average]
[info]   (min, avg, max) = (2326.899, 2345.558, 2357.907), stdev = 13.478
[info]   CI (99.9%): [2293.658, 2397.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   519532.699 ±(99.9%) 11445.766 B/op [Average]
[info]   (min, avg, max) = (516243.889, 519532.699, 522644.873), stdev = 2972.429
[info]   CI (99.9%): [508086.934, 530978.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2272.299 ±(99.9%) 549.053 MB/sec [Average]
[info]   (min, avg, max) = (2020.633, 2272.299, 2366.945), stdev = 142.587
[info]   CI (99.9%): [1723.246, 2821.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   503386.922 ±(99.9%) 127182.741 B/op [Average]
[info]   (min, avg, max) = (445112.807, 503386.922, 525693.796), stdev = 33028.954
[info]   CI (99.9%): [376204.181, 630569.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.217 ±(99.9%) 1.238 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.217, 0.750), stdev = 0.322
[info]   CI (99.9%): [≈ 0, 1.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   48.043 ±(99.9%) 275.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.043, 166.593), stdev = 71.421
[info]   CI (99.9%): [≈ 0, 323.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.600, 12.000), stdev = 1.140
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:27:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 578195.405 ops/s
[info] # Warmup Iteration   2: 7781532.633 ops/s
[info] # Warmup Iteration   3: 8031105.394 ops/s
[info] Iteration   1: 8328562.437 ops/s
[info]                  ·gc.alloc.rate:                   4542.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              858.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4332.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     818.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 8329137.653 ops/s
[info]                  ·gc.alloc.rate:                   4578.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              865.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4384.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     828.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 8300405.757 ops/s
[info]                  ·gc.alloc.rate:                   4561.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4410.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     836.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 8253049.560 ops/s
[info]                  ·gc.alloc.rate:                   4540.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              865.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4422.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     843.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 8330884.402 ops/s
[info]                  ·gc.alloc.rate:                   4580.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              865.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4425.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     836.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   8308407.962 ±(99.9%) 128718.988 ops/s [Average]
[info]   (min, avg, max) = (8253049.560, 8308407.962, 8330884.402), stdev = 33427.912
[info]   CI (99.9%): [8179688.974, 8437126.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   4560.592 ±(99.9%) 72.795 MB/sec [Average]
[info]   (min, avg, max) = (4540.965, 4560.592, 4580.242), stdev = 18.905
[info]   CI (99.9%): [4487.797, 4633.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   863.806 ±(99.9%) 12.200 B/op [Average]
[info]   (min, avg, max) = (858.159, 863.806, 865.625), stdev = 3.168
[info]   CI (99.9%): [851.606, 876.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   4395.064 ±(99.9%) 148.804 MB/sec [Average]
[info]   (min, avg, max) = (4332.409, 4395.064, 4425.482), stdev = 38.644
[info]   CI (99.9%): [4246.260, 4543.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   832.471 ±(99.9%) 36.006 B/op [Average]
[info]   (min, avg, max) = (818.553, 832.471, 843.050), stdev = 9.351
[info]   CI (99.9%): [796.465, 868.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.100 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.100, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.019, 0.028), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   65.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.000, 13.000), stdev = 0.001
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   86.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 17.200, 18.000), stdev = 0.447
[info]   CI (99.9%): [86.000, 86.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:27:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.638 ops/s
[info] # Warmup Iteration   2: 36589859.717 ops/s
[info] # Warmup Iteration   3: 38328471.850 ops/s
[info] Iteration   1: 37728911.377 ops/s
[info]                  ·gc.alloc.rate:      15.851 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.661 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 37969129.559 ops/s
[info]                  ·gc.alloc.rate:      0.513 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.021 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 38170535.062 ops/s
[info]                  ·gc.alloc.rate:      0.336 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.014 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 38171297.210 ops/s
[info]                  ·gc.alloc.rate:      0.050 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 38223524.005 ops/s
[info]                  ·gc.alloc.rate:      0.078 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   38052679.443 ±(99.9%) 791385.390 ops/s [Average]
[info]   (min, avg, max) = (37728911.377, 38052679.443, 38223524.005), stdev = 205520.273
[info]   CI (99.9%): [37261294.052, 38844064.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   3.366 ±(99.9%) 26.885 MB/sec [Average]
[info]   (min, avg, max) = (0.050, 3.366, 15.851), stdev = 6.982
[info]   CI (99.9%): [≈ 0, 30.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   0.140 ±(99.9%) 1.121 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.140, 0.661), stdev = 0.291
[info]   CI (99.9%): [≈ 0, 1.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:26:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 418490.790 ops/s
[info] # Warmup Iteration   2: 9759119.285 ops/s
[info] # Warmup Iteration   3: 10037370.042 ops/s
[info] Iteration   1: 10500674.340 ops/s
[info]                  ·gc.alloc.rate:                   3578.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3617.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     542.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 10455584.504 ops/s
[info]                  ·gc.alloc.rate:                   3586.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              539.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3334.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     501.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 10440607.605 ops/s
[info]                  ·gc.alloc.rate:                   3582.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              540.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3368.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     507.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 10255933.576 ops/s
[info]                  ·gc.alloc.rate:                   3532.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              542.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     519.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 10555176.015 ops/s
[info]                  ·gc.alloc.rate:                   3566.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              531.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3397.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     506.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   10441595.208 ±(99.9%) 435045.492 ops/s [Average]
[info]   (min, avg, max) = (10255933.576, 10441595.208, 10555176.015), stdev = 112979.933
[info]   CI (99.9%): [10006549.716, 10876640.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3569.303 ±(99.9%) 84.197 MB/sec [Average]
[info]   (min, avg, max) = (3532.503, 3569.303, 3586.063), stdev = 21.866
[info]   CI (99.9%): [3485.107, 3653.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   538.010 ±(99.9%) 15.638 B/op [Average]
[info]   (min, avg, max) = (531.742, 538.010, 542.070), stdev = 4.061
[info]   CI (99.9%): [522.372, 553.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3421.351 ±(99.9%) 431.351 MB/sec [Average]
[info]   (min, avg, max) = (3334.987, 3421.351, 3617.087), stdev = 112.020
[info]   CI (99.9%): [2990.000, 3852.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   515.689 ±(99.9%) 62.372 B/op [Average]
[info]   (min, avg, max) = (501.991, 515.689, 542.129), stdev = 16.198
[info]   CI (99.9%): [453.317, 578.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.338 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.229), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.011, 0.034), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   51.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 16.000), stdev = 1.225
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:26:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13129256.191 ops/s
[info] # Warmup Iteration   2: 44251470.092 ops/s
[info] # Warmup Iteration   3: 49079341.271 ops/s
[info] Iteration   1: 49114974.231 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 49022245.607 ops/s
[info]                  ·gc.alloc.rate:      0.928 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.030 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 48815570.702 ops/s
[info]                  ·gc.alloc.rate:      1.500 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.048 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 49103995.213 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 48115736.978 ops/s
[info]                  ·gc.alloc.rate:      0.081 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   48834504.546 ±(99.9%) 1614885.507 ops/s [Average]
[info]   (min, avg, max) = (48115736.978, 48834504.546, 49114974.231), stdev = 419380.638
[info]   CI (99.9%): [47219619.039, 50449390.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   0.502 ±(99.9%) 2.624 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.502, 1.500), stdev = 0.681
[info]   CI (99.9%): [≈ 0, 3.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   0.016 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.016, 0.048), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:26:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6680986.795 ops/s
[info] # Warmup Iteration   2: 28366678.599 ops/s
[info] # Warmup Iteration   3: 30762446.118 ops/s
[info] Iteration   1: 31044388.502 ops/s
[info]                  ·gc.alloc.rate:               809.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          41.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.571 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 30275517.500 ops/s
[info]                  ·gc.alloc.rate:                   787.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 31405494.338 ops/s
[info]                  ·gc.alloc.rate:                   825.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 31389796.548 ops/s
[info]                  ·gc.alloc.rate:                   828.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 31474275.898 ops/s
[info]                  ·gc.alloc.rate:                   827.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   31117894.557 ±(99.9%) 1924026.011 ops/s [Average]
[info]   (min, avg, max) = (30275517.500, 31117894.557, 31474275.898), stdev = 499663.445
[info]   CI (99.9%): [29193868.546, 33041920.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   815.633 ±(99.9%) 67.455 MB/sec [Average]
[info]   (min, avg, max) = (787.355, 815.633, 828.056), stdev = 17.518
[info]   CI (99.9%): [748.178, 883.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   41.250 ±(99.9%) 0.963 B/op [Average]
[info]   (min, avg, max) = (40.929, 41.250, 41.519), stdev = 0.250
[info]   CI (99.9%): [40.287, 42.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   796.331 ±(99.9%) 700.282 MB/sec [Average]
[info]   (min, avg, max) = (662.215, 796.331, 996.532), stdev = 181.861
[info]   CI (99.9%): [96.049, 1496.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.215 ±(99.9%) 33.871 B/op [Average]
[info]   (min, avg, max) = (33.333, 40.215, 49.943), stdev = 8.796
[info]   CI (99.9%): [6.344, 74.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.637 ±(99.9%) 4.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.637, 2.436), stdev = 1.040
[info]   CI (99.9%): [≈ 0, 4.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.201 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.122), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 9.000), stdev = 1.924
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:26:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 846794.209 ops/s
[info] # Warmup Iteration   2: 7550506.533 ops/s
[info] # Warmup Iteration   3: 8542036.338 ops/s
[info] Iteration   1: 8284406.715 ops/s
[info]                  ·gc.alloc.rate:                   3721.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              707.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3632.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     690.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 8318059.274 ops/s
[info]                  ·gc.alloc.rate:                   3727.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3349.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 8152840.887 ops/s
[info]                  ·gc.alloc.rate:                   3670.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              708.473 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3715.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     717.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 8194207.335 ops/s
[info]                  ·gc.alloc.rate:                   3675.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              705.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     651.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 8362459.160 ops/s
[info]                  ·gc.alloc.rate:               3762.073 MB/sec
[info]                  ·gc.alloc.rate.norm:          708.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3739.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 703.717 B/op
[info]                  ·gc.count:                    11.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   8262394.674 ±(99.9%) 334848.442 ops/s [Average]
[info]   (min, avg, max) = (8152840.887, 8262394.674, 8362459.160), stdev = 86959.077
[info]   CI (99.9%): [7927546.232, 8597243.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3711.225 ±(99.9%) 148.531 MB/sec [Average]
[info]   (min, avg, max) = (3670.055, 3711.225, 3762.073), stdev = 38.573
[info]   CI (99.9%): [3562.694, 3859.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   706.882 ±(99.9%) 5.627 B/op [Average]
[info]   (min, avg, max) = (704.971, 706.882, 708.473), stdev = 1.461
[info]   CI (99.9%): [701.255, 712.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3565.781 ±(99.9%) 703.663 MB/sec [Average]
[info]   (min, avg, max) = (3349.270, 3565.781, 3739.096), stdev = 182.739
[info]   CI (99.9%): [2862.118, 4269.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   679.232 ±(99.9%) 136.293 B/op [Average]
[info]   (min, avg, max) = (633.483, 679.232, 717.237), stdev = 35.395
[info]   CI (99.9%): [542.939, 815.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   53.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 11.000), stdev = 0.548
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.800, 15.000), stdev = 1.304
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:26:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2129102.117 ops/s
[info] # Warmup Iteration   2: 12823036.122 ops/s
[info] # Warmup Iteration   3: 13224602.475 ops/s
[info] Iteration   1: 13226441.910 ops/s
[info]                  ·gc.alloc.rate:                   1591.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              189.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     157.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 13619274.078 ops/s
[info]                  ·gc.alloc.rate:                   1644.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              189.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 13641717.067 ops/s
[info]                  ·gc.alloc.rate:                   1653.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              190.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 13277030.933 ops/s
[info]                  ·gc.alloc.rate:                   1618.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              191.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 13615216.457 ops/s
[info]                  ·gc.alloc.rate:                   1644.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              190.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   13475936.089 ±(99.9%) 792051.199 ops/s [Average]
[info]   (min, avg, max) = (13226441.910, 13475936.089, 13641717.067), stdev = 205693.181
[info]   CI (99.9%): [12683884.890, 14267987.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   1630.513 ±(99.9%) 98.244 MB/sec [Average]
[info]   (min, avg, max) = (1591.182, 1630.513, 1653.236), stdev = 25.514
[info]   CI (99.9%): [1532.269, 1728.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   190.372 ±(99.9%) 3.640 B/op [Average]
[info]   (min, avg, max) = (189.298, 190.372, 191.804), stdev = 0.945
[info]   CI (99.9%): [186.732, 194.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1521.332 ±(99.9%) 682.314 MB/sec [Average]
[info]   (min, avg, max) = (1323.266, 1521.332, 1655.205), stdev = 177.195
[info]   CI (99.9%): [839.017, 2203.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   177.593 ±(99.9%) 77.864 B/op [Average]
[info]   (min, avg, max) = (153.857, 177.593, 196.123), stdev = 20.221
[info]   CI (99.9%): [99.729, 255.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.700 ±(99.9%) 4.079 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.700, 2.519), stdev = 1.059
[info]   CI (99.9%): [≈ 0, 4.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.083 ±(99.9%) 0.485 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.083, 0.300), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 14.000), stdev = 3.464
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:25:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.582 ops/s
[info] # Warmup Iteration   2: 37838066.464 ops/s
[info] # Warmup Iteration   3: 42346136.671 ops/s
[info] Iteration   1: 39910468.119 ops/s
[info]                  ·gc.alloc.rate:                   857.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.086 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 41942844.965 ops/s
[info]                  ·gc.alloc.rate:                   882.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 42032737.867 ops/s
[info]                  ·gc.alloc.rate:                   871.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 41670625.977 ops/s
[info]                  ·gc.alloc.rate:                   876.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 42155642.989 ops/s
[info]                  ·gc.alloc.rate:               882.371 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24.324 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   41542463.983 ±(99.9%) 3579492.972 ops/s [Average]
[info]   (min, avg, max) = (39910468.119, 41542463.983, 42155642.989), stdev = 929582.958
[info]   CI (99.9%): [37962971.012, 45121956.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   874.010 ±(99.9%) 40.626 MB/sec [Average]
[info]   (min, avg, max) = (857.044, 874.010, 882.671), stdev = 10.550
[info]   CI (99.9%): [833.385, 914.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   33.115 ±(99.9%) 1.624 B/op [Average]
[info]   (min, avg, max) = (32.633, 33.115, 33.783), stdev = 0.422
[info]   CI (99.9%): [31.492, 34.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   848.129 ±(99.9%) 687.455 MB/sec [Average]
[info]   (min, avg, max) = (651.628, 848.129, 980.563), stdev = 178.530
[info]   CI (99.9%): [160.674, 1535.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   32.207 ±(99.9%) 27.572 B/op [Average]
[info]   (min, avg, max) = (24.324, 32.207, 38.484), stdev = 7.160
[info]   CI (99.9%): [4.635, 59.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.911 ±(99.9%) 7.544 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.911, 4.415), stdev = 1.959
[info]   CI (99.9%): [≈ 0, 8.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.285 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.167), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 10.000), stdev = 2.775
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:25:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1631332.335 ops/s
[info] # Warmup Iteration   2: 11906485.002 ops/s
[info] # Warmup Iteration   3: 12800702.025 ops/s
[info] Iteration   1: 12874475.308 ops/s
[info]                  ·gc.alloc.rate:                   2635.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              322.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2619.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 12935176.734 ops/s
[info]                  ·gc.alloc.rate:                   2667.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2635.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 12939456.971 ops/s
[info]                  ·gc.alloc.rate:                   2672.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2667.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     324.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 12878691.751 ops/s
[info]                  ·gc.alloc.rate:                   2646.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              323.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2354.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 12919099.353 ops/s
[info]                  ·gc.alloc.rate:               2667.838 MB/sec
[info]                  ·gc.alloc.rate.norm:          324.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2704.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 329.460 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   12909380.024 ±(99.9%) 119069.414 ops/s [Average]
[info]   (min, avg, max) = (12874475.308, 12909380.024, 12939456.971), stdev = 30921.949
[info]   CI (99.9%): [12790310.609, 13028449.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2657.970 ±(99.9%) 61.676 MB/sec [Average]
[info]   (min, avg, max) = (2635.296, 2657.970, 2672.044), stdev = 16.017
[info]   CI (99.9%): [2596.294, 2719.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   323.986 ±(99.9%) 4.716 B/op [Average]
[info]   (min, avg, max) = (322.103, 323.986, 324.996), stdev = 1.225
[info]   CI (99.9%): [319.270, 328.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2596.268 ±(99.9%) 536.180 MB/sec [Average]
[info]   (min, avg, max) = (2354.121, 2596.268, 2704.479), stdev = 139.244
[info]   CI (99.9%): [2060.087, 3132.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   316.449 ±(99.9%) 63.679 B/op [Average]
[info]   (min, avg, max) = (287.626, 316.449, 329.460), stdev = 16.537
[info]   CI (99.9%): [252.769, 380.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.133 ±(99.9%) 0.803 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.500), stdev = 0.209
[info]   CI (99.9%): [≈ 0, 0.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.098 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.061), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 11.000), stdev = 0.894
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:25:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18755909.163 ops/s
[info] # Warmup Iteration   2: 45585247.544 ops/s
[info] # Warmup Iteration   3: 50363717.904 ops/s
[info] Iteration   1: 49713952.507 ops/s
[info]                  ·gc.alloc.rate:                   1043.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 49999261.637 ops/s
[info]                  ·gc.alloc.rate:                   1045.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 49872956.246 ops/s
[info]                  ·gc.alloc.rate:                   1059.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 49802636.843 ops/s
[info]                  ·gc.alloc.rate:               1045.634 MB/sec
[info]                  ·gc.alloc.rate.norm:          33.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31.284 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 50103449.811 ops/s
[info]                  ·gc.alloc.rate:               1057.840 MB/sec
[info]                  ·gc.alloc.rate.norm:          33.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31.076 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   49898451.409 ±(99.9%) 596717.277 ops/s [Average]
[info]   (min, avg, max) = (49713952.507, 49898451.409, 50103449.811), stdev = 154965.582
[info]   CI (99.9%): [49301734.132, 50495168.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1050.428 ±(99.9%) 29.641 MB/sec [Average]
[info]   (min, avg, max) = (1043.335, 1050.428, 1059.693), stdev = 7.698
[info]   CI (99.9%): [1020.787, 1080.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   33.125 ±(99.9%) 0.792 B/op [Average]
[info]   (min, avg, max) = (32.911, 33.125, 33.433), stdev = 0.206
[info]   CI (99.9%): [32.333, 33.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1058.625 ±(99.9%) 575.552 MB/sec [Average]
[info]   (min, avg, max) = (989.438, 1058.625, 1325.979), stdev = 149.469
[info]   CI (99.9%): [483.073, 1634.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   33.385 ±(99.9%) 18.194 B/op [Average]
[info]   (min, avg, max) = (31.076, 33.385, 41.834), stdev = 4.725
[info]   CI (99.9%): [15.191, 51.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 5.694 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.687, 3.332), stdev = 1.479
[info]   CI (99.9%): [≈ 0, 6.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.105), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 9.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:25:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19451754.452 ops/s
[info] # Warmup Iteration   2: 57524402.977 ops/s
[info] # Warmup Iteration   3: 59405144.313 ops/s
[info] Iteration   1: 62526240.908 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 62494688.321 ops/s
[info]                  ·gc.alloc.rate:      0.929 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.023 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 62570740.396 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 61646172.256 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 59402880.799 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   61728144.536 ±(99.9%) 5219038.216 ops/s [Average]
[info]   (min, avg, max) = (59402880.799, 61728144.536, 62570740.396), stdev = 1355367.651
[info]   CI (99.9%): [56509106.320, 66947182.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.186 ±(99.9%) 1.599 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.186, 0.929), stdev = 0.415
[info]   CI (99.9%): [≈ 0, 1.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.005 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.005, 0.023), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:24:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4266450.589 ops/s
[info] # Warmup Iteration   2: 17363244.993 ops/s
[info] # Warmup Iteration   3: 17640271.096 ops/s
[info] Iteration   1: 16974444.038 ops/s
[info]                  ·gc.alloc.rate:                   1617.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              149.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 17703626.623 ops/s
[info]                  ·gc.alloc.rate:                   1668.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              148.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1666.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 17758326.195 ops/s
[info]                  ·gc.alloc.rate:                   1670.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              148.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 17755871.714 ops/s
[info]                  ·gc.alloc.rate:                   1692.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              149.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 17778538.781 ops/s
[info]                  ·gc.alloc.rate:                   1693.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              149.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   17594161.470 ±(99.9%) 1338240.828 ops/s [Average]
[info]   (min, avg, max) = (16974444.038, 17594161.470, 17778538.781), stdev = 347536.893
[info]   CI (99.9%): [16255920.643, 18932402.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   1668.304 ±(99.9%) 119.567 MB/sec [Average]
[info]   (min, avg, max) = (1617.071, 1668.304, 1693.866), stdev = 31.051
[info]   CI (99.9%): [1548.738, 1787.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   149.205 ±(99.9%) 3.778 B/op [Average]
[info]   (min, avg, max) = (148.016, 149.205, 149.943), stdev = 0.981
[info]   CI (99.9%): [145.427, 152.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1671.309 ±(99.9%) 34.101 MB/sec [Average]
[info]   (min, avg, max) = (1660.088, 1671.309, 1682.886), stdev = 8.856
[info]   CI (99.9%): [1637.208, 1705.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   149.507 ±(99.9%) 9.625 B/op [Average]
[info]   (min, avg, max) = (148.019, 149.507, 153.932), stdev = 2.499
[info]   CI (99.9%): [139.882, 159.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.321 ±(99.9%) 1.288 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.321, 0.854), stdev = 0.335
[info]   CI (99.9%): [≈ 0, 1.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.120 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.029, 0.079), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 9.000), stdev = 1.304
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:24:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 385469.438 ops/s
[info] # Warmup Iteration   2: 2539617.566 ops/s
[info] # Warmup Iteration   3: 2641083.923 ops/s
[info] Iteration   1: 2696672.353 ops/s
[info]                  ·gc.alloc.rate:                   2155.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              1258.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1155.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.151 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2704750.047 ops/s
[info]                  ·gc.alloc.rate:                   2187.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              1272.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1339.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2697525.351 ops/s
[info]                  ·gc.alloc.rate:               2177.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          1269.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1988.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1159.824 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 2714710.247 ops/s
[info]                  ·gc.alloc.rate:                   2191.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              1270.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1161.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2692665.176 ops/s
[info]                  ·gc.alloc.rate:                   2173.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              1270.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1178.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   2701264.635 ±(99.9%) 33456.012 ops/s [Average]
[info]   (min, avg, max) = (2692665.176, 2701264.635, 2714710.247), stdev = 8688.420
[info]   CI (99.9%): [2667808.623, 2734720.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2177.217 ±(99.9%) 53.926 MB/sec [Average]
[info]   (min, avg, max) = (2155.838, 2177.217, 2191.525), stdev = 14.004
[info]   CI (99.9%): [2123.291, 2231.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1268.410 ±(99.9%) 22.297 B/op [Average]
[info]   (min, avg, max) = (1258.248, 1268.410, 1272.854), stdev = 5.790
[info]   CI (99.9%): [1246.113, 1290.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2058.401 ±(99.9%) 528.988 MB/sec [Average]
[info]   (min, avg, max) = (1980.544, 2058.401, 2302.885), stdev = 137.377
[info]   CI (99.9%): [1529.412, 2587.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1199.155 ±(99.9%) 304.649 B/op [Average]
[info]   (min, avg, max) = (1155.939, 1199.155, 1339.825), stdev = 79.116
[info]   CI (99.9%): [894.506, 1503.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 6.301 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.685), stdev = 1.636
[info]   CI (99.9%): [≈ 0, 7.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.442 ±(99.9%) 3.678 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.442, 2.151), stdev = 0.955
[info]   CI (99.9%): [≈ 0, 4.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 11.000), stdev = 1.483
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:24:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55848.211 ops/s
[info] # Warmup Iteration   2: 146356.500 ops/s
[info] # Warmup Iteration   3: 159934.353 ops/s
[info] Iteration   1: 167212.640 ops/s
[info]                  ·gc.alloc.rate:                   3179.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              29917.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2980.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28043.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.155 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 167346.632 ops/s
[info]                  ·gc.alloc.rate:                   3189.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              29992.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3005.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28264.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 167461.031 ops/s
[info]                  ·gc.alloc.rate:                   3192.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              30004.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3030.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28483.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.783 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 167464.834 ops/s
[info]                  ·gc.alloc.rate:                   3194.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              30011.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3048.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28636.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 165125.276 ops/s
[info]                  ·gc.alloc.rate:                   3141.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              29933.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3056.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29123.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   166922.083 ±(99.9%) 3888.112 ops/s [Average]
[info]   (min, avg, max) = (165125.276, 166922.083, 167464.834), stdev = 1009.730
[info]   CI (99.9%): [163033.970, 170810.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3179.650 ±(99.9%) 84.012 MB/sec [Average]
[info]   (min, avg, max) = (3141.939, 3179.650, 3194.520), stdev = 21.818
[info]   CI (99.9%): [3095.638, 3263.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29971.907 ±(99.9%) 166.998 B/op [Average]
[info]   (min, avg, max) = (29917.534, 29971.907, 30011.843), stdev = 43.369
[info]   CI (99.9%): [29804.909, 30138.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3024.427 ±(99.9%) 120.579 MB/sec [Average]
[info]   (min, avg, max) = (2980.707, 3024.427, 3056.989), stdev = 31.314
[info]   CI (99.9%): [2903.848, 3145.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28510.380 ±(99.9%) 1577.314 B/op [Average]
[info]   (min, avg, max) = (28043.866, 28510.380, 29123.936), stdev = 409.623
[info]   CI (99.9%): [26933.067, 30087.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.337 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.229), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.745 ±(99.9%) 3.173 B/op [Average]
[info]   (min, avg, max) = (0.196, 0.745, 2.155), stdev = 0.824
[info]   CI (99.9%): [≈ 0, 3.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   45.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.000, 9.000), stdev = 0.001
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.000, 13.000), stdev = 0.707
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:24:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1834.132 ops/s
[info] # Warmup Iteration   2: 28267.086 ops/s
[info] # Warmup Iteration   3: 34286.368 ops/s
[info] Iteration   1: 35157.420 ops/s
[info]                  ·gc.alloc.rate:                   2509.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              112331.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102653.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.250 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 35328.449 ops/s
[info]                  ·gc.alloc.rate:                   2537.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              113003.494 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2321.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103382.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.565 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 35253.283 ops/s
[info]                  ·gc.alloc.rate:               2551.340 MB/sec
[info]                  ·gc.alloc.rate.norm:          113887.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2680.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119674.112 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 35026.124 ops/s
[info]                  ·gc.alloc.rate:                   2523.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              113356.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2362.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106126.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.935 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 35296.253 ops/s
[info]                  ·gc.alloc.rate:               2542.378 MB/sec
[info]                  ·gc.alloc.rate.norm:          113346.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2370.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 105704.184 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   35212.306 ±(99.9%) 471.179 ops/s [Average]
[info]   (min, avg, max) = (35026.124, 35212.306, 35328.449), stdev = 122.364
[info]   CI (99.9%): [34741.127, 35683.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2532.735 ±(99.9%) 63.389 MB/sec [Average]
[info]   (min, avg, max) = (2509.513, 2532.735, 2551.340), stdev = 16.462
[info]   CI (99.9%): [2469.346, 2596.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   113185.063 ±(99.9%) 2204.205 B/op [Average]
[info]   (min, avg, max) = (112331.202, 113185.063, 113887.247), stdev = 572.425
[info]   CI (99.9%): [110980.858, 115389.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2405.751 ±(99.9%) 604.723 MB/sec [Average]
[info]   (min, avg, max) = (2293.320, 2405.751, 2680.979), stdev = 157.045
[info]   CI (99.9%): [1801.029, 3010.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   107508.318 ±(99.9%) 26799.808 B/op [Average]
[info]   (min, avg, max) = (102653.932, 107508.318, 119674.112), stdev = 6959.825
[info]   CI (99.9%): [80708.510, 134308.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.387 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.229), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.350 ±(99.9%) 17.306 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.350, 10.250), stdev = 4.494
[info]   CI (99.9%): [≈ 0, 20.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.095
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:24:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43836.205 ops/s
[info] # Warmup Iteration   2: 130424.640 ops/s
[info] # Warmup Iteration   3: 140013.022 ops/s
[info] Iteration   1: 142691.382 ops/s
[info]                  ·gc.alloc.rate:                   1237.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              13652.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14434.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 144100.250 ops/s
[info]                  ·gc.alloc.rate:                   1246.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              13618.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10753.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.243 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 143710.190 ops/s
[info]                  ·gc.alloc.rate:                   1256.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              13759.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14298.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.155 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 144374.952 ops/s
[info]                  ·gc.alloc.rate:               1254.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          13665.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14211.555 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 144983.217 ops/s
[info]                  ·gc.alloc.rate:               1259.963 MB/sec
[info]                  ·gc.alloc.rate.norm:          13676.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10647.883 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   143971.998 ±(99.9%) 3284.300 ops/s [Average]
[info]   (min, avg, max) = (142691.382, 143971.998, 144983.217), stdev = 852.922
[info]   CI (99.9%): [140687.698, 147256.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1251.096 ±(99.9%) 34.107 MB/sec [Average]
[info]   (min, avg, max) = (1237.756, 1251.096, 1259.963), stdev = 8.858
[info]   CI (99.9%): [1216.989, 1285.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   13674.408 ±(99.9%) 200.316 B/op [Average]
[info]   (min, avg, max) = (13618.934, 13674.408, 13759.019), stdev = 52.021
[info]   CI (99.9%): [13474.092, 13874.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1176.887 ±(99.9%) 682.445 MB/sec [Average]
[info]   (min, avg, max) = (980.926, 1176.887, 1308.697), stdev = 177.229
[info]   CI (99.9%): [494.443, 1859.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   12869.201 ±(99.9%) 7630.616 B/op [Average]
[info]   (min, avg, max) = (10647.883, 12869.201, 14434.563), stdev = 1981.647
[info]   CI (99.9%): [5238.585, 20499.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 6.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.685), stdev = 1.598
[info]   CI (99.9%): [≈ 0, 7.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9.371 ±(99.9%) 67.206 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.371, 40.243), stdev = 17.453
[info]   CI (99.9%): [≈ 0, 76.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 14.000), stdev = 3.899
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:23:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161005.485 ops/s
[info] # Warmup Iteration   2: 428703.705 ops/s
[info] # Warmup Iteration   3: 437846.944 ops/s
[info] Iteration   1: 437122.320 ops/s
[info]                  ·gc.alloc.rate:                   1757.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              6326.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7152.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.468 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 441437.789 ops/s
[info]                  ·gc.alloc.rate:                   1765.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              6292.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5878.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 431172.528 ops/s
[info]                  ·gc.alloc.rate:                   1734.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              6330.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6032.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 440500.853 ops/s
[info]                  ·gc.alloc.rate:                   1764.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              6302.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5942.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 440519.390 ops/s
[info]                  ·gc.alloc.rate:                   1772.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              6328.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5975.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   438150.576 ±(99.9%) 16301.841 ops/s [Average]
[info]   (min, avg, max) = (431172.528, 438150.576, 441437.789), stdev = 4233.536
[info]   CI (99.9%): [421848.735, 454452.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1758.819 ±(99.9%) 55.932 MB/sec [Average]
[info]   (min, avg, max) = (1734.519, 1758.819, 1772.059), stdev = 14.525
[info]   CI (99.9%): [1702.888, 1814.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   6316.277 ±(99.9%) 67.282 B/op [Average]
[info]   (min, avg, max) = (6292.661, 6316.277, 6330.538), stdev = 17.473
[info]   CI (99.9%): [6248.994, 6383.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1725.126 ±(99.9%) 564.398 MB/sec [Average]
[info]   (min, avg, max) = (1649.201, 1725.126, 1986.787), stdev = 146.572
[info]   CI (99.9%): [1160.728, 2289.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6196.130 ±(99.9%) 2069.289 B/op [Average]
[info]   (min, avg, max) = (5878.610, 6196.130, 7152.260), stdev = 537.388
[info]   CI (99.9%): [4126.841, 8265.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 5.441 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.658, 3.186), stdev = 1.413
[info]   CI (99.9%): [≈ 0, 6.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.368 ±(99.9%) 19.588 B/op [Average]
[info]   (min, avg, max) = (0.074, 2.368, 11.468), stdev = 5.087
[info]   CI (99.9%): [≈ 0, 21.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 14.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:23:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 232122.598 ops/s
[info] # Warmup Iteration   2: 448596.892 ops/s
[info] # Warmup Iteration   3: 468688.798 ops/s
[info] Iteration   1: 474350.452 ops/s
[info]                  ·gc.alloc.rate:                   1354.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              4492.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4400.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 474050.995 ops/s
[info]                  ·gc.alloc.rate:                   1368.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              4543.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4401.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.713 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 473891.405 ops/s
[info]                  ·gc.alloc.rate:                   1367.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              4541.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4380.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.415 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 480646.022 ops/s
[info]                  ·gc.alloc.rate:                   1393.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              4563.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4321.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 480358.413 ops/s
[info]                  ·gc.alloc.rate:                   1393.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              4565.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4339.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   476659.457 ±(99.9%) 13528.406 ops/s [Average]
[info]   (min, avg, max) = (473891.405, 476659.457, 480646.022), stdev = 3513.284
[info]   CI (99.9%): [463131.051, 490187.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1375.620 ±(99.9%) 66.967 MB/sec [Average]
[info]   (min, avg, max) = (1354.400, 1375.620, 1393.774), stdev = 17.391
[info]   CI (99.9%): [1308.653, 1442.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4541.282 ±(99.9%) 114.107 B/op [Average]
[info]   (min, avg, max) = (4492.054, 4541.282, 4565.557), stdev = 29.633
[info]   CI (99.9%): [4427.175, 4655.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1323.189 ±(99.9%) 13.309 MB/sec [Average]
[info]   (min, avg, max) = (1319.316, 1323.189, 1326.839), stdev = 3.456
[info]   CI (99.9%): [1309.880, 1336.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   4368.507 ±(99.9%) 141.034 B/op [Average]
[info]   (min, avg, max) = (4321.124, 4368.507, 4401.274), stdev = 36.626
[info]   CI (99.9%): [4227.472, 4509.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.451 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.695, 3.227), stdev = 1.416
[info]   CI (99.9%): [≈ 0, 6.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.308 ±(99.9%) 18.100 B/op [Average]
[info]   (min, avg, max) = (0.069, 2.308, 10.713), stdev = 4.701
[info]   CI (99.9%): [≈ 0, 20.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 12.000), stdev = 2.608
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:23:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6856.031 ops/s
[info] # Warmup Iteration   2: 65977.916 ops/s
[info] # Warmup Iteration   3: 70844.180 ops/s
[info] Iteration   1: 73876.079 ops/s
[info]                  ·gc.alloc.rate:                   1524.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              32473.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27730.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.443 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 71110.467 ops/s
[info]                  ·gc.alloc.rate:                   1472.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              32597.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29044.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.921 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 74176.678 ops/s
[info]                  ·gc.alloc.rate:                   1540.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              32681.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35103.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.883 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 73496.246 ops/s
[info]                  ·gc.alloc.rate:                   1534.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              32844.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28544.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.446 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 72553.244 ops/s
[info]                  ·gc.alloc.rate:               1529.359 MB/sec
[info]                  ·gc.alloc.rate.norm:          33168.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1676.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36364.334 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   73042.543 ±(99.9%) 4778.222 ops/s [Average]
[info]   (min, avg, max) = (71110.467, 73042.543, 74176.678), stdev = 1240.889
[info]   CI (99.9%): [68264.321, 77820.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1520.204 ±(99.9%) 104.585 MB/sec [Average]
[info]   (min, avg, max) = (1472.807, 1520.204, 1540.475), stdev = 27.160
[info]   CI (99.9%): [1415.619, 1624.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32752.884 ±(99.9%) 1035.239 B/op [Average]
[info]   (min, avg, max) = (32473.063, 32752.884, 33168.842), stdev = 268.848
[info]   CI (99.9%): [31717.645, 33788.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1455.717 ±(99.9%) 739.976 MB/sec [Average]
[info]   (min, avg, max) = (1301.651, 1455.717, 1676.698), stdev = 192.170
[info]   CI (99.9%): [715.741, 2195.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31357.513 ±(99.9%) 15584.685 B/op [Average]
[info]   (min, avg, max) = (27730.044, 31357.513, 36364.334), stdev = 4047.293
[info]   CI (99.9%): [15772.828, 46942.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.539 ±(99.9%) 1.458 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.539, 0.921), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:23:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69763.405 ops/s
[info] # Warmup Iteration   2: 294756.024 ops/s
[info] # Warmup Iteration   3: 299026.939 ops/s
[info] Iteration   1: 312229.586 ops/s
[info]                  ·gc.alloc.rate:                   2316.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              11677.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11623.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.827 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 313902.112 ops/s
[info]                  ·gc.alloc.rate:                   2351.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              11785.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2306.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11557.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.313 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 315119.764 ops/s
[info]                  ·gc.alloc.rate:               2368.824 MB/sec
[info]                  ·gc.alloc.rate.norm:          11830.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2325.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11613.248 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 316443.403 ops/s
[info]                  ·gc.alloc.rate:                   2378.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              11828.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11668.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 316932.247 ops/s
[info]                  ·gc.alloc.rate:               2369.405 MB/sec
[info]                  ·gc.alloc.rate.norm:          11764.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2022.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10043.369 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   314925.422 ±(99.9%) 7377.797 ops/s [Average]
[info]   (min, avg, max) = (312229.586, 314925.422, 316932.247), stdev = 1915.990
[info]   CI (99.9%): [307547.626, 322303.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2356.984 ±(99.9%) 94.708 MB/sec [Average]
[info]   (min, avg, max) = (2316.641, 2356.984, 2378.597), stdev = 24.595
[info]   CI (99.9%): [2262.276, 2451.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11777.142 ±(99.9%) 241.258 B/op [Average]
[info]   (min, avg, max) = (11677.298, 11777.142, 11830.200), stdev = 62.654
[info]   CI (99.9%): [11535.884, 12018.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2261.328 ±(99.9%) 517.398 MB/sec [Average]
[info]   (min, avg, max) = (2022.815, 2261.328, 2346.327), stdev = 134.367
[info]   CI (99.9%): [1743.930, 2778.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11301.317 ±(99.9%) 2712.065 B/op [Average]
[info]   (min, avg, max) = (10043.369, 11301.317, 11668.514), stdev = 704.315
[info]   CI (99.9%): [8589.252, 14013.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.208 ±(99.9%) 1.616 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.208, 0.958), stdev = 0.420
[info]   CI (99.9%): [≈ 0, 1.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.049 ±(99.9%) 8.148 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.049, 4.827), stdev = 2.116
[info]   CI (99.9%): [≈ 0, 9.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 11.000), stdev = 1.517
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:23:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71732.578 ops/s
[info] # Warmup Iteration   2: 477944.205 ops/s
[info] # Warmup Iteration   3: 504314.486 ops/s
[info] Iteration   1: 511141.500 ops/s
[info]                  ·gc.alloc.rate:                   1341.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              4129.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4035.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 514673.988 ops/s
[info]                  ·gc.alloc.rate:                   1357.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              4151.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4010.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.414 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.496 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 515331.665 ops/s
[info]                  ·gc.alloc.rate:               1365.183 MB/sec
[info]                  ·gc.alloc.rate.norm:          4168.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1303.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3980.610 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 517500.197 ops/s
[info]                  ·gc.alloc.rate:               1377.480 MB/sec
[info]                  ·gc.alloc.rate.norm:          4187.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1303.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3963.966 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 517094.867 ops/s
[info]                  ·gc.alloc.rate:               1376.859 MB/sec
[info]                  ·gc.alloc.rate.norm:          4190.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3987.324 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   515148.443 ±(99.9%) 9747.831 ops/s [Average]
[info]   (min, avg, max) = (511141.500, 515148.443, 517500.197), stdev = 2531.481
[info]   CI (99.9%): [505400.612, 524896.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1363.734 ±(99.9%) 57.591 MB/sec [Average]
[info]   (min, avg, max) = (1341.499, 1363.734, 1377.480), stdev = 14.956
[info]   CI (99.9%): [1306.144, 1421.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4165.616 ±(99.9%) 98.020 B/op [Average]
[info]   (min, avg, max) = (4129.766, 4165.616, 4190.191), stdev = 25.455
[info]   CI (99.9%): [4067.596, 4263.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1308.002 ±(99.9%) 15.267 MB/sec [Average]
[info]   (min, avg, max) = (1303.511, 1308.002, 1311.461), stdev = 3.965
[info]   CI (99.9%): [1292.736, 1323.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3995.576 ±(99.9%) 107.578 B/op [Average]
[info]   (min, avg, max) = (3963.966, 3995.576, 4035.793), stdev = 27.938
[info]   CI (99.9%): [3887.998, 4103.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.887 ±(99.9%) 7.592 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.887, 4.414), stdev = 1.972
[info]   CI (99.9%): [≈ 0, 8.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.712 ±(99.9%) 23.214 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.712, 13.496), stdev = 6.029
[info]   CI (99.9%): [≈ 0, 25.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 14.000), stdev = 3.937
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:22:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 705178.215 ops/s
[info] # Warmup Iteration   2: 1263658.461 ops/s
[info] # Warmup Iteration   3: 1303941.173 ops/s
[info] Iteration   1: 1307025.044 ops/s
[info]                  ·gc.alloc.rate:                   2642.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              3180.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2320.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2792.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1308081.157 ops/s
[info]                  ·gc.alloc.rate:                   2658.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              3198.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2666.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3207.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1311760.444 ops/s
[info]                  ·gc.alloc.rate:                   2673.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              3207.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2687.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3224.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1316126.038 ops/s
[info]                  ·gc.alloc.rate:               2663.153 MB/sec
[info]                  ·gc.alloc.rate.norm:          3184.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2365.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2827.980 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 1306815.865 ops/s
[info]                  ·gc.alloc.rate:                   2660.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              3203.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3265.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1309961.710 ±(99.9%) 15317.048 ops/s [Average]
[info]   (min, avg, max) = (1306815.865, 1309961.710, 1316126.038), stdev = 3977.789
[info]   CI (99.9%): [1294644.661, 1325278.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2659.676 ±(99.9%) 43.109 MB/sec [Average]
[info]   (min, avg, max) = (2642.675, 2659.676, 2673.748), stdev = 11.195
[info]   CI (99.9%): [2616.567, 2702.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3194.987 ±(99.9%) 46.070 B/op [Average]
[info]   (min, avg, max) = (3180.642, 3194.987, 3207.607), stdev = 11.964
[info]   CI (99.9%): [3148.917, 3241.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2550.134 ±(99.9%) 734.673 MB/sec [Average]
[info]   (min, avg, max) = (2320.022, 2550.134, 2711.263), stdev = 190.792
[info]   CI (99.9%): [1815.461, 3284.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3063.612 ±(99.9%) 895.901 B/op [Average]
[info]   (min, avg, max) = (2792.307, 3063.612, 3265.242), stdev = 232.663
[info]   CI (99.9%): [2167.711, 3959.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.110 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.075), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:22:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8915.529 ops/s
[info] # Warmup Iteration   2: 91938.908 ops/s
[info] # Warmup Iteration   3: 104068.575 ops/s
[info] Iteration   1: 107735.739 ops/s
[info]                  ·gc.alloc.rate:                   3595.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              52491.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3606.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52656.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 107338.391 ops/s
[info]                  ·gc.alloc.rate:                   3596.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              52726.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3333.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48866.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.610 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 107436.204 ops/s
[info]                  ·gc.alloc.rate:                   3602.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              52758.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3369.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49352.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.525 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 104185.620 ops/s
[info]                  ·gc.alloc.rate:                   3498.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              52833.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3389.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51179.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.943 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 107754.347 ops/s
[info]                  ·gc.alloc.rate:               3614.025 MB/sec
[info]                  ·gc.alloc.rate.norm:          52777.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3398.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49623.146 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   106890.060 ±(99.9%) 5863.683 ops/s [Average]
[info]   (min, avg, max) = (104185.620, 106890.060, 107754.347), stdev = 1522.780
[info]   CI (99.9%): [101026.377, 112753.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3581.457 ±(99.9%) 179.956 MB/sec [Average]
[info]   (min, avg, max) = (3498.884, 3581.457, 3614.025), stdev = 46.734
[info]   CI (99.9%): [3401.501, 3761.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52717.353 ±(99.9%) 507.873 B/op [Average]
[info]   (min, avg, max) = (52491.853, 52717.353, 52833.236), stdev = 131.893
[info]   CI (99.9%): [52209.480, 53225.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3419.455 ±(99.9%) 414.591 MB/sec [Average]
[info]   (min, avg, max) = (3333.413, 3419.455, 3606.847), stdev = 107.668
[info]   CI (99.9%): [3004.864, 3834.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50335.719 ±(99.9%) 6005.568 B/op [Average]
[info]   (min, avg, max) = (48866.607, 50335.719, 52656.177), stdev = 1559.627
[info]   CI (99.9%): [44330.151, 56341.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.676 ±(99.9%) 2.272 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.676, 1.525), stdev = 0.590
[info]   CI (99.9%): [≈ 0, 2.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   51.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.600, 15.000), stdev = 1.140
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:22:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82066.041 ops/s
[info] # Warmup Iteration   2: 321523.482 ops/s
[info] # Warmup Iteration   3: 338494.847 ops/s
[info] Iteration   1: 340100.560 ops/s
[info]                  ·gc.alloc.rate:                   1172.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              5426.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4580.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 342799.910 ops/s
[info]                  ·gc.alloc.rate:                   1179.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              5413.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6071.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.903 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 346373.582 ops/s
[info]                  ·gc.alloc.rate:                   1195.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              5431.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4501.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.405 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 345144.827 ops/s
[info]                  ·gc.alloc.rate:                   1195.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              5452.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5990.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 345471.298 ops/s
[info]                  ·gc.alloc.rate:               1211.741 MB/sec
[info]                  ·gc.alloc.rate.norm:          5517.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5993.666 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   343978.035 ±(99.9%) 9770.450 ops/s [Average]
[info]   (min, avg, max) = (340100.560, 343978.035, 346373.582), stdev = 2537.355
[info]   CI (99.9%): [334207.586, 353748.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1190.985 ±(99.9%) 59.142 MB/sec [Average]
[info]   (min, avg, max) = (1172.833, 1190.985, 1211.741), stdev = 15.359
[info]   CI (99.9%): [1131.843, 1250.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5448.167 ±(99.9%) 159.677 B/op [Average]
[info]   (min, avg, max) = (5413.063, 5448.167, 5517.858), stdev = 41.468
[info]   CI (99.9%): [5288.490, 5607.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1186.678 ±(99.9%) 689.958 MB/sec [Average]
[info]   (min, avg, max) = (990.124, 1186.678, 1322.518), stdev = 179.180
[info]   CI (99.9%): [496.721, 1876.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5427.526 ±(99.9%) 3120.588 B/op [Average]
[info]   (min, avg, max) = (4501.041, 5427.526, 6071.299), stdev = 810.407
[info]   CI (99.9%): [2306.938, 8548.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.725 ±(99.9%) 4.653 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.725, 2.811), stdev = 1.208
[info]   CI (99.9%): [≈ 0, 5.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.319 ±(99.9%) 21.358 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.319, 12.903), stdev = 5.547
[info]   CI (99.9%): [≈ 0, 24.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 2.793
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:22:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 204992.226 ops/s
[info] # Warmup Iteration   2: 765733.056 ops/s
[info] # Warmup Iteration   3: 821927.290 ops/s
[info] Iteration   1: 810370.608 ops/s
[info]                  ·gc.alloc.rate:                   602.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              1170.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1263.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 827927.918 ops/s
[info]                  ·gc.alloc.rate:                   619.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              1177.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1239.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 835982.874 ops/s
[info]                  ·gc.alloc.rate:               623.269 MB/sec
[info]                  ·gc.alloc.rate.norm:          1173.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1230.395 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 831840.561 ops/s
[info]                  ·gc.alloc.rate:                   615.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              1165.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1238.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 836039.308 ops/s
[info]                  ·gc.alloc.rate:               617.483 MB/sec
[info]                  ·gc.alloc.rate.norm:          1162.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1235.234 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   828432.254 ±(99.9%) 40976.944 ops/s [Average]
[info]   (min, avg, max) = (810370.608, 828432.254, 836039.308), stdev = 10641.582
[info]   CI (99.9%): [787455.309, 869409.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   615.726 ±(99.9%) 30.348 MB/sec [Average]
[info]   (min, avg, max) = (602.522, 615.726, 623.269), stdev = 7.881
[info]   CI (99.9%): [585.377, 646.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1169.659 ±(99.9%) 23.318 B/op [Average]
[info]   (min, avg, max) = (1162.347, 1169.659, 1177.434), stdev = 6.056
[info]   CI (99.9%): [1146.341, 1192.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   653.574 ±(99.9%) 8.031 MB/sec [Average]
[info]   (min, avg, max) = (650.890, 653.574, 656.203), stdev = 2.086
[info]   CI (99.9%): [645.544, 661.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1241.675 ±(99.9%) 50.131 B/op [Average]
[info]   (min, avg, max) = (1230.395, 1241.675, 1263.998), stdev = 13.019
[info]   CI (99.9%): [1191.544, 1291.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.127 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.079), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:21:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 846878.693 ops/s
[info] # Warmup Iteration   2: 2011886.556 ops/s
[info] # Warmup Iteration   3: 2070585.039 ops/s
[info] Iteration   1: 2052869.679 ops/s
[info]                  ·gc.alloc.rate:                   982.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     759.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2081123.419 ops/s
[info]                  ·gc.alloc.rate:                   989.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     751.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2100824.756 ops/s
[info]                  ·gc.alloc.rate:                   999.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     745.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2125927.052 ops/s
[info]                  ·gc.alloc.rate:                   1015.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     733.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2091431.578 ops/s
[info]                  ·gc.alloc.rate:                   993.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     744.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2090435.297 ±(99.9%) 103080.897 ops/s [Average]
[info]   (min, avg, max) = (2052869.679, 2090435.297, 2125927.052), stdev = 26769.782
[info]   CI (99.9%): [1987354.399, 2193516.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   996.057 ±(99.9%) 48.499 MB/sec [Average]
[info]   (min, avg, max) = (982.834, 996.057, 1015.934), stdev = 12.595
[info]   CI (99.9%): [947.558, 1044.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   749.701 ±(99.9%) 10.492 B/op [Average]
[info]   (min, avg, max) = (747.557, 749.701, 753.423), stdev = 2.725
[info]   CI (99.9%): [739.209, 760.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   992.139 ±(99.9%) 9.631 MB/sec [Average]
[info]   (min, avg, max) = (989.281, 992.139, 995.415), stdev = 2.501
[info]   CI (99.9%): [982.508, 1001.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   746.844 ±(99.9%) 37.392 B/op [Average]
[info]   (min, avg, max) = (733.319, 746.844, 759.704), stdev = 9.711
[info]   CI (99.9%): [709.452, 784.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.646 ±(99.9%) 4.893 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.646, 2.916), stdev = 1.271
[info]   CI (99.9%): [≈ 0, 5.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.483 ±(99.9%) 3.664 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.483, 2.183), stdev = 0.952
[info]   CI (99.9%): [≈ 0, 4.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.302
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:21:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1030090.941 ops/s
[info] # Warmup Iteration   2: 2203549.380 ops/s
[info] # Warmup Iteration   3: 2312313.597 ops/s
[info] Iteration   1: 2319653.575 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2193361.955 ops/s
[info]                  ·gc.alloc.rate:      1.738 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.247 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2319292.429 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2334076.355 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2355988.194 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2304474.502 ±(99.9%) 246003.893 ops/s [Average]
[info]   (min, avg, max) = (2193361.955, 2304474.502, 2355988.194), stdev = 63886.430
[info]   CI (99.9%): [2058470.609, 2550478.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.348 ±(99.9%) 2.993 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.348, 1.738), stdev = 0.777
[info]   CI (99.9%): [≈ 0, 3.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.250 ±(99.9%) 2.147 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.250, 1.247), stdev = 0.558
[info]   CI (99.9%): [≈ 0, 2.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:21:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 129509.962 ops/s
[info] # Warmup Iteration   2: 431808.807 ops/s
[info] # Warmup Iteration   3: 460518.661 ops/s
[info] Iteration   1: 471543.037 ops/s
[info]                  ·gc.alloc.rate:                   699.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              2334.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2193.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 464423.154 ops/s
[info]                  ·gc.alloc.rate:               695.485 MB/sec
[info]                  ·gc.alloc.rate.norm:          2356.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2229.399 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 472686.137 ops/s
[info]                  ·gc.alloc.rate:                   701.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              2334.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2193.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 463414.518 ops/s
[info]                  ·gc.alloc.rate:                   697.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              2368.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2239.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 471832.967 ops/s
[info]                  ·gc.alloc.rate:                   700.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              2337.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2200.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.485 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   468779.962 ±(99.9%) 17218.815 ops/s [Average]
[info]   (min, avg, max) = (463414.518, 468779.962, 472686.137), stdev = 4471.671
[info]   CI (99.9%): [451561.148, 485998.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   698.907 ±(99.9%) 9.490 MB/sec [Average]
[info]   (min, avg, max) = (695.485, 698.907, 701.203), stdev = 2.464
[info]   CI (99.9%): [689.417, 708.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2346.355 ±(99.9%) 58.867 B/op [Average]
[info]   (min, avg, max) = (2334.348, 2346.355, 2368.031), stdev = 15.288
[info]   CI (99.9%): [2287.488, 2405.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   658.696 ±(99.9%) 4.148 MB/sec [Average]
[info]   (min, avg, max) = (657.367, 658.696, 659.914), stdev = 1.077
[info]   CI (99.9%): [654.548, 662.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2211.417 ±(99.9%) 83.489 B/op [Average]
[info]   (min, avg, max) = (2193.376, 2211.417, 2239.778), stdev = 21.682
[info]   CI (99.9%): [2127.929, 2294.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.650 ±(99.9%) 5.369 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.650, 3.144), stdev = 1.394
[info]   CI (99.9%): [≈ 0, 6.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.167 ±(99.9%) 17.907 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.167, 10.485), stdev = 4.650
[info]   CI (99.9%): [≈ 0, 20.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:21:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9992.745 ops/s
[info] # Warmup Iteration   2: 51254.866 ops/s
[info] # Warmup Iteration   3: 54354.731 ops/s
[info] Iteration   1: 57952.254 ops/s
[info]                  ·gc.alloc.rate:                   2017.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              54794.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53838.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.705 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100.630 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 57257.687 ops/s
[info]                  ·gc.alloc.rate:                   1990.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              54719.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45172.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.144 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 58525.081 ops/s
[info]                  ·gc.alloc.rate:                   2032.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              54644.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53226.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.239 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 58839.734 ops/s
[info]                  ·gc.alloc.rate:                   2032.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              54369.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1994.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53348.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.557 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 58656.781 ops/s
[info]                  ·gc.alloc.rate:               2042.555 MB/sec
[info]                  ·gc.alloc.rate.norm:          54785.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2010.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53927.583 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   58246.307 ±(99.9%) 2482.245 ops/s [Average]
[info]   (min, avg, max) = (57257.687, 58246.307, 58839.734), stdev = 644.631
[info]   CI (99.9%): [55764.062, 60728.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2023.198 ±(99.9%) 77.748 MB/sec [Average]
[info]   (min, avg, max) = (1990.766, 2023.198, 2042.555), stdev = 20.191
[info]   CI (99.9%): [1945.450, 2100.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   54662.576 ±(99.9%) 672.748 B/op [Average]
[info]   (min, avg, max) = (54369.220, 54662.576, 54794.484), stdev = 174.710
[info]   CI (99.9%): [53989.828, 55335.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1922.106 ±(99.9%) 601.714 MB/sec [Average]
[info]   (min, avg, max) = (1643.441, 1922.106, 2010.567), stdev = 156.263
[info]   CI (99.9%): [1320.392, 2523.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   51902.442 ±(99.9%) 14533.926 B/op [Average]
[info]   (min, avg, max) = (45172.301, 51902.442, 53927.583), stdev = 3774.414
[info]   CI (99.9%): [37368.515, 66436.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.770 ±(99.9%) 6.319 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.770, 3.705), stdev = 1.641
[info]   CI (99.9%): [≈ 0, 7.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   20.914 ±(99.9%) 171.624 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.914, 100.630), stdev = 44.570
[info]   CI (99.9%): [≈ 0, 192.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 14.000), stdev = 3.033
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:21:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17357.598 ops/s
[info] # Warmup Iteration   2: 83075.193 ops/s
[info] # Warmup Iteration   3: 89054.053 ops/s
[info] Iteration   1: 90549.418 ops/s
[info]                  ·gc.alloc.rate:                   1662.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              28887.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28530.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 92382.846 ops/s
[info]                  ·gc.alloc.rate:                   1698.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              28923.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27783.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.704 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 93690.815 ops/s
[info]                  ·gc.alloc.rate:                   1726.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              29007.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27349.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.749 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 94607.220 ops/s
[info]                  ·gc.alloc.rate:                   1769.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              29444.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32736.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.346 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 94881.609 ops/s
[info]                  ·gc.alloc.rate:                   1762.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              29239.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27460.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.345 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   93222.382 ±(99.9%) 6872.024 ops/s [Average]
[info]   (min, avg, max) = (90549.418, 93222.382, 94881.609), stdev = 1784.643
[info]   CI (99.9%): [86350.358, 100094.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1724.099 ±(99.9%) 173.120 MB/sec [Average]
[info]   (min, avg, max) = (1662.231, 1724.099, 1769.905), stdev = 44.959
[info]   CI (99.9%): [1550.979, 1897.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   29100.463 ±(99.9%) 910.259 B/op [Average]
[info]   (min, avg, max) = (28887.066, 29100.463, 29444.832), stdev = 236.391
[info]   CI (99.9%): [28190.204, 30010.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1704.992 ±(99.9%) 567.116 MB/sec [Average]
[info]   (min, avg, max) = (1628.223, 1704.992, 1967.763), stdev = 147.278
[info]   CI (99.9%): [1137.876, 2272.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   28772.207 ±(99.9%) 8716.201 B/op [Average]
[info]   (min, avg, max) = (27349.972, 28772.207, 32736.485), stdev = 2263.570
[info]   CI (99.9%): [20056.006, 37488.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.950 ±(99.9%) 6.472 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.950, 3.914), stdev = 1.681
[info]   CI (99.9%): [≈ 0, 7.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.434 ±(99.9%) 112.554 B/op [Average]
[info]   (min, avg, max) = (0.345, 16.434, 68.027), stdev = 29.230
[info]   CI (99.9%): [≈ 0, 128.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 19.000), stdev = 5.263
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:20:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56798.083 ops/s
[info] # Warmup Iteration   2: 160167.216 ops/s
[info] # Warmup Iteration   3: 161496.180 ops/s
[info] Iteration   1: 161002.266 ops/s
[info]                  ·gc.alloc.rate:                   2567.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              25096.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2309.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22576.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.221 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 160489.686 ops/s
[info]                  ·gc.alloc.rate:                   2529.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              24807.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2657.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26059.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.612 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 164245.486 ops/s
[info]                  ·gc.alloc.rate:                   2603.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              24944.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22482.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.798 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 165800.416 ops/s
[info]                  ·gc.alloc.rate:                   2648.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              25139.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2696.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25597.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.569 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 165079.841 ops/s
[info]                  ·gc.alloc.rate:               2624.191 MB/sec
[info]                  ·gc.alloc.rate.norm:          25018.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2366.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22565.250 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   163323.539 ±(99.9%) 9331.068 ops/s [Average]
[info]   (min, avg, max) = (160489.686, 163323.539, 165800.416), stdev = 2423.249
[info]   CI (99.9%): [153992.471, 172654.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2594.620 ±(99.9%) 180.167 MB/sec [Average]
[info]   (min, avg, max) = (2529.970, 2594.620, 2648.312), stdev = 46.789
[info]   CI (99.9%): [2414.453, 2774.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   25001.216 ±(99.9%) 506.492 B/op [Average]
[info]   (min, avg, max) = (24807.202, 25001.216, 25139.187), stdev = 131.534
[info]   CI (99.9%): [24494.724, 25507.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2475.397 ±(99.9%) 715.438 MB/sec [Average]
[info]   (min, avg, max) = (2309.575, 2475.397, 2696.565), stdev = 185.797
[info]   CI (99.9%): [1759.959, 3190.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   23856.187 ±(99.9%) 6962.237 B/op [Average]
[info]   (min, avg, max) = (22482.344, 23856.187, 26059.409), stdev = 1808.071
[info]   CI (99.9%): [16893.950, 30818.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.108 ±(99.9%) 0.390 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.108, 0.271), stdev = 0.101
[info]   CI (99.9%): [≈ 0, 0.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.040 ±(99.9%) 3.700 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.040, 2.569), stdev = 0.961
[info]   CI (99.9%): [≈ 0, 4.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.304
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:20:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2786.903 ops/s
[info] # Warmup Iteration   2: 27848.562 ops/s
[info] # Warmup Iteration   3: 33613.010 ops/s
[info] Iteration   1: 33360.632 ops/s
[info]                  ·gc.alloc.rate:                   2229.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              105168.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2287.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107902.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.319 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 33230.783 ops/s
[info]                  ·gc.alloc.rate:                   2227.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              105457.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93793.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.986 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 33619.725 ops/s
[info]                  ·gc.alloc.rate:               2273.367 MB/sec
[info]                  ·gc.alloc.rate.norm:          106401.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2332.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109188.987 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 33712.678 ops/s
[info]                  ·gc.alloc.rate:                   2265.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              105753.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94044.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.972 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 33691.935 ops/s
[info]                  ·gc.alloc.rate:                   2278.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              106439.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2363.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110374.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.972 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   33523.151 ±(99.9%) 829.514 ops/s [Average]
[info]   (min, avg, max) = (33230.783, 33523.151, 33712.678), stdev = 215.422
[info]   CI (99.9%): [32693.637, 34352.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2255.116 ±(99.9%) 94.463 MB/sec [Average]
[info]   (min, avg, max) = (2227.717, 2255.116, 2278.997), stdev = 24.532
[info]   CI (99.9%): [2160.653, 2349.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   105844.228 ±(99.9%) 2177.835 B/op [Average]
[info]   (min, avg, max) = (105168.297, 105844.228, 106439.467), stdev = 565.577
[info]   CI (99.9%): [103666.393, 108022.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2196.021 ±(99.9%) 704.921 MB/sec [Average]
[info]   (min, avg, max) = (1981.316, 2196.021, 2363.257), stdev = 183.066
[info]   CI (99.9%): [1491.100, 2900.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   103060.903 ±(99.9%) 32312.854 B/op [Average]
[info]   (min, avg, max) = (93793.557, 103060.903, 110374.783), stdev = 8391.546
[info]   CI (99.9%): [70748.049, 135373.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.171 ±(99.9%) 1.336 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.171, 0.791), stdev = 0.347
[info]   CI (99.9%): [≈ 0, 1.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.050 ±(99.9%) 63.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.050, 37.319), stdev = 16.367
[info]   CI (99.9%): [≈ 0, 71.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 11.000), stdev = 0.894
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:20:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34322.515 ops/s
[info] # Warmup Iteration   2: 149470.024 ops/s
[info] # Warmup Iteration   3: 156309.464 ops/s
[info] Iteration   1: 156411.300 ops/s
[info]                  ·gc.alloc.rate:               1049.494 MB/sec
[info]                  ·gc.alloc.rate.norm:          10555.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9773.464 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 157188.171 ops/s
[info]                  ·gc.alloc.rate:                   1046.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              10476.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9738.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 158681.484 ops/s
[info]                  ·gc.alloc.rate:               1074.623 MB/sec
[info]                  ·gc.alloc.rate.norm:          10658.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1303.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12923.929 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 157356.716 ops/s
[info]                  ·gc.alloc.rate:               1064.204 MB/sec
[info]                  ·gc.alloc.rate.norm:          10642.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9837.667 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 161041.697 ops/s
[info]                  ·gc.alloc.rate:                   1081.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              10573.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9664.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   158135.874 ±(99.9%) 7000.573 ops/s [Average]
[info]   (min, avg, max) = (156411.300, 158135.874, 161041.697), stdev = 1818.026
[info]   CI (99.9%): [151135.301, 165136.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1063.406 ±(99.9%) 59.056 MB/sec [Average]
[info]   (min, avg, max) = (1046.762, 1063.406, 1081.949), stdev = 15.337
[info]   CI (99.9%): [1004.351, 1122.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10581.318 ±(99.9%) 281.766 B/op [Average]
[info]   (min, avg, max) = (10476.186, 10581.318, 10658.321), stdev = 73.174
[info]   CI (99.9%): [10299.551, 10863.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1044.092 ±(99.9%) 558.129 MB/sec [Average]
[info]   (min, avg, max) = (971.694, 1044.092, 1303.053), stdev = 144.944
[info]   CI (99.9%): [485.963, 1602.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10387.632 ±(99.9%) 5464.858 B/op [Average]
[info]   (min, avg, max) = (9664.790, 10387.632, 12923.929), stdev = 1419.206
[info]   CI (99.9%): [4922.774, 15852.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.082 ±(99.9%) 0.434 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.082, 0.208), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:20:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 209353.980 ops/s
[info] # Warmup Iteration   2: 443756.326 ops/s
[info] # Warmup Iteration   3: 445785.534 ops/s
[info] Iteration   1: 442644.927 ops/s
[info]                  ·gc.alloc.rate:               494.952 MB/sec
[info]                  ·gc.alloc.rate.norm:          1759.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1171.256 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 404937.736 ops/s
[info]                  ·gc.alloc.rate:                   467.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              1815.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2563.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 452672.507 ops/s
[info]                  ·gc.alloc.rate:               511.154 MB/sec
[info]                  ·gc.alloc.rate.norm:          1776.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1147.588 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 457372.460 ops/s
[info]                  ·gc.alloc.rate:                   528.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              1818.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2273.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 446598.562 ops/s
[info]                  ·gc.alloc.rate:               501.348 MB/sec
[info]                  ·gc.alloc.rate.norm:          1766.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1165.544 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   440845.239 ±(99.9%) 80282.040 ops/s [Average]
[info]   (min, avg, max) = (404937.736, 440845.239, 457372.460), stdev = 20848.991
[info]   CI (99.9%): [360563.199, 521127.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   500.701 ±(99.9%) 86.827 MB/sec [Average]
[info]   (min, avg, max) = (467.392, 500.701, 528.658), stdev = 22.549
[info]   CI (99.9%): [413.874, 587.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1787.466 ±(99.9%) 107.037 B/op [Average]
[info]   (min, avg, max) = (1759.855, 1787.466, 1818.506), stdev = 27.797
[info]   CI (99.9%): [1680.429, 1894.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.237 ±(99.9%) 696.606 MB/sec [Average]
[info]   (min, avg, max) = (329.411, 462.237, 661.051), stdev = 180.906
[info]   CI (99.9%): [≈ 0, 1158.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1664.290 ±(99.9%) 2680.558 B/op [Average]
[info]   (min, avg, max) = (1147.588, 1664.290, 2563.148), stdev = 696.133
[info]   CI (99.9%): [≈ 0, 4344.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.081), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.789
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:20:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 268755.644 ops/s
[info] # Warmup Iteration   2: 505809.755 ops/s
[info] # Warmup Iteration   3: 505732.393 ops/s
[info] Iteration   1: 512696.946 ops/s
[info]                  ·gc.alloc.rate:      5.212 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 512674.620 ops/s
[info]                  ·gc.alloc.rate:      5.212 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 509539.666 ops/s
[info]                  ·gc.alloc.rate:      5.183 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 512490.038 ops/s
[info]                  ·gc.alloc.rate:      5.211 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 512627.441 ops/s
[info]                  ·gc.alloc.rate:      5.213 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   512005.742 ±(99.9%) 5317.425 ops/s [Average]
[info]   (min, avg, max) = (509539.666, 512005.742, 512696.946), stdev = 1380.919
[info]   CI (99.9%): [506688.317, 517323.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   5.206 ±(99.9%) 0.051 MB/sec [Average]
[info]   (min, avg, max) = (5.183, 5.206, 5.213), stdev = 0.013
[info]   CI (99.9%): [5.155, 5.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:19:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10501.397 ops/s
[info] # Warmup Iteration   2: 58690.778 ops/s
[info] # Warmup Iteration   3: 73244.809 ops/s
[info] Iteration   1: 74339.351 ops/s
[info]                  ·gc.alloc.rate:                   1327.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              28094.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27572.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.441 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 73098.861 ops/s
[info]                  ·gc.alloc.rate:                   1296.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              27905.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21162.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 74183.233 ops/s
[info]                  ·gc.alloc.rate:                   1334.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              28307.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27996.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.483 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 74628.372 ops/s
[info]                  ·gc.alloc.rate:               1334.728 MB/sec
[info]                  ·gc.alloc.rate.norm:          28144.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1327.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27985.254 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 74343.713 ops/s
[info]                  ·gc.alloc.rate:               1343.968 MB/sec
[info]                  ·gc.alloc.rate.norm:          28451.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1334.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28247.653 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   74118.706 ±(99.9%) 2280.770 ops/s [Average]
[info]   (min, avg, max) = (73098.861, 74118.706, 74628.372), stdev = 592.309
[info]   CI (99.9%): [71837.936, 76399.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1327.271 ±(99.9%) 70.519 MB/sec [Average]
[info]   (min, avg, max) = (1296.325, 1327.271, 1343.968), stdev = 18.314
[info]   CI (99.9%): [1256.752, 1397.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   28180.902 ±(99.9%) 802.744 B/op [Average]
[info]   (min, avg, max) = (27905.855, 28180.902, 28451.781), stdev = 208.470
[info]   CI (99.9%): [27378.158, 28983.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1253.314 ±(99.9%) 583.538 MB/sec [Average]
[info]   (min, avg, max) = (983.062, 1253.314, 1334.326), stdev = 151.543
[info]   CI (99.9%): [669.776, 1836.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   26592.855 ±(99.9%) 11726.898 B/op [Average]
[info]   (min, avg, max) = (21162.274, 26592.855, 28247.653), stdev = 3045.438
[info]   CI (99.9%): [14865.957, 38319.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.117 ±(99.9%) 0.915 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.541), stdev = 0.238
[info]   CI (99.9%): [≈ 0, 1.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.474 ±(99.9%) 19.410 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.474, 11.483), stdev = 5.041
[info]   CI (99.9%): [≈ 0, 21.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:19:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 230400.441 ops/s
[info] # Warmup Iteration   2: 2528685.114 ops/s
[info] # Warmup Iteration   3: 2870884.203 ops/s
[info] Iteration   1: 2870219.647 ops/s
[info]                  ·gc.alloc.rate:                   3710.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              2033.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3628.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1989.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 2857650.470 ops/s
[info]                  ·gc.alloc.rate:                   3690.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              2032.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3678.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2025.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 2909749.099 ops/s
[info]                  ·gc.alloc.rate:                   3744.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              2024.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3376.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1825.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 2870739.224 ops/s
[info]                  ·gc.alloc.rate:                   3708.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              2032.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3731.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2045.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 2915657.219 ops/s
[info]                  ·gc.alloc.rate:                   3751.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              2025.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3398.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1834.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   2884803.132 ±(99.9%) 100449.687 ops/s [Average]
[info]   (min, avg, max) = (2857650.470, 2884803.132, 2915657.219), stdev = 26086.465
[info]   CI (99.9%): [2784353.445, 2985252.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   3720.986 ±(99.9%) 100.146 MB/sec [Average]
[info]   (min, avg, max) = (3690.367, 3720.986, 3751.633), stdev = 26.008
[info]   CI (99.9%): [3620.841, 3821.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2029.735 ±(99.9%) 16.873 B/op [Average]
[info]   (min, avg, max) = (2024.875, 2029.735, 2033.762), stdev = 4.382
[info]   CI (99.9%): [2012.862, 2046.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3562.945 ±(99.9%) 632.442 MB/sec [Average]
[info]   (min, avg, max) = (3376.657, 3562.945, 3731.825), stdev = 164.243
[info]   CI (99.9%): [2930.503, 4195.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1944.233 ±(99.9%) 408.235 B/op [Average]
[info]   (min, avg, max) = (1825.983, 1944.233, 2045.885), stdev = 106.017
[info]   CI (99.9%): [1535.998, 2352.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.042), stdev = 0.009
[info]   CI (99.9%): [0.002, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.020, 0.023), stdev = 0.005
[info]   CI (99.9%): [0.001, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   53.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 11.000), stdev = 0.548
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 14.000, 16.000), stdev = 1.581
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:19:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.677 ops/s
[info] # Warmup Iteration   2: 726565.492 ops/s
[info] # Warmup Iteration   3: 849962.292 ops/s
[info] Iteration   1: 872328.355 ops/s
[info]                  ·gc.alloc.rate:                   507.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              914.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     586.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 863600.659 ops/s
[info]                  ·gc.alloc.rate:                   506.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              923.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1187.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 847906.618 ops/s
[info]                  ·gc.alloc.rate:               496.949 MB/sec
[info]                  ·gc.alloc.rate.norm:          922.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 605.243 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 849963.419 ops/s
[info]                  ·gc.alloc.rate:                   509.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              943.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1208.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 853836.833 ops/s
[info]                  ·gc.alloc.rate:                   494.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     602.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   857527.177 ±(99.9%) 39426.640 ops/s [Average]
[info]   (min, avg, max) = (847906.618, 857527.177, 872328.355), stdev = 10238.973
[info]   CI (99.9%): [818100.537, 896953.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   502.992 ±(99.9%) 25.428 MB/sec [Average]
[info]   (min, avg, max) = (494.860, 502.992, 509.493), stdev = 6.604
[info]   CI (99.9%): [477.564, 528.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   923.093 ±(99.9%) 46.961 B/op [Average]
[info]   (min, avg, max) = (912.155, 923.093, 943.186), stdev = 12.196
[info]   CI (99.9%): [876.132, 970.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   456.523 ±(99.9%) 688.203 MB/sec [Average]
[info]   (min, avg, max) = (325.129, 456.523, 653.003), stdev = 178.724
[info]   CI (99.9%): [≈ 0, 1144.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   838.055 ±(99.9%) 1266.248 B/op [Average]
[info]   (min, avg, max) = (586.511, 838.055, 1208.854), stdev = 328.841
[info]   CI (99.9%): [≈ 0, 2104.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.027 ±(99.9%) 0.092 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.065), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.167 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.119), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:19:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16991.212 ops/s
[info] # Warmup Iteration   2: 209298.052 ops/s
[info] # Warmup Iteration   3: 315727.249 ops/s
[info] Iteration   1: 326880.380 ops/s
[info]                  ·gc.alloc.rate:                   774.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              3729.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3151.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 324476.785 ops/s
[info]                  ·gc.alloc.rate:                   769.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              3733.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4767.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 326598.696 ops/s
[info]                  ·gc.alloc.rate:                   778.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              3752.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3161.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 322854.328 ops/s
[info]                  ·gc.alloc.rate:               765.262 MB/sec
[info]                  ·gc.alloc.rate.norm:          3729.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3201.898 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 317227.996 ops/s
[info]                  ·gc.alloc.rate:                   757.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              3755.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3262.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.295 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   323607.637 ±(99.9%) 15120.826 ops/s [Average]
[info]   (min, avg, max) = (317227.996, 323607.637, 326880.380), stdev = 3926.831
[info]   CI (99.9%): [308486.810, 338728.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   769.100 ±(99.9%) 32.274 MB/sec [Average]
[info]   (min, avg, max) = (757.100, 769.100, 778.714), stdev = 8.381
[info]   CI (99.9%): [736.826, 801.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3740.216 ±(99.9%) 49.629 B/op [Average]
[info]   (min, avg, max) = (3729.021, 3740.216, 3755.705), stdev = 12.888
[info]   CI (99.9%): [3690.587, 3789.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   721.639 ±(99.9%) 562.663 MB/sec [Average]
[info]   (min, avg, max) = (654.500, 721.639, 983.021), stdev = 146.122
[info]   CI (99.9%): [158.976, 1284.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3508.909 ±(99.9%) 2714.277 B/op [Average]
[info]   (min, avg, max) = (3151.251, 3508.909, 4767.459), stdev = 704.889
[info]   CI (99.9%): [794.632, 6223.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 7.014 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 4.091), stdev = 1.821
[info]   CI (99.9%): [≈ 0, 7.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.129 ±(99.9%) 34.798 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.129, 20.295), stdev = 9.037
[info]   CI (99.9%): [≈ 0, 38.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 1.949
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:18:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 340874.105 ops/s
[info] # Warmup Iteration   2: 605731.450 ops/s
[info] # Warmup Iteration   3: 719630.446 ops/s
[info] Iteration   1: 720706.752 ops/s
[info]                  ·gc.alloc.rate:               662.584 MB/sec
[info]                  ·gc.alloc.rate.norm:          1446.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1444.500 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 721035.898 ops/s
[info]                  ·gc.alloc.rate:                   652.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1446.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 735737.117 ops/s
[info]                  ·gc.alloc.rate:               678.404 MB/sec
[info]                  ·gc.alloc.rate.norm:          1451.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1420.717 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 733000.757 ops/s
[info]                  ·gc.alloc.rate:                   671.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              1440.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1427.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 715796.829 ops/s
[info]                  ·gc.alloc.rate:                   653.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              1436.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1464.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   725255.471 ±(99.9%) 33225.943 ops/s [Average]
[info]   (min, avg, max) = (715796.829, 725255.471, 735737.117), stdev = 8628.672
[info]   CI (99.9%): [692029.527, 758481.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   663.577 ±(99.9%) 43.273 MB/sec [Average]
[info]   (min, avg, max) = (652.640, 663.577, 678.404), stdev = 11.238
[info]   CI (99.9%): [620.304, 706.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1439.912 ±(99.9%) 39.821 B/op [Average]
[info]   (min, avg, max) = (1424.499, 1439.912, 1451.124), stdev = 10.341
[info]   CI (99.9%): [1400.091, 1479.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   663.915 ±(99.9%) 7.012 MB/sec [Average]
[info]   (min, avg, max) = (661.477, 663.915, 666.207), stdev = 1.821
[info]   CI (99.9%): [656.903, 670.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1440.860 ±(99.9%) 66.821 B/op [Average]
[info]   (min, avg, max) = (1420.717, 1440.860, 1464.778), stdev = 17.353
[info]   CI (99.9%): [1374.039, 1507.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.036, 0.091), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:18:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 890236.984 ops/s
[info] # Warmup Iteration   2: 2203055.649 ops/s
[info] # Warmup Iteration   3: 3008950.263 ops/s
[info] Iteration   1: 3007750.160 ops/s
[info]                  ·gc.alloc.rate:                   1805.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1666.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     872.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.166 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3060287.950 ops/s
[info]                  ·gc.alloc.rate:                   1841.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     853.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3023687.779 ops/s
[info]                  ·gc.alloc.rate:               1846.456 MB/sec
[info]                  ·gc.alloc.rate.norm:          961.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1993.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1037.474 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 3001926.574 ops/s
[info]                  ·gc.alloc.rate:               1821.396 MB/sec
[info]                  ·gc.alloc.rate.norm:          954.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1668.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 874.525 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 2882896.474 ops/s
[info]                  ·gc.alloc.rate:                   1752.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              956.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     915.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   2995309.787 ±(99.9%) 257322.503 ops/s [Average]
[info]   (min, avg, max) = (2882896.474, 2995309.787, 3060287.950), stdev = 66825.837
[info]   CI (99.9%): [2737987.285, 3252632.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   1813.586 ±(99.9%) 145.417 MB/sec [Average]
[info]   (min, avg, max) = (1752.740, 1813.586, 1846.456), stdev = 37.764
[info]   CI (99.9%): [1668.169, 1959.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   952.777 ±(99.9%) 26.252 B/op [Average]
[info]   (min, avg, max) = (944.751, 952.777, 961.102), stdev = 6.818
[info]   CI (99.9%): [926.524, 979.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1733.222 ±(99.9%) 560.044 MB/sec [Average]
[info]   (min, avg, max) = (1660.623, 1733.222, 1993.182), stdev = 145.442
[info]   CI (99.9%): [1173.178, 2293.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   910.610 ±(99.9%) 286.448 B/op [Average]
[info]   (min, avg, max) = (853.725, 910.610, 1037.474), stdev = 74.390
[info]   CI (99.9%): [624.163, 1197.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.525 ±(99.9%) 3.698 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.525, 2.227), stdev = 0.960
[info]   CI (99.9%): [≈ 0, 4.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.274 ±(99.9%) 1.935 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.274, 1.166), stdev = 0.503
[info]   CI (99.9%): [≈ 0, 2.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 11.000), stdev = 1.924
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:18:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1460285.359 ops/s
[info] # Warmup Iteration   2: 4451145.290 ops/s
[info] # Warmup Iteration   3: 7514294.649 ops/s
[info] Iteration   1: 7367461.219 ops/s
[info]                  ·gc.alloc.rate:               816.508 MB/sec
[info]                  ·gc.alloc.rate.norm:          174.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.114 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 7525442.718 ops/s
[info]                  ·gc.alloc.rate:                   824.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              172.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 7400724.563 ops/s
[info]                  ·gc.alloc.rate:               819.001 MB/sec
[info]                  ·gc.alloc.rate.norm:          174.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:      996.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 211.940 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 7547024.561 ops/s
[info]                  ·gc.alloc.rate:                   831.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              173.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 7489623.915 ops/s
[info]                  ·gc.alloc.rate:                   833.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              175.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.564 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   7466055.395 ±(99.9%) 302142.244 ops/s [Average]
[info]   (min, avg, max) = (7367461.219, 7466055.395, 7547024.561), stdev = 78465.381
[info]   CI (99.9%): [7163913.151, 7768197.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   824.910 ±(99.9%) 28.776 MB/sec [Average]
[info]   (min, avg, max) = (816.508, 824.910, 833.386), stdev = 7.473
[info]   CI (99.9%): [796.134, 853.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   173.875 ±(99.9%) 4.095 B/op [Average]
[info]   (min, avg, max) = (172.300, 173.875, 175.094), stdev = 1.064
[info]   CI (99.9%): [169.780, 177.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   863.329 ±(99.9%) 699.279 MB/sec [Average]
[info]   (min, avg, max) = (663.306, 863.329, 998.082), stdev = 181.600
[info]   CI (99.9%): [164.050, 1562.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   182.245 ±(99.9%) 152.980 B/op [Average]
[info]   (min, avg, max) = (138.695, 182.245, 212.114), stdev = 39.728
[info]   CI (99.9%): [29.265, 335.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.554 ±(99.9%) 4.590 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.686), stdev = 1.192
[info]   CI (99.9%): [≈ 0, 5.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.964 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.564), stdev = 0.250
[info]   CI (99.9%): [≈ 0, 1.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 1.000
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:18:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3960.684 ops/s
[info] # Warmup Iteration   2: 91283.932 ops/s
[info] # Warmup Iteration   3: 195115.926 ops/s
[info] Iteration   1: 216852.882 ops/s
[info]                  ·gc.alloc.rate:                   1917.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              13915.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14330.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.439 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 216077.749 ops/s
[info]                  ·gc.alloc.rate:                   1889.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              13760.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14473.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.701 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 218115.126 ops/s
[info]                  ·gc.alloc.rate:                   1902.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              13730.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11993.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.352 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 217550.490 ops/s
[info]                  ·gc.alloc.rate:                   1931.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              13968.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14501.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.602 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 215965.795 ops/s
[info]                  ·gc.alloc.rate:               1911.081 MB/sec
[info]                  ·gc.alloc.rate.norm:          13926.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1678.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12233.953 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   216912.408 ±(99.9%) 3576.103 ops/s [Average]
[info]   (min, avg, max) = (215965.795, 216912.408, 218115.126), stdev = 928.703
[info]   CI (99.9%): [213336.305, 220488.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1910.375 ±(99.9%) 59.954 MB/sec [Average]
[info]   (min, avg, max) = (1889.468, 1910.375, 1931.051), stdev = 15.570
[info]   CI (99.9%): [1850.420, 1970.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13860.323 ±(99.9%) 411.869 B/op [Average]
[info]   (min, avg, max) = (13730.885, 13860.323, 13968.363), stdev = 106.961
[info]   CI (99.9%): [13448.455, 14272.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1861.525 ±(99.9%) 673.256 MB/sec [Average]
[info]   (min, avg, max) = (1662.098, 1861.525, 2004.755), stdev = 174.842
[info]   CI (99.9%): [1188.269, 2534.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   13506.571 ±(99.9%) 4913.817 B/op [Average]
[info]   (min, avg, max) = (11993.257, 13506.571, 14501.506), stdev = 1276.103
[info]   CI (99.9%): [8592.754, 18420.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.333 ±(99.9%) 1.314 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.333, 0.749), stdev = 0.341
[info]   CI (99.9%): [≈ 0, 1.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.419 ±(99.9%) 9.552 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.419, 5.439), stdev = 2.481
[info]   CI (99.9%): [≈ 0, 11.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 12.000), stdev = 2.387
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:18:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 658925.254 ops/s
[info] # Warmup Iteration   2: 1475585.681 ops/s
[info] # Warmup Iteration   3: 1548881.198 ops/s
[info] Iteration   1: 1536374.639 ops/s
[info]                  ·gc.alloc.rate:                   95.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.367 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.376 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1555145.114 ops/s
[info]                  ·gc.alloc.rate:      86.969 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1568706.603 ops/s
[info]                  ·gc.alloc.rate:      87.728 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1517168.438 ops/s
[info]                  ·gc.alloc.rate:               89.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          92.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 265.357 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1565017.502 ops/s
[info]                  ·gc.alloc.rate:      87.510 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1548482.459 ±(99.9%) 82900.301 ops/s [Average]
[info]   (min, avg, max) = (1517168.438, 1548482.459, 1568706.603), stdev = 21528.945
[info]   CI (99.9%): [1465582.159, 1631382.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   89.476 ±(99.9%) 14.103 MB/sec [Average]
[info]   (min, avg, max) = (86.969, 89.476, 95.834), stdev = 3.663
[info]   CI (99.9%): [75.372, 103.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   90.963 ±(99.9%) 17.286 B/op [Average]
[info]   (min, avg, max) = (88.000, 90.963, 98.134), stdev = 4.489
[info]   CI (99.9%): [73.678, 108.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   102.344 ±(99.9%) 539.628 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.344, 255.899), stdev = 140.140
[info]   CI (99.9%): [≈ 0, 641.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   105.480 ±(99.9%) 556.181 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 105.480, 265.357), stdev = 144.439
[info]   CI (99.9%): [≈ 0, 661.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.073 ±(99.9%) 0.632 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.367), stdev = 0.164
[info]   CI (99.9%): [≈ 0, 0.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.647 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.376), stdev = 0.168
[info]   CI (99.9%): [≈ 0, 0.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:17:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9512.991 ops/s
[info] # Warmup Iteration   2: 61234.289 ops/s
[info] # Warmup Iteration   3: 73152.803 ops/s
[info] Iteration   1: 75383.727 ops/s
[info]                  ·gc.alloc.rate:                   3323.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              69380.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3312.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69151.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.869 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 75822.590 ops/s
[info]                  ·gc.alloc.rate:                   3353.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              69560.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3351.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69508.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.431 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 75526.511 ops/s
[info]                  ·gc.alloc.rate:                   3333.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              69449.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3043.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63392.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.434 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 74511.800 ops/s
[info]                  ·gc.alloc.rate:                   3301.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              69741.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3053.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64493.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.440 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 75880.016 ops/s
[info]                  ·gc.alloc.rate:               3304.051 MB/sec
[info]                  ·gc.alloc.rate.norm:          68509.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3398.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 70476.134 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   75424.929 ±(99.9%) 2118.782 ops/s [Average]
[info]   (min, avg, max) = (74511.800, 75424.929, 75880.016), stdev = 550.241
[info]   CI (99.9%): [73306.147, 77543.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3323.368 ±(99.9%) 83.159 MB/sec [Average]
[info]   (min, avg, max) = (3301.750, 3323.368, 3353.587), stdev = 21.596
[info]   CI (99.9%): [3240.209, 3406.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69328.165 ±(99.9%) 1838.704 B/op [Average]
[info]   (min, avg, max) = (68509.583, 69328.165, 69741.414), stdev = 477.505
[info]   CI (99.9%): [67489.462, 71166.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3231.792 ±(99.9%) 656.080 MB/sec [Average]
[info]   (min, avg, max) = (3043.169, 3231.792, 3398.893), stdev = 170.382
[info]   CI (99.9%): [2575.711, 3887.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67404.178 ±(99.9%) 12401.313 B/op [Average]
[info]   (min, avg, max) = (63392.100, 67404.178, 70476.134), stdev = 3220.582
[info]   CI (99.9%): [55002.866, 79805.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.435 ±(99.9%) 1.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.435, 0.869), stdev = 0.307
[info]   CI (99.9%): [≈ 0, 1.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.200, 14.000), stdev = 1.095
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:17:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 390256.683 ops/s
[info] # Warmup Iteration   2: 1500995.463 ops/s
[info] # Warmup Iteration   3: 1560333.818 ops/s
[info] Iteration   1: 1561160.262 ops/s
[info]                  ·gc.alloc.rate:               838.793 MB/sec
[info]                  ·gc.alloc.rate.norm:          845.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 658.165 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 1592351.781 ops/s
[info]                  ·gc.alloc.rate:                   861.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     970.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1589229.314 ops/s
[info]                  ·gc.alloc.rate:                   853.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              844.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     975.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1600777.744 ops/s
[info]                  ·gc.alloc.rate:                   864.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              849.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.869 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1597267.692 ops/s
[info]                  ·gc.alloc.rate:               875.587 MB/sec
[info]                  ·gc.alloc.rate.norm:          862.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 966.243 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   1588157.359 ±(99.9%) 60574.491 ops/s [Average]
[info]   (min, avg, max) = (1561160.262, 1588157.359, 1600777.744), stdev = 15731.003
[info]   CI (99.9%): [1527582.868, 1648731.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   858.734 ±(99.9%) 52.761 MB/sec [Average]
[info]   (min, avg, max) = (838.793, 858.734, 875.587), stdev = 13.702
[info]   CI (99.9%): [805.973, 911.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   850.875 ±(99.9%) 26.982 B/op [Average]
[info]   (min, avg, max) = (844.938, 850.875, 862.384), stdev = 7.007
[info]   CI (99.9%): [823.893, 877.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   851.614 ±(99.9%) 690.548 MB/sec [Average]
[info]   (min, avg, max) = (652.815, 851.614, 984.732), stdev = 179.333
[info]   CI (99.9%): [161.066, 1542.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   843.290 ±(99.9%) 671.589 B/op [Average]
[info]   (min, avg, max) = (646.472, 843.290, 975.053), stdev = 174.410
[info]   CI (99.9%): [171.701, 1514.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 6.741 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.935), stdev = 1.751
[info]   CI (99.9%): [≈ 0, 7.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.790 ±(99.9%) 6.627 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.790, 3.869), stdev = 1.721
[info]   CI (99.9%): [≈ 0, 7.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:17:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 979652.163 ops/s
[info] # Warmup Iteration   2: 1633131.084 ops/s
[info] # Warmup Iteration   3: 1696129.477 ops/s
[info] Iteration   1: 1704083.012 ops/s
[info]                  ·gc.alloc.rate:                   488.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              450.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1676483.409 ops/s
[info]                  ·gc.alloc.rate:                   489.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              459.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     619.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1681708.157 ops/s
[info]                  ·gc.alloc.rate:               481.052 MB/sec
[info]                  ·gc.alloc.rate.norm:          450.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 309.222 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1675919.929 ops/s
[info]                  ·gc.alloc.rate:               488.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          458.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 620.591 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1699592.622 ops/s
[info]                  ·gc.alloc.rate:                   482.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              446.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     306.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1687557.426 ±(99.9%) 51309.742 ops/s [Average]
[info]   (min, avg, max) = (1675919.929, 1687557.426, 1704083.012), stdev = 13324.977
[info]   CI (99.9%): [1636247.683, 1738867.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   485.937 ±(99.9%) 15.509 MB/sec [Average]
[info]   (min, avg, max) = (481.052, 485.937, 489.815), stdev = 4.028
[info]   CI (99.9%): [470.428, 501.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   453.171 ±(99.9%) 22.649 B/op [Average]
[info]   (min, avg, max) = (446.286, 453.171, 459.831), stdev = 5.882
[info]   CI (99.9%): [430.522, 475.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.488 ±(99.9%) 696.061 MB/sec [Average]
[info]   (min, avg, max) = (329.800, 462.488, 660.858), stdev = 180.765
[info]   CI (99.9%): [≈ 0, 1158.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   432.138 ±(99.9%) 660.978 B/op [Average]
[info]   (min, avg, max) = (304.550, 432.138, 620.591), stdev = 171.654
[info]   CI (99.9%): [≈ 0, 1093.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.020), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 1.871
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:17:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 758160.585 ops/s
[info] # Warmup Iteration   2: 1704034.802 ops/s
[info] # Warmup Iteration   3: 1804340.409 ops/s
[info] Iteration   1: 1805274.126 ops/s
[info]                  ·gc.alloc.rate:      18.360 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1787580.215 ops/s
[info]                  ·gc.alloc.rate:               30.062 MB/sec
[info]                  ·gc.alloc.rate.norm:          26.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 225.212 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1802008.051 ops/s
[info]                  ·gc.alloc.rate:      18.320 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1802962.816 ops/s
[info]                  ·gc.alloc.rate:      18.329 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1803947.208 ops/s
[info]                  ·gc.alloc.rate:      18.343 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1800354.483 ±(99.9%) 27889.281 ops/s [Average]
[info]   (min, avg, max) = (1787580.215, 1800354.483, 1805274.126), stdev = 7242.758
[info]   CI (99.9%): [1772465.202, 1828243.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   20.683 ±(99.9%) 20.190 MB/sec [Average]
[info]   (min, avg, max) = (18.320, 20.683, 30.062), stdev = 5.243
[info]   CI (99.9%): [0.493, 40.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   18.094 ±(99.9%) 18.025 B/op [Average]
[info]   (min, avg, max) = (16.000, 18.094, 26.467), stdev = 4.681
[info]   CI (99.9%): [0.069, 36.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.161 ±(99.9%) 440.508 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.161, 255.803), stdev = 114.399
[info]   CI (99.9%): [≈ 0, 491.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   45.042 ±(99.9%) 387.829 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 45.042, 225.212), stdev = 100.718
[info]   CI (99.9%): [≈ 0, 432.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:17:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11541.733 ops/s
[info] # Warmup Iteration   2: 47145.122 ops/s
[info] # Warmup Iteration   3: 50437.133 ops/s
[info] Iteration   1: 50589.968 ops/s
[info]                  ·gc.alloc.rate:                   2153.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              66993.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61018.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.379 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 51291.356 ops/s
[info]                  ·gc.alloc.rate:                   2220.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              68120.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2286.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70151.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.639 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 51564.737 ops/s
[info]                  ·gc.alloc.rate:               2226.877 MB/sec
[info]                  ·gc.alloc.rate.norm:          67968.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1978.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60384.510 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 49646.985 ops/s
[info]                  ·gc.alloc.rate:                        2119.690 MB/sec
[info]                  ·gc.alloc.rate.norm:                   67186.624 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.018 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.558 B/op
[info]                  ·gc.churn.Metaspace:                   0.052 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              1.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2206.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          69941.280 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.502 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             79.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      7.259 B/op
[info]                  ·gc.count:                             8.000 counts
[info]                  ·gc.time:                              39.000 ms
[info] Iteration   5: 51528.748 ops/s
[info]                  ·gc.alloc.rate:                   2208.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              67439.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61531.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.636 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   50924.359 ±(99.9%) 3136.301 ops/s [Average]
[info]   (min, avg, max) = (49646.985, 50924.359, 51564.737), stdev = 814.487
[info]   CI (99.9%): [47788.058, 54060.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2185.690 ±(99.9%) 180.122 MB/sec [Average]
[info]   (min, avg, max) = (2119.690, 2185.690, 2226.877), stdev = 46.777
[info]   CI (99.9%): [2005.567, 2365.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   67541.920 ±(99.9%) 1881.021 B/op [Average]
[info]   (min, avg, max) = (66993.621, 67541.920, 68120.929), stdev = 488.495
[info]   CI (99.9%): [65660.898, 69422.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.112 ±(99.9%) 0.962 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.558), stdev = 0.250
[info]   CI (99.9%): [≈ 0, 1.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.090 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.Metaspace.norm":
[info]   0.331 ±(99.9%) 2.848 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.331, 1.654), stdev = 0.740
[info]   CI (99.9%): [≈ 0, 3.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2089.503 ±(99.9%) 567.007 MB/sec [Average]
[info]   (min, avg, max) = (1961.682, 2089.503, 2286.278), stdev = 147.250
[info]   CI (99.9%): [1522.496, 2656.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64605.450 ±(99.9%) 19192.042 B/op [Average]
[info]   (min, avg, max) = (60384.510, 64605.450, 70151.715), stdev = 4984.112
[info]   CI (99.9%): [45413.408, 83797.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Old_Gen":
[info]   0.500 ±(99.9%) 4.309 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.500, 2.502), stdev = 1.119
[info]   CI (99.9%): [≈ 0, 4.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   15.863 ±(99.9%) 136.586 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.863, 79.315), stdev = 35.471
[info]   CI (99.9%): [≈ 0, 152.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.262 ±(99.9%) 1.714 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.262, 1.041), stdev = 0.445
[info]   CI (99.9%): [≈ 0, 1.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.183 ±(99.9%) 53.327 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.183, 32.379), stdev = 13.849
[info]   CI (99.9%): [≈ 0, 61.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 8.000), stdev = 0.894
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 15.000, 39.000), stdev = 13.435
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:16:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 140331.725 ops/s
[info] # Warmup Iteration   2: 244648.272 ops/s
[info] # Warmup Iteration   3: 262972.366 ops/s
[info] Iteration   1: 263997.181 ops/s
[info]                  ·gc.alloc.rate:                   1060.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              6321.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5923.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 270055.605 ops/s
[info]                  ·gc.alloc.rate:               1091.040 MB/sec
[info]                  ·gc.alloc.rate.norm:          6358.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5798.117 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 270803.841 ops/s
[info]                  ·gc.alloc.rate:                   1105.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              6425.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7708.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 265439.979 ops/s
[info]                  ·gc.alloc.rate:                   1077.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              6390.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5865.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.617 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 270785.901 ops/s
[info]                  ·gc.alloc.rate:               1099.052 MB/sec
[info]                  ·gc.alloc.rate.norm:          6387.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5749.791 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   268216.501 ±(99.9%) 12505.731 ops/s [Average]
[info]   (min, avg, max) = (263997.181, 268216.501, 270803.841), stdev = 3247.699
[info]   CI (99.9%): [255710.770, 280722.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1086.797 ±(99.9%) 69.558 MB/sec [Average]
[info]   (min, avg, max) = (1060.319, 1086.797, 1105.681), stdev = 18.064
[info]   CI (99.9%): [1017.239, 1156.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6376.674 ±(99.9%) 150.105 B/op [Average]
[info]   (min, avg, max) = (6321.235, 6376.674, 6425.158), stdev = 38.982
[info]   CI (99.9%): [6226.568, 6526.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1058.708 ±(99.9%) 576.471 MB/sec [Average]
[info]   (min, avg, max) = (989.295, 1058.708, 1326.476), stdev = 149.708
[info]   CI (99.9%): [482.237, 1635.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6209.007 ±(99.9%) 3237.097 B/op [Average]
[info]   (min, avg, max) = (5749.791, 6209.007, 7708.210), stdev = 840.664
[info]   CI (99.9%): [2971.910, 9446.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.650 ±(99.9%) 5.327 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.650, 3.123), stdev = 1.383
[info]   CI (99.9%): [≈ 0, 5.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.778 ±(99.9%) 30.948 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.778, 18.148), stdev = 8.037
[info]   CI (99.9%): [≈ 0, 34.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 9.000), stdev = 2.408
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:16:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2074.311 ops/s
[info] # Warmup Iteration   2: 32109.560 ops/s
[info] # Warmup Iteration   3: 39684.883 ops/s
[info] Iteration   1: 39427.560 ops/s
[info]                  ·gc.alloc.rate:                   1962.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              78352.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78577.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.802 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.006 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 39853.460 ops/s
[info]                  ·gc.alloc.rate:                   1971.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              77829.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78445.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.822 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 39681.520 ops/s
[info]                  ·gc.alloc.rate:               1988.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          78856.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2000.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79340.701 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 39700.717 ops/s
[info]                  ·gc.alloc.rate:                   1976.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              78350.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66521.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.825 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 40049.951 ops/s
[info]                  ·gc.alloc.rate:                   2007.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              78882.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79477.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.818 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   39742.642 ±(99.9%) 885.417 ops/s [Average]
[info]   (min, avg, max) = (39427.560, 39742.642, 40049.951), stdev = 229.940
[info]   CI (99.9%): [38857.225, 40628.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1981.412 ±(99.9%) 66.652 MB/sec [Average]
[info]   (min, avg, max) = (1962.892, 1981.412, 2007.649), stdev = 17.309
[info]   CI (99.9%): [1914.760, 2048.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   78454.649 ±(99.9%) 1674.774 B/op [Average]
[info]   (min, avg, max) = (77829.924, 78454.649, 78882.926), stdev = 434.934
[info]   CI (99.9%): [76779.874, 80129.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1931.439 ±(99.9%) 550.403 MB/sec [Average]
[info]   (min, avg, max) = (1678.202, 1931.439, 2022.785), stdev = 142.938
[info]   CI (99.9%): [1381.036, 2481.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76472.594 ±(99.9%) 21491.959 B/op [Average]
[info]   (min, avg, max) = (66521.342, 76472.594, 79477.637), stdev = 5581.394
[info]   CI (99.9%): [54980.634, 97964.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.173 ±(99.9%) 1.354 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.173, 0.802), stdev = 0.352
[info]   CI (99.9%): [≈ 0, 1.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.894 ±(99.9%) 54.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.894, 32.006), stdev = 14.042
[info]   CI (99.9%): [≈ 0, 60.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 10.000), stdev = 0.894
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:16:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35510.780 ops/s
[info] # Warmup Iteration   2: 107430.962 ops/s
[info] # Warmup Iteration   3: 112557.684 ops/s
[info] Iteration   1: 111275.424 ops/s
[info]                  ·gc.alloc.rate:                   1123.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              15894.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18551.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.589 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 113326.051 ops/s
[info]                  ·gc.alloc.rate:                   1134.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              15753.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13692.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.969 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 113631.605 ops/s
[info]                  ·gc.alloc.rate:                   1143.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              15839.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13637.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.245 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 112165.934 ops/s
[info]                  ·gc.alloc.rate:               1134.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          15913.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18321.126 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 114112.588 ops/s
[info]                  ·gc.alloc.rate:               1152.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          15899.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13515.608 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   112902.320 ±(99.9%) 4459.607 ops/s [Average]
[info]   (min, avg, max) = (111275.424, 112902.320, 114112.588), stdev = 1158.146
[info]   CI (99.9%): [108442.713, 117361.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1137.931 ±(99.9%) 41.938 MB/sec [Average]
[info]   (min, avg, max) = (1123.991, 1137.931, 1152.828), stdev = 10.891
[info]   CI (99.9%): [1095.993, 1179.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15860.149 ±(99.9%) 253.875 B/op [Average]
[info]   (min, avg, max) = (15753.336, 15860.149, 15913.208), stdev = 65.931
[info]   CI (99.9%): [15606.274, 16114.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1113.761 ±(99.9%) 686.014 MB/sec [Average]
[info]   (min, avg, max) = (979.960, 1113.761, 1311.914), stdev = 178.156
[info]   CI (99.9%): [427.747, 1799.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15543.617 ±(99.9%) 10176.850 B/op [Average]
[info]   (min, avg, max) = (13515.608, 15543.617, 18551.947), stdev = 2642.896
[info]   CI (99.9%): [5366.768, 25720.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 5.499 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 3.311), stdev = 1.428
[info]   CI (99.9%): [≈ 0, 6.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.561 ±(99.9%) 76.329 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.561, 45.969), stdev = 19.822
[info]   CI (99.9%): [≈ 0, 87.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 14.000), stdev = 4.278
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:16:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 164948.190 ops/s
[info] # Warmup Iteration   2: 296067.358 ops/s
[info] # Warmup Iteration   3: 298857.218 ops/s
[info] Iteration   1: 306269.350 ops/s
[info]                  ·gc.alloc.rate:               419.813 MB/sec
[info]                  ·gc.alloc.rate.norm:          2156.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1694.570 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 298406.236 ops/s
[info]                  ·gc.alloc.rate:               410.955 MB/sec
[info]                  ·gc.alloc.rate.norm:          2166.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1739.194 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 300854.722 ops/s
[info]                  ·gc.alloc.rate:               417.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          2185.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1728.558 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 305482.981 ops/s
[info]                  ·gc.alloc.rate:               433.882 MB/sec
[info]                  ·gc.alloc.rate.norm:          2235.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3406.362 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 308031.754 ops/s
[info]                  ·gc.alloc.rate:                   424.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              2166.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1689.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   303809.009 ±(99.9%) 15475.181 ops/s [Average]
[info]   (min, avg, max) = (298406.236, 303809.009, 308031.754), stdev = 4018.855
[info]   CI (99.9%): [288333.827, 319284.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   421.324 ±(99.9%) 32.581 MB/sec [Average]
[info]   (min, avg, max) = (410.955, 421.324, 433.882), stdev = 8.461
[info]   CI (99.9%): [388.743, 453.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2181.982 ±(99.9%) 121.489 B/op [Average]
[info]   (min, avg, max) = (2156.308, 2181.982, 2235.092), stdev = 31.550
[info]   CI (99.9%): [2060.493, 2303.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   396.477 ±(99.9%) 569.952 MB/sec [Average]
[info]   (min, avg, max) = (329.892, 396.477, 661.253), stdev = 148.015
[info]   CI (99.9%): [≈ 0, 966.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2051.724 ±(99.9%) 2917.105 B/op [Average]
[info]   (min, avg, max) = (1689.934, 2051.724, 3406.362), stdev = 757.563
[info]   CI (99.9%): [≈ 0, 4968.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.106), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:15:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 201761.316 ops/s
[info] # Warmup Iteration   2: 340596.320 ops/s
[info] # Warmup Iteration   3: 362740.306 ops/s
[info] Iteration   1: 361692.089 ops/s
[info]                  ·gc.alloc.rate:      3.678 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 364271.360 ops/s
[info]                  ·gc.alloc.rate:      3.704 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 364183.550 ops/s
[info]                  ·gc.alloc.rate:      3.703 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 361239.385 ops/s
[info]                  ·gc.alloc.rate:      3.673 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 363707.926 ops/s
[info]                  ·gc.alloc.rate:      3.698 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   363018.862 ±(99.9%) 5555.787 ops/s [Average]
[info]   (min, avg, max) = (361239.385, 363018.862, 364271.360), stdev = 1442.820
[info]   CI (99.9%): [357463.075, 368574.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   3.691 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (3.673, 3.691, 3.704), stdev = 0.015
[info]   CI (99.9%): [3.635, 3.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.002), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:15:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5737.836 ops/s
[info] # Warmup Iteration   2: 49513.644 ops/s
[info] # Warmup Iteration   3: 57025.462 ops/s
[info] Iteration   1: 57004.136 ops/s
[info]                  ·gc.alloc.rate:                   1373.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              37921.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35900.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.575 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 58141.648 ops/s
[info]                  ·gc.alloc.rate:                   1400.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              37882.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35450.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.341 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 57298.617 ops/s
[info]                  ·gc.alloc.rate:                   1379.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              37861.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36230.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.144 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 57613.055 ops/s
[info]                  ·gc.alloc.rate:                   1395.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              38101.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36231.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.569 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 57859.529 ops/s
[info]                  ·gc.alloc.rate:                   1406.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              38262.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36260.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.566 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   57583.397 ±(99.9%) 1727.880 ops/s [Average]
[info]   (min, avg, max) = (57004.136, 57583.397, 58141.648), stdev = 448.725
[info]   CI (99.9%): [55855.517, 59311.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1390.987 ±(99.9%) 53.839 MB/sec [Average]
[info]   (min, avg, max) = (1373.951, 1390.987, 1406.844), stdev = 13.982
[info]   CI (99.9%): [1337.147, 1444.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   38006.069 ±(99.9%) 661.995 B/op [Average]
[info]   (min, avg, max) = (37861.825, 38006.069, 38262.656), stdev = 171.918
[info]   CI (99.9%): [37344.074, 38668.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1318.059 ±(99.9%) 49.723 MB/sec [Average]
[info]   (min, avg, max) = (1300.723, 1318.059, 1333.220), stdev = 12.913
[info]   CI (99.9%): [1268.336, 1367.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   36014.593 ±(99.9%) 1340.470 B/op [Average]
[info]   (min, avg, max) = (35450.816, 36014.593, 36260.271), stdev = 348.116
[info]   CI (99.9%): [34674.123, 37355.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.996 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.142, 0.604), stdev = 0.259
[info]   CI (99.9%): [≈ 0, 1.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.839 ±(99.9%) 26.930 B/op [Average]
[info]   (min, avg, max) = (0.566, 3.839, 16.341), stdev = 6.994
[info]   CI (99.9%): [≈ 0, 30.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:15:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14422.983 ops/s
[info] # Warmup Iteration   2: 66788.098 ops/s
[info] # Warmup Iteration   3: 70146.844 ops/s
[info] Iteration   1: 71989.492 ops/s
[info]                  ·gc.alloc.rate:                   1681.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              36748.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36146.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.626 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 72245.679 ops/s
[info]                  ·gc.alloc.rate:                   1693.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              36884.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35832.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.606 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 73129.803 ops/s
[info]                  ·gc.alloc.rate:                   1699.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              36568.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35366.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.480 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 73088.151 ops/s
[info]                  ·gc.alloc.rate:                   1724.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              37137.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35552.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.448 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 72769.619 ops/s
[info]                  ·gc.alloc.rate:                   1717.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              37154.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35939.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.450 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   72644.549 ±(99.9%) 1959.760 ops/s [Average]
[info]   (min, avg, max) = (71989.492, 72644.549, 73129.803), stdev = 508.943
[info]   CI (99.9%): [70684.789, 74604.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1703.209 ±(99.9%) 68.861 MB/sec [Average]
[info]   (min, avg, max) = (1681.131, 1703.209, 1724.606), stdev = 17.883
[info]   CI (99.9%): [1634.348, 1772.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   36898.592 ±(99.9%) 970.191 B/op [Average]
[info]   (min, avg, max) = (36568.639, 36898.592, 37154.196), stdev = 251.955
[info]   CI (99.9%): [35928.401, 37868.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1650.922 ±(99.9%) 28.432 MB/sec [Average]
[info]   (min, avg, max) = (1643.402, 1650.922, 1661.757), stdev = 7.384
[info]   CI (99.9%): [1622.490, 1679.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   35767.532 ±(99.9%) 1194.180 B/op [Average]
[info]   (min, avg, max) = (35366.359, 35767.532, 36146.745), stdev = 310.125
[info]   CI (99.9%): [34573.352, 36961.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 4.809 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.766, 2.956), stdev = 1.249
[info]   CI (99.9%): [≈ 0, 5.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   16.722 ±(99.9%) 105.172 B/op [Average]
[info]   (min, avg, max) = (0.448, 16.722, 64.626), stdev = 27.313
[info]   CI (99.9%): [≈ 0, 121.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 15.000), stdev = 3.715
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:15:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13237.978 ops/s
[info] # Warmup Iteration   2: 120104.393 ops/s
[info] # Warmup Iteration   3: 130563.093 ops/s
[info] Iteration   1: 132282.954 ops/s
[info]                  ·gc.alloc.rate:                   912.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              10849.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11658.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 131737.865 ops/s
[info]                  ·gc.alloc.rate:                   910.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              10882.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11730.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 132575.379 ops/s
[info]                  ·gc.alloc.rate:               901.771 MB/sec
[info]                  ·gc.alloc.rate.norm:          10705.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7782.051 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 132595.006 ops/s
[info]                  ·gc.alloc.rate:                   914.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              10852.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11663.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.497 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.374 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 131894.172 ops/s
[info]                  ·gc.alloc.rate:                   920.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              10987.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11653.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.745 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   132217.075 ±(99.9%) 1503.061 ops/s [Average]
[info]   (min, avg, max) = (131737.865, 132217.075, 132595.006), stdev = 390.340
[info]   CI (99.9%): [130714.015, 133720.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   911.995 ±(99.9%) 26.491 MB/sec [Average]
[info]   (min, avg, max) = (901.771, 911.995, 920.809), stdev = 6.880
[info]   CI (99.9%): [885.504, 938.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   10855.571 ±(99.9%) 389.041 B/op [Average]
[info]   (min, avg, max) = (10705.181, 10855.571, 10987.708), stdev = 101.033
[info]   CI (99.9%): [10466.530, 11244.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   915.358 ±(99.9%) 559.361 MB/sec [Average]
[info]   (min, avg, max) = (655.535, 915.358, 982.727), stdev = 145.264
[info]   CI (99.9%): [355.997, 1474.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10897.542 ±(99.9%) 6707.414 B/op [Average]
[info]   (min, avg, max) = (7782.051, 10897.542, 11730.338), stdev = 1741.894
[info]   CI (99.9%): [4190.128, 17604.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.924 ±(99.9%) 7.691 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.924, 4.497), stdev = 1.997
[info]   CI (99.9%): [≈ 0, 8.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.973 ±(99.9%) 91.279 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.973, 53.374), stdev = 23.705
[info]   CI (99.9%): [≈ 0, 102.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 11.000), stdev = 2.449
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:15:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82850.024 ops/s
[info] # Warmup Iteration   2: 245132.955 ops/s
[info] # Warmup Iteration   3: 258821.799 ops/s
[info] Iteration   1: 260361.782 ops/s
[info]                  ·gc.alloc.rate:                   1099.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              6646.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6006.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 260317.470 ops/s
[info]                  ·gc.alloc.rate:                   1098.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              6639.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6015.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 258402.702 ops/s
[info]                  ·gc.alloc.rate:                   1105.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              6728.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6053.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 256522.775 ops/s
[info]                  ·gc.alloc.rate:                   1092.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              6701.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8096.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.639 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 259281.995 ops/s
[info]                  ·gc.alloc.rate:               1106.843 MB/sec
[info]                  ·gc.alloc.rate.norm:          6717.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6004.965 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   258977.345 ±(99.9%) 6137.080 ops/s [Average]
[info]   (min, avg, max) = (256522.775, 258977.345, 260361.782), stdev = 1593.780
[info]   CI (99.9%): [252840.265, 265114.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1100.528 ±(99.9%) 22.006 MB/sec [Average]
[info]   (min, avg, max) = (1092.442, 1100.528, 1106.843), stdev = 5.715
[info]   CI (99.9%): [1078.522, 1122.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6686.572 ±(99.9%) 158.335 B/op [Average]
[info]   (min, avg, max) = (6639.478, 6686.572, 6728.004), stdev = 41.119
[info]   CI (99.9%): [6528.237, 6844.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1058.529 ±(99.9%) 562.372 MB/sec [Average]
[info]   (min, avg, max) = (989.433, 1058.529, 1319.754), stdev = 146.046
[info]   CI (99.9%): [496.157, 1620.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6435.299 ±(99.9%) 3576.133 B/op [Average]
[info]   (min, avg, max) = (6004.965, 6435.299, 8096.244), stdev = 928.710
[info]   CI (99.9%): [2859.165, 10011.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 5.337 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 3.145), stdev = 1.386
[info]   CI (99.9%): [≈ 0, 6.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.058 ±(99.9%) 32.493 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.058, 19.146), stdev = 8.438
[info]   CI (99.9%): [≈ 0, 36.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 1.789
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:14:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1106.805 ops/s
[info] # Warmup Iteration   2: 23610.152 ops/s
[info] # Warmup Iteration   3: 33807.139 ops/s
[info] Iteration   1: 34180.026 ops/s
[info]                  ·gc.alloc.rate:                   1816.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              83624.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75134.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.959 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 33345.455 ops/s
[info]                  ·gc.alloc.rate:                   1805.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              85184.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93284.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.249 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.951 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 34830.330 ops/s
[info]                  ·gc.alloc.rate:                   1851.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              83663.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74863.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.526 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 34801.659 ops/s
[info]                  ·gc.alloc.rate:                   1859.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              84020.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90325.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.818 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 35709.326 ops/s
[info]                  ·gc.alloc.rate:                   1897.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              83597.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73944.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.918 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   34573.359 ±(99.9%) 3374.006 ops/s [Average]
[info]   (min, avg, max) = (33345.455, 34573.359, 35709.326), stdev = 876.219
[info]   CI (99.9%): [31199.353, 37947.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1846.053 ±(99.9%) 141.406 MB/sec [Average]
[info]   (min, avg, max) = (1805.052, 1846.053, 1897.075), stdev = 36.723
[info]   CI (99.9%): [1704.647, 1987.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   84018.095 ±(99.9%) 2596.204 B/op [Average]
[info]   (min, avg, max) = (83597.396, 84018.095, 85184.597), stdev = 674.226
[info]   CI (99.9%): [81421.891, 86614.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1788.647 ±(99.9%) 704.678 MB/sec [Average]
[info]   (min, avg, max) = (1631.948, 1788.647, 1999.561), stdev = 183.003
[info]   CI (99.9%): [1083.969, 2493.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   81510.441 ±(99.9%) 36448.888 B/op [Average]
[info]   (min, avg, max) = (73944.074, 81510.441, 93284.309), stdev = 9465.660
[info]   CI (99.9%): [45061.553, 117959.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.304 ±(99.9%) 2.048 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.304, 1.249), stdev = 0.532
[info]   CI (99.9%): [≈ 0, 2.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   14.234 ±(99.9%) 96.813 B/op [Average]
[info]   (min, avg, max) = (0.918, 14.234, 58.951), stdev = 25.142
[info]   CI (99.9%): [≈ 0, 111.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 10.000), stdev = 1.517
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:14:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40811.652 ops/s
[info] # Warmup Iteration   2: 166520.068 ops/s
[info] # Warmup Iteration   3: 178466.847 ops/s
[info] Iteration   1: 178353.080 ops/s
[info]                  ·gc.alloc.rate:                   1011.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              8922.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8644.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 178033.032 ops/s
[info]                  ·gc.alloc.rate:                   1009.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              8919.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8689.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.368 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 180620.515 ops/s
[info]                  ·gc.alloc.rate:                   1019.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              8882.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8581.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.831 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 178055.265 ops/s
[info]                  ·gc.alloc.rate:                   1017.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              8991.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8661.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.864 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 179262.449 ops/s
[info]                  ·gc.alloc.rate:                   1023.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              8983.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8580.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   178864.868 ±(99.9%) 4239.952 ops/s [Average]
[info]   (min, avg, max) = (178033.032, 178864.868, 180620.515), stdev = 1101.102
[info]   CI (99.9%): [174624.916, 183104.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1016.162 ±(99.9%) 22.601 MB/sec [Average]
[info]   (min, avg, max) = (1009.392, 1016.162, 1023.598), stdev = 5.869
[info]   CI (99.9%): [993.561, 1038.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   8940.015 ±(99.9%) 178.262 B/op [Average]
[info]   (min, avg, max) = (8882.452, 8940.015, 8991.640), stdev = 46.294
[info]   CI (99.9%): [8761.753, 9118.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   981.081 ±(99.9%) 11.264 MB/sec [Average]
[info]   (min, avg, max) = (977.658, 981.081, 984.867), stdev = 2.925
[info]   CI (99.9%): [969.817, 992.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8631.484 ±(99.9%) 187.671 B/op [Average]
[info]   (min, avg, max) = (8580.263, 8631.484, 8689.059), stdev = 48.738
[info]   CI (99.9%): [8443.814, 8819.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 6.301 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.858, 3.768), stdev = 1.636
[info]   CI (99.9%): [≈ 0, 7.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.486 ±(99.9%) 54.891 B/op [Average]
[info]   (min, avg, max) = (0.183, 7.486, 32.831), stdev = 14.255
[info]   CI (99.9%): [≈ 0, 62.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.362
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:14:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 187649.570 ops/s
[info] # Warmup Iteration   2: 451565.476 ops/s
[info] # Warmup Iteration   3: 460906.685 ops/s
[info] Iteration   1: 466160.853 ops/s
[info]                  ·gc.alloc.rate:                   1405.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              4745.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4466.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 476465.417 ops/s
[info]                  ·gc.alloc.rate:                   1434.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              4736.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4365.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.797 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 480419.156 ops/s
[info]                  ·gc.alloc.rate:               1464.810 MB/sec
[info]                  ·gc.alloc.rate.norm:          4798.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1646.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5391.644 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 474906.612 ops/s
[info]                  ·gc.alloc.rate:               1442.591 MB/sec
[info]                  ·gc.alloc.rate.norm:          4780.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4373.611 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 480353.369 ops/s
[info]                  ·gc.alloc.rate:               1458.297 MB/sec
[info]                  ·gc.alloc.rate.norm:          4776.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1326.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4344.756 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   475661.081 ±(99.9%) 22463.430 ops/s [Average]
[info]   (min, avg, max) = (466160.853, 475661.081, 480419.156), stdev = 5833.681
[info]   CI (99.9%): [453197.652, 498124.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1441.095 ±(99.9%) 89.579 MB/sec [Average]
[info]   (min, avg, max) = (1405.663, 1441.095, 1464.810), stdev = 23.263
[info]   CI (99.9%): [1351.516, 1530.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   4767.592 ±(99.9%) 99.085 B/op [Average]
[info]   (min, avg, max) = (4736.169, 4767.592, 4798.059), stdev = 25.732
[info]   CI (99.9%): [4668.508, 4866.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1387.408 ±(99.9%) 556.772 MB/sec [Average]
[info]   (min, avg, max) = (1319.713, 1387.408, 1646.027), stdev = 144.592
[info]   CI (99.9%): [830.636, 1944.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4588.518 ±(99.9%) 1738.144 B/op [Average]
[info]   (min, avg, max) = (4344.756, 4588.518, 5391.644), stdev = 451.390
[info]   CI (99.9%): [2850.374, 6326.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.660 ±(99.9%) 5.617 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.660, 3.269), stdev = 1.459
[info]   CI (99.9%): [≈ 0, 6.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.180 ±(99.9%) 18.548 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.180, 10.797), stdev = 4.817
[info]   CI (99.9%): [≈ 0, 20.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 2.702
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:14:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 240121.611 ops/s
[info] # Warmup Iteration   2: 503247.367 ops/s
[info] # Warmup Iteration   3: 522536.912 ops/s
[info] Iteration   1: 515752.639 ops/s
[info]                  ·gc.alloc.rate:                   976.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              2980.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3026.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 520765.506 ops/s
[info]                  ·gc.alloc.rate:                   978.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              2956.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3002.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 524804.082 ops/s
[info]                  ·gc.alloc.rate:                   988.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              2964.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2983.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.803 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 517871.618 ops/s
[info]                  ·gc.alloc.rate:                   989.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              3006.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3010.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 516347.951 ops/s
[info]                  ·gc.alloc.rate:               975.204 MB/sec
[info]                  ·gc.alloc.rate.norm:          2972.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3011.201 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   519108.359 ±(99.9%) 14355.936 ops/s [Average]
[info]   (min, avg, max) = (515752.639, 519108.359, 524804.082), stdev = 3728.191
[info]   CI (99.9%): [504752.423, 533464.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   981.544 ±(99.9%) 25.831 MB/sec [Average]
[info]   (min, avg, max) = (975.204, 981.544, 989.132), stdev = 6.708
[info]   CI (99.9%): [955.713, 1007.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2975.830 ±(99.9%) 73.433 B/op [Average]
[info]   (min, avg, max) = (2956.330, 2975.830, 3006.037), stdev = 19.070
[info]   CI (99.9%): [2902.398, 3049.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   991.821 ±(99.9%) 10.650 MB/sec [Average]
[info]   (min, avg, max) = (987.898, 991.821, 994.891), stdev = 2.766
[info]   CI (99.9%): [981.170, 1002.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   3007.018 ±(99.9%) 60.362 B/op [Average]
[info]   (min, avg, max) = (2983.688, 3007.018, 3026.818), stdev = 15.676
[info]   CI (99.9%): [2946.656, 3067.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 4.917 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 2.935), stdev = 1.277
[info]   CI (99.9%): [≈ 0, 5.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.001 ±(99.9%) 14.743 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.001, 8.803), stdev = 3.829
[info]   CI (99.9%): [≈ 0, 16.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 9.000), stdev = 2.510
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:14:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6142.617 ops/s
[info] # Warmup Iteration   2: 55419.810 ops/s
[info] # Warmup Iteration   3: 73579.805 ops/s
[info] Iteration   1: 74036.684 ops/s
[info]                  ·gc.alloc.rate:                   1602.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              34054.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34701.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.885 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 74231.113 ops/s
[info]                  ·gc.alloc.rate:                   1607.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              34066.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27930.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 74358.801 ops/s
[info]                  ·gc.alloc.rate:               1599.194 MB/sec
[info]                  ·gc.alloc.rate.norm:          33845.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1656.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35066.272 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 73922.467 ops/s
[info]                  ·gc.alloc.rate:                   1619.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              34474.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35499.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.886 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 73578.663 ops/s
[info]                  ·gc.alloc.rate:                   1599.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              34201.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28690.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.891 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   74025.546 ±(99.9%) 1161.226 ops/s [Average]
[info]   (min, avg, max) = (73578.663, 74025.546, 74358.801), stdev = 301.567
[info]   CI (99.9%): [72864.320, 75186.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1605.580 ±(99.9%) 32.196 MB/sec [Average]
[info]   (min, avg, max) = (1599.194, 1605.580, 1619.441), stdev = 8.361
[info]   CI (99.9%): [1573.384, 1637.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   34128.534 ±(99.9%) 892.038 B/op [Average]
[info]   (min, avg, max) = (33845.135, 34128.534, 34474.444), stdev = 231.659
[info]   CI (99.9%): [33236.497, 35020.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1523.387 ±(99.9%) 683.095 MB/sec [Average]
[info]   (min, avg, max) = (1317.621, 1523.387, 1667.594), stdev = 177.398
[info]   CI (99.9%): [840.293, 2206.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   32377.662 ±(99.9%) 14375.884 B/op [Average]
[info]   (min, avg, max) = (27930.107, 32377.662, 35499.516), stdev = 3733.371
[info]   CI (99.9%): [18001.778, 46753.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.158 ±(99.9%) 1.096 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.666), stdev = 0.285
[info]   CI (99.9%): [≈ 0, 1.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.357 ±(99.9%) 23.223 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.357, 14.124), stdev = 6.031
[info]   CI (99.9%): [≈ 0, 26.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 9.000), stdev = 1.304
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:13:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16600.612 ops/s
[info] # Warmup Iteration   2: 80269.399 ops/s
[info] # Warmup Iteration   3: 92857.914 ops/s
[info] Iteration   1: 95566.467 ops/s
[info]                  ·gc.alloc.rate:                   1572.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              25898.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27251.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.488 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.970 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 96391.729 ops/s
[info]                  ·gc.alloc.rate:                   1577.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              25761.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21535.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.433 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 96104.055 ops/s
[info]                  ·gc.alloc.rate:                   1578.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              25843.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26891.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.682 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 94715.640 ops/s
[info]                  ·gc.alloc.rate:                   1576.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              26199.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27363.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.346 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 96351.892 ops/s
[info]                  ·gc.alloc.rate:               1590.340 MB/sec
[info]                  ·gc.alloc.rate.norm:          25972.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1325.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21649.235 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   95825.957 ±(99.9%) 2705.185 ops/s [Average]
[info]   (min, avg, max) = (94715.640, 95825.957, 96391.729), stdev = 702.528
[info]   CI (99.9%): [93120.772, 98531.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1579.099 ±(99.9%) 25.608 MB/sec [Average]
[info]   (min, avg, max) = (1572.619, 1579.099, 1590.340), stdev = 6.650
[info]   CI (99.9%): [1553.491, 1604.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   25935.120 ±(99.9%) 641.814 B/op [Average]
[info]   (min, avg, max) = (25761.610, 25935.120, 26199.346), stdev = 166.677
[info]   CI (99.9%): [25293.306, 26576.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1517.641 ±(99.9%) 686.934 MB/sec [Average]
[info]   (min, avg, max) = (1318.991, 1517.641, 1654.778), stdev = 178.395
[info]   CI (99.9%): [830.707, 2204.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24938.459 ±(99.9%) 11781.592 B/op [Average]
[info]   (min, avg, max) = (21535.802, 24938.459, 27363.397), stdev = 3059.642
[info]   CI (99.9%): [13156.867, 36720.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.785 ±(99.9%) 4.305 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.785, 2.488), stdev = 1.118
[info]   CI (99.9%): [≈ 0, 5.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   12.886 ±(99.9%) 70.796 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.886, 40.970), stdev = 18.385
[info]   CI (99.9%): [≈ 0, 83.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 16.000), stdev = 4.382
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:13:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28409.517 ops/s
[info] # Warmup Iteration   2: 145715.340 ops/s
[info] # Warmup Iteration   3: 163691.664 ops/s
[info] Iteration   1: 165976.638 ops/s
[info]                  ·gc.alloc.rate:                   712.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              6756.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6196.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.592 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 166580.110 ops/s
[info]                  ·gc.alloc.rate:                   712.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              6730.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6183.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 168800.352 ops/s
[info]                  ·gc.alloc.rate:                   727.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              6785.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6108.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 165682.899 ops/s
[info]                  ·gc.alloc.rate:                   715.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              6794.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9352.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 168584.466 ops/s
[info]                  ·gc.alloc.rate:                   725.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              6767.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6131.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.812 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   167124.893 ±(99.9%) 5656.693 ops/s [Average]
[info]   (min, avg, max) = (165682.899, 167124.893, 168800.352), stdev = 1469.025
[info]   CI (99.9%): [161468.200, 172781.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   718.648 ±(99.9%) 27.853 MB/sec [Average]
[info]   (min, avg, max) = (712.486, 718.648, 727.732), stdev = 7.233
[info]   CI (99.9%): [690.795, 746.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6766.822 ±(99.9%) 97.427 B/op [Average]
[info]   (min, avg, max) = (6730.221, 6766.822, 6794.419), stdev = 25.302
[info]   CI (99.9%): [6669.394, 6864.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   720.994 ±(99.9%) 567.483 MB/sec [Average]
[info]   (min, avg, max) = (653.617, 720.994, 984.615), stdev = 147.374
[info]   CI (99.9%): [153.511, 1288.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6794.723 ±(99.9%) 5508.088 B/op [Average]
[info]   (min, avg, max) = (6108.541, 6794.723, 9352.737), stdev = 1430.433
[info]   CI (99.9%): [1286.635, 12302.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.904 ±(99.9%) 7.468 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.904, 4.373), stdev = 1.939
[info]   CI (99.9%): [≈ 0, 8.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.437 ±(99.9%) 69.691 B/op [Average]
[info]   (min, avg, max) = (0.197, 8.437, 40.812), stdev = 18.099
[info]   CI (99.9%): [≈ 0, 78.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 11.000), stdev = 1.871
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:13:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89227.830 ops/s
[info] # Warmup Iteration   2: 256148.494 ops/s
[info] # Warmup Iteration   3: 274612.527 ops/s
[info] Iteration   1: 275686.381 ops/s
[info]                  ·gc.alloc.rate:                   1016.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              5805.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5666.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 276928.092 ops/s
[info]                  ·gc.alloc.rate:                   1014.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              5764.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5648.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 276714.964 ops/s
[info]                  ·gc.alloc.rate:                   1012.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              5761.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5660.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.931 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 278026.122 ops/s
[info]                  ·gc.alloc.rate:                   1017.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              5761.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5607.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.296 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 278293.315 ops/s
[info]                  ·gc.alloc.rate:               1022.679 MB/sec
[info]                  ·gc.alloc.rate.norm:          5783.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5594.887 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   277129.775 ±(99.9%) 4063.021 ops/s [Average]
[info]   (min, avg, max) = (275686.381, 277129.775, 278293.315), stdev = 1055.154
[info]   CI (99.9%): [273066.754, 281192.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1016.940 ±(99.9%) 14.463 MB/sec [Average]
[info]   (min, avg, max) = (1012.986, 1016.940, 1022.679), stdev = 3.756
[info]   CI (99.9%): [1002.477, 1031.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5775.224 ±(99.9%) 73.840 B/op [Average]
[info]   (min, avg, max) = (5761.279, 5775.224, 5805.196), stdev = 19.176
[info]   CI (99.9%): [5701.385, 5849.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   992.343 ±(99.9%) 9.417 MB/sec [Average]
[info]   (min, avg, max) = (989.280, 992.343, 995.256), stdev = 2.445
[info]   CI (99.9%): [982.927, 1001.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5635.606 ±(99.9%) 124.932 B/op [Average]
[info]   (min, avg, max) = (5594.887, 5635.606, 5666.539), stdev = 32.444
[info]   CI (99.9%): [5510.674, 5760.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.650 ±(99.9%) 5.023 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.650, 2.977), stdev = 1.304
[info]   CI (99.9%): [≈ 0, 5.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.693 ±(99.9%) 28.569 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.693, 16.931), stdev = 7.419
[info]   CI (99.9%): [≈ 0, 32.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 9.000), stdev = 2.510
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:13:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7197.386 ops/s
[info] # Warmup Iteration   2: 60100.029 ops/s
[info] # Warmup Iteration   3: 63885.537 ops/s
[info] Iteration   1: 67007.831 ops/s
[info]                  ·gc.alloc.rate:                   2613.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              61368.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2614.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61396.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.025 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 67283.357 ops/s
[info]                  ·gc.alloc.rate:                   2642.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              61795.473 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2628.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61471.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.435 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 66708.830 ops/s
[info]                  ·gc.alloc.rate:               2614.679 MB/sec
[info]                  ·gc.alloc.rate.norm:          61688.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2326.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54890.010 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 66430.843 ops/s
[info]                  ·gc.alloc.rate:                   2619.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              62051.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2683.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63570.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.986 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 66181.201 ops/s
[info]                  ·gc.alloc.rate:                   2597.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              61757.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2363.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56197.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   66722.412 ±(99.9%) 1694.097 ops/s [Average]
[info]   (min, avg, max) = (66181.201, 66722.412, 67283.357), stdev = 439.951
[info]   CI (99.9%): [65028.316, 68416.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2617.421 ±(99.9%) 62.340 MB/sec [Average]
[info]   (min, avg, max) = (2597.551, 2617.421, 2642.439), stdev = 16.190
[info]   CI (99.9%): [2555.081, 2679.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   61732.381 ±(99.9%) 944.539 B/op [Average]
[info]   (min, avg, max) = (61368.560, 61732.381, 62051.412), stdev = 245.294
[info]   CI (99.9%): [60787.842, 62676.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2523.307 ±(99.9%) 636.203 MB/sec [Average]
[info]   (min, avg, max) = (2326.515, 2523.307, 2683.262), stdev = 165.220
[info]   CI (99.9%): [1887.105, 3159.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   59505.227 ±(99.9%) 14434.795 B/op [Average]
[info]   (min, avg, max) = (54890.010, 59505.227, 63570.147), stdev = 3748.670
[info]   CI (99.9%): [45070.432, 73940.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.212 ±(99.9%) 1.478 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.212, 0.895), stdev = 0.384
[info]   CI (99.9%): [≈ 0, 1.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.988 ±(99.9%) 34.698 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.988, 21.025), stdev = 9.011
[info]   CI (99.9%): [≈ 0, 39.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.800, 12.000), stdev = 1.304
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:13:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60006.741 ops/s
[info] # Warmup Iteration   2: 180981.605 ops/s
[info] # Warmup Iteration   3: 201065.138 ops/s
[info] Iteration   1: 204167.394 ops/s
[info]                  ·gc.alloc.rate:               1418.830 MB/sec
[info]                  ·gc.alloc.rate.norm:          10932.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10188.476 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 202338.151 ops/s
[info]                  ·gc.alloc.rate:                   1413.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              10997.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10280.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.601 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 206159.936 ops/s
[info]                  ·gc.alloc.rate:                   1437.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              10973.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10029.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.430 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 205877.885 ops/s
[info]                  ·gc.alloc.rate:               1463.821 MB/sec
[info]                  ·gc.alloc.rate.norm:          11185.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12573.928 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 205493.500 ops/s
[info]                  ·gc.alloc.rate:                   1448.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              11089.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10130.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   204807.373 ±(99.9%) 6074.024 ops/s [Average]
[info]   (min, avg, max) = (202338.151, 204807.373, 206159.936), stdev = 1577.405
[info]   CI (99.9%): [198733.349, 210881.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1436.484 ±(99.9%) 79.517 MB/sec [Average]
[info]   (min, avg, max) = (1413.887, 1436.484, 1463.821), stdev = 20.650
[info]   CI (99.9%): [1356.967, 1516.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11035.719 ±(99.9%) 390.981 B/op [Average]
[info]   (min, avg, max) = (10932.439, 11035.719, 11185.417), stdev = 101.536
[info]   CI (99.9%): [10644.739, 11426.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1385.273 ±(99.9%) 560.400 MB/sec [Average]
[info]   (min, avg, max) = (1314.052, 1385.273, 1645.533), stdev = 145.534
[info]   CI (99.9%): [824.873, 1945.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10640.441 ±(99.9%) 4176.713 B/op [Average]
[info]   (min, avg, max) = (10029.207, 10640.441, 12573.928), stdev = 1084.679
[info]   CI (99.9%): [6463.728, 14817.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 6.120 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.762, 3.601), stdev = 1.589
[info]   CI (99.9%): [≈ 0, 6.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.920 ±(99.9%) 47.610 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.920, 28.012), stdev = 12.364
[info]   CI (99.9%): [≈ 0, 53.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:12:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 146968.229 ops/s
[info] # Warmup Iteration   2: 498122.819 ops/s
[info] # Warmup Iteration   3: 501880.861 ops/s
[info] Iteration   1: 494481.357 ops/s
[info]                  ·gc.alloc.rate:               396.391 MB/sec
[info]                  ·gc.alloc.rate.norm:          1261.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 814.220 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 506963.303 ops/s
[info]                  ·gc.alloc.rate:                   415.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              1290.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2024.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 504316.560 ops/s
[info]                  ·gc.alloc.rate:               405.885 MB/sec
[info]                  ·gc.alloc.rate.norm:          1266.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1019.694 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 488124.585 ops/s
[info]                  ·gc.alloc.rate:               396.860 MB/sec
[info]                  ·gc.alloc.rate.norm:          1279.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1053.557 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 493748.931 ops/s
[info]                  ·gc.alloc.rate:                   400.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              1276.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1043.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   497526.947 ±(99.9%) 30264.756 ops/s [Average]
[info]   (min, avg, max) = (488124.585, 497526.947, 506963.303), stdev = 7859.661
[info]   CI (99.9%): [467262.191, 527791.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   403.064 ±(99.9%) 30.983 MB/sec [Average]
[info]   (min, avg, max) = (396.391, 403.064, 415.755), stdev = 8.046
[info]   CI (99.9%): [372.081, 434.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1274.848 ±(99.9%) 43.532 B/op [Average]
[info]   (min, avg, max) = (1261.671, 1274.848, 1290.701), stdev = 11.305
[info]   CI (99.9%): [1231.316, 1318.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   377.826 ±(99.9%) 602.395 MB/sec [Average]
[info]   (min, avg, max) = (255.811, 377.826, 652.181), stdev = 156.440
[info]   CI (99.9%): [≈ 0, 980.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1191.175 ±(99.9%) 1833.524 B/op [Average]
[info]   (min, avg, max) = (814.220, 1191.175, 2024.681), stdev = 476.160
[info]   CI (99.9%): [≈ 0, 3024.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.052 ±(99.9%) 0.325 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.052, 0.194), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:12:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 350858.207 ops/s
[info] # Warmup Iteration   2: 588969.393 ops/s
[info] # Warmup Iteration   3: 623934.710 ops/s
[info] Iteration   1: 629494.273 ops/s
[info]                  ·gc.alloc.rate:               347.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          868.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 639.543 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 632864.537 ops/s
[info]                  ·gc.alloc.rate:               347.835 MB/sec
[info]                  ·gc.alloc.rate.norm:          864.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 818.416 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 600936.298 ops/s
[info]                  ·gc.alloc.rate:                   354.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              927.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 622276.237 ops/s
[info]                  ·gc.alloc.rate:               349.389 MB/sec
[info]                  ·gc.alloc.rate.norm:          883.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 833.966 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 624510.123 ops/s
[info]                  ·gc.alloc.rate:               349.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          880.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 830.987 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   622016.293 ±(99.9%) 48104.451 ops/s [Average]
[info]   (min, avg, max) = (600936.298, 622016.293, 632864.537), stdev = 12492.573
[info]   CI (99.9%): [573911.842, 670120.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   349.703 ±(99.9%) 10.411 MB/sec [Average]
[info]   (min, avg, max) = (347.503, 349.703, 354.262), stdev = 2.704
[info]   CI (99.9%): [339.292, 360.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   885.053 ±(99.9%) 95.874 B/op [Average]
[info]   (min, avg, max) = (864.963, 885.053, 927.353), stdev = 24.898
[info]   CI (99.9%): [789.179, 980.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   314.756 ±(99.9%) 126.879 MB/sec [Average]
[info]   (min, avg, max) = (255.816, 314.756, 329.803), stdev = 32.950
[info]   CI (99.9%): [187.877, 441.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   796.957 ±(99.9%) 344.313 B/op [Average]
[info]   (min, avg, max) = (639.543, 796.957, 861.875), stdev = 89.417
[info]   CI (99.9%): [452.644, 1141.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.055), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 273755.887 ops/s
[info] # Warmup Iteration   2: 684963.250 ops/s
[info] # Warmup Iteration   3: 693387.892 ops/s
[info] Iteration   1: 658351.383 ops/s
[info]                  ·gc.alloc.rate:      6.694 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 693900.181 ops/s
[info]                  ·gc.alloc.rate:      7.080 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.055 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 675695.462 ops/s
[info]                  ·gc.alloc.rate:      6.871 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 694027.727 ops/s
[info]                  ·gc.alloc.rate:      7.057 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 694114.299 ops/s
[info]                  ·gc.alloc.rate:      7.058 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   683217.811 ±(99.9%) 61629.124 ops/s [Average]
[info]   (min, avg, max) = (658351.383, 683217.811, 694114.299), stdev = 16004.888
[info]   CI (99.9%): [621588.687, 744846.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   6.952 ±(99.9%) 0.644 MB/sec [Average]
[info]   (min, avg, max) = (6.694, 6.952, 7.080), stdev = 0.167
[info]   CI (99.9%): [6.308, 7.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.012 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.012, 16.055), stdev = 0.024
[info]   CI (99.9%): [15.918, 16.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:12:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8163.192 ops/s
[info] # Warmup Iteration   2: 31157.627 ops/s
[info] # Warmup Iteration   3: 34020.451 ops/s
[info] Iteration   1: 34538.014 ops/s
[info]                  ·gc.alloc.rate:                   1873.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              85364.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90368.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.955 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 180.237 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 34930.254 ops/s
[info]                  ·gc.alloc.rate:                   1899.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              85596.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88659.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.317 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 34859.969 ops/s
[info]                  ·gc.alloc.rate:               1903.681 MB/sec
[info]                  ·gc.alloc.rate.norm:          85945.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74228.017 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 35152.450 ops/s
[info]                  ·gc.alloc.rate:                   1933.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              86564.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88984.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.932 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 34394.861 ops/s
[info]                  ·gc.alloc.rate:               1880.645 MB/sec
[info]                  ·gc.alloc.rate.norm:          86015.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1669.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76344.039 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   34775.109 ±(99.9%) 1178.164 ops/s [Average]
[info]   (min, avg, max) = (34394.861, 34775.109, 35152.450), stdev = 305.965
[info]   CI (99.9%): [33596.945, 35953.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1898.204 ±(99.9%) 90.214 MB/sec [Average]
[info]   (min, avg, max) = (1873.418, 1898.204, 1933.419), stdev = 23.428
[info]   CI (99.9%): [1807.990, 1988.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   85897.232 ±(99.9%) 1760.177 B/op [Average]
[info]   (min, avg, max) = (85364.746, 85897.232, 86564.654), stdev = 457.112
[info]   CI (99.9%): [84137.055, 87657.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1850.377 ±(99.9%) 682.341 MB/sec [Average]
[info]   (min, avg, max) = (1644.150, 1850.377, 1987.465), stdev = 177.202
[info]   CI (99.9%): [1168.036, 2532.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   83716.950 ±(99.9%) 29877.977 B/op [Average]
[info]   (min, avg, max) = (74228.017, 83716.950, 90368.837), stdev = 7759.216
[info]   CI (99.9%): [53838.973, 113594.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 6.714 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 3.955), stdev = 1.744
[info]   CI (99.9%): [≈ 0, 7.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   38.297 ±(99.9%) 305.994 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.297, 180.237), stdev = 79.466
[info]   CI (99.9%): [≈ 0, 344.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 16.000), stdev = 3.782
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:11:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63772.778 ops/s
[info] # Warmup Iteration   2: 649133.850 ops/s
[info] # Warmup Iteration   3: 816417.729 ops/s
[info] Iteration   1: 857733.561 ops/s
[info]                  ·gc.alloc.rate:                   2283.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              4189.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2309.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4237.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.372 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 857672.328 ops/s
[info]                  ·gc.alloc.rate:                   2306.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              4231.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2297.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4214.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 861347.114 ops/s
[info]                  ·gc.alloc.rate:                   2311.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              4222.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3624.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 857911.478 ops/s
[info]                  ·gc.alloc.rate:                   2317.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              4249.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2335.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4282.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 863615.867 ops/s
[info]                  ·gc.alloc.rate:                   2332.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              4250.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2353.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4287.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   859656.070 ±(99.9%) 10406.449 ops/s [Average]
[info]   (min, avg, max) = (857672.328, 859656.070, 863615.867), stdev = 2702.522
[info]   CI (99.9%): [849249.621, 870062.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2310.313 ±(99.9%) 68.741 MB/sec [Average]
[info]   (min, avg, max) = (2283.478, 2310.313, 2332.498), stdev = 17.852
[info]   CI (99.9%): [2241.572, 2379.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4228.906 ±(99.9%) 95.412 B/op [Average]
[info]   (min, avg, max) = (4189.978, 4228.906, 4250.373), stdev = 24.778
[info]   CI (99.9%): [4133.495, 4324.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2255.893 ±(99.9%) 591.465 MB/sec [Average]
[info]   (min, avg, max) = (1983.886, 2255.893, 2353.138), stdev = 153.602
[info]   CI (99.9%): [1664.427, 2847.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4129.525 ±(99.9%) 1094.234 B/op [Average]
[info]   (min, avg, max) = (3624.161, 4129.525, 4287.984), stdev = 284.169
[info]   CI (99.9%): [3035.291, 5223.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.870 ±(99.9%) 6.777 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.870, 4.018), stdev = 1.760
[info]   CI (99.9%): [≈ 0, 7.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.596 ±(99.9%) 12.435 B/op [Average]
[info]   (min, avg, max) = (0.076, 1.596, 7.372), stdev = 3.229
[info]   CI (99.9%): [≈ 0, 14.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 14.000), stdev = 2.074
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:11:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16626.326 ops/s
[info] # Warmup Iteration   2: 1544833.472 ops/s
[info] # Warmup Iteration   3: 1800707.693 ops/s
[info] Iteration   1: 1817359.804 ops/s
[info]                  ·gc.alloc.rate:                   1155.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1833182.374 ops/s
[info]                  ·gc.alloc.rate:                   1180.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              1013.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1122.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1870366.962 ops/s
[info]                  ·gc.alloc.rate:                   1194.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              1004.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1099.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.434 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.731 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1836530.357 ops/s
[info]                  ·gc.alloc.rate:                   1169.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              1002.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     835.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1846745.950 ops/s
[info]                  ·gc.alloc.rate:                   1183.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              1008.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1108.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1840837.089 ±(99.9%) 75438.566 ops/s [Average]
[info]   (min, avg, max) = (1817359.804, 1840837.089, 1870366.962), stdev = 19591.156
[info]   CI (99.9%): [1765398.524, 1916275.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1176.871 ±(99.9%) 56.299 MB/sec [Average]
[info]   (min, avg, max) = (1155.853, 1176.871, 1194.174), stdev = 14.621
[info]   CI (99.9%): [1120.573, 1233.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1006.183 ±(99.9%) 19.799 B/op [Average]
[info]   (min, avg, max) = (1000.934, 1006.183, 1013.611), stdev = 5.142
[info]   CI (99.9%): [986.384, 1025.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1173.511 ±(99.9%) 693.440 MB/sec [Average]
[info]   (min, avg, max) = (974.893, 1173.511, 1307.016), stdev = 180.084
[info]   CI (99.9%): [480.072, 1866.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1002.561 ±(99.9%) 568.807 B/op [Average]
[info]   (min, avg, max) = (835.475, 1002.561, 1122.102), stdev = 147.717
[info]   CI (99.9%): [433.754, 1571.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.926 ±(99.9%) 7.551 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.926, 4.434), stdev = 1.961
[info]   CI (99.9%): [≈ 0, 8.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.780 ±(99.9%) 6.353 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.780, 3.731), stdev = 1.650
[info]   CI (99.9%): [≈ 0, 7.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 15.000), stdev = 4.324
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:11:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1800799.348 ops/s
[info] # Warmup Iteration   2: 8177751.327 ops/s
[info] # Warmup Iteration   3: 8595256.293 ops/s
[info] Iteration   1: 8585459.174 ops/s
[info]                  ·gc.alloc.rate:               267.641 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.894 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 8464275.721 ops/s
[info]                  ·gc.alloc.rate:               291.042 MB/sec
[info]                  ·gc.alloc.rate.norm:          54.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 95.131 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 8650486.130 ops/s
[info]                  ·gc.alloc.rate:      263.818 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 8602874.245 ops/s
[info]                  ·gc.alloc.rate:                   273.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 8609345.383 ops/s
[info]                  ·gc.alloc.rate:                   272.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   8582488.130 ±(99.9%) 270530.924 ops/s [Average]
[info]   (min, avg, max) = (8464275.721, 8582488.130, 8650486.130), stdev = 70256.022
[info]   CI (99.9%): [8311957.206, 8853019.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   273.718 ±(99.9%) 40.202 MB/sec [Average]
[info]   (min, avg, max) = (263.818, 273.718, 291.042), stdev = 10.440
[info]   CI (99.9%): [233.517, 313.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   50.207 ±(99.9%) 8.945 B/op [Average]
[info]   (min, avg, max) = (48.000, 50.207, 54.111), stdev = 2.323
[info]   CI (99.9%): [41.262, 59.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   285.672 ±(99.9%) 714.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 285.672, 511.668), stdev = 185.458
[info]   CI (99.9%): [≈ 0, 999.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   52.576 ±(99.9%) 132.424 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.576, 95.131), stdev = 34.390
[info]   CI (99.9%): [≈ 0, 185.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 1.817
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4413.088 ops/s
[info] # Warmup Iteration   2: 99323.725 ops/s
[info] # Warmup Iteration   3: 212318.425 ops/s
[info] Iteration   1: 307621.761 ops/s
[info]                  ·gc.alloc.rate:                   2120.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              10844.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10091.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.538 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 320635.581 ops/s
[info]                  ·gc.alloc.rate:                   2147.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              10537.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2318.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11376.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.168 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 319118.716 ops/s
[info]                  ·gc.alloc.rate:                   2113.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              10421.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9839.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.745 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 325017.190 ops/s
[info]                  ·gc.alloc.rate:                   2176.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              10536.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9704.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 322135.081 ops/s
[info]                  ·gc.alloc.rate:               2185.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          10672.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2350.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11477.827 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   318905.666 ±(99.9%) 25697.412 ops/s [Average]
[info]   (min, avg, max) = (307621.761, 318905.666, 325017.190), stdev = 6673.536
[info]   CI (99.9%): [293208.253, 344603.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2148.696 ±(99.9%) 124.055 MB/sec [Average]
[info]   (min, avg, max) = (2113.797, 2148.696, 2185.586), stdev = 32.217
[info]   CI (99.9%): [2024.642, 2272.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10602.688 ±(99.9%) 623.762 B/op [Average]
[info]   (min, avg, max) = (10421.726, 10602.688, 10844.853), stdev = 161.989
[info]   CI (99.9%): [9978.926, 11226.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2128.453 ±(99.9%) 727.317 MB/sec [Average]
[info]   (min, avg, max) = (1972.796, 2128.453, 2350.414), stdev = 188.882
[info]   CI (99.9%): [1401.137, 2855.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10498.103 ±(99.9%) 3311.937 B/op [Average]
[info]   (min, avg, max) = (9704.826, 10498.103, 11477.827), stdev = 860.100
[info]   CI (99.9%): [7186.166, 13810.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.421 ±(99.9%) 1.754 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.421, 1.083), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 2.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.110 ±(99.9%) 8.926 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.110, 5.538), stdev = 2.318
[info]   CI (99.9%): [≈ 0, 11.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.600, 14.000), stdev = 2.408
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:11:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76410.176 ops/s
[info] # Warmup Iteration   2: 1027952.457 ops/s
[info] # Warmup Iteration   3: 1053099.512 ops/s
[info] Iteration   1: 1079252.615 ops/s
[info]                  ·gc.alloc.rate:                   1755.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              2559.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2409.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.374 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 1086672.132 ops/s
[info]                  ·gc.alloc.rate:                   1782.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              2581.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2854.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1105254.646 ops/s
[info]                  ·gc.alloc.rate:                   1809.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              2577.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2340.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1091653.165 ops/s
[info]                  ·gc.alloc.rate:                   1796.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              2590.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2381.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1101689.993 ops/s
[info]                  ·gc.alloc.rate:               1813.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          2590.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2377.262 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1092904.510 ±(99.9%) 41135.855 ops/s [Average]
[info]   (min, avg, max) = (1079252.615, 1092904.510, 1105254.646), stdev = 10682.851
[info]   CI (99.9%): [1051768.655, 1134040.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1791.487 ±(99.9%) 91.400 MB/sec [Average]
[info]   (min, avg, max) = (1755.170, 1791.487, 1813.532), stdev = 23.736
[info]   CI (99.9%): [1700.087, 1882.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2579.716 ±(99.9%) 48.945 B/op [Average]
[info]   (min, avg, max) = (2559.432, 2579.716, 2590.693), stdev = 12.711
[info]   CI (99.9%): [2530.770, 2628.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1716.588 ±(99.9%) 547.461 MB/sec [Average]
[info]   (min, avg, max) = (1643.749, 1716.588, 1970.585), stdev = 142.174
[info]   CI (99.9%): [1169.128, 2264.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2472.630 ±(99.9%) 826.441 B/op [Average]
[info]   (min, avg, max) = (2340.741, 2472.630, 2854.045), stdev = 214.624
[info]   CI (99.9%): [1646.189, 3299.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 6.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.808, 3.685), stdev = 1.612
[info]   CI (99.9%): [≈ 0, 7.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.177 ±(99.9%) 9.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.177, 5.374), stdev = 2.351
[info]   CI (99.9%): [≈ 0, 10.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.400, 22.000), stdev = 6.656
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:10:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 234219.767 ops/s
[info] # Warmup Iteration   2: 2592270.894 ops/s
[info] # Warmup Iteration   3: 2680713.632 ops/s
[info] Iteration   1: 2694302.466 ops/s
[info]                  ·gc.alloc.rate:               1178.359 MB/sec
[info]                  ·gc.alloc.rate.norm:          688.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 574.559 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 2687293.869 ops/s
[info]                  ·gc.alloc.rate:                   1188.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              695.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     769.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.914 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 2765200.327 ops/s
[info]                  ·gc.alloc.rate:                   1205.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              686.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     560.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2715131.428 ops/s
[info]                  ·gc.alloc.rate:                   1203.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              697.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     757.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2627074.958 ops/s
[info]                  ·gc.alloc.rate:                   1160.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              695.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     588.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   2697800.610 ±(99.9%) 192222.217 ops/s [Average]
[info]   (min, avg, max) = (2627074.958, 2697800.610, 2765200.327), stdev = 49919.499
[info]   CI (99.9%): [2505578.393, 2890022.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1187.313 ±(99.9%) 72.113 MB/sec [Average]
[info]   (min, avg, max) = (1160.556, 1187.313, 1205.914), stdev = 18.728
[info]   CI (99.9%): [1115.200, 1259.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   692.620 ±(99.9%) 19.434 B/op [Average]
[info]   (min, avg, max) = (686.212, 692.620, 697.582), stdev = 5.047
[info]   CI (99.9%): [673.186, 712.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1114.610 ±(99.9%) 691.331 MB/sec [Average]
[info]   (min, avg, max) = (982.005, 1114.610, 1314.899), stdev = 179.537
[info]   CI (99.9%): [423.279, 1805.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   650.232 ±(99.9%) 401.929 B/op [Average]
[info]   (min, avg, max) = (560.400, 650.232, 769.963), stdev = 104.380
[info]   CI (99.9%): [248.303, 1052.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 5.444 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.269), stdev = 1.414
[info]   CI (99.9%): [≈ 0, 6.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.454 ±(99.9%) 3.189 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.454, 1.914), stdev = 0.828
[info]   CI (99.9%): [≈ 0, 3.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 13.000), stdev = 3.782
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:10:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1195489.081 ops/s
[info] # Warmup Iteration   2: 5792150.691 ops/s
[info] # Warmup Iteration   3: 6256584.582 ops/s
[info] Iteration   1: 6348596.667 ops/s
[info]                  ·gc.alloc.rate:                   728.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              180.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 6339609.752 ops/s
[info]                  ·gc.alloc.rate:                   729.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              181.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 6344581.859 ops/s
[info]                  ·gc.alloc.rate:                   725.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              180.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     164.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6397501.374 ops/s
[info]                  ·gc.alloc.rate:                   729.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              179.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6207181.923 ops/s
[info]                  ·gc.alloc.rate:                   720.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              182.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.823 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   6327494.315 ±(99.9%) 274046.688 ops/s [Average]
[info]   (min, avg, max) = (6207181.923, 6327494.315, 6397501.374), stdev = 71169.054
[info]   CI (99.9%): [6053447.627, 6601541.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   726.828 ±(99.9%) 14.778 MB/sec [Average]
[info]   (min, avg, max) = (720.592, 726.828, 729.877), stdev = 3.838
[info]   CI (99.9%): [712.049, 741.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   180.797 ±(99.9%) 4.656 B/op [Average]
[info]   (min, avg, max) = (179.559, 180.797, 182.706), stdev = 1.209
[info]   CI (99.9%): [176.140, 185.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   727.788 ±(99.9%) 575.026 MB/sec [Average]
[info]   (min, avg, max) = (659.530, 727.788, 994.914), stdev = 149.332
[info]   CI (99.9%): [152.762, 1302.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   181.363 ±(99.9%) 152.622 B/op [Average]
[info]   (min, avg, max) = (162.985, 181.363, 252.261), stdev = 39.635
[info]   CI (99.9%): [28.741, 333.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.674 ±(99.9%) 5.539 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.674, 3.248), stdev = 1.438
[info]   CI (99.9%): [≈ 0, 6.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.171 ±(99.9%) 1.405 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.171, 0.823), stdev = 0.365
[info]   CI (99.9%): [≈ 0, 1.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:10:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 782579.671 ops/s
[info] # Warmup Iteration   2: 6300737.752 ops/s
[info] # Warmup Iteration   3: 6750877.134 ops/s
[info] Iteration   1: 6715491.032 ops/s
[info]                  ·gc.alloc.rate:               425.014 MB/sec
[info]                  ·gc.alloc.rate.norm:          99.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.952 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 6793929.831 ops/s
[info]                  ·gc.alloc.rate:               423.117 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76.233 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 6743440.179 ops/s
[info]                  ·gc.alloc.rate:                   435.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              101.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6747223.725 ops/s
[info]                  ·gc.alloc.rate:               423.592 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76.917 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 6784047.576 ops/s
[info]                  ·gc.alloc.rate:                   423.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   6756826.469 ±(99.9%) 123245.751 ops/s [Average]
[info]   (min, avg, max) = (6715491.032, 6756826.469, 6793929.831), stdev = 32006.530
[info]   CI (99.9%): [6633580.718, 6880072.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   426.168 ±(99.9%) 20.591 MB/sec [Average]
[info]   (min, avg, max) = (423.117, 426.168, 435.646), stdev = 5.347
[info]   CI (99.9%): [405.577, 446.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   99.258 ±(99.9%) 5.687 B/op [Average]
[info]   (min, avg, max) = (98.010, 99.258, 101.656), stdev = 1.477
[info]   CI (99.9%): [93.571, 104.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   380.834 ±(99.9%) 611.297 MB/sec [Average]
[info]   (min, avg, max) = (255.808, 380.834, 658.974), stdev = 158.752
[info]   CI (99.9%): [≈ 0, 992.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   88.706 ±(99.9%) 142.782 B/op [Average]
[info]   (min, avg, max) = (59.952, 88.706, 153.769), stdev = 37.080
[info]   CI (99.9%): [≈ 0, 231.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.100 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.052), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.012), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 7.000), stdev = 2.074
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15378.810 ops/s
[info] # Warmup Iteration   2: 348463.090 ops/s
[info] # Warmup Iteration   3: 407236.117 ops/s
[info] Iteration   1: 418645.021 ops/s
[info]                  ·gc.alloc.rate:                   2326.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              8742.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2285.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8587.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.218 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 423655.875 ops/s
[info]                  ·gc.alloc.rate:                   2371.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              8807.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2281.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8471.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 422273.743 ops/s
[info]                  ·gc.alloc.rate:               2377.043 MB/sec
[info]                  ·gc.alloc.rate.norm:          8859.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2305.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8594.356 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 422777.142 ops/s
[info]                  ·gc.alloc.rate:                   2381.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              8864.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2332.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8682.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 417178.183 ops/s
[info]                  ·gc.alloc.rate:               2338.838 MB/sec
[info]                  ·gc.alloc.rate.norm:          8822.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2014.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7599.706 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   420905.993 ±(99.9%) 10881.451 ops/s [Average]
[info]   (min, avg, max) = (417178.183, 420905.993, 423655.875), stdev = 2825.878
[info]   CI (99.9%): [410024.542, 431787.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2359.069 ±(99.9%) 95.298 MB/sec [Average]
[info]   (min, avg, max) = (2326.463, 2359.069, 2381.333), stdev = 24.749
[info]   CI (99.9%): [2263.771, 2454.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   8819.507 ±(99.9%) 189.879 B/op [Average]
[info]   (min, avg, max) = (8742.653, 8819.507, 8864.900), stdev = 49.311
[info]   CI (99.9%): [8629.629, 9009.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2243.864 ±(99.9%) 499.604 MB/sec [Average]
[info]   (min, avg, max) = (2014.640, 2243.864, 2332.448), stdev = 129.746
[info]   CI (99.9%): [1744.259, 2743.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   8387.229 ±(99.9%) 1719.702 B/op [Average]
[info]   (min, avg, max) = (7599.706, 8387.229, 8682.917), stdev = 446.601
[info]   CI (99.9%): [6667.528, 10106.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.941 ±(99.9%) 7.837 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.941, 4.582), stdev = 2.035
[info]   CI (99.9%): [≈ 0, 8.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.536 ±(99.9%) 29.454 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.536, 17.218), stdev = 7.649
[info]   CI (99.9%): [≈ 0, 32.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.400, 13.000), stdev = 1.817
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:10:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17011.979 ops/s
[info] # Warmup Iteration   2: 72911.448 ops/s
[info] # Warmup Iteration   3: 74903.145 ops/s
[info] Iteration   1: 78994.550 ops/s
[info]                  ·gc.alloc.rate:                   2199.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              43821.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2310.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46040.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.240 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 78242.927 ops/s
[info]                  ·gc.alloc.rate:                   2182.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              43884.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39703.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.256 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 79151.647 ops/s
[info]                  ·gc.alloc.rate:               2234.466 MB/sec
[info]                  ·gc.alloc.rate.norm:          44426.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2318.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46106.827 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 78101.944 ops/s
[info]                  ·gc.alloc.rate:                   2193.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              44204.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40393.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.420 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 78177.238 ops/s
[info]                  ·gc.alloc.rate:               2197.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          44215.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2018.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40623.351 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   78533.661 ±(99.9%) 1917.864 ops/s [Average]
[info]   (min, avg, max) = (78101.944, 78533.661, 79151.647), stdev = 498.063
[info]   CI (99.9%): [76615.797, 80451.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2201.406 ±(99.9%) 75.534 MB/sec [Average]
[info]   (min, avg, max) = (2182.346, 2201.406, 2234.466), stdev = 19.616
[info]   CI (99.9%): [2125.872, 2276.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   44110.471 ±(99.9%) 971.208 B/op [Average]
[info]   (min, avg, max) = (43821.289, 44110.471, 44426.450), stdev = 252.220
[info]   CI (99.9%): [43139.263, 45081.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2125.474 ±(99.9%) 668.666 MB/sec [Average]
[info]   (min, avg, max) = (1974.437, 2125.474, 2318.982), stdev = 173.650
[info]   CI (99.9%): [1456.808, 2794.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   42573.509 ±(99.9%) 12372.431 B/op [Average]
[info]   (min, avg, max) = (39703.662, 42573.509, 46106.827), stdev = 3213.081
[info]   CI (99.9%): [30201.078, 54945.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 6.381 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.762, 3.726), stdev = 1.657
[info]   CI (99.9%): [≈ 0, 7.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   15.183 ±(99.9%) 127.139 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.183, 74.240), stdev = 33.018
[info]   CI (99.9%): [≈ 0, 142.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 13.000), stdev = 2.387
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:09:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11156.203 ops/s
[info] # Warmup Iteration   2: 106848.952 ops/s
[info] # Warmup Iteration   3: 120360.692 ops/s
[info] Iteration   1: 126157.323 ops/s
[info]                  ·gc.alloc.rate:                   1981.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              24709.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24508.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.579 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 126842.683 ops/s
[info]                  ·gc.alloc.rate:                   1992.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              24717.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24201.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.808 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 125072.514 ops/s
[info]                  ·gc.alloc.rate:               1992.707 MB/sec
[info]                  ·gc.alloc.rate.norm:          25064.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1962.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24685.689 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 125678.749 ops/s
[info]                  ·gc.alloc.rate:                   1997.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              24988.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24788.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 127471.448 ops/s
[info]                  ·gc.alloc.rate:               2017.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          24904.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1666.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20579.667 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   126244.543 ±(99.9%) 3634.961 ops/s [Average]
[info]   (min, avg, max) = (125072.514, 126244.543, 127471.448), stdev = 943.988
[info]   CI (99.9%): [122609.582, 129879.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1996.158 ±(99.9%) 50.614 MB/sec [Average]
[info]   (min, avg, max) = (1981.370, 1996.158, 2017.215), stdev = 13.144
[info]   CI (99.9%): [1945.544, 2046.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24876.892 ±(99.9%) 613.789 B/op [Average]
[info]   (min, avg, max) = (24709.603, 24876.892, 25064.126), stdev = 159.399
[info]   CI (99.9%): [24263.103, 25490.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1905.348 ±(99.9%) 514.919 MB/sec [Average]
[info]   (min, avg, max) = (1666.939, 1905.348, 1981.305), stdev = 133.723
[info]   CI (99.9%): [1390.429, 2420.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23752.933 ±(99.9%) 6884.249 B/op [Average]
[info]   (min, avg, max) = (20579.667, 23752.933, 24788.598), stdev = 1787.818
[info]   CI (99.9%): [16868.684, 30637.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.925 ±(99.9%) 7.607 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.925, 4.457), stdev = 1.975
[info]   CI (99.9%): [≈ 0, 8.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.529 ±(99.9%) 94.864 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.529, 55.579), stdev = 24.636
[info]   CI (99.9%): [≈ 0, 106.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 15.000), stdev = 3.209
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:09:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54696.621 ops/s
[info] # Warmup Iteration   2: 162250.138 ops/s
[info] # Warmup Iteration   3: 174632.210 ops/s
[info] Iteration   1: 176377.964 ops/s
[info]                  ·gc.alloc.rate:                   2681.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              23925.331 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2640.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23562.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.043 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 177065.691 ops/s
[info]                  ·gc.alloc.rate:                   2706.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              24050.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2656.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23607.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 178739.207 ops/s
[info]                  ·gc.alloc.rate:               2719.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          23938.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2345.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20643.985 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 177530.479 ops/s
[info]                  ·gc.alloc.rate:                   2714.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              24067.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2697.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23909.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 178531.970 ops/s
[info]                  ·gc.alloc.rate:               2730.400 MB/sec
[info]                  ·gc.alloc.rate.norm:          24070.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2708.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23877.585 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   177649.062 ±(99.9%) 3820.692 ops/s [Average]
[info]   (min, avg, max) = (176377.964, 177649.062, 178739.207), stdev = 992.222
[info]   CI (99.9%): [173828.370, 181469.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2710.434 ±(99.9%) 71.013 MB/sec [Average]
[info]   (min, avg, max) = (2681.353, 2710.434, 2730.400), stdev = 18.442
[info]   CI (99.9%): [2639.421, 2781.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24010.300 ±(99.9%) 277.416 B/op [Average]
[info]   (min, avg, max) = (23925.331, 24010.300, 24070.342), stdev = 72.044
[info]   CI (99.9%): [23732.884, 24287.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2609.573 ±(99.9%) 579.569 MB/sec [Average]
[info]   (min, avg, max) = (2345.024, 2609.573, 2708.534), stdev = 150.512
[info]   CI (99.9%): [2030.004, 3189.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   23120.310 ±(99.9%) 5363.976 B/op [Average]
[info]   (min, avg, max) = (20643.985, 23120.310, 23909.659), stdev = 1393.007
[info]   CI (99.9%): [17756.334, 28484.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.373 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.229), stdev = 0.097
[info]   CI (99.9%): [≈ 0, 0.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.520 ±(99.9%) 3.333 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.520, 2.043), stdev = 0.865
[info]   CI (99.9%): [≈ 0, 3.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 12.000), stdev = 0.894
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:09:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6101.293 ops/s
[info] # Warmup Iteration   2: 50374.343 ops/s
[info] # Warmup Iteration   3: 58749.414 ops/s
[info] Iteration   1: 59722.431 ops/s
[info]                  ·gc.alloc.rate:                   3024.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              79692.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2942.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77531.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.677 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.838 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 60937.140 ops/s
[info]                  ·gc.alloc.rate:                   3060.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              79047.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2971.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76745.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.151 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 60147.376 ops/s
[info]                  ·gc.alloc.rate:                   3055.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              79943.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3009.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78742.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.545 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 60772.155 ops/s
[info]                  ·gc.alloc.rate:                   3096.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              80204.294 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3035.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78609.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.078 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 60008.800 ops/s
[info]                  ·gc.alloc.rate:               3041.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          79763.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2710.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71089.602 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   60317.580 ±(99.9%) 1990.647 ops/s [Average]
[info]   (min, avg, max) = (59722.431, 60317.580, 60937.140), stdev = 516.965
[info]   CI (99.9%): [58326.934, 62308.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3055.571 ±(99.9%) 104.086 MB/sec [Average]
[info]   (min, avg, max) = (3024.032, 3055.571, 3096.811), stdev = 27.031
[info]   CI (99.9%): [2951.485, 3159.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79730.397 ±(99.9%) 1654.127 B/op [Average]
[info]   (min, avg, max) = (79047.949, 79730.397, 80204.294), stdev = 429.572
[info]   CI (99.9%): [78076.270, 81384.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2933.706 ±(99.9%) 499.447 MB/sec [Average]
[info]   (min, avg, max) = (2710.591, 2933.706, 3035.253), stdev = 129.705
[info]   CI (99.9%): [2434.260, 3433.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76543.908 ±(99.9%) 12157.020 B/op [Average]
[info]   (min, avg, max) = (71089.602, 76543.908, 78742.991), stdev = 3157.139
[info]   CI (99.9%): [64386.888, 88700.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.165 ±(99.9%) 1.109 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.165, 0.677), stdev = 0.288
[info]   CI (99.9%): [≈ 0, 1.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.322 ±(99.9%) 29.254 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.322, 17.838), stdev = 7.597
[info]   CI (99.9%): [≈ 0, 33.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   44.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 12.800, 13.000), stdev = 0.447
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:09:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47041.370 ops/s
[info] # Warmup Iteration   2: 176720.775 ops/s
[info] # Warmup Iteration   3: 182841.569 ops/s
[info] Iteration   1: 186515.151 ops/s
[info]                  ·gc.alloc.rate:                   1318.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              11119.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11140.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.351 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 187141.531 ops/s
[info]                  ·gc.alloc.rate:                   1319.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              11092.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11110.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.713 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 184954.730 ops/s
[info]                  ·gc.alloc.rate:                   1322.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              11250.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11184.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 187526.091 ops/s
[info]                  ·gc.alloc.rate:               1340.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          11244.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11030.345 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 188155.272 ops/s
[info]                  ·gc.alloc.rate:                   1331.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              11136.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8269.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   186858.555 ±(99.9%) 4696.219 ops/s [Average]
[info]   (min, avg, max) = (184954.730, 186858.555, 188155.272), stdev = 1219.593
[info]   CI (99.9%): [182162.336, 191554.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1326.328 ±(99.9%) 36.683 MB/sec [Average]
[info]   (min, avg, max) = (1318.022, 1326.328, 1340.387), stdev = 9.526
[info]   CI (99.9%): [1289.645, 1363.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11168.668 ±(99.9%) 284.554 B/op [Average]
[info]   (min, avg, max) = (11092.234, 11168.668, 11250.959), stdev = 73.898
[info]   CI (99.9%): [10884.114, 11453.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1252.020 ±(99.9%) 566.562 MB/sec [Average]
[info]   (min, avg, max) = (988.878, 1252.020, 1321.281), stdev = 147.134
[info]   CI (99.9%): [685.458, 1818.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10546.980 ±(99.9%) 4907.820 B/op [Average]
[info]   (min, avg, max) = (8269.228, 10546.980, 11184.372), stdev = 1274.545
[info]   CI (99.9%): [5639.160, 15454.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.745 ±(99.9%) 5.759 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.745, 3.415), stdev = 1.496
[info]   CI (99.9%): [≈ 0, 6.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.273 ±(99.9%) 48.417 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.273, 28.713), stdev = 12.574
[info]   CI (99.9%): [≈ 0, 54.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.408
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:08:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161985.161 ops/s
[info] # Warmup Iteration   2: 425053.286 ops/s
[info] # Warmup Iteration   3: 442446.909 ops/s
[info] Iteration   1: 468422.927 ops/s
[info]                  ·gc.alloc.rate:               416.000 MB/sec
[info]                  ·gc.alloc.rate.norm:          1397.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 859.514 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 458750.154 ops/s
[info]                  ·gc.alloc.rate:                   415.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              1425.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2232.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 461339.804 ops/s
[info]                  ·gc.alloc.rate:               408.637 MB/sec
[info]                  ·gc.alloc.rate.norm:          1394.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1113.551 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 453975.193 ops/s
[info]                  ·gc.alloc.rate:                   404.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              1403.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1131.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 466872.473 ops/s
[info]                  ·gc.alloc.rate:               414.181 MB/sec
[info]                  ·gc.alloc.rate.norm:          1395.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1102.634 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   461872.110 ±(99.9%) 22805.769 ops/s [Average]
[info]   (min, avg, max) = (453975.193, 461872.110, 468422.927), stdev = 5922.586
[info]   CI (99.9%): [439066.341, 484677.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   411.835 ±(99.9%) 18.573 MB/sec [Average]
[info]   (min, avg, max) = (404.959, 411.835, 416.000), stdev = 4.823
[info]   CI (99.9%): [393.262, 430.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1403.241 ±(99.9%) 48.869 B/op [Average]
[info]   (min, avg, max) = (1394.077, 1403.241, 1425.087), stdev = 12.691
[info]   CI (99.9%): [1354.372, 1452.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   377.359 ±(99.9%) 600.498 MB/sec [Average]
[info]   (min, avg, max) = (255.814, 377.359, 650.868), stdev = 155.947
[info]   CI (99.9%): [≈ 0, 977.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1288.049 ±(99.9%) 2078.701 B/op [Average]
[info]   (min, avg, max) = (859.514, 1288.049, 2232.899), stdev = 539.832
[info]   CI (99.9%): [≈ 0, 3366.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.246 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.143), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:08:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 350203.031 ops/s
[info] # Warmup Iteration   2: 625727.381 ops/s
[info] # Warmup Iteration   3: 637501.337 ops/s
[info] Iteration   1: 630172.177 ops/s
[info]                  ·gc.alloc.rate:               348.240 MB/sec
[info]                  ·gc.alloc.rate.norm:          869.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 638.869 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 602344.574 ops/s
[info]                  ·gc.alloc.rate:               345.820 MB/sec
[info]                  ·gc.alloc.rate.norm:          903.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 860.738 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 639459.810 ops/s
[info]                  ·gc.alloc.rate:               355.661 MB/sec
[info]                  ·gc.alloc.rate.norm:          874.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 810.773 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 630387.805 ops/s
[info]                  ·gc.alloc.rate:               349.212 MB/sec
[info]                  ·gc.alloc.rate.norm:          871.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 824.108 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 643642.490 ops/s
[info]                  ·gc.alloc.rate:                   358.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     807.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   629201.371 ±(99.9%) 62012.679 ops/s [Average]
[info]   (min, avg, max) = (602344.574, 629201.371, 643642.490), stdev = 16104.496
[info]   CI (99.9%): [567188.692, 691214.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   351.502 ±(99.9%) 20.696 MB/sec [Average]
[info]   (min, avg, max) = (345.820, 351.502, 358.579), stdev = 5.375
[info]   CI (99.9%): [330.806, 372.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   879.298 ±(99.9%) 53.274 B/op [Average]
[info]   (min, avg, max) = (869.376, 879.298, 903.517), stdev = 13.835
[info]   CI (99.9%): [826.024, 932.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   315.022 ±(99.9%) 127.252 MB/sec [Average]
[info]   (min, avg, max) = (255.908, 315.022, 330.098), stdev = 33.047
[info]   CI (99.9%): [187.770, 442.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   788.326 ±(99.9%) 331.910 B/op [Average]
[info]   (min, avg, max) = (638.869, 788.326, 860.738), stdev = 86.196
[info]   CI (99.9%): [456.416, 1120.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.175 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.102), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:08:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 375497.483 ops/s
[info] # Warmup Iteration   2: 680518.923 ops/s
[info] # Warmup Iteration   3: 711229.157 ops/s
[info] Iteration   1: 706969.261 ops/s
[info]                  ·gc.alloc.rate:      7.187 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 715052.133 ops/s
[info]                  ·gc.alloc.rate:      7.271 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 714040.404 ops/s
[info]                  ·gc.alloc.rate:      7.260 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 713915.708 ops/s
[info]                  ·gc.alloc.rate:      7.258 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 710262.146 ops/s
[info]                  ·gc.alloc.rate:      7.221 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   712047.930 ±(99.9%) 12982.109 ops/s [Average]
[info]   (min, avg, max) = (706969.261, 712047.930, 715052.133), stdev = 3371.412
[info]   CI (99.9%): [699065.821, 725030.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.239 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (7.187, 7.239, 7.271), stdev = 0.035
[info]   CI (99.9%): [7.105, 7.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:08:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9204.154 ops/s
[info] # Warmup Iteration   2: 30518.325 ops/s
[info] # Warmup Iteration   3: 34206.538 ops/s
[info] Iteration   1: 33945.190 ops/s
[info]                  ·gc.alloc.rate:                   1846.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              85615.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91950.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 177.599 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 34622.086 ops/s
[info]                  ·gc.alloc.rate:                   1871.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              85056.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74552.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.678 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 34973.823 ops/s
[info]                  ·gc.alloc.rate:                   1910.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              85965.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88762.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.558 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 34963.134 ops/s
[info]                  ·gc.alloc.rate:                   1923.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              86564.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89462.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.937 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 34740.236 ops/s
[info]                  ·gc.alloc.rate:               1898.785 MB/sec
[info]                  ·gc.alloc.rate.norm:          86014.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1668.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75583.784 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   34648.894 ±(99.9%) 1620.690 ops/s [Average]
[info]   (min, avg, max) = (33945.190, 34648.894, 34973.823), stdev = 420.888
[info]   CI (99.9%): [33028.204, 36269.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1890.147 ±(99.9%) 119.023 MB/sec [Average]
[info]   (min, avg, max) = (1846.823, 1890.147, 1923.481), stdev = 30.910
[info]   CI (99.9%): [1771.124, 2009.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   85843.280 ±(99.9%) 2140.208 B/op [Average]
[info]   (min, avg, max) = (85056.314, 85843.280, 86564.747), stdev = 555.805
[info]   CI (99.9%): [83703.072, 87983.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1850.515 ±(99.9%) 690.816 MB/sec [Average]
[info]   (min, avg, max) = (1640.251, 1850.515, 1987.878), stdev = 179.403
[info]   CI (99.9%): [1159.698, 2541.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   84062.329 ±(99.9%) 31974.456 B/op [Average]
[info]   (min, avg, max) = (74552.215, 84062.329, 91950.006), stdev = 8303.665
[info]   CI (99.9%): [52087.873, 116036.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.824 ±(99.9%) 6.476 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.824, 3.831), stdev = 1.682
[info]   CI (99.9%): [≈ 0, 7.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   38.154 ±(99.9%) 300.368 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.154, 177.599), stdev = 78.005
[info]   CI (99.9%): [≈ 0, 338.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.200, 20.000), stdev = 5.541
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1092877.560 ops/s
[info] # Warmup Iteration   2: 3143116.596 ops/s
[info] # Warmup Iteration   3: 3356231.975 ops/s
[info] Iteration   1: 3392371.322 ops/s
[info]                  ·gc.alloc.rate:                   2941.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              1364.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2637.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1223.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3429503.212 ops/s
[info]                  ·gc.alloc.rate:                   2995.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              1374.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2995.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1374.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 3410601.589 ops/s
[info]                  ·gc.alloc.rate:                   2980.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              1375.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3024.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1395.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 3310506.819 ops/s
[info]                  ·gc.alloc.rate:                   2886.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              1371.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1285.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3292160.390 ops/s
[info]                  ·gc.alloc.rate:                   2867.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              1370.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1297.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   3367028.667 ±(99.9%) 237712.141 ops/s [Average]
[info]   (min, avg, max) = (3292160.390, 3367028.667, 3429503.212), stdev = 61733.088
[info]   CI (99.9%): [3129316.526, 3604740.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2934.061 ±(99.9%) 217.029 MB/sec [Average]
[info]   (min, avg, max) = (2867.083, 2934.061, 2995.015), stdev = 56.362
[info]   CI (99.9%): [2717.033, 3151.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1371.318 ±(99.9%) 15.498 B/op [Average]
[info]   (min, avg, max) = (1364.894, 1371.318, 1375.235), stdev = 4.025
[info]   CI (99.9%): [1355.820, 1386.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2815.258 ±(99.9%) 694.795 MB/sec [Average]
[info]   (min, avg, max) = (2637.298, 2815.258, 3024.535), stdev = 180.436
[info]   CI (99.9%): [2120.462, 3510.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1315.334 ±(99.9%) 269.071 B/op [Average]
[info]   (min, avg, max) = (1223.563, 1315.334, 1395.663), stdev = 69.877
[info]   CI (99.9%): [1046.263, 1584.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.023, 0.049), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.600, 15.000), stdev = 2.302
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:07:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.866 ops/s
[info] # Warmup Iteration   2: 5907939.508 ops/s
[info] # Warmup Iteration   3: 6191851.219 ops/s
[info] Iteration   1: 6131379.427 ops/s
[info]                  ·gc.alloc.rate:                   1189.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     333.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 6212065.085 ops/s
[info]                  ·gc.alloc.rate:                   1195.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     248.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 6293552.583 ops/s
[info]                  ·gc.alloc.rate:                   1222.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.307 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6237766.435 ops/s
[info]                  ·gc.alloc.rate:                   1211.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     327.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6278544.216 ops/s
[info]                  ·gc.alloc.rate:               1219.385 MB/sec
[info]                  ·gc.alloc.rate.norm:          305.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:      975.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 244.553 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   6230661.549 ±(99.9%) 247321.674 ops/s [Average]
[info]   (min, avg, max) = (6131379.427, 6230661.549, 6293552.583), stdev = 64228.653
[info]   CI (99.9%): [5983339.876, 6477983.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1207.623 ±(99.9%) 56.936 MB/sec [Average]
[info]   (min, avg, max) = (1189.024, 1207.623, 1222.802), stdev = 14.786
[info]   CI (99.9%): [1150.688, 1264.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   305.021 ±(99.9%) 4.632 B/op [Average]
[info]   (min, avg, max) = (302.901, 305.021, 305.737), stdev = 1.203
[info]   CI (99.9%): [300.389, 309.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1171.446 ±(99.9%) 682.420 MB/sec [Average]
[info]   (min, avg, max) = (975.733, 1171.446, 1303.562), stdev = 177.222
[info]   CI (99.9%): [489.027, 1853.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   295.991 ±(99.9%) 175.149 B/op [Average]
[info]   (min, avg, max) = (244.553, 295.991, 333.780), stdev = 45.486
[info]   CI (99.9%): [120.842, 471.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.896 ±(99.9%) 7.346 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.896, 4.307), stdev = 1.908
[info]   CI (99.9%): [≈ 0, 8.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 1.836 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.224, 1.077), stdev = 0.477
[info]   CI (99.9%): [≈ 0, 2.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 3.082
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:07:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1219364.453 ops/s
[info] # Warmup Iteration   2: 3898309.054 ops/s
[info] # Warmup Iteration   3: 4051903.907 ops/s
[info] Iteration   1: 4070253.866 ops/s
[info]                  ·gc.alloc.rate:                   2256.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              872.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     886.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4180215.978 ops/s
[info]                  ·gc.alloc.rate:                   2291.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              862.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2297.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     864.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 4144708.840 ops/s
[info]                  ·gc.alloc.rate:                   2290.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              869.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2319.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     880.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4179919.672 ops/s
[info]                  ·gc.alloc.rate:                   2309.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              869.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 4185543.985 ops/s
[info]                  ·gc.alloc.rate:               2327.745 MB/sec
[info]                  ·gc.alloc.rate.norm:          875.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2356.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 885.970 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   4152128.468 ±(99.9%) 187027.537 ops/s [Average]
[info]   (min, avg, max) = (4070253.866, 4152128.468, 4185543.985), stdev = 48570.458
[info]   CI (99.9%): [3965100.931, 4339156.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2295.293 ±(99.9%) 102.208 MB/sec [Average]
[info]   (min, avg, max) = (2256.292, 2295.293, 2327.745), stdev = 26.543
[info]   CI (99.9%): [2193.086, 2397.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   869.884 ±(99.9%) 18.050 B/op [Average]
[info]   (min, avg, max) = (862.479, 869.884, 875.119), stdev = 4.687
[info]   CI (99.9%): [851.834, 887.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2254.591 ±(99.9%) 544.109 MB/sec [Average]
[info]   (min, avg, max) = (2005.796, 2254.591, 2356.609), stdev = 141.303
[info]   CI (99.9%): [1710.482, 2798.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   854.649 ±(99.9%) 216.733 B/op [Average]
[info]   (min, avg, max) = (755.227, 854.649, 886.731), stdev = 56.285
[info]   CI (99.9%): [637.916, 1071.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.183 ±(99.9%) 1.311 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.183, 0.791), stdev = 0.340
[info]   CI (99.9%): [≈ 0, 1.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.071 ±(99.9%) 0.507 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.306), stdev = 0.132
[info]   CI (99.9%): [≈ 0, 0.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 11.000), stdev = 1.140
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:07:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3539583.976 ops/s
[info] # Warmup Iteration   2: 6716543.025 ops/s
[info] # Warmup Iteration   3: 6773019.576 ops/s
[info] Iteration   1: 6871126.528 ops/s
[info]                  ·gc.alloc.rate:                   1322.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 6832199.581 ops/s
[info]                  ·gc.alloc.rate:                   1324.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     305.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.729 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6911599.171 ops/s
[info]                  ·gc.alloc.rate:               1347.902 MB/sec
[info]                  ·gc.alloc.rate.norm:          306.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 300.356 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 6849145.594 ops/s
[info]                  ·gc.alloc.rate:                   1324.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6932177.125 ops/s
[info]                  ·gc.alloc.rate:               1344.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          305.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1325.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 300.982 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6879249.600 ±(99.9%) 161471.938 ops/s [Average]
[info]   (min, avg, max) = (6832199.581, 6879249.600, 6932177.125), stdev = 41933.750
[info]   CI (99.9%): [6717777.662, 7040721.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1332.771 ±(99.9%) 47.789 MB/sec [Average]
[info]   (min, avg, max) = (1322.148, 1332.771, 1347.902), stdev = 12.411
[info]   CI (99.9%): [1284.983, 1380.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   304.877 ±(99.9%) 5.799 B/op [Average]
[info]   (min, avg, max) = (302.811, 304.877, 306.949), stdev = 1.506
[info]   CI (99.9%): [299.079, 310.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1323.483 ±(99.9%) 13.234 MB/sec [Average]
[info]   (min, avg, max) = (1318.953, 1323.483, 1326.055), stdev = 3.437
[info]   CI (99.9%): [1310.249, 1336.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   302.765 ±(99.9%) 7.979 B/op [Average]
[info]   (min, avg, max) = (300.356, 302.765, 305.402), stdev = 2.072
[info]   CI (99.9%): [294.786, 310.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.646 ±(99.9%) 5.424 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.646, 3.165), stdev = 1.409
[info]   CI (99.9%): [≈ 0, 6.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.149 ±(99.9%) 1.249 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.149, 0.729), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 1.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 11.000), stdev = 2.345
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1291671.835 ops/s
[info] # Warmup Iteration   2: 3676179.307 ops/s
[info] # Warmup Iteration   3: 4072484.390 ops/s
[info] Iteration   1: 4029805.526 ops/s
[info]                  ·gc.alloc.rate:                   2408.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              940.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     896.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4040608.539 ops/s
[info]                  ·gc.alloc.rate:                   2413.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              939.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2304.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     897.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4110269.551 ops/s
[info]                  ·gc.alloc.rate:                   2474.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              947.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2326.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     890.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4112153.612 ops/s
[info]                  ·gc.alloc.rate:                   2476.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              947.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2347.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     898.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4121748.818 ops/s
[info]                  ·gc.alloc.rate:                   2482.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              947.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2361.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     901.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   4082917.209 ±(99.9%) 169184.058 ops/s [Average]
[info]   (min, avg, max) = (4029805.526, 4082917.209, 4121748.818), stdev = 43936.563
[info]   CI (99.9%): [3913733.151, 4252101.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2450.976 ±(99.9%) 142.403 MB/sec [Average]
[info]   (min, avg, max) = (2408.199, 2450.976, 2482.881), stdev = 36.982
[info]   CI (99.9%): [2308.573, 2593.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   944.658 ±(99.9%) 15.751 B/op [Average]
[info]   (min, avg, max) = (939.830, 944.658, 947.927), stdev = 4.090
[info]   CI (99.9%): [928.907, 960.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2327.150 ±(99.9%) 107.923 MB/sec [Average]
[info]   (min, avg, max) = (2295.593, 2327.150, 2361.964), stdev = 28.027
[info]   CI (99.9%): [2219.228, 2435.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   896.963 ±(99.9%) 15.162 B/op [Average]
[info]   (min, avg, max) = (890.874, 896.963, 901.763), stdev = 3.937
[info]   CI (99.9%): [881.801, 912.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.763 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.125, 0.479), stdev = 0.198
[info]   CI (99.9%): [≈ 0, 0.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.298 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.049, 0.187), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 11.000), stdev = 1.140
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 828247.965 ops/s
[info] # Warmup Iteration   2: 2157507.236 ops/s
[info] # Warmup Iteration   3: 2168340.621 ops/s
[info] Iteration   1: 2145095.173 ops/s
[info]                  ·gc.alloc.rate:                   1295.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              950.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     968.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 2212951.628 ops/s
[info]                  ·gc.alloc.rate:                   1313.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              933.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     939.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.458 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2208556.658 ops/s
[info]                  ·gc.alloc.rate:                   1313.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              935.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     937.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2216597.022 ops/s
[info]                  ·gc.alloc.rate:                   1317.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              935.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     933.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2224046.638 ops/s
[info]                  ·gc.alloc.rate:               1341.028 MB/sec
[info]                  ·gc.alloc.rate.norm:          948.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 934.359 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   2201449.424 ±(99.9%) 123261.194 ops/s [Average]
[info]   (min, avg, max) = (2145095.173, 2201449.424, 2224046.638), stdev = 32010.541
[info]   CI (99.9%): [2078188.229, 2324710.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1316.230 ±(99.9%) 62.850 MB/sec [Average]
[info]   (min, avg, max) = (1295.471, 1316.230, 1341.028), stdev = 16.322
[info]   CI (99.9%): [1253.380, 1379.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   940.887 ±(99.9%) 30.686 B/op [Average]
[info]   (min, avg, max) = (933.942, 940.887, 950.336), stdev = 7.969
[info]   CI (99.9%): [910.201, 971.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1318.574 ±(99.9%) 11.686 MB/sec [Average]
[info]   (min, avg, max) = (1315.203, 1318.574, 1321.898), stdev = 3.035
[info]   CI (99.9%): [1306.888, 1330.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   942.678 ±(99.9%) 55.352 B/op [Average]
[info]   (min, avg, max) = (933.950, 942.678, 968.026), stdev = 14.375
[info]   CI (99.9%): [887.326, 998.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.720 ±(99.9%) 5.890 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.720, 3.456), stdev = 1.530
[info]   CI (99.9%): [≈ 0, 6.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.513 ±(99.9%) 4.188 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.513, 2.458), stdev = 1.088
[info]   CI (99.9%): [≈ 0, 4.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 3.209
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:06:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.770 ops/s
[info] # Warmup Iteration   2: 5560883.270 ops/s
[info] # Warmup Iteration   3: 5486917.090 ops/s
[info] Iteration   1: 5689334.864 ops/s
[info]                  ·gc.alloc.rate:               557.420 MB/sec
[info]                  ·gc.alloc.rate.norm:          154.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89.834 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 5804662.500 ops/s
[info]                  ·gc.alloc.rate:               578.818 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 176.286 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 5688610.600 ops/s
[info]                  ·gc.alloc.rate:                   570.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 5838710.425 ops/s
[info]                  ·gc.alloc.rate:                   572.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              154.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5692487.146 ops/s
[info]                  ·gc.alloc.rate:                   566.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   5742761.107 ±(99.9%) 281335.368 ops/s [Average]
[info]   (min, avg, max) = (5688610.600, 5742761.107, 5838710.425), stdev = 73061.902
[info]   CI (99.9%): [5461425.739, 6024096.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   569.195 ±(99.9%) 30.496 MB/sec [Average]
[info]   (min, avg, max) = (557.420, 569.195, 578.818), stdev = 7.920
[info]   CI (99.9%): [538.700, 599.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   155.979 ±(99.9%) 6.134 B/op [Average]
[info]   (min, avg, max) = (154.199, 155.979, 157.702), stdev = 1.593
[info]   CI (99.9%): [149.844, 162.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   521.274 ±(99.9%) 687.838 MB/sec [Average]
[info]   (min, avg, max) = (324.746, 521.274, 653.191), stdev = 178.629
[info]   CI (99.9%): [≈ 0, 1209.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   142.990 ±(99.9%) 190.227 B/op [Average]
[info]   (min, avg, max) = (87.985, 142.990, 180.590), stdev = 49.401
[info]   CI (99.9%): [≈ 0, 333.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.045 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.028), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.008), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 7.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:06:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2111134.035 ops/s
[info] # Warmup Iteration   2: 4425508.042 ops/s
[info] # Warmup Iteration   3: 4606795.143 ops/s
[info] Iteration   1: 4501832.632 ops/s
[info]                  ·gc.alloc.rate:                   1227.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     459.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 4608182.260 ops/s
[info]                  ·gc.alloc.rate:                   1264.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              431.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     449.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.166 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 4610623.951 ops/s
[info]                  ·gc.alloc.rate:                   1264.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              431.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     447.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4672052.747 ops/s
[info]                  ·gc.alloc.rate:                   1274.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     331.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4649941.189 ops/s
[info]                  ·gc.alloc.rate:                   1281.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              433.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   4608526.556 ±(99.9%) 252054.426 ops/s [Average]
[info]   (min, avg, max) = (4501832.632, 4608526.556, 4672052.747), stdev = 65457.734
[info]   CI (99.9%): [4356472.129, 4860580.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1262.559 ±(99.9%) 79.647 MB/sec [Average]
[info]   (min, avg, max) = (1227.984, 1262.559, 1281.855), stdev = 20.684
[info]   CI (99.9%): [1182.913, 1342.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   431.040 ±(99.9%) 7.322 B/op [Average]
[info]   (min, avg, max) = (429.122, 431.040, 433.715), stdev = 1.902
[info]   CI (99.9%): [423.718, 438.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1248.638 ±(99.9%) 570.577 MB/sec [Average]
[info]   (min, avg, max) = (983.610, 1248.638, 1317.629), stdev = 148.177
[info]   CI (99.9%): [678.061, 1819.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   426.677 ±(99.9%) 206.539 B/op [Average]
[info]   (min, avg, max) = (331.242, 426.677, 459.726), stdev = 53.638
[info]   CI (99.9%): [220.137, 633.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.775 ±(99.9%) 5.688 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.775, 3.415), stdev = 1.477
[info]   CI (99.9%): [≈ 0, 6.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.264 ±(99.9%) 1.942 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.264, 1.166), stdev = 0.504
[info]   CI (99.9%): [≈ 0, 2.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.600, 13.000), stdev = 3.578
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3781817.008 ops/s
[info] # Warmup Iteration   2: 5673724.430 ops/s
[info] # Warmup Iteration   3: 5984801.172 ops/s
[info] Iteration   1: 5987961.056 ops/s
[info]                  ·gc.alloc.rate:                   600.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.759 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 6014063.721 ops/s
[info]                  ·gc.alloc.rate:               593.083 MB/sec
[info]                  ·gc.alloc.rate.norm:          155.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86.471 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 5995703.599 ops/s
[info]                  ·gc.alloc.rate:                   598.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 6019546.559 ops/s
[info]                  ·gc.alloc.rate:               597.044 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 173.306 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 6002706.237 ops/s
[info]                  ·gc.alloc.rate:                   593.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   6003996.235 ±(99.9%) 49862.707 ops/s [Average]
[info]   (min, avg, max) = (5987961.056, 6003996.235, 6019546.559), stdev = 12949.187
[info]   CI (99.9%): [5954133.527, 6053858.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   596.581 ±(99.9%) 11.775 MB/sec [Average]
[info]   (min, avg, max) = (593.083, 596.581, 600.182), stdev = 3.058
[info]   CI (99.9%): [584.806, 608.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   156.379 ±(99.9%) 4.106 B/op [Average]
[info]   (min, avg, max) = (155.159, 156.379, 157.759), stdev = 1.066
[info]   CI (99.9%): [152.273, 160.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.900 ±(99.9%) 571.246 MB/sec [Average]
[info]   (min, avg, max) = (330.530, 595.900, 663.506), stdev = 148.351
[info]   CI (99.9%): [24.654, 1167.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   156.233 ±(99.9%) 150.169 B/op [Average]
[info]   (min, avg, max) = (86.471, 156.233, 173.963), stdev = 38.998
[info]   CI (99.9%): [6.063, 306.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4182619.528 ops/s
[info] # Warmup Iteration   2: 5862218.739 ops/s
[info] # Warmup Iteration   3: 6363136.332 ops/s
[info] Iteration   1: 6363978.155 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6062060.834 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6362525.953 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6366331.273 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6362589.604 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   6303497.164 ±(99.9%) 519743.833 ops/s [Average]
[info]   (min, avg, max) = (6062060.834, 6303497.164, 6366331.273), stdev = 134975.823
[info]   CI (99.9%): [5783753.331, 6823240.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:05:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1277652.651 ops/s
[info] # Warmup Iteration   2: 4474088.661 ops/s
[info] # Warmup Iteration   3: 4522383.936 ops/s
[info] Iteration   1: 4502242.992 ops/s
[info]                  ·gc.alloc.rate:                   1265.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              442.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4523180.443 ops/s
[info]                  ·gc.alloc.rate:                   1287.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              447.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     459.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.224 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4579526.257 ops/s
[info]                  ·gc.alloc.rate:               1288.985 MB/sec
[info]                  ·gc.alloc.rate.norm:          442.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 338.835 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 4495934.608 ops/s
[info]                  ·gc.alloc.rate:                   1279.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              447.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     459.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4536220.518 ops/s
[info]                  ·gc.alloc.rate:               1297.554 MB/sec
[info]                  ·gc.alloc.rate.norm:          450.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 457.153 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   4527420.964 ±(99.9%) 128228.416 ops/s [Average]
[info]   (min, avg, max) = (4495934.608, 4527420.964, 4579526.257), stdev = 33300.513
[info]   CI (99.9%): [4399192.547, 4655649.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1283.883 ±(99.9%) 46.269 MB/sec [Average]
[info]   (min, avg, max) = (1265.559, 1283.883, 1297.554), stdev = 12.016
[info]   CI (99.9%): [1237.614, 1330.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   446.218 ±(99.9%) 13.385 B/op [Average]
[info]   (min, avg, max) = (442.201, 446.218, 450.183), stdev = 3.476
[info]   CI (99.9%): [432.833, 459.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1251.173 ±(99.9%) 570.740 MB/sec [Average]
[info]   (min, avg, max) = (986.072, 1251.173, 1320.072), stdev = 148.219
[info]   CI (99.9%): [680.433, 1821.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   435.123 ±(99.9%) 207.331 B/op [Average]
[info]   (min, avg, max) = (338.835, 435.123, 460.847), stdev = 53.843
[info]   CI (99.9%): [227.792, 642.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.716 ±(99.9%) 6.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 3.519), stdev = 1.567
[info]   CI (99.9%): [≈ 0, 6.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.249 ±(99.9%) 2.099 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.249, 1.224), stdev = 0.545
[info]   CI (99.9%): [≈ 0, 2.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 11.000), stdev = 2.683
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:05:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 368388.666 ops/s
[info] # Warmup Iteration   2: 1342633.810 ops/s
[info] # Warmup Iteration   3: 1453450.709 ops/s
[info] Iteration   1: 1488883.221 ops/s
[info]                  ·gc.alloc.rate:                   2116.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              2237.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2097.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.455 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1455240.943 ops/s
[info]                  ·gc.alloc.rate:                   2071.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              2240.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2140.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1481522.532 ops/s
[info]                  ·gc.alloc.rate:                   2126.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              2259.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2113.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1492284.790 ops/s
[info]                  ·gc.alloc.rate:                   2142.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              2259.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2114.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1479440.430 ops/s
[info]                  ·gc.alloc.rate:               2125.863 MB/sec
[info]                  ·gc.alloc.rate.norm:          2261.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2016.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2145.237 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1479474.383 ±(99.9%) 55936.765 ops/s [Average]
[info]   (min, avg, max) = (1455240.943, 1479474.383, 1492284.790), stdev = 14526.600
[info]   CI (99.9%): [1423537.618, 1535411.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2116.520 ±(99.9%) 103.885 MB/sec [Average]
[info]   (min, avg, max) = (2071.264, 2116.520, 2142.435), stdev = 26.979
[info]   CI (99.9%): [2012.635, 2220.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2251.374 ±(99.9%) 45.380 B/op [Average]
[info]   (min, avg, max) = (2237.065, 2251.374, 2261.243), stdev = 11.785
[info]   CI (99.9%): [2205.994, 2296.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1994.902 ±(99.9%) 60.048 MB/sec [Average]
[info]   (min, avg, max) = (1979.200, 1994.902, 2016.803), stdev = 15.594
[info]   CI (99.9%): [1934.854, 2054.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2122.148 ±(99.9%) 77.751 B/op [Average]
[info]   (min, avg, max) = (2097.066, 2122.148, 2145.237), stdev = 20.192
[info]   CI (99.9%): [2044.397, 2199.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.716 ±(99.9%) 5.498 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 3.268), stdev = 1.428
[info]   CI (99.9%): [≈ 0, 6.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.757 ±(99.9%) 5.810 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.757, 3.455), stdev = 1.509
[info]   CI (99.9%): [≈ 0, 6.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 10.000), stdev = 0.894
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:05:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.688 ops/s
[info] # Warmup Iteration   2: 2647812.015 ops/s
[info] # Warmup Iteration   3: 2772677.185 ops/s
[info] Iteration   1: 2861596.945 ops/s
[info]                  ·gc.alloc.rate:                   552.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     357.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2766858.273 ops/s
[info]                  ·gc.alloc.rate:                   537.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     370.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2844899.158 ops/s
[info]                  ·gc.alloc.rate:                   542.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              300.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2832262.194 ops/s
[info]                  ·gc.alloc.rate:                   556.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              309.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     362.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2851173.677 ops/s
[info]                  ·gc.alloc.rate:               553.946 MB/sec
[info]                  ·gc.alloc.rate.norm:          305.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 360.727 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   2831358.049 ±(99.9%) 144738.250 ops/s [Average]
[info]   (min, avg, max) = (2766858.273, 2831358.049, 2861596.945), stdev = 37588.064
[info]   CI (99.9%): [2686619.800, 2976096.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   548.720 ±(99.9%) 30.686 MB/sec [Average]
[info]   (min, avg, max) = (537.908, 548.720, 556.475), stdev = 7.969
[info]   CI (99.9%): [518.034, 579.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   304.990 ±(99.9%) 12.563 B/op [Average]
[info]   (min, avg, max) = (300.269, 304.990, 309.191), stdev = 3.262
[info]   CI (99.9%): [292.427, 317.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   586.691 ±(99.9%) 560.981 MB/sec [Average]
[info]   (min, avg, max) = (326.094, 586.691, 653.757), stdev = 145.685
[info]   CI (99.9%): [25.710, 1147.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   326.303 ±(99.9%) 314.575 B/op [Average]
[info]   (min, avg, max) = (180.400, 326.303, 370.204), stdev = 81.694
[info]   CI (99.9%): [11.728, 640.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.030 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.057), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.031), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107062.434 ops/s
[info] # Warmup Iteration   2: 1545104.798 ops/s
[info] # Warmup Iteration   3: 1675012.449 ops/s
[info] Iteration   1: 1725454.064 ops/s
[info]                  ·gc.alloc.rate:                   951.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              868.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     895.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1696629.312 ops/s
[info]                  ·gc.alloc.rate:                   942.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              874.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     912.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1734016.777 ops/s
[info]                  ·gc.alloc.rate:                   945.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              858.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     596.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1720209.784 ops/s
[info]                  ·gc.alloc.rate:                   957.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     901.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.543 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1726682.927 ops/s
[info]                  ·gc.alloc.rate:               960.398 MB/sec
[info]                  ·gc.alloc.rate.norm:          875.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 893.178 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1720598.573 ±(99.9%) 54975.274 ops/s [Average]
[info]   (min, avg, max) = (1696629.312, 1720598.573, 1734016.777), stdev = 14276.904
[info]   CI (99.9%): [1665623.299, 1775573.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   951.561 ±(99.9%) 29.000 MB/sec [Average]
[info]   (min, avg, max) = (942.661, 951.561, 960.398), stdev = 7.531
[info]   CI (99.9%): [922.561, 980.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   870.410 ±(99.9%) 28.746 B/op [Average]
[info]   (min, avg, max) = (858.317, 870.410, 876.044), stdev = 7.465
[info]   CI (99.9%): [841.664, 899.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   917.481 ±(99.9%) 561.091 MB/sec [Average]
[info]   (min, avg, max) = (656.844, 917.481, 985.196), stdev = 145.714
[info]   CI (99.9%): [356.390, 1478.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   839.722 ±(99.9%) 525.011 B/op [Average]
[info]   (min, avg, max) = (596.188, 839.722, 912.403), stdev = 136.344
[info]   CI (99.9%): [314.712, 1364.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.793 ±(99.9%) 6.627 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.793, 3.872), stdev = 1.721
[info]   CI (99.9%): [≈ 0, 7.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.726 ±(99.9%) 6.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.726, 3.543), stdev = 1.575
[info]   CI (99.9%): [≈ 0, 6.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 10.000), stdev = 2.302
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1004186.001 ops/s
[info] # Warmup Iteration   2: 2245428.521 ops/s
[info] # Warmup Iteration   3: 2423056.282 ops/s
[info] Iteration   1: 2409821.997 ops/s
[info]                  ·gc.alloc.rate:               470.876 MB/sec
[info]                  ·gc.alloc.rate.norm:          307.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:      586.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 383.303 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 2424072.249 ops/s
[info]                  ·gc.alloc.rate:               465.866 MB/sec
[info]                  ·gc.alloc.rate.norm:          302.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214.964 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2418491.250 ops/s
[info]                  ·gc.alloc.rate:                   475.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              309.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     431.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2435218.881 ops/s
[info]                  ·gc.alloc.rate:               467.709 MB/sec
[info]                  ·gc.alloc.rate.norm:          302.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:      332.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214.834 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 2434305.491 ops/s
[info]                  ·gc.alloc.rate:               466.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:      332.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214.911 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2424381.974 ±(99.9%) 41414.756 ops/s [Average]
[info]   (min, avg, max) = (2409821.997, 2424381.974, 2435218.881), stdev = 10755.280
[info]   CI (99.9%): [2382967.218, 2465796.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   469.259 ±(99.9%) 15.200 MB/sec [Average]
[info]   (min, avg, max) = (465.866, 469.259, 475.408), stdev = 3.947
[info]   CI (99.9%): [454.058, 484.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   304.624 ±(99.9%) 13.778 B/op [Average]
[info]   (min, avg, max) = (301.508, 304.624, 309.385), stdev = 3.578
[info]   CI (99.9%): [290.847, 318.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   449.279 ±(99.9%) 627.072 MB/sec [Average]
[info]   (min, avg, max) = (331.098, 449.279, 663.477), stdev = 162.849
[info]   CI (99.9%): [≈ 0, 1076.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   291.958 ±(99.9%) 411.612 B/op [Average]
[info]   (min, avg, max) = (214.834, 291.958, 431.776), stdev = 106.894
[info]   CI (99.9%): [≈ 0, 703.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:04:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 402228.424 ops/s
[info] # Warmup Iteration   2: 1509765.070 ops/s
[info] # Warmup Iteration   3: 1708718.204 ops/s
[info] Iteration   1: 1683007.048 ops/s
[info]                  ·gc.alloc.rate:                   969.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              906.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     920.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1661855.302 ops/s
[info]                  ·gc.alloc.rate:               935.623 MB/sec
[info]                  ·gc.alloc.rate.norm:          886.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 623.314 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 1678591.213 ops/s
[info]                  ·gc.alloc.rate:                   956.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              897.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     926.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.821 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.645 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1702842.655 ops/s
[info]                  ·gc.alloc.rate:                   970.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     911.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.770 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1705876.513 ops/s
[info]                  ·gc.alloc.rate:                   977.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              901.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     907.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1686434.546 ±(99.9%) 70072.752 ops/s [Average]
[info]   (min, avg, max) = (1661855.302, 1686434.546, 1705876.513), stdev = 18197.671
[info]   CI (99.9%): [1616361.794, 1756507.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   961.932 ±(99.9%) 63.268 MB/sec [Average]
[info]   (min, avg, max) = (935.623, 961.932, 977.082), stdev = 16.430
[info]   CI (99.9%): [898.664, 1025.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   897.597 ±(99.9%) 29.544 B/op [Average]
[info]   (min, avg, max) = (886.044, 897.597, 906.860), stdev = 7.672
[info]   CI (99.9%): [868.054, 927.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   920.326 ±(99.9%) 564.318 MB/sec [Average]
[info]   (min, avg, max) = (658.192, 920.326, 988.541), stdev = 146.551
[info]   CI (99.9%): [356.008, 1484.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   857.993 ±(99.9%) 506.024 B/op [Average]
[info]   (min, avg, max) = (623.314, 857.993, 926.901), stdev = 131.413
[info]   CI (99.9%): [351.970, 1364.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.756 ±(99.9%) 4.639 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.756, 2.821), stdev = 1.205
[info]   CI (99.9%): [≈ 0, 5.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.706 ±(99.9%) 4.350 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.706, 2.645), stdev = 1.130
[info]   CI (99.9%): [≈ 0, 5.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:04:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 354530.225 ops/s
[info] # Warmup Iteration   2: 1758192.486 ops/s
[info] # Warmup Iteration   3: 1826584.901 ops/s
[info] Iteration   1: 1794697.371 ops/s
[info]                  ·gc.alloc.rate:                   1385.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              1214.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1156.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1844481.044 ops/s
[info]                  ·gc.alloc.rate:                   1407.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              1200.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1127.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.789 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1820307.379 ops/s
[info]                  ·gc.alloc.rate:                   1408.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              1218.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1422.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1853477.915 ops/s
[info]                  ·gc.alloc.rate:                   1427.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              1212.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1118.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1828923.030 ops/s
[info]                  ·gc.alloc.rate:                   1409.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              1213.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1139.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   1828377.348 ±(99.9%) 88000.705 ops/s [Average]
[info]   (min, avg, max) = (1794697.371, 1828377.348, 1853477.915), stdev = 22853.504
[info]   CI (99.9%): [1740376.643, 1916378.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1407.933 ±(99.9%) 57.495 MB/sec [Average]
[info]   (min, avg, max) = (1385.579, 1407.933, 1427.626), stdev = 14.931
[info]   CI (99.9%): [1350.438, 1465.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1211.785 ±(99.9%) 25.067 B/op [Average]
[info]   (min, avg, max) = (1200.871, 1211.785, 1218.188), stdev = 6.510
[info]   CI (99.9%): [1186.718, 1236.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1385.732 ±(99.9%) 559.082 MB/sec [Average]
[info]   (min, avg, max) = (1317.619, 1385.732, 1645.427), stdev = 145.192
[info]   CI (99.9%): [826.651, 1944.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1193.043 ±(99.9%) 497.276 B/op [Average]
[info]   (min, avg, max) = (1118.848, 1193.043, 1422.645), stdev = 129.141
[info]   CI (99.9%): [695.767, 1690.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.670 ±(99.9%) 5.594 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.670, 3.269), stdev = 1.453
[info]   CI (99.9%): [≈ 0, 6.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.572 ±(99.9%) 4.771 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.572, 2.789), stdev = 1.239
[info]   CI (99.9%): [≈ 0, 5.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.608
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.660 ops/s
[info] # Warmup Iteration   2: 2787680.684 ops/s
[info] # Warmup Iteration   3: 3000570.973 ops/s
[info] Iteration   1: 3037026.551 ops/s
[info]                  ·gc.alloc.rate:                   804.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     337.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3016922.669 ops/s
[info]                  ·gc.alloc.rate:                   811.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     510.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 3039718.750 ops/s
[info]                  ·gc.alloc.rate:                   803.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              415.676 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3040379.453 ops/s
[info]                  ·gc.alloc.rate:                   802.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              415.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2997895.660 ops/s
[info]                  ·gc.alloc.rate:                   801.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     514.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.274 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   3026388.617 ±(99.9%) 71730.953 ops/s [Average]
[info]   (min, avg, max) = (2997895.660, 3026388.617, 3040379.453), stdev = 18628.301
[info]   CI (99.9%): [2954657.664, 3098119.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   804.647 ±(99.9%) 15.340 MB/sec [Average]
[info]   (min, avg, max) = (801.672, 804.647, 811.451), stdev = 3.984
[info]   CI (99.9%): [789.307, 819.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   418.392 ±(99.9%) 13.225 B/op [Average]
[info]   (min, avg, max) = (415.291, 418.392, 423.196), stdev = 3.435
[info]   CI (99.9%): [405.167, 431.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   783.823 ±(99.9%) 688.657 MB/sec [Average]
[info]   (min, avg, max) = (651.494, 783.823, 980.584), stdev = 178.842
[info]   CI (99.9%): [95.165, 1472.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   407.981 ±(99.9%) 367.658 B/op [Average]
[info]   (min, avg, max) = (337.623, 407.981, 514.608), stdev = 95.480
[info]   CI (99.9%): [40.323, 775.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.890 ±(99.9%) 7.412 MB/sec [Average]
[info]   (min, avg, max) = (0.005, 0.890, 4.334), stdev = 1.925
[info]   CI (99.9%): [≈ 0, 8.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.467 ±(99.9%) 3.890 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.467, 2.274), stdev = 1.010
[info]   CI (99.9%): [≈ 0, 4.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 9.000), stdev = 1.342
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 575616.737 ops/s
[info] # Warmup Iteration   2: 2807366.984 ops/s
[info] # Warmup Iteration   3: 2932140.400 ops/s
[info] Iteration   1: 2897434.065 ops/s
[info]                  ·gc.alloc.rate:                   1260.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              684.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     535.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2820136.628 ops/s
[info]                  ·gc.alloc.rate:                   1242.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              693.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     735.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.905 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2913303.525 ops/s
[info]                  ·gc.alloc.rate:                   1282.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              692.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     708.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2937885.608 ops/s
[info]                  ·gc.alloc.rate:                   1299.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     702.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2702378.943 ops/s
[info]                  ·gc.alloc.rate:               1193.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          694.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 574.412 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   2854227.754 ±(99.9%) 368213.157 ops/s [Average]
[info]   (min, avg, max) = (2702378.943, 2854227.754, 2937885.608), stdev = 95623.788
[info]   CI (99.9%): [2486014.597, 3222440.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1255.797 ±(99.9%) 158.944 MB/sec [Average]
[info]   (min, avg, max) = (1193.156, 1255.797, 1299.935), stdev = 41.277
[info]   CI (99.9%): [1096.853, 1414.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   692.366 ±(99.9%) 17.099 B/op [Average]
[info]   (min, avg, max) = (684.796, 692.366, 696.248), stdev = 4.440
[info]   CI (99.9%): [675.267, 709.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1182.811 ±(99.9%) 691.360 MB/sec [Average]
[info]   (min, avg, max) = (985.793, 1182.811, 1317.917), stdev = 179.544
[info]   CI (99.9%): [491.451, 1874.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   651.299 ±(99.9%) 346.293 B/op [Average]
[info]   (min, avg, max) = (535.381, 651.299, 735.369), stdev = 89.931
[info]   CI (99.9%): [305.006, 997.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.731 ±(99.9%) 5.785 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.731, 3.415), stdev = 1.502
[info]   CI (99.9%): [≈ 0, 6.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.407 ±(99.9%) 3.229 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.407, 1.905), stdev = 0.839
[info]   CI (99.9%): [≈ 0, 3.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1292311.330 ops/s
[info] # Warmup Iteration   2: 3210510.434 ops/s
[info] # Warmup Iteration   3: 3366128.368 ops/s
[info] Iteration   1: 3303297.374 ops/s
[info]                  ·gc.alloc.rate:               890.015 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 471.662 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 3350942.384 ops/s
[info]                  ·gc.alloc.rate:                   897.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3368030.029 ops/s
[info]                  ·gc.alloc.rate:               892.926 MB/sec
[info]                  ·gc.alloc.rate.norm:          417.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 309.744 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 3327216.860 ops/s
[info]                  ·gc.alloc.rate:                   902.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              426.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.502 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3368390.503 ops/s
[info]                  ·gc.alloc.rate:                   906.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     462.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3343575.430 ±(99.9%) 108195.760 ops/s [Average]
[info]   (min, avg, max) = (3303297.374, 3343575.430, 3368390.503), stdev = 28098.095
[info]   CI (99.9%): [3235379.670, 3451771.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   897.808 ±(99.9%) 25.483 MB/sec [Average]
[info]   (min, avg, max) = (890.015, 897.808, 906.284), stdev = 6.618
[info]   CI (99.9%): [872.325, 923.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   422.527 ±(99.9%) 13.341 B/op [Average]
[info]   (min, avg, max) = (417.241, 422.527, 426.556), stdev = 3.465
[info]   CI (99.9%): [409.186, 435.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   925.928 ±(99.9%) 566.280 MB/sec [Average]
[info]   (min, avg, max) = (662.875, 925.928, 994.361), stdev = 147.061
[info]   CI (99.9%): [359.648, 1492.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   435.991 ±(99.9%) 272.110 B/op [Average]
[info]   (min, avg, max) = (309.744, 435.991, 471.662), stdev = 70.666
[info]   CI (99.9%): [163.882, 708.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.644 ±(99.9%) 5.452 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.644, 3.176), stdev = 1.416
[info]   CI (99.9%): [≈ 0, 6.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.304 ±(99.9%) 2.578 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.304, 1.502), stdev = 0.669
[info]   CI (99.9%): [≈ 0, 2.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 1.949
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:03:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1176986.393 ops/s
[info] # Warmup Iteration   2: 3500844.586 ops/s
[info] # Warmup Iteration   3: 3456984.028 ops/s
[info] Iteration   1: 3644418.036 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3644532.190 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3655254.381 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3654977.332 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3579768.105 ops/s
[info]                  ·gc.alloc.rate:      8.342 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.667 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3635790.009 ±(99.9%) 122319.895 ops/s [Average]
[info]   (min, avg, max) = (3579768.105, 3635790.009, 3655254.381), stdev = 31766.088
[info]   CI (99.9%): [3513470.114, 3758109.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.669 ±(99.9%) 14.366 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.669, 8.342), stdev = 3.731
[info]   CI (99.9%): [≈ 0, 16.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.734 ±(99.9%) 6.315 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.734, 3.667), stdev = 1.640
[info]   CI (99.9%): [≈ 0, 7.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 460086.465 ops/s
[info] # Warmup Iteration   2: 2678947.217 ops/s
[info] # Warmup Iteration   3: 2840510.161 ops/s
[info] Iteration   1: 2839530.176 ops/s
[info]                  ·gc.alloc.rate:               1407.546 MB/sec
[info]                  ·gc.alloc.rate.norm:          780.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 732.744 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 2838749.298 ops/s
[info]                  ·gc.alloc.rate:                   1417.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              785.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     915.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.465 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.920 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2875684.256 ops/s
[info]                  ·gc.alloc.rate:               1426.867 MB/sec
[info]                  ·gc.alloc.rate.norm:          780.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 720.432 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 2879340.775 ops/s
[info]                  ·gc.alloc.rate:               1443.059 MB/sec
[info]                  ·gc.alloc.rate.norm:          788.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 719.879 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2874945.749 ops/s
[info]                  ·gc.alloc.rate:                   1440.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              788.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     724.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   2861650.051 ±(99.9%) 79393.088 ops/s [Average]
[info]   (min, avg, max) = (2838749.298, 2861650.051, 2879340.775), stdev = 20618.133
[info]   CI (99.9%): [2782256.963, 2941043.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1427.168 ±(99.9%) 58.477 MB/sec [Average]
[info]   (min, avg, max) = (1407.546, 1427.168, 1443.059), stdev = 15.186
[info]   CI (99.9%): [1368.691, 1485.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   784.714 ±(99.9%) 15.595 B/op [Average]
[info]   (min, avg, max) = (780.131, 784.714, 788.667), stdev = 4.050
[info]   CI (99.9%): [769.119, 800.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1386.247 ±(99.9%) 572.363 MB/sec [Average]
[info]   (min, avg, max) = (1316.367, 1386.247, 1652.094), stdev = 148.641
[info]   CI (99.9%): [813.884, 1958.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   762.541 ±(99.9%) 329.724 B/op [Average]
[info]   (min, avg, max) = (719.879, 762.541, 915.441), stdev = 85.628
[info]   CI (99.9%): [432.817, 1092.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.701 ±(99.9%) 5.949 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.701, 3.465), stdev = 1.545
[info]   CI (99.9%): [≈ 0, 6.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.389 ±(99.9%) 3.297 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.389, 1.920), stdev = 0.856
[info]   CI (99.9%): [≈ 0, 3.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 12.000), stdev = 3.240
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2589.769 ops/s
[info] # Warmup Iteration   2: 6832.344 ops/s
[info] # Warmup Iteration   3: 11610.110 ops/s
[info] Iteration   1: 11680.970 ops/s
[info]                  ·gc.alloc.rate:                   1378.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              185696.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176198.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.301 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 11684.745 ops/s
[info]                  ·gc.alloc.rate:                   1367.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              184128.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176302.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 542.656 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 11816.153 ops/s
[info]                  ·gc.alloc.rate:                   1393.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              185597.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173343.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.938 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 11855.493 ops/s
[info]                  ·gc.alloc.rate:                   1399.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              185731.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172699.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.570 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11859.926 ops/s
[info]                  ·gc.alloc.rate:                   1419.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              188409.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217016.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.525 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   11779.457 ±(99.9%) 345.880 ops/s [Average]
[info]   (min, avg, max) = (11680.970, 11779.457, 11859.926), stdev = 89.824
[info]   CI (99.9%): [11433.578, 12125.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1391.663 ±(99.9%) 77.469 MB/sec [Average]
[info]   (min, avg, max) = (1367.432, 1391.663, 1419.851), stdev = 20.118
[info]   CI (99.9%): [1314.194, 1469.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   185912.806 ±(99.9%) 5964.129 B/op [Average]
[info]   (min, avg, max) = (184128.638, 185912.806, 188409.547), stdev = 1548.865
[info]   CI (99.9%): [179948.678, 191876.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1371.019 ±(99.9%) 569.353 MB/sec [Average]
[info]   (min, avg, max) = (1300.844, 1371.019, 1635.436), stdev = 147.859
[info]   CI (99.9%): [801.666, 1940.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   183112.242 ±(99.9%) 73252.042 B/op [Average]
[info]   (min, avg, max) = (172699.353, 183112.242, 217016.867), stdev = 19023.323
[info]   CI (99.9%): [109860.199, 256364.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.903 ±(99.9%) 6.752 MB/sec [Average]
[info]   (min, avg, max) = (0.019, 0.903, 4.030), stdev = 1.754
[info]   CI (99.9%): [≈ 0, 7.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   121.398 ±(99.9%) 909.427 B/op [Average]
[info]   (min, avg, max) = (2.570, 121.398, 542.656), stdev = 236.175
[info]   CI (99.9%): [≈ 0, 1030.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 16.000), stdev = 4.658
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2243.181 ops/s
[info] # Warmup Iteration   2: 16900.945 ops/s
[info] # Warmup Iteration   3: 21713.160 ops/s
[info] Iteration   1: 22099.702 ops/s
[info]                  ·gc.alloc.rate:               335.684 MB/sec
[info]                  ·gc.alloc.rate.norm:          23907.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:      318.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22676.529 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 22000.145 ops/s
[info]                  ·gc.alloc.rate:               335.704 MB/sec
[info]                  ·gc.alloc.rate.norm:          24012.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:      318.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22778.555 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 21923.181 ops/s
[info]                  ·gc.alloc.rate:                   336.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              24176.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22930.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.494 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 21579.667 ops/s
[info]                  ·gc.alloc.rate:               341.756 MB/sec
[info]                  ·gc.alloc.rate.norm:          24925.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23297.910 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 21987.249 ops/s
[info]                  ·gc.alloc.rate:                   335.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              23986.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23006.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.980 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   21917.989 ±(99.9%) 767.850 ops/s [Average]
[info]   (min, avg, max) = (21579.667, 21917.989, 22099.702), stdev = 199.408
[info]   CI (99.9%): [21150.139, 22685.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   337.007 ±(99.9%) 10.483 MB/sec [Average]
[info]   (min, avg, max) = (335.110, 337.007, 341.756), stdev = 2.722
[info]   CI (99.9%): [326.524, 347.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24201.719 ±(99.9%) 1602.571 B/op [Average]
[info]   (min, avg, max) = (23907.372, 24201.719, 24925.278), stdev = 416.182
[info]   CI (99.9%): [22599.149, 25804.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   319.427 ±(99.9%) 4.696 MB/sec [Average]
[info]   (min, avg, max) = (318.402, 319.427, 321.415), stdev = 1.219
[info]   CI (99.9%): [314.731, 324.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   22937.972 ±(99.9%) 919.508 B/op [Average]
[info]   (min, avg, max) = (22676.529, 22937.972, 23297.910), stdev = 238.793
[info]   CI (99.9%): [22018.465, 23857.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.895 ±(99.9%) 5.134 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.895, 2.980), stdev = 1.333
[info]   CI (99.9%): [≈ 0, 6.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8231.097 ops/s
[info] # Warmup Iteration   2: 22322.893 ops/s
[info] # Warmup Iteration   3: 22573.849 ops/s
[info] Iteration   1: 22458.086 ops/s
[info]                  ·gc.alloc.rate:                   250.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              17525.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17926.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.459 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 22688.846 ops/s
[info]                  ·gc.alloc.rate:               253.363 MB/sec
[info]                  ·gc.alloc.rate.norm:          17570.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17744.279 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 21796.711 ops/s
[info]                  ·gc.alloc.rate:               268.577 MB/sec
[info]                  ·gc.alloc.rate.norm:          19393.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23809.409 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 22766.802 ops/s
[info]                  ·gc.alloc.rate:      247.423 MB/sec
[info]                  ·gc.alloc.rate.norm: 17104.019 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 22677.034 ops/s
[info]                  ·gc.alloc.rate:                   255.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              17742.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22884.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   22477.496 ±(99.9%) 1530.633 ops/s [Average]
[info]   (min, avg, max) = (21796.711, 22477.496, 22766.802), stdev = 397.500
[info]   CI (99.9%): [20946.863, 24008.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   255.034 ±(99.9%) 31.542 MB/sec [Average]
[info]   (min, avg, max) = (247.423, 255.034, 268.577), stdev = 8.191
[info]   CI (99.9%): [223.492, 286.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17867.150 ±(99.9%) 3406.911 B/op [Average]
[info]   (min, avg, max) = (17104.019, 17867.150, 19393.147), stdev = 884.764
[info]   CI (99.9%): [14460.239, 21274.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   234.247 ±(99.9%) 523.912 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.247, 329.756), stdev = 136.058
[info]   CI (99.9%): [≈ 0, 758.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   16473.007 ±(99.9%) 37035.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16473.007, 23809.409), stdev = 9617.959
[info]   CI (99.9%): [≈ 0, 53508.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.029), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.692 ±(99.9%) 3.724 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.692, 2.002), stdev = 0.967
[info]   CI (99.9%): [≈ 0, 4.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 4.000), stdev = 1.517
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:02:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 132.751 ops/s
[info] # Warmup Iteration   2: 2468.519 ops/s
[info] # Warmup Iteration   3: 5859.110 ops/s
[info] Iteration   1: 7389.030 ops/s
[info]                  ·gc.alloc.rate:                   2064.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              439757.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1907.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     406376.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 292.655 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 7411.963 ops/s
[info]                  ·gc.alloc.rate:                   2073.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              440264.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1915.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     406758.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 318.222 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 7524.969 ops/s
[info]                  ·gc.alloc.rate:                   2106.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              440515.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2244.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     469393.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.613 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 964.497 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 7484.010 ops/s
[info]                  ·gc.alloc.rate:                   2114.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              444627.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1928.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     405577.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.754 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 7556.643 ops/s
[info]                  ·gc.alloc.rate:               2135.045 MB/sec
[info]                  ·gc.alloc.rate.norm:          444674.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1953.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 406916.302 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   7473.323 ±(99.9%) 276.296 ops/s [Average]
[info]   (min, avg, max) = (7389.030, 7473.323, 7556.643), stdev = 71.753
[info]   CI (99.9%): [7197.027, 7749.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2098.846 ±(99.9%) 112.585 MB/sec [Average]
[info]   (min, avg, max) = (2064.661, 2098.846, 2135.045), stdev = 29.238
[info]   CI (99.9%): [1986.261, 2211.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   441967.753 ±(99.9%) 9489.542 B/op [Average]
[info]   (min, avg, max) = (439757.216, 441967.753, 444674.325), stdev = 2464.404
[info]   CI (99.9%): [432478.211, 451457.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1990.165 ±(99.9%) 552.243 MB/sec [Average]
[info]   (min, avg, max) = (1907.938, 1990.165, 2244.825), stdev = 143.416
[info]   CI (99.9%): [1437.922, 2542.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   419004.248 ±(99.9%) 108484.139 B/op [Average]
[info]   (min, avg, max) = (405577.319, 419004.248, 469393.110), stdev = 28172.986
[info]   CI (99.9%): [310520.110, 527488.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.505 ±(99.9%) 7.225 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.505, 4.613), stdev = 1.876
[info]   CI (99.9%): [≈ 0, 8.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   316.826 ±(99.9%) 1510.306 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 316.826, 964.497), stdev = 392.222
[info]   CI (99.9%): [≈ 0, 1827.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 15.600, 26.000), stdev = 7.369
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13591.503 ops/s
[info] # Warmup Iteration   2: 56970.801 ops/s
[info] # Warmup Iteration   3: 63476.344 ops/s
[info] Iteration   1: 63310.588 ops/s
[info]                  ·gc.alloc.rate:                   820.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              20385.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24210.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.517 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 63998.892 ops/s
[info]                  ·gc.alloc.rate:                   824.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              20283.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16004.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.512 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 63234.579 ops/s
[info]                  ·gc.alloc.rate:                   823.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              20502.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24339.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.518 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 63420.105 ops/s
[info]                  ·gc.alloc.rate:                   821.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              20397.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16217.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.630 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.908 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 62772.621 ops/s
[info]                  ·gc.alloc.rate:                   802.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              20122.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16268.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.873 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   63347.357 ±(99.9%) 1694.045 ops/s [Average]
[info]   (min, avg, max) = (62772.621, 63347.357, 63998.892), stdev = 439.938
[info]   CI (99.9%): [61653.312, 65041.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   818.687 ±(99.9%) 35.401 MB/sec [Average]
[info]   (min, avg, max) = (802.568, 818.687, 824.914), stdev = 9.194
[info]   CI (99.9%): [783.286, 854.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20338.362 ±(99.9%) 553.235 B/op [Average]
[info]   (min, avg, max) = (20122.308, 20338.362, 20502.786), stdev = 143.673
[info]   CI (99.9%): [19785.128, 20891.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   781.061 ±(99.9%) 685.382 MB/sec [Average]
[info]   (min, avg, max) = (648.846, 781.061, 978.037), stdev = 177.992
[info]   CI (99.9%): [95.679, 1466.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   19408.113 ±(99.9%) 17114.044 B/op [Average]
[info]   (min, avg, max) = (16004.667, 19408.113, 24339.989), stdev = 4444.463
[info]   CI (99.9%): [2294.070, 36522.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.009 ±(99.9%) 7.814 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.009, 4.630), stdev = 2.029
[info]   CI (99.9%): [≈ 0, 8.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25.066 ±(99.9%) 193.893 B/op [Average]
[info]   (min, avg, max) = (0.512, 25.066, 114.908), stdev = 50.354
[info]   CI (99.9%): [≈ 0, 218.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 12.000), stdev = 3.674
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29981.722 ops/s
[info] # Warmup Iteration   2: 68803.978 ops/s
[info] # Warmup Iteration   3: 67444.044 ops/s
[info] Iteration   1: 70174.286 ops/s
[info]                  ·gc.alloc.rate:                   483.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              10847.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          637.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14297.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.467 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 70174.013 ops/s
[info]                  ·gc.alloc.rate:               482.506 MB/sec
[info]                  ·gc.alloc.rate.norm:          10820.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7178.855 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 68737.925 ops/s
[info]                  ·gc.alloc.rate:                   476.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              10898.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14687.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.430 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 70532.754 ops/s
[info]                  ·gc.alloc.rate:               477.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          10663.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7172.355 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 70010.098 ops/s
[info]                  ·gc.alloc.rate:                   486.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              10935.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14511.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.234 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   69925.815 ±(99.9%) 2660.779 ops/s [Average]
[info]   (min, avg, max) = (68737.925, 69925.815, 70532.754), stdev = 690.996
[info]   CI (99.9%): [67265.036, 72586.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   481.326 ±(99.9%) 16.455 MB/sec [Average]
[info]   (min, avg, max) = (476.022, 481.326, 486.446), stdev = 4.273
[info]   CI (99.9%): [464.871, 497.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10832.854 ±(99.9%) 403.914 B/op [Average]
[info]   (min, avg, max) = (10663.078, 10832.854, 10935.640), stdev = 104.895
[info]   CI (99.9%): [10428.940, 11236.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   513.255 ±(99.9%) 676.602 MB/sec [Average]
[info]   (min, avg, max) = (320.124, 513.255, 645.512), stdev = 175.711
[info]   CI (99.9%): [≈ 0, 1189.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11569.681 ±(99.9%) 15454.938 B/op [Average]
[info]   (min, avg, max) = (7172.355, 11569.681, 14687.690), stdev = 4013.598
[info]   CI (99.9%): [≈ 0, 27024.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.100 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.426 ±(99.9%) 2.286 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.426, 1.430), stdev = 0.594
[info]   CI (99.9%): [≈ 0, 2.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32310.466 ops/s
[info] # Warmup Iteration   2: 74523.315 ops/s
[info] # Warmup Iteration   3: 75445.232 ops/s
[info] Iteration   1: 71767.271 ops/s
[info]                  ·gc.alloc.rate:      7.297 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 75688.901 ops/s
[info]                  ·gc.alloc.rate:      7.696 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 75763.545 ops/s
[info]                  ·gc.alloc.rate:      7.706 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 75813.900 ops/s
[info]                  ·gc.alloc.rate:      7.708 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 75609.143 ops/s
[info]                  ·gc.alloc.rate:      7.687 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   74928.552 ±(99.9%) 6811.420 ops/s [Average]
[info]   (min, avg, max) = (71767.271, 74928.552, 75813.900), stdev = 1768.904
[info]   CI (99.9%): [68117.132, 81739.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.619 ±(99.9%) 0.693 MB/sec [Average]
[info]   (min, avg, max) = (7.297, 7.619, 7.708), stdev = 0.180
[info]   CI (99.9%): [6.926, 8.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   160.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (160.006, 160.006, 160.006), stdev = 0.001
[info]   CI (99.9%): [160.005, 160.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:01:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73259.389 ops/s
[info] # Warmup Iteration   2: 293487.292 ops/s
[info] # Warmup Iteration   3: 303416.172 ops/s
[info] Iteration   1: 317498.424 ops/s
[info]                  ·gc.alloc.rate:                   1889.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              9364.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9847.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.646 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 316835.410 ops/s
[info]                  ·gc.alloc.rate:                   1900.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              9437.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9808.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.517 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 317102.856 ops/s
[info]                  ·gc.alloc.rate:               1902.549 MB/sec
[info]                  ·gc.alloc.rate.norm:          9442.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1649.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8187.790 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 319208.266 ops/s
[info]                  ·gc.alloc.rate:                   1928.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              9510.153 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9827.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 317169.786 ops/s
[info]                  ·gc.alloc.rate:               1903.738 MB/sec
[info]                  ·gc.alloc.rate.norm:          9446.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1672.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8299.023 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   317562.948 ±(99.9%) 3656.492 ops/s [Average]
[info]   (min, avg, max) = (316835.410, 317562.948, 319208.266), stdev = 949.579
[info]   CI (99.9%): [313906.456, 321219.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1904.890 ±(99.9%) 56.197 MB/sec [Average]
[info]   (min, avg, max) = (1889.017, 1904.890, 1928.815), stdev = 14.594
[info]   CI (99.9%): [1848.693, 1961.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9440.347 ±(99.9%) 199.095 B/op [Average]
[info]   (min, avg, max) = (9364.381, 9440.347, 9510.153), stdev = 51.704
[info]   CI (99.9%): [9241.253, 9639.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1855.309 ±(99.9%) 683.873 MB/sec [Average]
[info]   (min, avg, max) = (1649.685, 1855.309, 1993.077), stdev = 177.600
[info]   CI (99.9%): [1171.436, 2539.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9193.830 ±(99.9%) 3344.720 B/op [Average]
[info]   (min, avg, max) = (8187.790, 9193.830, 9847.024), stdev = 868.613
[info]   CI (99.9%): [5849.111, 12538.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.737 ±(99.9%) 6.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.737, 3.560), stdev = 1.579
[info]   CI (99.9%): [≈ 0, 6.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.653 ±(99.9%) 30.132 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.653, 17.646), stdev = 7.825
[info]   CI (99.9%): [≈ 0, 33.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 14.000), stdev = 3.209
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82002.063 ops/s
[info] # Warmup Iteration   2: 446781.346 ops/s
[info] # Warmup Iteration   3: 465387.853 ops/s
[info] Iteration   1: 476115.945 ops/s
[info]                  ·gc.alloc.rate:               561.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          1857.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2147.101 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 482314.240 ops/s
[info]                  ·gc.alloc.rate:               556.646 MB/sec
[info]                  ·gc.alloc.rate.norm:          1815.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1061.895 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 481109.334 ops/s
[info]                  ·gc.alloc.rate:                   572.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              1872.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2131.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 476354.070 ops/s
[info]                  ·gc.alloc.rate:               561.592 MB/sec
[info]                  ·gc.alloc.rate.norm:          1855.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2156.894 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 480563.072 ops/s
[info]                  ·gc.alloc.rate:               560.912 MB/sec
[info]                  ·gc.alloc.rate.norm:          1834.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2134.552 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   479291.332 ±(99.9%) 11021.693 ops/s [Average]
[info]   (min, avg, max) = (476115.945, 479291.332, 482314.240), stdev = 2862.299
[info]   CI (99.9%): [468269.640, 490313.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   562.677 ±(99.9%) 22.326 MB/sec [Average]
[info]   (min, avg, max) = (556.646, 562.677, 572.331), stdev = 5.798
[info]   CI (99.9%): [540.351, 585.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1847.136 ±(99.9%) 85.168 B/op [Average]
[info]   (min, avg, max) = (1815.651, 1847.136, 1872.364), stdev = 22.118
[info]   CI (99.9%): [1761.967, 1932.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   586.390 ±(99.9%) 561.483 MB/sec [Average]
[info]   (min, avg, max) = (325.558, 586.390, 652.835), stdev = 145.815
[info]   CI (99.9%): [24.907, 1147.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1926.342 ±(99.9%) 1861.204 B/op [Average]
[info]   (min, avg, max) = (1061.895, 1926.342, 2156.894), stdev = 483.349
[info]   CI (99.9%): [65.138, 3787.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.068), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 7.000), stdev = 1.342
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 578317.220 ops/s
[info] # Warmup Iteration   2: 1149698.101 ops/s
[info] # Warmup Iteration   3: 1220978.735 ops/s
[info] Iteration   1: 1233839.357 ops/s
[info]                  ·gc.alloc.rate:                   665.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              849.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1215336.848 ops/s
[info]                  ·gc.alloc.rate:                   657.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     856.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1233994.817 ops/s
[info]                  ·gc.alloc.rate:                   662.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              845.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1237532.345 ops/s
[info]                  ·gc.alloc.rate:                   662.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              841.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     843.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1237373.566 ops/s
[info]                  ·gc.alloc.rate:                   662.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              842.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.230 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1231615.387 ±(99.9%) 35697.234 ops/s [Average]
[info]   (min, avg, max) = (1215336.848, 1231615.387, 1237532.345), stdev = 9270.458
[info]   CI (99.9%): [1195918.153, 1267312.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   662.314 ±(99.9%) 11.169 MB/sec [Average]
[info]   (min, avg, max) = (657.845, 662.314, 665.935), stdev = 2.901
[info]   CI (99.9%): [651.145, 673.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   846.170 ±(99.9%) 16.605 B/op [Average]
[info]   (min, avg, max) = (841.948, 846.170, 851.777), stdev = 4.312
[info]   CI (99.9%): [829.566, 862.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   662.477 ±(99.9%) 5.473 MB/sec [Average]
[info]   (min, avg, max) = (660.567, 662.477, 664.208), stdev = 1.421
[info]   CI (99.9%): [657.003, 667.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   846.390 ±(99.9%) 22.379 B/op [Average]
[info]   (min, avg, max) = (842.567, 846.390, 856.654), stdev = 5.812
[info]   CI (99.9%): [824.011, 868.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.525 ±(99.9%) 4.340 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.525, 2.541), stdev = 1.127
[info]   CI (99.9%): [≈ 0, 4.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.667 ±(99.9%) 5.517 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.667, 3.230), stdev = 1.433
[info]   CI (99.9%): [≈ 0, 6.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12925.687 ops/s
[info] # Warmup Iteration   2: 93128.762 ops/s
[info] # Warmup Iteration   3: 102804.844 ops/s
[info] Iteration   1: 104207.683 ops/s
[info]                  ·gc.alloc.rate:                   3310.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              49992.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3279.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49518.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.458 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 104259.614 ops/s
[info]                  ·gc.alloc.rate:                   3346.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              50517.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3322.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50150.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.629 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 103350.334 ops/s
[info]                  ·gc.alloc.rate:                   3307.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              50361.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3024.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46061.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.317 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 101789.083 ops/s
[info]                  ·gc.alloc.rate:                   3281.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              50745.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3383.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52309.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.966 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 103910.637 ops/s
[info]                  ·gc.alloc.rate:                   3324.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              50353.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3055.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46282.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.946 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   103503.470 ±(99.9%) 3943.870 ops/s [Average]
[info]   (min, avg, max) = (101789.083, 103503.470, 104259.614), stdev = 1024.211
[info]   CI (99.9%): [99559.600, 107447.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3314.153 ±(99.9%) 91.366 MB/sec [Average]
[info]   (min, avg, max) = (3281.958, 3314.153, 3346.519), stdev = 23.728
[info]   CI (99.9%): [3222.787, 3405.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50394.208 ±(99.9%) 1059.346 B/op [Average]
[info]   (min, avg, max) = (49992.469, 50394.208, 50745.761), stdev = 275.109
[info]   CI (99.9%): [49334.863, 51453.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3212.994 ±(99.9%) 624.930 MB/sec [Average]
[info]   (min, avg, max) = (3024.876, 3212.994, 3383.081), stdev = 162.292
[info]   CI (99.9%): [2588.064, 3837.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48864.344 ±(99.9%) 10273.010 B/op [Average]
[info]   (min, avg, max) = (46061.544, 48864.344, 52309.318), stdev = 2667.868
[info]   CI (99.9%): [38591.334, 59137.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.321 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.083, 0.229), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.263 ±(99.9%) 4.835 B/op [Average]
[info]   (min, avg, max) = (0.317, 1.263, 3.458), stdev = 1.256
[info]   CI (99.9%): [≈ 0, 6.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.000, 14.000), stdev = 1.225
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111980.528 ops/s
[info] # Warmup Iteration   2: 315877.969 ops/s
[info] # Warmup Iteration   3: 335893.455 ops/s
[info] Iteration   1: 339183.048 ops/s
[info]                  ·gc.alloc.rate:                   1189.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              5519.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6126.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 343471.650 ops/s
[info]                  ·gc.alloc.rate:                   1193.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              5468.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4545.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.401 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 345132.031 ops/s
[info]                  ·gc.alloc.rate:                   1211.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              5522.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6014.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.892 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 345354.179 ops/s
[info]                  ·gc.alloc.rate:               1205.719 MB/sec
[info]                  ·gc.alloc.rate.norm:          5491.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5977.694 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 343921.047 ops/s
[info]                  ·gc.alloc.rate:               1207.375 MB/sec
[info]                  ·gc.alloc.rate.norm:          5524.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4514.574 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   343412.391 ±(99.9%) 9602.954 ops/s [Average]
[info]   (min, avg, max) = (339183.048, 343412.391, 345354.179), stdev = 2493.857
[info]   CI (99.9%): [333809.437, 353015.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1201.553 ±(99.9%) 36.395 MB/sec [Average]
[info]   (min, avg, max) = (1189.653, 1201.553, 1211.526), stdev = 9.452
[info]   CI (99.9%): [1165.158, 1237.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5505.289 ±(99.9%) 94.606 B/op [Average]
[info]   (min, avg, max) = (5468.699, 5505.289, 5524.704), stdev = 24.569
[info]   CI (99.9%): [5410.683, 5599.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1186.240 ±(99.9%) 692.454 MB/sec [Average]
[info]   (min, avg, max) = (986.620, 1186.240, 1320.423), stdev = 179.828
[info]   CI (99.9%): [493.786, 1878.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5435.794 ±(99.9%) 3191.586 B/op [Average]
[info]   (min, avg, max) = (4514.574, 5435.794, 6126.618), stdev = 828.845
[info]   CI (99.9%): [2244.208, 8627.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.716 ±(99.9%) 4.511 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 2.706), stdev = 1.171
[info]   CI (99.9%): [≈ 0, 5.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.278 ±(99.9%) 20.666 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.278, 12.401), stdev = 5.367
[info]   CI (99.9%): [≈ 0, 23.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.271
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 175400.387 ops/s
[info] # Warmup Iteration   2: 673270.244 ops/s
[info] # Warmup Iteration   3: 694450.633 ops/s
[info] Iteration   1: 721085.563 ops/s
[info]                  ·gc.alloc.rate:                   567.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              1239.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1424.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 726881.457 ops/s
[info]                  ·gc.alloc.rate:               562.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          1217.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 708.248 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 721417.405 ops/s
[info]                  ·gc.alloc.rate:                   572.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              1248.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1428.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 709550.073 ops/s
[info]                  ·gc.alloc.rate:               559.118 MB/sec
[info]                  ·gc.alloc.rate.norm:          1240.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1454.708 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 702357.481 ops/s
[info]                  ·gc.alloc.rate:               547.843 MB/sec
[info]                  ·gc.alloc.rate.norm:          1227.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 735.143 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   716258.396 ±(99.9%) 38554.705 ops/s [Average]
[info]   (min, avg, max) = (702357.481, 716258.396, 726881.457), stdev = 10012.534
[info]   CI (99.9%): [677703.691, 754813.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   561.854 ±(99.9%) 35.756 MB/sec [Average]
[info]   (min, avg, max) = (547.843, 561.854, 572.128), stdev = 9.286
[info]   CI (99.9%): [526.098, 597.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1234.512 ±(99.9%) 46.336 B/op [Average]
[info]   (min, avg, max) = (1217.663, 1234.512, 1248.263), stdev = 12.033
[info]   CI (99.9%): [1188.176, 1280.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   523.764 ±(99.9%) 689.436 MB/sec [Average]
[info]   (min, avg, max) = (327.108, 523.764, 655.853), stdev = 179.044
[info]   CI (99.9%): [≈ 0, 1213.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1150.336 ±(99.9%) 1507.826 B/op [Average]
[info]   (min, avg, max) = (708.248, 1150.336, 1454.708), stdev = 391.578
[info]   CI (99.9%): [≈ 0, 2658.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.031), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.144 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.068), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 2.049
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 929248.179 ops/s
[info] # Warmup Iteration   2: 1555842.306 ops/s
[info] # Warmup Iteration   3: 1627241.454 ops/s
[info] Iteration   1: 1630429.860 ops/s
[info]                  ·gc.alloc.rate:                   773.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     637.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1624068.602 ops/s
[info]                  ·gc.alloc.rate:                   776.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     961.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1630170.004 ops/s
[info]                  ·gc.alloc.rate:                   773.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     639.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1626001.859 ops/s
[info]                  ·gc.alloc.rate:                   771.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     642.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.539 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1607515.318 ops/s
[info]                  ·gc.alloc.rate:                   769.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     648.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.550 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1623637.129 ±(99.9%) 36250.830 ops/s [Average]
[info]   (min, avg, max) = (1607515.318, 1623637.129, 1630429.860), stdev = 9414.225
[info]   CI (99.9%): [1587386.299, 1659887.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   773.080 ±(99.9%) 10.273 MB/sec [Average]
[info]   (min, avg, max) = (769.560, 773.080, 776.879), stdev = 2.668
[info]   CI (99.9%): [762.807, 783.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   749.319 ±(99.9%) 12.969 B/op [Average]
[info]   (min, avg, max) = (746.584, 749.319, 753.445), stdev = 3.368
[info]   CI (99.9%): [736.350, 762.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   728.469 ±(99.9%) 569.528 MB/sec [Average]
[info]   (min, avg, max) = (660.876, 728.469, 993.044), stdev = 147.905
[info]   CI (99.9%): [158.941, 1297.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   706.045 ±(99.9%) 550.966 B/op [Average]
[info]   (min, avg, max) = (637.907, 706.045, 961.907), stdev = 143.084
[info]   CI (99.9%): [155.079, 1257.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 4.332 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.654, 2.623), stdev = 1.125
[info]   CI (99.9%): [≈ 0, 4.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.634 ±(99.9%) 4.192 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.634, 2.539), stdev = 1.089
[info]   CI (99.9%): [≈ 0, 4.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 936098.632 ops/s
[info] # Warmup Iteration   2: 1735675.198 ops/s
[info] # Warmup Iteration   3: 1747483.788 ops/s
[info] Iteration   1: 1738974.917 ops/s
[info]                  ·gc.alloc.rate:      1.032 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.933 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1741211.425 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1697764.648 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1747194.547 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1746705.467 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1734370.201 ±(99.9%) 79955.236 ops/s [Average]
[info]   (min, avg, max) = (1697764.648, 1734370.201, 1747194.547), stdev = 20764.121
[info]   CI (99.9%): [1654414.964, 1814325.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.207 ±(99.9%) 1.776 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.207, 1.032), stdev = 0.461
[info]   CI (99.9%): [≈ 0, 1.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.187 ±(99.9%) 1.607 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.187, 0.933), stdev = 0.417
[info]   CI (99.9%): [≈ 0, 1.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107565.938 ops/s
[info] # Warmup Iteration   2: 440043.153 ops/s
[info] # Warmup Iteration   3: 455342.566 ops/s
[info] Iteration   1: 457821.099 ops/s
[info]                  ·gc.alloc.rate:                   698.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              2402.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2255.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 456648.824 ops/s
[info]                  ·gc.alloc.rate:                   701.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              2414.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2264.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 456588.405 ops/s
[info]                  ·gc.alloc.rate:                   694.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              2394.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2267.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 457131.718 ops/s
[info]                  ·gc.alloc.rate:               692.640 MB/sec
[info]                  ·gc.alloc.rate.norm:          2384.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2267.074 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 456556.791 ops/s
[info]                  ·gc.alloc.rate:                   697.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              2405.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2272.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.840 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   456949.368 ±(99.9%) 2080.688 ops/s [Average]
[info]   (min, avg, max) = (456556.791, 456949.368, 457821.099), stdev = 540.348
[info]   CI (99.9%): [454868.680, 459030.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   697.046 ±(99.9%) 12.735 MB/sec [Average]
[info]   (min, avg, max) = (692.640, 697.046, 701.019), stdev = 3.307
[info]   CI (99.9%): [684.311, 709.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2400.448 ±(99.9%) 43.712 B/op [Average]
[info]   (min, avg, max) = (2384.720, 2400.448, 2414.974), stdev = 11.352
[info]   CI (99.9%): [2356.735, 2444.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   657.855 ±(99.9%) 4.284 MB/sec [Average]
[info]   (min, avg, max) = (656.216, 657.855, 659.163), stdev = 1.113
[info]   CI (99.9%): [653.570, 662.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2265.487 ±(99.9%) 23.338 B/op [Average]
[info]   (min, avg, max) = (2255.751, 2265.487, 2272.200), stdev = 6.061
[info]   CI (99.9%): [2242.150, 2288.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.708 ±(99.9%) 5.871 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.708, 3.435), stdev = 1.525
[info]   CI (99.9%): [≈ 0, 6.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.440 ±(99.9%) 20.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.440, 11.840), stdev = 5.255
[info]   CI (99.9%): [≈ 0, 22.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # Run complete. Total time: 01:30:35
[info] Benchmark                                                                                        (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                              N/A  thrpt    5    789192.628 ±   11607.107   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                               N/A  thrpt    5      2289.950 ±      43.121  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                          N/A  thrpt    5      4565.982 ±      71.449    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                      N/A  thrpt    5      2187.578 ±     662.914  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                                 N/A  thrpt    5      4361.629 ±    1308.077    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                  N/A  thrpt    5         0.787 ±       6.466  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                             N/A  thrpt    5         1.571 ±      12.906    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                                    N/A  thrpt    5        33.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                                     N/A  thrpt    5        48.000                    ms
[info] AdtBenchmark.readJacksonScala                                                                       N/A  thrpt    5   1939492.055 ±   65981.666   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                        N/A  thrpt    5      1292.548 ±      36.983  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5      1048.724 ±      10.606    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1240.775 ±     562.388  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      1007.499 ±     481.873    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.885 ±       7.551  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.723 ±       6.172    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                             N/A  thrpt    5        19.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                              N/A  thrpt    5        41.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                                      N/A  thrpt    5   5812861.226 ±  153336.772   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                                       N/A  thrpt    5       397.889 ±       3.580  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       107.729 ±       3.649    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5       367.200 ±     310.798  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5        99.451 ±      85.089    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.001 ±       0.010    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                            N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                             N/A  thrpt    5        15.000                    ms
[info] AdtBenchmark.readPlayJson                                                                           N/A  thrpt    5    300667.145 ±    5725.930   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                            N/A  thrpt    5      2659.673 ±      93.688  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                                       N/A  thrpt    5     13920.666 ±     291.690    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      2545.987 ±     694.008  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5     13328.036 ±    3768.898    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.225 ±       1.757  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         1.185 ±       9.268    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                                 N/A  thrpt    5        38.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                                  N/A  thrpt    5        56.000                    ms
[info] AdtBenchmark.writeCirce                                                                             N/A  thrpt    5    900867.996 ±   32951.118   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                              N/A  thrpt    5      2423.614 ±      78.256  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                         N/A  thrpt    5      4233.650 ±      67.404    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                     N/A  thrpt    5      2326.342 ±      98.843  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                                N/A  thrpt    5      4063.969 ±     229.538    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                                 N/A  thrpt    5         0.237 ±       1.690  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                            N/A  thrpt    5         0.413 ±       2.937    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                                   N/A  thrpt    5        35.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                                    N/A  thrpt    5        48.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                                      N/A  thrpt    5   2830287.902 ±   38747.905   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                                       N/A  thrpt    5      1215.432 ±      34.396  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       675.749 ±      19.343    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      1178.524 ±     695.126  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       655.053 ±     381.215    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.806 ±       5.955  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.446 ±       3.292    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                            N/A  thrpt    5        18.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                             N/A  thrpt    5        37.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                                     N/A  thrpt    5  14425409.660 ± 1690570.342   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                                      N/A  thrpt    5       754.982 ±      86.901  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5        82.354 ±       1.985    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5       727.488 ±     571.526  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5        79.295 ±      59.442    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.620 ±       5.163  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.066 ±       0.551    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                           N/A  thrpt    5        11.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                            N/A  thrpt    5        29.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                             N/A  thrpt    5  16765102.571 ±  244503.685   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                              N/A  thrpt    5         3.413 ±      29.385  MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                         N/A  thrpt    5         0.323 ±       2.777    B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                   N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                          N/A  thrpt    5    497405.363 ±   13815.424   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                           N/A  thrpt    5      1514.928 ±      40.627  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                                      N/A  thrpt    5      4793.166 ±     149.959    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      1453.424 ±     703.561  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      4597.939 ±    2203.580    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.187 ±       0.802  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.592 ±       2.529    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                                N/A  thrpt    5        22.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                                 N/A  thrpt    5        35.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                          N/A  thrpt    5   2049012.652 ±   78828.537   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                           N/A  thrpt    5      2871.044 ±     104.035  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                                      N/A  thrpt    5      2205.017 ±      63.705    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2805.735 ±     741.361  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      2154.550 ±     543.850    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.083 ±       0.278  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.064 ±       0.213    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                                N/A  thrpt    5        42.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                                 N/A  thrpt    5        60.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                                    N/A  thrpt    5  10694275.117 ±  548167.240   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                                     N/A  thrpt    5      1347.178 ±      77.867  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                N/A  thrpt    5       198.217 ±       3.238    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1304.644 ±      11.728  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5       191.988 ±       9.877    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.864 ±       7.150  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.128 ±       1.056    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                          N/A  thrpt    5        20.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                           N/A  thrpt    5        42.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                                   N/A  thrpt    5   3187410.466 ±   89560.769   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                                    N/A  thrpt    5      1991.270 ±      73.857  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                               N/A  thrpt    5       983.055 ±      26.851    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      1910.339 ±     519.953  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5       943.222 ±     263.496    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.873 ±       6.934  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.432 ±       3.434    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                         N/A  thrpt    5        29.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                          N/A  thrpt    5        49.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                                  N/A  thrpt    5  13016750.128 ± 2104423.937   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                                   N/A  thrpt    5      1708.950 ±     273.037  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                              N/A  thrpt    5       206.575 ±       6.883    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1599.747 ±     575.315  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       193.634 ±      76.714    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.558 ±       3.373  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.068 ±       0.408    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                        N/A  thrpt    5        24.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                         N/A  thrpt    5        34.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                                       N/A  thrpt    5   1161140.090 ±   45103.183   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                        N/A  thrpt    5      2780.154 ±     114.186  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                   N/A  thrpt    5      3767.726 ±      76.543    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      2736.396 ±     591.140  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      3707.588 ±     707.679    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.391 ±       2.491  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.535 ±       3.414    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                             N/A  thrpt    5        41.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                              N/A  thrpt    5        65.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                         N/A  thrpt    5   2421823.360 ±   40516.483   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                          N/A  thrpt    5      2142.716 ±      82.051  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                                     N/A  thrpt    5      1392.321 ±      31.190    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5      2055.479 ±     528.298  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5      1335.537 ±     332.774    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.741 ±       5.893  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.485 ±       3.859    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                               N/A  thrpt    5        31.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                                N/A  thrpt    5        47.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                                   N/A  thrpt    5  20054758.669 ±  461933.547   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                    N/A  thrpt    5       628.419 ±      27.431  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                               N/A  thrpt    5        49.308 ±       1.645    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5       581.315 ±     554.097  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5        45.585 ±      43.119    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.001 ±       0.003    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                         N/A  thrpt    5         9.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                          N/A  thrpt    5        14.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                                  N/A  thrpt    5   6421007.157 ±  328485.084   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                                   N/A  thrpt    5      1829.053 ±     117.162  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                              N/A  thrpt    5       448.214 ±       8.378    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1775.056 ±     680.570  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       434.945 ±     162.516    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.791 ±       6.721  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.198 ±       1.687    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                        N/A  thrpt    5        27.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                         N/A  thrpt    5        45.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                                 N/A  thrpt    5  28267514.893 ± 1050118.889   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                  N/A  thrpt    5       887.447 ±      29.891  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                             N/A  thrpt    5        49.402 ±       1.195    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       860.179 ±     694.308  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        47.910 ±      39.186    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.646 ±       5.380  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.036 ±       0.300    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                                       N/A  thrpt    5        13.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                        N/A  thrpt    5        31.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                         N/A  thrpt    5  34654593.487 ±  184222.477   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                          N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                     N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                               N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                                      N/A  thrpt    5   1803659.709 ±   78796.024   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                                       N/A  thrpt    5      2972.400 ±     102.338  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                  N/A  thrpt    5      2593.528 ±      53.389    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2863.986 ±     715.332  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      2500.131 ±     704.460    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.050 ±       0.201  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.043 ±       0.174    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                            N/A  thrpt    5        43.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                             N/A  thrpt    5        59.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                            128  thrpt    5    304872.800 ±   13082.356   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1872.509 ±      91.607  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5      9665.967 ±     313.937    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1855.156 ±     713.387  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      9580.947 ±    3879.986    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.791 ±       6.011  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         4.113 ±      31.260    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                                  128  thrpt    5        28.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                                   128  thrpt    5        45.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                                     128  thrpt    5    507407.013 ±   12392.869   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       665.654 ±      22.519  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      2064.277 ±      40.420    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       653.785 ±       6.680  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2027.549 ±      57.363    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.833 ±       6.858  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         2.604 ±      21.456    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        36.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                                    128  thrpt    5   1307404.930 ±   76428.094   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       898.162 ±      43.243  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1081.328 ±      58.576    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       861.282 ±     702.296  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1039.057 ±     889.718    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.760 ±       4.853  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.917 ±       5.866    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        13.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        29.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                         128  thrpt    5    112065.995 ±    4775.146   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3560.850 ±     102.302  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     49996.665 ±     862.089    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3486.052 ±     658.145  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     48955.164 ±   10062.728    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.408 ±       1.265    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        52.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        68.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                           128  thrpt    5    343596.566 ±   16594.481   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1194.163 ±      53.938  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      5469.041 ±     210.500    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1185.898 ±     693.397  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      5437.341 ±    3353.104    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.754 ±       4.702  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         3.449 ±      21.490    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        18.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        37.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                                    128  thrpt    5    896674.651 ±   51460.689   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       664.903 ±      28.209  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      1166.891 ±      39.151    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       648.704 ±       4.921  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1138.594 ±      68.843    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.030 ±       0.157    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        10.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        14.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                                   128  thrpt    5   2433645.611 ±   56521.833   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1159.598 ±      49.033  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       749.739 ±      36.281    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1123.884 ±     700.120  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       726.812 ±     458.037    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.670 ±       4.862  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.433 ±       3.142    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        34.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2918341.900 ±    4517.664   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                        128  thrpt    5    473343.877 ±   12853.656   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5       706.326 ±      33.160  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5      2347.435 ±      65.143    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5       723.610 ±     566.407  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      2403.773 ±    1845.613    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.787 ±       6.689  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.616 ±      22.234    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        11.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        34.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                               128  thrpt    5     17179.889 ±     509.503   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1383.606 ±      52.482  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    126723.727 ±    3731.393    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1321.317 ±      16.199  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    121021.592 ±    2603.324    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.758 ±       6.256  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        69.493 ±     573.743    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        20.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        38.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                        128  thrpt    5     36015.277 ±    2204.859   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5       997.127 ±      46.324  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     43575.762 ±    1041.959    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       983.450 ±      12.320  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     42984.753 ±    2836.023    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.878 ±       6.632  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        38.136 ±     287.889    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        15.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        42.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                                       128  thrpt    5     43733.210 ±    6990.369   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       604.716 ±      93.713  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5     21758.303 ±     879.130    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       529.618 ±     698.847  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     19181.526 ±   26649.652    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.446 ±       2.565    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        22.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                            128  thrpt    5     28829.164 ±    2597.881   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1469.937 ±     137.337  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     80242.489 ±    3005.526    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1439.727 ±     687.634  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     78682.957 ±   40504.713    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.895 ±       7.439  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        49.680 ±     413.342    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        22.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        45.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                              128  thrpt    5     24502.141 ±     970.239   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1821.733 ±      94.897  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5    116995.945 ±    2677.557    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1786.951 ±     703.870  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    114755.986 ±   44582.975    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.795 ±       6.228  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        51.338 ±     402.355    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        27.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        42.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                                       128  thrpt    5     24668.679 ±    1368.786   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1552.985 ±      89.222  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     99061.903 ±    1931.556    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1509.586 ±     689.620  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     96339.363 ±   45514.871    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.841 ±       4.816  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        54.444 ±     313.749    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        23.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        43.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                                      128  thrpt    5     27462.639 ±    1560.057   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1638.046 ±      87.282  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5     93870.327 ±    3930.313    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1589.171 ±     563.444  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     91105.336 ±   33830.895    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.737 ±       4.529  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        42.231 ±     257.801    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        24.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        39.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5     26897.781 ±    1307.193   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5      1547.219 ±      90.593  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5     90522.238 ±    2480.494    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      128  thrpt    5      1524.014 ±     706.040  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     89134.467 ±   39859.541    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.695 ±       4.445  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        40.623 ±     260.222    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5        23.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     128  thrpt    5        37.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                           128  thrpt    5      7794.366 ±      99.288   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1161.847 ±      31.336  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    234541.669 ±    6202.990    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1119.736 ±     687.663  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    226053.178 ±  139226.239    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.862 ±       4.476  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       173.788 ±     901.227    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        39.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                                   128  thrpt    5     17765.819 ±     357.414   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1638.876 ±      79.182  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    145147.116 ±    4841.900    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1586.532 ±     585.969  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5    140504.377 ±   51403.747    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.795 ±       4.495  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        70.749 ±     400.654    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        43.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                            128  thrpt    5     42502.237 ±    2252.892   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1211.569 ±      40.199  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     44860.871 ±    1340.524    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1180.344 ±     699.906  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     43767.738 ±   27711.727    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.870 ±       6.329  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        32.072 ±     233.399    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        18.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        42.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                           128  thrpt    5     61120.222 ±    2618.473   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       812.359 ±      38.419  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     20913.523 ±     632.120    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       796.161 ±     703.438  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     20503.681 ±   18253.944    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.596 ±       4.427  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        15.212 ±     113.095    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        12.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        28.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                                128  thrpt    5     32947.908 ±     897.874   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      2181.515 ±     111.485  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    104188.765 ±    2626.707    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2067.114 ±     588.671  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     98707.235 ±   26467.834    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.125 ±       0.678  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         6.009 ±      32.757    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        31.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        45.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                           128  thrpt    5     27593.805 ±     851.767   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1774.930 ±      42.410  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5    101227.552 ±    2939.219    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1713.423 ±     562.234  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     97769.999 ±   35136.636    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.799 ±       6.436  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        46.151 ±     371.940    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        26.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        43.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                          128  thrpt    5     33703.474 ±    2644.660   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5      1532.610 ±      66.481  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5     71573.480 ±    3936.610    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1523.731 ±     703.434  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     71182.646 ±   33894.872    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.708 ±       3.715  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        33.757 ±     179.065    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        23.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        41.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5     33933.103 ±    1057.737   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5      1473.978 ±      62.774  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5     68356.396 ±    2224.786    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                          128  thrpt    5      1457.499 ±     707.466  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     67581.881 ±   32320.388    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.758 ±       4.160  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        35.471 ±     195.555    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5        22.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                         128  thrpt    5        39.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                                  128  thrpt    5    323435.145 ±   25241.992   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1834.592 ±     166.372  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5      8925.693 ±     274.158    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1786.942 ±     686.096  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5      8703.059 ±    3699.953    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.783 ±       6.028  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         3.830 ±      29.475    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                        128  thrpt    5        27.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                         128  thrpt    5        44.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                            128  thrpt    5   1490027.247 ±   35396.056   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       482.715 ±      14.117  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5       509.817 ±      25.774    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       456.014 ±     685.363  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       482.468 ±     736.053    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.019 ±       0.117  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.020 ±       0.123    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                                  128  thrpt    5         7.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                                   128  thrpt    5        22.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                           128  thrpt    5    929167.916 ±   51702.540   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5       739.671 ±      26.260  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1252.712 ±      51.153    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       720.568 ±     556.294  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1221.957 ±     989.702    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.824 ±       7.009  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.376 ±      11.692    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        36.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                          128  thrpt    5   1882129.821 ±   16401.421   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       375.562 ±      20.252  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       314.014 ±      15.863    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       381.469 ±     615.417  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       318.905 ±     513.743    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.010 ±       0.060    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5        16.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                               128  thrpt    5     98998.735 ±    3709.003   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      3328.717 ±      94.270  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     52913.318 ±    1338.185    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      3211.520 ±     782.379  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     51068.609 ±   13730.101    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.659 ±       2.000    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        48.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        66.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                                 128  thrpt    5    355164.312 ±   41008.988   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1226.871 ±     126.511  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5      5436.147 ±     238.748    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1185.654 ±     694.130  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      5256.826 ±    3153.209    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.729 ±       5.020  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         3.341 ±      23.280    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        18.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                        128  thrpt    5        36.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                           128  thrpt    5   1669825.939 ±   11603.659   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       797.843 ±      18.865  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5       751.978 ±      17.500    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       782.093 ±     692.052  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       737.183 ±     653.349    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.852 ±       7.142  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.802 ±       6.724    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                                 128  thrpt    5        12.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                                  128  thrpt    5        34.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                          128  thrpt    5   1029826.384 ±   54070.569   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       746.049 ±      38.680  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      1140.024 ±      13.493    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       723.271 ±     569.545  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1105.797 ±     884.699    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.758 ±       5.099  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.161 ±       7.828    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5        31.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                         128  thrpt    5   2776590.491 ±   75071.062   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1327.884 ±      47.903  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       752.525 ±      12.021    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1258.705 ±     574.511  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       713.604 ±     334.599    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.621 ±       5.121  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.355 ±       2.934    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5        19.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5        33.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5   3240964.809 ±   45109.535   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                              128  thrpt    5    476614.846 ±   29636.782   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5       563.546 ±      45.246  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5      1860.513 ±      79.481    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5       526.106 ±     692.983  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1739.450 ±    2317.717    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.083 ±       0.351    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        26.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                                     128  thrpt    5    158546.378 ±    4067.180   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2013.687 ±      97.796  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     19987.167 ±     480.853    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1989.908 ±      54.356  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     19752.066 ±     517.776    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.770 ±       6.061  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         7.725 ±      60.835    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                           128  thrpt    5        30.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                            128  thrpt    5        45.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                              128  thrpt    5    509307.295 ±   25367.829   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       423.066 ±      32.374  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1307.104 ±      73.252    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       443.479 ±     748.321  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1370.940 ±    2327.503    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.064 ±       0.249    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        24.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                             128  thrpt    5   1247165.445 ±   28266.597   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       248.645 ±      14.918  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       313.741 ±      23.074    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       234.265 ±     523.998  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       295.910 ±     660.950    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.011 ±       0.055    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                                  128  thrpt    5     85502.312 ±    2229.403   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3429.342 ±     115.510  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     63117.781 ±    1126.203    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      3276.581 ±     530.642  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     60307.318 ±    9727.247    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.033 ±       0.156  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.615 ±       2.881    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        49.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        68.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                                    128  thrpt    5    297209.968 ±   15518.103   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1680.730 ±      87.826  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5      8899.047 ±     257.951    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1651.532 ±      30.117  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5      8745.570 ±     494.189    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.820 ±       5.574  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         4.418 ±      30.225    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        25.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        42.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                             128  thrpt    5   1868221.417 ±  304768.194   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       991.327 ±     163.883  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5       834.970 ±      20.348    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       984.235 ±      10.819  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       830.279 ±     145.437    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.758 ±       5.607  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.622 ±       4.594    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        15.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        36.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                            128  thrpt    5   2755804.145 ±   54644.493   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       765.657 ±      24.286  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       437.244 ±       9.457    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       728.809 ±     569.939  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       416.246 ±     326.569    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.666 ±       4.236  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.380 ±       2.418    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        11.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        30.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   3112194.584 ±   41355.775   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.250 ±       2.147  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.127 ±       1.092    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                                 128  thrpt    5     48440.628 ±    1494.142   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      2194.825 ±      94.187  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     71300.244 ±    1378.456    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2119.962 ±     662.940  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     68876.367 ±   21879.894    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.816 ±       6.626  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        26.463 ±     214.731    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        32.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        46.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                                     128  thrpt    5    240488.476 ±    6931.612   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2642.743 ±     121.781  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     17292.764 ±     357.341    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2536.412 ±     693.237  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     16601.468 ±    4771.629    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.142 ±       0.870  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         0.935 ±       5.770    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        38.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        48.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                              128  thrpt    5    380910.999 ±   11161.609   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1973.217 ±      71.712  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      8152.588 ±     218.553    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1849.354 ±     674.778  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      7641.671 ±    2820.348    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.800 ±       6.750  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.278 ±      27.662    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        28.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        42.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                             128  thrpt    5   2222048.757 ±  154202.128   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       790.123 ±      57.790  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       559.545 ±      10.699    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       729.590 ±     573.286  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       516.313 ±     392.346    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.591 ±       4.029  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.413 ±       2.815    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        11.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        25.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                                  128  thrpt    5     86040.174 ±    3030.772   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3398.566 ±      84.718  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     62147.164 ±     997.707    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      3235.153 ±     693.335  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     59168.591 ±   13458.426    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.382 ±       1.052    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        48.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        65.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                                    128  thrpt    5    260381.780 ±    9424.687   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      2114.482 ±      82.330  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     12779.437 ±     147.860    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      2059.385 ±     544.544  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     12447.349 ±    3325.724    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.733 ±       5.910  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         4.435 ±      35.769    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        31.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        43.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                             128  thrpt    5   1469880.385 ±   70996.836   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       885.886 ±      24.749  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5       948.508 ±      27.763    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       853.988 ±     693.097  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       916.092 ±     777.901    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.733 ±       6.178  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.785 ±       6.618    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        13.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        34.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                            128  thrpt    5   2816413.012 ±   92630.476   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       987.717 ±      29.445  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       551.863 ±       9.818    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       992.050 ±       9.319  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       554.305 ±      16.715    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.616 ±       4.780  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.343 ±       2.660    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        15.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        31.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   3181674.585 ±    1860.644   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                                 128  thrpt    5    386732.497 ±   14172.694   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      2497.179 ±      96.214  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     10162.118 ±     202.010    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2390.971 ±     587.778  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      9730.395 ±    2398.354    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.104 ±       0.639  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.422 ±       2.594    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        36.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        49.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                                   128  thrpt    5     25584.688 ±    2008.999   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1651.557 ±     136.267  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    101588.383 ±    1682.316    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1585.807 ±     584.860  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     97615.916 ±   38474.777    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.808 ±       4.428  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        50.819 ±     281.049    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                          128  thrpt    5        42.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                             128  thrpt    5     97454.971 ±    3118.445   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       947.245 ±      49.659  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5     15295.695 ±     617.762    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       913.309 ±     560.402  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     14739.914 ±    8854.536    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.921 ±       7.678  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        14.755 ±     122.948    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                                   128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                                    128  thrpt    5        38.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                            128  thrpt    5     67527.859 ±    1029.670   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1218.328 ±      25.022  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     28390.700 ±     445.664    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1181.679 ±     698.399  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     27545.556 ±   16535.399    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.858 ±       5.635  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        20.083 ±     132.222    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        18.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        41.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                           128  thrpt    5    135437.912 ±    6072.307   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       941.806 ±      20.366  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     10945.293 ±     632.117    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       928.266 ±     567.117  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     10794.739 ±    6776.454    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.633 ±       3.689  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         7.296 ±      42.500    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        32.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                                128  thrpt    5     36646.317 ±    2294.938   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1843.365 ±     154.820  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     79156.566 ±    1809.541    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1776.128 ±     709.970  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     76205.723 ±   26521.503    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.899 ±       7.213  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        39.494 ±     317.156    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        27.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        45.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                                  128  thrpt    5     31935.006 ±     647.333   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5       528.396 ±      17.695  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     26037.733 ±    1110.870    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5       526.714 ±     693.945  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     25980.309 ±   34512.123    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         1.028 ±       3.956    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        25.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                           128  thrpt    5     32751.160 ±     458.771   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       412.786 ±       8.896  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     19836.760 ±     575.501    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       379.039 ±     605.777  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     18221.998 ±   29281.627    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.004 ±       5.467    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        19.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                          128  thrpt    5     34124.613 ±    2337.526   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       427.074 ±      25.355  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5     19700.569 ±    2298.763    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       447.479 ±     627.311  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     20693.075 ±   29676.814    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.191 ±       1.642    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        21.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5     33870.777 ±    1708.689   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5       385.563 ±      42.373  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5     17917.045 ±    2392.816    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                          128  thrpt    5       381.500 ±     613.104  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     17760.447 ±   29186.494    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.587 ±       3.373    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                         128  thrpt    5        17.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                                 128  thrpt    5     15418.649 ±     666.726   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1141.038 ±      23.909  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5    116471.135 ±    5960.351    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1056.617 ±     576.507  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    107970.405 ±   63629.451    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.774 ±       6.534  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        80.374 ±     678.475    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        16.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        37.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                          128  thrpt    5     15489.426 ±     239.541   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1011.275 ±      29.256  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5    102743.911 ±    2039.865    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       985.281 ±      13.528  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    100105.240 ±    2417.227    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.891 ±       5.968  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        90.527 ±     606.695    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        15.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        41.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                         128  thrpt    5    107422.032 ±    5392.491   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       289.691 ±      16.101  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      4243.805 ±     141.069    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       300.531 ±     156.946  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4400.341 ±    2211.216    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.121 ±       1.040    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        14.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                              128  thrpt    5     13926.300 ±     264.061   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      1358.215 ±      28.142  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    153472.809 ±    2993.102    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1311.805 ±      20.555  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    148231.746 ±    4600.702    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.895 ±       6.965  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5       101.015 ±     785.928    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        20.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        43.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                                128  thrpt    5     44904.485 ±    1386.394   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1145.764 ±      35.114  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     40158.187 ±    1557.698    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1120.785 ±     694.819  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     39278.582 ±   24230.715    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.766 ±       4.460  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        26.771 ±     155.936    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        17.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        37.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                         128  thrpt    5     62070.142 ±    1770.372   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1094.064 ±      46.946  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     27738.719 ±     565.475    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1050.458 ±     557.831  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     26627.390 ±   13854.630    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.779 ±       6.528  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        19.720 ±     165.237    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        16.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        36.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                        128  thrpt    5    172268.918 ±   12186.072   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       282.326 ±      18.854  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      2578.721 ±      67.021    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       300.392 ±     156.498  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      2748.963 ±    1588.714    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.152 ±       0.802    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        15.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    183693.275 ±    7925.666   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.003 ±       0.002    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                             128  thrpt    5     58266.720 ±    1509.147   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1133.388 ±      25.343  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     30610.969 ±     643.899    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1118.548 ±     693.613  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     30221.624 ±   19089.890    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.826 ±       4.805  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        22.252 ±     129.657    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        17.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        37.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                                     128  thrpt    5     95656.104 ±    2229.610   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2130.980 ±      84.388  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     35052.781 ±     660.238    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2048.816 ±     524.395  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     33708.871 ±    9124.516    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.883 ±       7.203  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5        14.614 ±     119.246    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        31.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        47.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                              128  thrpt    5    123837.119 ±    2725.184   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1753.294 ±      89.932  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     22278.214 ±     743.907    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1708.473 ±     610.672  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     21702.306 ±    7324.973    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.874 ±       6.827  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        11.123 ±      86.803    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        26.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        43.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                             128  thrpt    5    165301.918 ±    5896.276   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5      1552.113 ±      32.346  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5     14775.747 ±     507.945    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1458.516 ±     694.091  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     13889.135 ±    6798.127    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.687 ±       4.167  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         6.569 ±      39.832    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        22.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        37.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                                  128  thrpt    5     53138.149 ±     724.276   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2865.526 ±      58.489  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     84861.399 ±    1866.368    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2751.471 ±     551.576  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     81484.714 ±   16425.692    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.160 ±       1.292  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         4.736 ±      38.145    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        41.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        58.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                                    128  thrpt    5    182084.994 ±    4532.382   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1218.829 ±      58.880  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     10533.513 ±     402.604    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1186.986 ±     694.194  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     10259.940 ±    6041.390    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.712 ±       5.310  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         6.187 ±      46.215    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        18.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        34.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                             128  thrpt    5    526313.804 ±    7222.772   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       548.096 ±      29.573  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1638.956 ±      87.037    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       523.737 ±     688.969  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1566.636 ±    2066.633    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.017 ±       0.143  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.050 ±       0.429    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        26.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                            128  thrpt    5    703490.868 ±   45320.754   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       556.544 ±      33.966  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1244.923 ±      57.738    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       528.669 ±     696.093  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1184.274 ±    1578.301    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.056 ±       0.197    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        23.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    778321.587 ±   14944.300   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                                 128  thrpt    5    325020.850 ±   19953.991   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5       920.772 ±      61.159  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5      4458.344 ±     116.618    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space                                128  thrpt    5         0.003 ±       0.030  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm                           128  thrpt    5         0.017 ±       0.147    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.Metaspace                                             128  thrpt    5         0.010 ±       0.088  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.Metaspace.norm                                        128  thrpt    5         0.051 ±       0.435    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5       908.175 ±     548.609  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      4402.887 ±    2772.000    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen                                            128  thrpt    5         0.451 ±       3.883  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm                                       128  thrpt    5         2.229 ±      19.191    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.862 ±       5.411  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         4.124 ±      25.830    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        15.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        66.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                                    128  thrpt    5     37628.581 ±    2557.038   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1925.016 ±     118.497  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     80506.751 ±    3287.593    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1854.945 ±     692.199  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     77606.145 ±   30246.483    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.783 ±       6.030  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5        33.649 ±     260.082    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        28.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        45.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                              128  thrpt    5    292088.958 ±   23118.392   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       311.547 ±      27.126  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1678.205 ±      31.238    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       310.910 ±     118.393  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1672.627 ±     521.258    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.017 ±       0.084  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.090 ±       0.447    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5        16.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                             128  thrpt    5    114447.177 ±    4048.439   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1371.266 ±      68.135  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     18856.018 ±     406.263    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1311.640 ±      17.039  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     18037.666 ±     670.682    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.853 ±       7.170  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        11.674 ±      98.046    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5        20.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5        41.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                            128  thrpt    5    470393.986 ±   27300.393   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       316.512 ±      37.487  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1058.673 ±      83.896    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       300.339 ±     713.955  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1002.536 ±    2361.081    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.028 ±       0.146    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5        13.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                                 128  thrpt    5     41214.892 ±    1445.838   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      2052.953 ±     103.404  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     78383.490 ±    1684.864    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2043.149 ±     544.419  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     78003.597 ±   20027.008    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.916 ±       7.619  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        35.368 ±     294.290    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        31.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        50.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                                   128  thrpt    5     73915.593 ±    2760.883   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5       603.127 ±      33.215  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5     12840.951 ±     422.246    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5       593.248 ±     565.732  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     12623.588 ±   11950.844    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.268 ±       1.542    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5         9.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        26.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                             128  thrpt    5     87393.962 ±     617.613   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       508.706 ±      12.263  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5      9160.450 ±     250.828    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       520.303 ±     686.031  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      9371.279 ±   12378.477    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.013 ±       0.048  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.229 ±       0.870    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         8.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5        25.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                            128  thrpt    5     79051.614 ±     658.345   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       320.524 ±       9.131  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      6380.560 ±     155.573    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       298.344 ±     149.538  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      5938.322 ±    2950.177    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.083 ±       0.714    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        17.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                           128  thrpt    5     86433.912 ±    2280.956   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       502.460 ±      24.742  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      9145.671 ±     286.934    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       529.003 ±     696.686  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      9617.760 ±   12539.090    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.377 ±       1.453    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        24.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5     87019.540 ±    1961.193   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5       438.135 ±      23.074  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5      7922.792 ±     385.398    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                           128  thrpt    5       447.470 ±     626.107  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      8087.958 ±   11263.282    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.301 ±       1.585    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                          128  thrpt    5        20.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                                  128  thrpt    5     10041.097 ±     376.405   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1654.265 ±      87.092  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5    259248.866 ±    7143.425    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1650.926 ±      26.704  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    258753.440 ±   12241.832    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.800 ±       4.567  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5       126.606 ±     724.472    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        25.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        44.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                           128  thrpt    5      9891.863 ±     313.903   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1566.932 ±      67.095  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5    249300.830 ±    5789.868    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1510.211 ±     681.752  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    240346.379 ±  110961.912    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.900 ±       5.171  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       144.571 ±     834.579    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5        23.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        45.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                          128  thrpt    5    149702.501 ±    7127.999   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       402.890 ±      12.098  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      4235.433 ±     246.534    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       381.847 ±     612.380  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      4025.981 ±    6655.216    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.088 ±       0.463    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5        17.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                               128  thrpt    5      5733.529 ±     248.349   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      1501.395 ±      62.267  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5    412115.472 ±   10558.780    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1507.611 ±     692.695  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    413955.221 ±  195001.196    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.937 ±       7.283  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5       257.529 ±    2004.834    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        23.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        50.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                                 128  thrpt    5     19874.957 ±     261.440   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1547.722 ±      56.480  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5    122529.465 ±    3647.810    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1452.674 ±     692.445  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    115011.490 ±   55036.750    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.804 ±       4.202  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        63.741 ±     333.478    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        22.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5        40.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                          128  thrpt    5     23662.936 ±     658.371   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1560.689 ±      66.636  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5    103787.685 ±    3226.964    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1513.538 ±     686.137  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    100607.970 ±   43767.893    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.800 ±       5.657  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        53.276 ±     376.705    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5        23.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5        40.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                         128  thrpt    5    132862.352 ±    3826.512   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       302.982 ±      20.573  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      3587.943 ±     249.498    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       300.233 ±     712.737  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3559.769 ±    8505.144    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.099 ±       0.523    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5        14.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5    138277.085 ±   12177.502   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5         0.003 ±       0.002    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                              128  thrpt    5     23155.691 ±     648.499   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1620.982 ±      59.735  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    110158.087 ±    1997.684    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1581.583 ±     583.638  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    107471.670 ±   39184.633    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.854 ±       5.474  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        58.307 ±     374.624    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        24.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        42.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                                      128  thrpt    5    123690.020 ±    3153.406   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                                       128  thrpt    5      1760.939 ±      88.716  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                  128  thrpt    5     22402.794 ±     640.902    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              128  thrpt    5      1654.752 ±      29.030  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5     21052.796 ±     304.900    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          128  thrpt    5         0.758 ±       5.091  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5         9.661 ±      64.879    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                            128  thrpt    5        25.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                             128  thrpt    5        40.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                                128  thrpt    5    555253.084 ±   34493.601   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                                 128  thrpt    5       593.840 ±      29.048  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                            128  thrpt    5      1683.083 ±      54.123    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                        128  thrpt    5       586.332 ±     563.824  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      1665.320 ±    1642.533    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.011 ±       0.041  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.033 ±       0.117    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                                      128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                                       128  thrpt    5        29.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                               128  thrpt    5    322202.054 ±   19730.084   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                128  thrpt    5       458.417 ±      18.813  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           128  thrpt    5      2238.749 ±     100.009    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5       392.101 ±     563.189  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      1921.502 ±    2875.939    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.082 ±       0.333    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                                     128  thrpt    5         6.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                                      128  thrpt    5        20.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                              128  thrpt    5    759494.394 ±    6690.939   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                               128  thrpt    5       510.174 ±      16.343  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          128  thrpt    5      1057.139 ±      33.499    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       462.478 ±     696.880  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       958.325 ±    1444.277    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.034 ±       0.139    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                                     128  thrpt    5        19.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                                   128  thrpt    5     76776.826 ±    1458.048   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                    128  thrpt    5      3070.388 ±     128.082  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                               128  thrpt    5     62928.350 ±    1591.994    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           128  thrpt    5      3001.172 ±     177.681  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     61510.869 ±    3410.596    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.599 ±       2.768    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                         128  thrpt    5        45.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                          128  thrpt    5        64.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                                     128  thrpt    5    197727.022 ±    6001.114   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                      128  thrpt    5      1453.954 ±      82.350  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     11570.735 ±     373.675    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1450.882 ±     705.763  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     11549.202 ±    5706.618    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.749 ±       6.319  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         6.033 ±      50.878    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                           128  thrpt    5        22.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                            128  thrpt    5        39.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                               128  thrpt    5    651329.640 ±   11923.832   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                128  thrpt    5       365.338 ±      13.589  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                           128  thrpt    5       882.790 ±      46.477    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                       128  thrpt    5       376.735 ±     601.465  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5       911.675 ±    1477.500    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.020 ±       0.077  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.048 ±       0.188    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                                     128  thrpt    5         6.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                                      128  thrpt    5        20.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                              128  thrpt    5    652974.095 ±   24448.718   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                               128  thrpt    5       497.992 ±      27.169  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1200.175 ±      60.407    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       458.532 ±     690.569  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1104.955 ±    1662.216    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.010 ±       0.086    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                                     128  thrpt    5        21.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                             128  thrpt    5   1097048.742 ±   55275.819   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       617.692 ±      13.813  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       886.083 ±      30.572    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       595.529 ±     572.159  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       852.466 ±     797.210    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.018 ±       0.103    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                                   128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                                    128  thrpt    5        25.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                                     128  thrpt    5   1189427.364 ±   16092.803   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      128  thrpt    5         0.199 ±       1.595  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 128  thrpt    5         0.264 ±       2.115    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                                  128  thrpt    5     34011.014 ±    1096.797   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                   128  thrpt    5      1945.607 ±      95.810  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     90022.419 ±    2079.990    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1849.221 ±     665.582  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     85530.387 ±   28907.220    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.845 ±       7.143  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        39.266 ±     331.888    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                        128  thrpt    5        28.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                         128  thrpt    5        46.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                                 128  thrpt    5    130960.644 ±    3431.450   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1683.049 ±      77.681  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     20223.064 ±     535.755    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1647.265 ±      33.592  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     19794.099 ±     585.349    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.800 ±       5.830  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         9.660 ±      70.397    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        25.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        43.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                          128  thrpt    5    203188.033 ±    4655.358   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1243.434 ±      43.033  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      9630.430 ±     378.281    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1180.072 ±     695.141  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      9143.345 ±    5493.919    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.845 ±       5.856  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         6.572 ±      45.510    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        18.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        38.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                         128  thrpt    5    252981.866 ±   15665.158   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1361.740 ±     101.671  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      8470.526 ±     182.891    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1326.068 ±      10.786  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      8250.705 ±     538.612    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.637 ±       5.129  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.056 ±      32.735    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        20.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        35.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                              128  thrpt    5     67775.572 ±    1466.245   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2727.964 ±     109.569  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     63340.850 ±    1941.904    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2621.513 ±     612.299  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     60883.123 ±   15119.307    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.092 ±       0.352  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         2.127 ±       8.156    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        39.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        55.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                                128  thrpt    5    180791.769 ±    4590.229   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1212.346 ±      43.034  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     10552.229 ±     251.838    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1187.022 ±     693.334  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     10334.967 ±    6124.825    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.724 ±       4.486  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         6.305 ±      39.059    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        18.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        37.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                         128  thrpt    5    693248.050 ±  123423.185   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       724.340 ±     143.580  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1644.094 ±      48.715    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       721.342 ±     558.242  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1636.891 ±    1188.539    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.774 ±       6.489  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.738 ±      14.544    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        11.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        34.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                        128  thrpt    5    649998.488 ±   74210.265   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       513.750 ±      54.774  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      1243.906 ±      53.520    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       528.614 ±     696.645  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1286.035 ±    1759.164    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.061 ±       0.215    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        21.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    766631.158 ±   62441.498   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         0.186 ±       1.597  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.392 ±       3.374    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                             128  thrpt    5    349179.349 ±    9910.739   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       985.689 ±      49.052  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      4441.963 ±     115.582    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       915.157 ±     571.959  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      4120.934 ±    2498.343    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.050 ±       0.298  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.225 ±       1.343    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        14.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        22.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                            128  thrpt    5      8650.454 ±     156.949   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1087.187 ±      35.155  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5    197747.955 ±    3005.751    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1056.584 ±     553.515  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    192134.980 ±   98518.896    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.816 ±       6.237  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       149.324 ±    1142.027    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                                  128  thrpt    5        16.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                                   128  thrpt    5        41.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                                     128  thrpt    5     10975.068 ±     481.388   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1281.658 ±      66.951  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5    183767.129 ±    4391.566    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1245.984 ±     568.409  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    178771.712 ±   85259.896    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.921 ±       6.812  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       131.855 ±     976.360    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        19.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        43.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                                    128  thrpt    5    272512.730 ±    5321.015   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5      1835.775 ±      73.229  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     10601.601 ±     320.676    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1794.696 ±     709.841  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     10366.482 ±    4190.590    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.645 ±       5.422  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         3.741 ±      31.438    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        27.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        39.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                         128  thrpt    5      8361.096 ±     314.156   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1527.775 ±      32.625  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    287555.126 ±    9130.815    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1507.688 ±     693.596  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    283950.217 ±  137346.682    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.950 ±       7.516  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       176.068 ±    1391.958    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        23.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        50.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                           128  thrpt    5     23283.324 ±     681.089   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1228.153 ±      49.058  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     83009.366 ±    2222.954    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1250.132 ±     568.795  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     84535.595 ±   39748.840    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.770 ±       5.934  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        52.165 ±     402.305    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        19.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        39.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                                    128  thrpt    5     32830.958 ±    1245.040   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1373.897 ±      65.560  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     65843.593 ±    1048.505    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1379.064 ±     552.043  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     66071.589 ±   25180.732    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.800 ±       6.842  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        38.489 ±     329.226    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        42.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                                   128  thrpt    5    619500.814 ±   24445.214   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1152.077 ±      20.092  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      2926.519 ±     111.044    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1125.973 ±     703.058  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      2863.717 ±    1895.635    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.663 ±       4.528  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.689 ±      11.568    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        31.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    775615.955 ±    1824.273   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.011 ±       0.095  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.023 ±       0.193    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                        128  thrpt    5     27830.576 ±    1579.704   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1267.924 ±      87.407  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     71693.884 ±    2290.664    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1183.727 ±     697.208  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     66933.533 ±   39261.771    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.849 ±       5.264  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        48.539 ±     302.911    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        18.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        40.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                                128  thrpt    5     32844.800 ±    1157.064   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1751.522 ±      74.142  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     83912.342 ±    1612.317    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1717.465 ±     545.588  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     82295.787 ±   26880.733    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.795 ±       5.779  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        38.155 ±     276.920    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                                      128  thrpt    5        26.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                                       128  thrpt    5        42.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                         128  thrpt    5     34477.124 ±    2446.190   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1529.899 ±      96.824  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     69824.315 ±    1246.549    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1443.769 ±     686.924  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     65950.896 ±   33330.947    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.884 ±       7.345  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        41.061 ±     341.279    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        46.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                        128  thrpt    5    471429.145 ±   60219.814   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1260.976 ±     141.958  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4210.051 ±     102.538    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1193.138 ±     699.895  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      3996.159 ±    2665.518    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.595 ±       4.439  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.095 ±      15.753    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        18.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        30.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                             128  thrpt    5     18944.668 ±     522.080   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1916.897 ±      91.112  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    159206.904 ±    5012.526    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1840.413 ±     677.728  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    152866.912 ±   56588.823    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.920 ±       7.225  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        76.465 ±     599.937    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        50.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                               128  thrpt    5     55132.116 ±    2199.240   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1697.132 ±     101.485  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     48445.006 ±    1158.760    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1650.860 ±      29.219  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     47128.735 ±    1439.611    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.799 ±       5.146  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        22.999 ±     148.276    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        25.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        44.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                        128  thrpt    5    156147.351 ±    6876.344   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1897.238 ±      78.432  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     19118.010 ±     501.042    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1850.509 ±     687.186  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     18643.217 ±    6692.528    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.779 ±       6.266  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.852 ±      63.179    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        41.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                                       128  thrpt    5   1162363.210 ±   32210.932   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1287.552 ±      48.736  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1743.190 ±      37.489    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1191.233 ±     693.683  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1612.753 ±     936.725    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.717 ±       5.258  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.967 ±       7.086    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        18.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        32.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1371507.062 ±   42472.531   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5         0.043 ±       0.305  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5         0.049 ±       0.349    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                            128  thrpt    5     68207.869 ±    2789.106   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1732.237 ±     117.204  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     39960.513 ±    1238.340    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1713.546 ±     601.979  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     39525.722 ±   13416.486    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.833 ±       5.733  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        19.476 ±     134.356    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        26.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        44.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                                128  thrpt    5     17999.340 ±     889.010   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1600.287 ±      79.396  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5    139926.472 ±    1203.357    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1583.290 ±     573.068  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    138468.699 ±   51108.447    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.872 ±       4.424  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        76.382 ±     385.884    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                                      128  thrpt    5        24.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                                       128  thrpt    5        45.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                         128  thrpt    5     17336.810 ±     741.951   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1403.821 ±      52.308  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5    127425.930 ±    2424.724    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1376.523 ±     550.024  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    124926.504 ±   48515.582    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.908 ±       6.816  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        82.638 ±     620.831    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        21.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        44.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                        128  thrpt    5    677625.080 ±   17667.722   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1823.977 ±      65.209  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4235.481 ±     101.202    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1727.943 ±     549.308  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4014.402 ±    1390.603    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.650 ±       5.104  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.508 ±      11.844    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        38.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                             128  thrpt    5     12788.877 ±     253.897   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1705.646 ±      68.600  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    209871.457 ±    4456.606    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1707.541 ±     537.019  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    210132.927 ±   67468.448    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.941 ±       5.411  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       116.351 ±     669.906    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        51.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                               128  thrpt    5     44419.154 ±     768.785   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1744.618 ±      44.022  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     61809.392 ±    1818.564    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1718.632 ±     602.800  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     60897.064 ±   21857.889    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.791 ±       6.277  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        28.179 ±     223.691    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        43.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                        128  thrpt    5     58935.750 ±    1028.938   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1819.177 ±      56.011  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     48571.159 ±    1303.341    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1792.307 ±     679.571  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     47867.117 ±   18787.043    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.333 ±       1.171    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        27.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        36.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                                       128  thrpt    5   1294320.080 ±   30683.917   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1216.571 ±      50.104  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1479.123 ±      52.098    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1190.701 ±     697.201  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1447.395 ±     838.787    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.667 ±       4.905  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.811 ±       5.958    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        18.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        34.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1567238.061 ±   57277.111   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                            128  thrpt    5      3487.426 ±      71.471   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5       478.042 ±      15.667  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    215713.359 ±    7009.866    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5       459.916 ±     693.513  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    207446.212 ±  311709.179    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.031 ±       0.149  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        14.030 ±      67.020    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5         7.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        23.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                                     128  thrpt    5    122655.293 ±    1625.456   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      1945.308 ±      79.605  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     24953.749 ±     820.936    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1921.326 ±     600.957  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     24645.909 ±    7679.903    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.787 ±       6.466  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5        10.120 ±      83.136    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        29.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        43.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                               128  thrpt    5    374002.027 ±   16575.603   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                                128  thrpt    5       774.589 ±      33.989  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                           128  thrpt    5      3259.907 ±     212.938    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                       128  thrpt    5       717.882 ±     563.398  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      3018.047 ±    2277.943    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.904 ±       7.669  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         3.777 ±      32.026    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                                     128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                                      128  thrpt    5        34.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                              128  thrpt    5    256566.239 ±    9807.576   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       565.632 ±      10.442  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      3469.487 ±     123.559    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       583.954 ±     556.980  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      3587.366 ±    3488.619    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.837 ±       7.117  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         5.173 ±      43.988    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        15.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                             128  thrpt    5    509791.283 ±   25140.697   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       665.102 ±      31.545  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      2052.926 ±      89.827    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       662.485 ±       5.618  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      2044.963 ±      86.566    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.525 ±       4.250  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.607 ±      13.002    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        25.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                                  128  thrpt    5     72558.471 ±    1833.050   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3065.426 ±     105.520  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     66489.280 ±    1117.459    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2932.284 ±     498.347  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     63592.158 ±    9617.979    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.050 ±       0.257  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         1.083 ±       5.583    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        44.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        60.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                                    128  thrpt    5    133398.955 ±    4029.791   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1172.824 ±      27.124  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     13832.640 ±     110.900    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1119.841 ±     697.532  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     13214.931 ±    8448.097    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.766 ±       4.472  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         9.017 ±      52.670    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        17.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        36.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                              128  thrpt    5    208557.376 ±    1630.117   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       166.701 ±      12.524  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1257.970 ±     102.019    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       167.217 ±     597.605  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1263.526 ±    4515.156    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.006 ±       0.050  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.044 ±       0.379    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                                    128  thrpt    5         3.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                             128  thrpt    5    423039.315 ±   16175.712   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       429.726 ±      30.107  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1598.547 ±      66.897    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       443.563 ±     623.943  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1647.832 ±    2285.025    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.062 ±       0.326    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        21.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                            128  thrpt    5    470219.276 ±    6393.568   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       379.366 ±       9.826  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1269.407 ±      31.395    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       381.118 ±     611.777  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1275.074 ±    2044.794    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        18.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    500186.439 ±    3499.952   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                                 128  thrpt    5     28278.599 ±    1411.659   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1548.783 ±      60.741  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     86202.203 ±    4267.950    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1512.675 ±     692.675  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     84200.924 ±   39008.278    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.837 ±       6.937  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        47.555 ±     394.586    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        23.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        44.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                           128  thrpt    5      8264.540 ±     297.864   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1196.572 ±      55.910  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5    227855.355 ±    5983.881    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1121.460 ±     695.057  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    213718.581 ±  137348.748    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.820 ±       4.573  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       157.642 ±     885.303    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                                  128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                                    128  thrpt    5      8343.153 ±     240.495   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1118.865 ±      63.781  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5    211004.822 ±    6909.790    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1114.545 ±     686.019  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    210113.848 ±  126509.944    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.909 ±       6.701  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       171.613 ±    1266.621    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        44.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                                   128  thrpt    5    190248.150 ±    2826.432   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1667.932 ±      44.369  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     13797.317 ±     264.453    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1658.823 ±      26.640  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     13722.192 ±     320.027    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.633 ±       4.929  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         5.242 ±      40.811    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        25.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                        128  thrpt    5      7896.269 ±     205.360   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      1325.911 ±      53.971  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    264219.207 ±    5887.800    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1308.784 ±      19.885  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    260823.183 ±   10058.447    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.942 ±       7.124  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       188.545 ±    1426.810    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        20.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        48.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                          128  thrpt    5     20924.744 ±    1372.182   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1191.166 ±      44.227  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     89589.044 ±    3322.312    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1120.616 ±     696.445  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     84279.108 ±   52198.069    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.799 ±       5.126  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        60.229 ±     387.694    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                                128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        35.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                                   128  thrpt    5     25959.696 ±     899.372   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1149.249 ±      30.502  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     69657.262 ±     974.069    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1116.670 ±     694.098  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     67720.112 ±   43238.851    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.802 ±       5.107  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        49.161 ±     314.270    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        38.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                                  128  thrpt    5    364821.474 ±   11841.557   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       847.636 ±      33.781  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      3656.129 ±      39.067    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       728.151 ±     570.547  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      3138.946 ±    2401.439    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.684 ±       5.664  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         2.929 ±      24.253    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        11.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        26.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5    427562.930 ±   35715.026   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5         0.186 ±       1.601  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.681 ±       5.855    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                                       128  thrpt    5     25073.898 ±    1769.955   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1213.764 ±      70.606  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     76182.572 ±    3418.815    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1183.528 ±     695.496  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     74386.438 ±   46577.963    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.833 ±       4.953  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        52.983 ±     313.980    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                               128  thrpt    5     13386.091 ±     338.508   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1309.111 ±      38.248  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    153911.078 ±    4001.136    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1319.011 ±      20.523  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    155078.612 ±    4697.228    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.816 ±       5.701  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        95.854 ±     668.508    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                                     128  thrpt    5        20.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                                      128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                        128  thrpt    5     13609.156 ±     190.543   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1217.433 ±      36.838  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5    140769.987 ±    4274.981    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1180.301 ±     694.733  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    136510.949 ±   81352.505    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.883 ±       5.479  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       102.349 ±     636.348    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        18.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        41.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                                       128  thrpt    5    287503.043 ±   10291.752   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1722.703 ±      76.510  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      9428.833 ±     203.950    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1726.463 ±     556.014  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      9450.045 ±    3058.322    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.645 ±       4.507  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         3.546 ±      24.740    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        26.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        40.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                            128  thrpt    5     12638.950 ±     132.052   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1574.017 ±      53.023  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    195962.608 ±    5377.050    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1517.375 ±     697.562  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    188944.846 ±   88068.111    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.160 ±       1.041  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        19.943 ±     129.324    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        23.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        37.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                              128  thrpt    5     32576.246 ±    1025.289   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1413.942 ±      63.339  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     68298.150 ±     972.010    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1319.202 ±      13.890  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     63727.358 ±    2476.401    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.758 ±       5.823  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        37.013 ±     284.836    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        20.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        38.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                                       128  thrpt    5     79190.351 ±    2921.250   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1990.122 ±      78.438  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     39550.991 ±    1149.306    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1919.969 ±     592.178  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     38156.572 ±   11717.014    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.812 ±       5.931  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        16.159 ±     117.925    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        43.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                                      128  thrpt    5    628383.516 ±   14227.130   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       887.391 ±      46.156  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      2222.223 ±      74.789    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       861.489 ±     699.572  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      2157.087 ±    1744.292    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.625 ±       4.253  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.570 ±      10.680    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        13.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        29.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    731028.785 ±    1335.363   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                           128  thrpt    5     72980.110 ±    1559.526   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      2116.021 ±      56.925  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     45630.872 ±    1080.607    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2053.188 ±     527.613  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     44273.138 ±   11128.555    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.631 ±       1.987    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        31.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        42.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                                   128  thrpt    5     16291.681 ±     656.897   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5       869.954 ±      53.200  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     84039.826 ±    8483.670    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5       859.752 ±     694.917  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     83162.226 ±   69658.664    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.791 ±       6.148  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        75.984 ±     589.390    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        13.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        37.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                            128  thrpt    5     17539.062 ±     722.233   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       773.084 ±      26.581  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     69368.043 ±    2505.762    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       722.985 ±     567.885  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     64835.744 ±   49814.045    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.858 ±       5.098  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        77.604 ±     463.793    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        11.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        35.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                           128  thrpt    5    129472.965 ±    3868.644   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       338.060 ±      15.202  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      4109.264 ±     195.429    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       315.253 ±     127.960  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      3830.391 ±    1491.011    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        15.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                                128  thrpt    5     14905.855 ±     399.915   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1134.615 ±      17.934  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    119790.379 ±    1408.037    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1115.240 ±     687.980  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    117742.734 ±   72559.561    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.912 ±       7.103  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        96.434 ±     750.882    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        17.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        42.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                                  128  thrpt    5     47436.549 ±    2767.904   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1461.569 ±      45.049  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     48494.158 ±    2094.347    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1451.005 ±     705.732  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     48107.606 ±   21960.466    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.741 ±       6.025  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        24.444 ±     198.732    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        22.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        40.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                           128  thrpt    5     75023.092 ±    3417.554   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1591.210 ±      57.701  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     33378.983 ±     640.695    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1514.712 ±     693.709  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     31760.425 ±   13984.166    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.804 ±       5.021  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        16.948 ±     105.774    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        23.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        41.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                          128  thrpt    5    322107.693 ±   29750.586   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       634.433 ±      60.072  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      3099.538 ±      50.492    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       595.478 ±     570.508  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      2896.328 ±    2604.577    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.022 ±       0.057  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.105 ±       0.276    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        24.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    364918.974 ±    2837.298   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                               128  thrpt    5     66616.638 ±    1928.050   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1542.354 ±      72.957  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     36435.091 ±     856.531    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1516.192 ±     697.881  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     35813.326 ±   16281.399    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.808 ±       4.571  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        19.112 ±     108.291    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        23.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        43.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                                    128  thrpt    5    142724.542 ±    6962.367   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1872.710 ±     127.382  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     20647.108 ±     563.970    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1789.567 ±     687.268  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     19721.072 ±    6975.366    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.766 ±       6.284  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         8.613 ±      70.739    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        27.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        42.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                              128  thrpt    5    850768.524 ±   10725.454   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       484.708 ±      22.808  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5       896.647 ±      47.321    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       455.621 ±     686.397  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       843.422 ±    1278.047    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.009 ±       0.061  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.017 ±       0.113    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5        23.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                             128  thrpt    5    428815.561 ±   14342.752   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5       441.127 ±      27.478  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1618.858 ±      94.128    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       443.609 ±     622.746  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1628.925 ±    2301.373    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.077 ±       0.211    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5        24.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                            128  thrpt    5   1134549.097 ±   79798.486   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       406.282 ±      18.692  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       563.547 ±      43.643    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       381.203 ±     609.691  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       531.192 ±     890.265    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.017 ±       0.104  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.024 ±       0.148    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5        15.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                                 128  thrpt    5     77289.511 ±    1448.635   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3122.195 ±     115.786  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     63570.239 ±    1720.242    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3003.248 ±     178.365  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     61149.906 ±    3780.962    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.062 ±       0.188  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         1.271 ±       3.818    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        45.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        63.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                                   128  thrpt    5    267804.490 ±    6762.455   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5      1630.817 ±      75.713  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5      9581.203 ±     262.893    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1584.258 ±     576.655  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5      9305.666 ±    3281.136    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.753 ±       5.181  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         4.419 ±      30.372    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        42.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                             128  thrpt    5   1218638.332 ±   57816.700   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       430.767 ±      36.702  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5       556.238 ±      43.780    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       390.166 ±     559.726  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       503.857 ±     723.054    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.014 ±       0.033  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.018 ±       0.042    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5        18.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                            128  thrpt    5    920207.627 ±   37887.853   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       555.873 ±      41.934  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5       950.631 ±      37.533    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       524.294 ±     690.341  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       895.210 ±    1161.753    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.028 ±       0.149    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        26.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                           128  thrpt    5   1875704.837 ±    8228.985   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       657.329 ±      12.521  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       551.519 ±       9.632    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       661.527 ±       5.150  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       555.042 ±       5.412    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.529 ±       4.463  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.444 ±       3.748    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        28.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   2054020.892 ±   11114.192   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5         0.021 ±       0.180  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5         0.016 ±       0.138    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                                128  thrpt    5     41387.897 ±    1558.739   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      2075.766 ±      74.072  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     78923.378 ±    1973.724    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2049.985 ±     555.039  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     77940.624 ±   20801.960    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.887 ±       7.189  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        34.257 ±     278.038    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        31.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        49.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                                     128  thrpt    5     15079.418 ±     202.647   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      1862.692 ±      67.136  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5    194347.718 ±    5518.238    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1788.484 ±     687.014  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5    186614.142 ±   71995.593    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.779 ±       5.486  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5        81.265 ±     572.073    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        27.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        40.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                              128  thrpt    5     98800.640 ±    3249.852   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1335.821 ±      67.827  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     21277.335 ±     434.995    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1313.029 ±      13.599  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     20916.384 ±     854.011    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.837 ±       6.501  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        13.461 ±     104.730    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        20.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        40.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                             128  thrpt    5    246903.988 ±   31031.646   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       828.914 ±     124.151  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      5281.906 ±     183.435    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       795.427 ±     699.217  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      5055.290 ±    4063.430    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.604 ±       4.842  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.752 ±      30.044    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        28.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                                  128  thrpt    5     12979.814 ±     185.332   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2090.341 ±      48.116  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5    253404.804 ±    6053.440    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1979.185 ±      68.548  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    239929.567 ±    8336.873    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.912 ±       6.945  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5       110.799 ±     844.412    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        30.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        49.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                                    128  thrpt    5     32385.319 ±    1045.056   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      2711.729 ±     107.665  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5    131768.959 ±    1896.070    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      2674.091 ±     118.910  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5    129950.176 ±    7705.352    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.104 ±       0.409  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         5.042 ±      19.733    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        40.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        54.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                             128  thrpt    5    104449.539 ±    3346.298   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1474.799 ±      81.851  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     22217.460 ±     537.796    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1381.461 ±     555.070  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     20808.727 ±    8143.960    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.762 ±       4.919  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        11.610 ±      75.233    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        21.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        37.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                            128  thrpt    5    177533.301 ±    1088.989   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       583.469 ±      16.650  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      5172.187 ±     174.573    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       594.132 ±     567.709  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      5268.065 ±    5050.516    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.019 ±       0.082  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.166 ±       0.729    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        26.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    194303.265 ±    1055.915   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.022 ±       0.184  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.176 ±       1.495    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                                 128  thrpt    5     48344.123 ±     512.475   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      3426.889 ±      37.545  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5    111548.236 ±     996.982    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3291.971 ±     576.353  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    107163.951 ±   19472.935    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.029 ±       0.044  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.949 ±       1.432    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        49.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        68.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                                128  thrpt    5     26173.565 ±    1097.813   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1408.916 ±      39.282  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     84702.745 ±    2712.523    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1384.295 ±     577.463  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     83276.531 ±   37370.442    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.816 ±       6.449  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        49.633 ±     392.634    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        21.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                                       128  thrpt    5        42.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                         128  thrpt    5     29459.646 ±    1566.776   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1212.080 ±      70.786  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     64734.829 ±    1702.395    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1179.875 ±     690.743  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     62999.689 ±   36324.866    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.862 ±       5.326  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        46.390 ±     288.167    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        18.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        43.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                        128  thrpt    5    635764.897 ±   14376.028   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1716.634 ±      45.871  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4248.601 ±     100.187    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1662.023 ±      25.556  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4113.519 ±     115.747    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.650 ±       4.447  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.608 ±      11.010    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        25.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        40.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                             128  thrpt    5     24149.590 ±     508.523   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1782.722 ±      50.885  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    116173.233 ±    3289.946    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1720.679 ±     584.397  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    112133.058 ±   38222.679    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.270 ±       2.327    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        26.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        39.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                               128  thrpt    5     72183.888 ±    1770.359   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1917.092 ±      76.752  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     41792.323 ±    1055.376    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1854.092 ±     696.267  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     40413.208 ±   14851.674    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.800 ±       5.865  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        17.591 ±     129.275    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        28.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        44.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                        128  thrpt    5    180222.797 ±    9223.826   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      2012.183 ±     104.845  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     17570.604 ±     459.398    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1854.663 ±     725.703  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     16191.844 ±    6143.149    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.776 ±       6.149  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         6.911 ±      54.864    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        28.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        41.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                                       128  thrpt    5   1492374.935 ±   46866.579   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1278.169 ±      44.499  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1347.721 ±      47.312    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1192.049 ±     695.639  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1257.648 ±     755.548    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.641 ±       4.746  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.685 ±       5.077    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        18.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        32.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1775991.918 ±    8901.261   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5         0.203 ±       1.743  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5         0.180 ±       1.547    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                            128  thrpt    5    151890.949 ±    2574.609   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1976.828 ±      61.940  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     20481.167 ±     402.607    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1913.274 ±     548.951  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19820.754 ±    5551.810    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.216 ±       0.585    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        29.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        40.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                              128  thrpt    5     42719.013 ±    2421.572   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1580.800 ±      58.842  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     58242.531 ±    1802.650    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1510.196 ±     689.376  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     55613.453 ±   24254.825    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.866 ±       5.405  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        32.415 ±     203.967    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        23.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        42.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                             128  thrpt    5    732293.147 ±   86779.160   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5      1484.540 ±     182.822  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      3190.280 ±      66.179    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1458.574 ±     714.065  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      3131.490 ±    1366.770    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.643 ±       4.592  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.324 ±       9.337    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        22.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        36.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                                  128  thrpt    5     30201.881 ±     370.518   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2154.071 ±      77.660  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5    112232.934 ±    3096.491    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2132.982 ±     700.334  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    111143.658 ±   36943.330    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.217 ±       1.431  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        11.308 ±      74.813    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        32.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        50.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                             128  thrpt    5    337231.946 ±    7165.479   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1647.327 ±      81.011  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      7686.914 ±     271.870    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1516.772 ±     704.804  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      7075.749 ±    3204.822    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.708 ±       5.358  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.314 ±      25.073    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        23.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        39.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                            128  thrpt    5   1961135.983 ±   49866.375   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5      1186.390 ±      49.931  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       952.065 ±      26.130    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1190.487 ±     696.780  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       955.871 ±     573.812    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.664 ±       4.291  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.531 ±       3.431    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        18.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        35.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   2240761.312 ±   78196.887   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                                 128  thrpt    5    245305.451 ±    8716.050   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1638.740 ±      74.676  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     10513.942 ±     353.042    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1575.566 ±     580.389  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     10112.110 ±    3864.678    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.837 ±       5.839  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         5.442 ±      38.084    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        24.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        44.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                                   128  thrpt    5     72611.465 ±    2924.524   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1611.602 ±      97.389  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     34926.170 ±    1174.107    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1580.102 ±     576.646  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     34246.948 ±   12571.500    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.825 ±       5.616  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        18.113 ±     123.758    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        41.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                            128  thrpt    5     85862.553 ±    5094.178   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1127.389 ±      61.827  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     20660.321 ±     481.678    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1112.303 ±     690.576  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     20372.731 ±   12256.846    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.920 ±       5.508  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        16.658 ±      98.850    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        17.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        40.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                           128  thrpt    5     95463.168 ±    3309.725   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      1179.767 ±      13.092  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     19448.327 ±     633.322    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1124.464 ±     698.899  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     18555.288 ±   12108.318    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.675 ±       4.575  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        11.151 ±      75.774    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        34.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                                128  thrpt    5     44901.995 ±    4463.176   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      2111.271 ±     201.683  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     74003.662 ±    1760.243    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2040.597 ±     644.642  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     71538.241 ±   22107.729    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.912 ±       7.582  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        33.444 ±     278.665    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        31.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        50.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                                  128  thrpt    5    113641.292 ±    5919.410   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1088.746 ±      68.543  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     15077.538 ±     340.970    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1050.589 ±     557.779  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     14543.805 ±    7433.161    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.808 ±       6.245  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        11.111 ±      85.878    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        16.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        37.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                           128  thrpt    5    330863.025 ±   10669.086   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       505.767 ±      19.512  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      2405.680 ±     103.161    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       522.854 ±     689.280  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      2488.983 ±    3303.549    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.039 ±       0.208    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        25.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                          128  thrpt    5    679293.610 ±   26588.872   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       869.172 ±      26.774  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      2013.590 ±      57.536    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       860.141 ±     697.911  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1994.274 ±    1650.874    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.625 ±       5.109  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.465 ±      11.993    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        13.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        31.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    750735.028 ±   40266.203   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                               128  thrpt    5    237174.264 ±    5850.865   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       780.301 ±      20.980  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      5177.610 ±      78.230    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5       722.955 ±     567.470  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      4796.549 ±    3746.427    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.799 ±       5.359  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         5.297 ±      35.568    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        11.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        35.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                               128  thrpt    5    125117.837 ±     988.053   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1767.759 ±      63.695  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5     22231.575 ±     716.285    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1714.504 ±     576.087  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     21562.236 ±    7260.824    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.800 ±       6.528  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        10.077 ±      82.278    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        26.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        43.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                        128  thrpt    5    181387.033 ±    9928.990   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1099.818 ±      77.167  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      9541.142 ±     234.071    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1048.304 ±     555.624  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      9090.447 ±    4607.297    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.824 ±       6.919  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.194 ±      60.388    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        16.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        42.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                                       128  thrpt    5    522406.082 ±    7560.005   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       351.232 ±       6.753  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1058.079 ±      20.050    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       314.991 ±     127.216  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       948.836 ±     380.578    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.013 ±       0.108    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         5.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        14.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                            128  thrpt    5     66765.759 ±    8280.400   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2695.566 ±     388.518  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     63529.234 ±    1522.097    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2614.138 ±     672.236  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     61563.681 ±    8898.107    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.125 ±       0.733  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         3.063 ±      18.379    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        39.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        56.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                              128  thrpt    5    175052.189 ±    2604.005   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1145.054 ±      44.660  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     10293.599 ±     301.634    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1120.742 ±     695.959  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     10075.920 ±    6278.867    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.725 ±       4.957  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         6.539 ±      44.750    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        17.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        36.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                                       128  thrpt    5    543921.688 ±    8502.367   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       554.116 ±      17.389  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1603.127 ±      31.650    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       589.550 ±     563.492  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1705.708 ±    1631.051    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.060 ±       0.164    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        28.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                                      128  thrpt    5   1139363.887 ±   21222.722   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       868.271 ±      17.853  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1199.252 ±      28.563    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       794.255 ±     700.729  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1097.676 ±     982.669    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.625 ±       5.199  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.866 ±       7.210    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        12.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        28.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   1276640.495 ±   27236.381   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                           128  thrpt    5    347867.471 ±   10134.349   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5       974.843 ±      26.096  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5      4409.823 ±      97.881    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5       916.314 ±     562.207  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4148.316 ±    2619.463    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.841 ±       6.052  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         3.841 ±      27.680    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        14.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        35.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                            128  thrpt    5       604.344 ±      19.454   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1292.614 ±      57.898  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5   3366180.617 ±  124101.739    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1244.197 ±     552.030  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5   3240416.245 ± 1448393.422    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.903 ±       5.602  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      2355.566 ±   14576.366    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                                  128  thrpt    5        19.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                                   128  thrpt    5        44.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                                     128  thrpt    5       599.191 ±       5.726   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1277.256 ±      40.267  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5   3353585.235 ±   90776.896    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1231.271 ±     543.504  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5   3232872.954 ± 1427460.115    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.190 ±       8.658  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5      3122.831 ±   22735.059    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        19.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        43.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                                    128  thrpt    5     42278.155 ±    3429.825   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       761.751 ±      86.699  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     28348.414 ±    1109.926    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       725.039 ±     569.095  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     26934.460 ±   19423.240    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.016 ±       7.547  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        38.209 ±     283.686    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        11.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        36.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                         128  thrpt    5       570.804 ±      29.753   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1252.948 ±      71.330  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5   3452883.816 ±   35166.684    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1239.674 ±     565.858  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5   3415979.955 ± 1541166.405    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.920 ±       5.911  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      2555.252 ±   16445.480    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        19.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        53.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                           128  thrpt    5     15121.194 ±     370.205   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1196.206 ±      50.905  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5    124464.209 ±    3690.836    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1111.715 ±     691.102  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    115679.738 ±   72003.417    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.962 ±       6.677  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        99.783 ±     692.862    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        37.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                                    128  thrpt    5     17879.435 ±     491.047   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1081.192 ±      60.734  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     95156.379 ±    2776.072    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1040.118 ±     544.686  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     91494.413 ±   45672.995    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.083 ±       9.098  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        95.896 ±     805.932    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        16.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        39.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                                   128  thrpt    5    215446.202 ±    7700.572   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       782.569 ±      30.953  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      5716.831 ±     153.353    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       788.579 ±     694.235  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      5757.705 ±    4998.589    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.658 ±       4.248  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         4.761 ±      30.674    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        12.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        30.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    248772.158 ±    2923.263   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.002 ±       0.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                        128  thrpt    5     17610.769 ±     766.053   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1134.345 ±      77.121  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    101360.381 ±    3324.570    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1105.694 ±     686.126  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     98792.144 ±   60819.312    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.149 ±       7.767  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       103.435 ±     701.613    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        17.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        43.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                                   128  thrpt    5   1552396.136 ±   27408.940   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                                    128  thrpt    5        63.991 ±       5.482  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                               128  thrpt    5        64.880 ±       6.719    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                           128  thrpt    5        51.161 ±     440.509  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5        52.291 ±     450.240    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.113 ±       0.976  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.116 ±       0.997    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                         128  thrpt    5         1.000                counts
[info] BitSetBenchmark.readJsoniterScala:·gc.time                                                          128  thrpt    5         3.000                    ms
[info] BitSetBenchmark.readPlayJson                                                                        128  thrpt    5     78530.809 ±    2620.035   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                         128  thrpt    5      3363.141 ±      86.219  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                                    128  thrpt    5     67390.116 ±     819.595    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                128  thrpt    5      3233.220 ±     651.385  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                           128  thrpt    5     64809.199 ±   14899.099    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                            128  thrpt    5         0.046 ±       0.154  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                       128  thrpt    5         0.920 ±       3.091    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                              128  thrpt    5        48.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                               128  thrpt    5        67.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                                   128  thrpt    5   1826756.018 ±  108598.430   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                                    128  thrpt    5       990.186 ±      38.786  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                               128  thrpt    5       853.026 ±      24.706    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                           128  thrpt    5       983.481 ±       9.812  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5       847.337 ±      48.041    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.816 ±       6.447  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.702 ±       5.542    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                         128  thrpt    5        15.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                          128  thrpt    5        37.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                                  128  thrpt    5   2213811.242 ±  139653.118   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                                   128  thrpt    5       639.967 ±      31.633  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                              128  thrpt    5       454.862 ±      12.430    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                          128  thrpt    5       594.470 ±     569.671  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5       421.558 ±     392.192    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.012 ±       0.044  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.009 ±       0.031    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                        128  thrpt    5         9.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                         128  thrpt    5        27.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                          128  thrpt    5   2385563.911 ±   97248.330   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                           128  thrpt    5        25.833 ±      12.601  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                      128  thrpt    5        17.060 ±       9.052    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                                  128  thrpt    5        51.175 ±     440.633  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5        34.347 ±     295.737    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                128  thrpt    5         1.000                counts
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time                                                 128  thrpt    5         3.000                    ms
[info] BitSetBenchmark.writePlayJson                                                                       128  thrpt    5     50629.550 ±    1030.039   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                        128  thrpt    5      2187.556 ±      83.506  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                                   128  thrpt    5     67987.772 ±    1497.764    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                               128  thrpt    5      2112.367 ±     687.456  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                          128  thrpt    5     65651.864 ±   21327.759    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                           128  thrpt    5         0.891 ±       7.272  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                      128  thrpt    5        27.924 ±     227.982    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                             128  thrpt    5        32.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                              128  thrpt    5        48.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                                    N/A  thrpt    5    860747.332 ±    8194.249   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                                     N/A  thrpt    5      2792.357 ±      72.407  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5      5103.858 ±     113.762    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      2734.217 ±     520.895  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5      4997.895 ±     981.140    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.137 ±       0.876  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.251 ±       1.604    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                          N/A  thrpt    5        41.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                           N/A  thrpt    5        55.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                              N/A  thrpt    5   5133542.762 ±  315005.158   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                               N/A  thrpt    5       321.542 ±      24.861  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          N/A  thrpt    5        98.565 ±       3.256    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       310.877 ±     118.544  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        95.356 ±      38.382    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.018 ±       0.121  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.005 ±       0.037    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                                    N/A  thrpt    5         5.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                                     N/A  thrpt    5        17.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                             N/A  thrpt    5    997778.188 ±   19155.247   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5      1179.729 ±      20.067  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5      1860.582 ±      50.534    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1176.955 ±     690.045  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5      1857.201 ±    1118.123    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.866 ±       7.281  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         1.368 ±      11.494    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                                   N/A  thrpt    5        18.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                                    N/A  thrpt    5        43.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                            N/A  thrpt    5   8633523.743 ±  527913.655   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       408.543 ±      33.390  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5        74.468 ±       3.966    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       382.152 ±     615.668  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5        69.620 ±     111.448    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.017 ±       0.105  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.003 ±       0.019    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                                  N/A  thrpt    5         6.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                                   N/A  thrpt    5        15.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                                 N/A  thrpt    5    492575.532 ±   18121.005   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      2146.168 ±      78.037  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5      6857.004 ±      83.320    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2061.718 ±     577.830  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5      6585.548 ±    1707.474    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.279 ±       1.505  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.897 ±       4.848    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                                       N/A  thrpt    5        31.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                        N/A  thrpt    5        47.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                          N/A  thrpt    5      4565.987 ±     132.929   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                           N/A  thrpt    5      2302.406 ±     124.642  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                                      N/A  thrpt    5    793487.368 ±   20172.672    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2245.107 ±     590.585  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5    773755.164 ±  201131.377    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         1.099 ±       7.164  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5       382.122 ±    2498.374    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                                N/A  thrpt    5        34.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                                 N/A  thrpt    5        56.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                                   N/A  thrpt    5      6490.923 ±     190.739   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                                    N/A  thrpt    5      2219.829 ±      99.704  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                               N/A  thrpt    5    538153.349 ±   16373.178    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2134.912 ±     735.505  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5    517542.218 ±  175943.379    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.196 ±       0.986  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5        47.516 ±     239.302    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                         N/A  thrpt    5        32.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                          N/A  thrpt    5        51.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                                  N/A  thrpt    5     47762.884 ±    1336.260   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                                   N/A  thrpt    5       792.606 ±      34.294  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                              N/A  thrpt    5     26116.579 ±     698.810    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5       795.285 ±     698.270  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5     26195.352 ±   22776.409    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.654 ±       4.120  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5        21.485 ±     135.712    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                        N/A  thrpt    5        12.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                         N/A  thrpt    5        30.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                         N/A  thrpt    5      4563.548 ±      64.054   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                          N/A  thrpt    5      1002.016 ±      16.525  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                                     N/A  thrpt    5    345502.013 ±    7748.688    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5       985.159 ±      13.280  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5    339687.729 ±    4831.300    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.883 ±       5.229  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5       303.600 ±    1795.536    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                               N/A  thrpt    5        15.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                                N/A  thrpt    5        40.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                                  N/A  thrpt    5      5099.069 ±     105.648   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                                   N/A  thrpt    5       641.723 ±      14.472  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                              N/A  thrpt    5    198051.710 ±    2901.322    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5       646.823 ±      16.251  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    199629.543 ±    6480.200    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         2.568 ±      13.538    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                        N/A  thrpt    5        10.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                         N/A  thrpt    5        19.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                                 N/A  thrpt    5      6385.523 ±     527.816   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                                  N/A  thrpt    5       321.151 ±      27.686  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                             N/A  thrpt    5     79137.929 ±    2054.182    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       315.274 ±     127.979  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5     77589.083 ±   26628.192    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         2.046 ±      10.790    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                                       N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                        N/A  thrpt    5        16.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                         N/A  thrpt    5      6660.874 ±      87.407   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                          N/A  thrpt    5       283.732 ±       4.503  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                     N/A  thrpt    5     67028.836 ±    1183.155    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       300.212 ±     156.081  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     70932.256 ±   37226.271    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.010 ±       0.060  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         2.365 ±      14.130    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                               N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                                N/A  thrpt    5        15.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                                    N/A  thrpt    5      7875.740 ±     360.615   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                                     N/A  thrpt    5      1680.319 ±     113.343  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5    335714.701 ±    8905.408    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1648.180 ±      31.064  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5    329336.699 ±   12182.180    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.894 ±       5.082  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5       180.095 ±    1026.807    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                          N/A  thrpt    5        25.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                           N/A  thrpt    5        44.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                              N/A  thrpt    5     18677.472 ±    1105.571   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                               N/A  thrpt    5       479.309 ±      41.717  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          N/A  thrpt    5     40397.846 ±    5162.439    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       453.215 ±     682.425  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5     38247.460 ±   58333.370    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.016 ±       0.087  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         1.340 ±       7.362    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                                    N/A  thrpt    5         7.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                                     N/A  thrpt    5        24.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                             N/A  thrpt    5     15132.515 ±    1101.887   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5       416.013 ±      25.469  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5     43264.240 ±    2101.953    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       385.080 ±     554.823  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     40106.621 ±   58748.148    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.012 ±       0.072  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         1.317 ±       7.531    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                                   N/A  thrpt    5         6.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                                    N/A  thrpt    5        10.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                            N/A  thrpt    5     23113.873 ±     551.950   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       438.344 ±       5.522  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     29840.390 ±     789.970    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       396.220 ±     566.472  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     26981.240 ±   38732.217    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.283 ±       2.433    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                                  N/A  thrpt    5         6.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                                   N/A  thrpt    5        18.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                                 N/A  thrpt    5      3858.486 ±     222.044   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      2410.236 ±     200.090  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5    982828.741 ±   26063.257    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2333.237 ±      96.793  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    951588.494 ±   38415.983    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.424 ±       2.743  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5       173.945 ±    1128.869    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                                       N/A  thrpt    5        35.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                        N/A  thrpt    5        57.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                                   N/A  thrpt    5     10230.326 ±     265.057   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                                    N/A  thrpt    5      2195.932 ±      81.663  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                               N/A  thrpt    5    337808.689 ±    5071.616    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2116.125 ±     661.261  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5    325493.699 ±   98678.587    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.802 ±       6.763  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5       123.821 ±    1044.410    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                         N/A  thrpt    5        32.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                          N/A  thrpt    5        49.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                             N/A  thrpt    5     56866.623 ±    2651.687   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                              N/A  thrpt    5       553.338 ±      19.488  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         N/A  thrpt    5     15315.592 ±    1239.663    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       520.004 ±     686.802  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     14370.355 ±   18750.256    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.012 ±       0.044  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.344 ±       1.211    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                                   N/A  thrpt    5         8.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                                    N/A  thrpt    5        29.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                            N/A  thrpt    5     45163.933 ±    1914.202   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                             N/A  thrpt    5       665.558 ±      26.294  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     23190.488 ±     203.486    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                           N/A  thrpt    5         0.003 ±       0.023  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm                      N/A  thrpt    5         0.093 ±       0.804    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.Metaspace                                        N/A  thrpt    5         0.008 ±       0.066  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                                   N/A  thrpt    5         0.273 ±       2.352    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       660.701 ±     137.250  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     23033.048 ±    5732.985    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.928 ±       7.898  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5        32.884 ±     280.023    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                                  N/A  thrpt    5        12.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                                   N/A  thrpt    5        45.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                           N/A  thrpt    5     89098.737 ±    2018.137   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                            N/A  thrpt    5       689.444 ±      16.653  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       N/A  thrpt    5     12177.674 ±     309.616    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       661.573 ±       4.205  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5     11685.526 ±     271.154    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.545 ±       4.513  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         9.584 ±      79.371    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                                 N/A  thrpt    5        10.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                                  N/A  thrpt    5        29.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                                   N/A  thrpt    5    104161.618 ±    8677.649   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    N/A  thrpt    5         0.097 ±       0.723  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               N/A  thrpt    5         1.469 ±      10.832    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                                N/A  thrpt    5      7104.100 ±     105.244   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                                 N/A  thrpt    5      2345.558 ±      51.899  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                            N/A  thrpt    5    519532.699 ±   11445.766    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      2272.299 ±     549.053  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5    503386.922 ±  127182.741    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.217 ±       1.238  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5        48.043 ±     275.018    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                                      N/A  thrpt    5        34.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                                       N/A  thrpt    5        53.000                    ms
[info] IntBenchmark.readCirce                                                                              N/A  thrpt    5   8308407.962 ±  128718.988   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                               N/A  thrpt    5      4560.592 ±      72.795  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                          N/A  thrpt    5       863.806 ±      12.200    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                      N/A  thrpt    5      4395.064 ±     148.804  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                                 N/A  thrpt    5       832.471 ±      36.006    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                  N/A  thrpt    5         0.100 ±       0.208  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                             N/A  thrpt    5         0.019 ±       0.039    B/op
[info] IntBenchmark.readCirce:·gc.count                                                                    N/A  thrpt    5        65.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                                     N/A  thrpt    5        86.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                        N/A  thrpt    5  38052679.443 ±  791385.390   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                         N/A  thrpt    5         3.366 ±      26.885  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                    N/A  thrpt    5         0.140 ±       1.121    B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                              N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJacksonScala                                                                       N/A  thrpt    5  10441595.208 ±  435045.492   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                        N/A  thrpt    5      3569.303 ±      84.197  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5       538.010 ±      15.638    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      3421.351 ±     431.351  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5       515.689 ±      62.372    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.075 ±       0.338  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.011 ±       0.051    B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                             N/A  thrpt    5        51.000                counts
[info] IntBenchmark.readJacksonScala:·gc.time                                                              N/A  thrpt    5        70.000                    ms
[info] IntBenchmark.readJsoniterScala                                                                      N/A  thrpt    5  48834504.546 ± 1614885.507   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                                       N/A  thrpt    5         0.502 ±       2.624  MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5         0.016 ±       0.084    B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                            N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                         N/A  thrpt    5  31117894.557 ± 1924026.011   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                          N/A  thrpt    5       815.633 ±      67.455  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                                     N/A  thrpt    5        41.250 ±       0.963    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5       796.331 ±     700.282  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5        40.215 ±      33.871    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.637 ±       4.004  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.032 ±       0.201    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                               N/A  thrpt    5        12.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                                N/A  thrpt    5        29.000                    ms
[info] IntBenchmark.readPlayJson                                                                           N/A  thrpt    5   8262394.674 ±  334848.442   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                            N/A  thrpt    5      3711.225 ±     148.531  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                                       N/A  thrpt    5       706.882 ±       5.627    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      3565.781 ±     703.663  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5       679.232 ±     136.293    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.029 ±       0.091  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         0.006 ±       0.018    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                                 N/A  thrpt    5        53.000                counts
[info] IntBenchmark.readPlayJson:·gc.time                                                                  N/A  thrpt    5        69.000                    ms
[info] IntBenchmark.writeCirce                                                                             N/A  thrpt    5  13475936.089 ±  792051.199   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                              N/A  thrpt    5      1630.513 ±      98.244  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                         N/A  thrpt    5       190.372 ±       3.640    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                     N/A  thrpt    5      1521.332 ±     682.314  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                                N/A  thrpt    5       177.593 ±      77.864    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                                 N/A  thrpt    5         0.700 ±       4.079  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                            N/A  thrpt    5         0.083 ±       0.485    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                                   N/A  thrpt    5        23.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                                    N/A  thrpt    5        40.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                                       N/A  thrpt    5  41542463.983 ± 3579492.972   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                        N/A  thrpt    5       874.010 ±      40.626  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                                   N/A  thrpt    5        33.115 ±       1.624    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5       848.129 ±     687.455  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5        32.207 ±      27.572    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.911 ±       7.544  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.034 ±       0.285    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                             N/A  thrpt    5        13.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                              N/A  thrpt    5        36.000                    ms
[info] IntBenchmark.writeJacksonScala                                                                      N/A  thrpt    5  12909380.024 ±  119069.414   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                                       N/A  thrpt    5      2657.970 ±      61.676  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       323.986 ±       4.716    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2596.268 ±     536.180  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       316.449 ±      63.679    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.133 ±       0.803  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.016 ±       0.098    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                            N/A  thrpt    5        39.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                             N/A  thrpt    5        52.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                                     N/A  thrpt    5  49898451.409 ±  596717.277   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                                      N/A  thrpt    5      1050.428 ±      29.641  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5        33.125 ±       0.792    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1058.625 ±     575.552  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5        33.385 ±      18.194    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.687 ±       5.694  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.022 ±       0.180    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                           N/A  thrpt    5        16.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                            N/A  thrpt    5        34.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                             N/A  thrpt    5  61728144.536 ± 5219038.216   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                              N/A  thrpt    5         0.186 ±       1.599  MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                         N/A  thrpt    5         0.005 ±       0.040    B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                   N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                        N/A  thrpt    5  17594161.470 ± 1338240.828   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                         N/A  thrpt    5      1668.304 ±     119.567  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                                    N/A  thrpt    5       149.205 ±       3.778    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1671.309 ±      34.101  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5       149.507 ±       9.625    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.321 ±       1.288  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.029 ±       0.120    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                              N/A  thrpt    5        25.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                               N/A  thrpt    5        34.000                    ms
[info] IntBenchmark.writePlayJson                                                                          N/A  thrpt    5   2701264.635 ±   33456.012   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                           N/A  thrpt    5      2177.217 ±      53.926  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                                      N/A  thrpt    5      1268.410 ±      22.297    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2058.401 ±     528.988  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      1199.155 ±     304.649    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.758 ±       6.301  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.442 ±       3.678    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                                N/A  thrpt    5        31.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                                 N/A  thrpt    5        44.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5    166922.083 ±    3888.112   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      3179.650 ±      84.012  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     29971.907 ±     166.998    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3024.427 ±     120.579  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     28510.380 ±    1577.314    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.079 ±       0.337  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.745 ±       3.173    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        45.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        60.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5     35212.306 ±     471.179   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2532.735 ±      63.389  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    113185.063 ±    2204.205    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2405.751 ±     604.723  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    107508.318 ±   26799.808    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.075 ±       0.387  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.350 ±      17.306    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        36.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        51.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    143971.998 ±    3284.300   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1251.096 ±      34.107  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     13674.408 ±     200.316    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1176.887 ±     682.445  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     12869.201 ±    7630.616    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.858 ±       6.154  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         9.371 ±      67.206    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        18.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        39.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5    438150.576 ±   16301.841   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1758.819 ±      55.932  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      6316.277 ±      67.282    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1725.126 ±     564.398  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      6196.130 ±    2069.289    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.658 ±       5.441  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.368 ±      19.588    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        26.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        42.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    476659.457 ±   13528.406   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5      1375.620 ±      66.967  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5      4541.282 ±     114.107    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                        128  thrpt    5      1323.189 ±      13.309  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4368.507 ±     141.034    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.695 ±       5.451  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.308 ±      18.100    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5        20.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                                       128  thrpt    5        37.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5     73042.543 ±    4778.222   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1520.204 ±     104.585  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     32752.884 ±    1035.239    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1455.717 ±     739.976  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     31357.513 ±   15584.685    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.025 ±       0.067  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.539 ±       1.458    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        22.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        30.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                                   128  thrpt    5    314925.422 ±    7377.797   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      2356.984 ±      94.708  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     11777.142 ±     241.258    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2261.328 ±     517.398  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     11301.317 ±    2712.065    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.208 ±       1.616  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         1.049 ±       8.148    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                         128  thrpt    5        34.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                          128  thrpt    5        47.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                            128  thrpt    5    515148.443 ±    9747.831   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1363.734 ±      57.591  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      4165.616 ±      98.020    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1308.002 ±      15.267  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      3995.576 ±     107.578    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.887 ±       7.592  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.712 ±      23.214    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        20.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        40.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                           128  thrpt    5   1309961.710 ±   15317.048   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      2659.676 ±      43.109  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      3194.987 ±      46.070    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2550.134 ±     734.673  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      3063.612 ±     895.901    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.035 ±       0.110    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        38.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        51.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                                128  thrpt    5    106890.060 ±    5863.683   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3581.457 ±     179.956  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     52717.353 ±     507.873    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      3419.455 ±     414.591  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     50335.719 ±    6005.568    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.046 ±       0.154  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.676 ±       2.272    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        51.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        68.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                                  128  thrpt    5    343978.035 ±    9770.450   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1190.985 ±      59.142  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5      5448.167 ±     159.677    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1186.678 ±     689.958  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5      5427.526 ±    3120.588    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.725 ±       4.653  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         3.319 ±      21.358    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        18.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        37.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                           128  thrpt    5    828432.254 ±   40976.944   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       615.726 ±      30.348  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1169.659 ±      23.318    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       653.574 ±       8.031  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1241.675 ±      50.131    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.032 ±       0.127    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        10.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        33.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                          128  thrpt    5   2090435.297 ±  103080.897   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       996.057 ±      48.499  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       749.701 ±      10.492    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       992.139 ±       9.631  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       746.844 ±      37.392    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.646 ±       4.893  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.483 ±       3.664    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        15.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        32.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   2304474.502 ±  246003.893   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5         0.348 ±       2.993  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.250 ±       2.147    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                               128  thrpt    5    468779.962 ±   17218.815   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       698.907 ±       9.490  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      2346.355 ±      58.867    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5       658.696 ±       4.148  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      2211.417 ±      83.489    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.650 ±       5.369  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.167 ±      17.907    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        33.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                              128  thrpt    5     58246.307 ±    2482.245   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      2023.198 ±      77.748  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     54662.576 ±     672.748    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1922.106 ±     601.714  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     51902.442 ±   14533.926    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.770 ±       6.319  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        20.914 ±     171.624    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                                    128  thrpt    5        29.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                                     128  thrpt    5        49.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                                       128  thrpt    5     93222.382 ±    6872.024   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1724.099 ±     173.120  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     29100.463 ±     910.259    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1704.992 ±     567.116  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     28772.207 ±    8716.201    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.950 ±       6.472  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        16.434 ±     112.554    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5        26.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        49.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                                      128  thrpt    5    163323.539 ±    9331.068   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      2594.620 ±     180.167  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5     25001.216 ±     506.492    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      2475.397 ±     715.438  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     23856.187 ±    6962.237    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.108 ±       0.390  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.040 ±       3.700    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5        37.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5        51.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                           128  thrpt    5     33523.151 ±     829.514   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      2255.116 ±      94.463  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    105844.228 ±    2177.835    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2196.021 ±     704.921  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    103060.903 ±   32312.854    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.171 ±       1.336  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         8.050 ±      63.025    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        33.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        47.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                                      128  thrpt    5    158135.874 ±    7000.573   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1063.406 ±      59.056  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     10581.318 ±     281.766    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1044.092 ±     558.129  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     10387.632 ±    5464.858    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.008 ±       0.044  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.082 ±       0.434    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        16.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5        21.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                                     128  thrpt    5    440845.239 ±   80282.040   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       500.701 ±      86.827  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1787.466 ±     107.037    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       462.237 ±     696.606  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1664.290 ±    2680.558    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.008 ±       0.044  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.031 ±       0.161    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         7.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5        21.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5    512005.742 ±    5317.425   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5         5.206 ±       0.051  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        16.001 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                          128  thrpt    5     74118.706 ±    2280.770   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1327.271 ±      70.519  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     28180.902 ±     802.744    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1253.314 ±     583.538  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     26592.855 ±   11726.898    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.117 ±       0.915  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         2.474 ±      19.410    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        19.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        28.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                                  N/A  thrpt    5   2884803.132 ±  100449.687   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      3720.986 ±     100.146  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      2029.735 ±      16.873    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      3562.945 ±     632.442  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      1944.233 ±     408.235    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.037 ±       0.036  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.020 ±       0.019    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        53.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        70.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                            N/A  thrpt    5    857527.177 ±   39426.640   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5       502.992 ±      25.428  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5       923.093 ±      46.961    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       456.523 ±     688.203  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       838.055 ±    1266.248    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.027 ±       0.092  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.049 ±       0.167    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5         7.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5        21.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                           N/A  thrpt    5    323607.637 ±   15120.826   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5       769.100 ±      32.274  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5      3740.216 ±      49.629    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       721.639 ±     562.663  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      3508.909 ±    2714.277    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.833 ±       7.014  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         4.129 ±      34.798    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        11.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        38.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                          N/A  thrpt    5    725255.471 ±   33225.943   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       663.577 ±      43.273  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5      1439.912 ±      39.821    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       663.915 ±       7.012  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5      1440.860 ±      66.821    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.017 ±       0.067  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.036 ±       0.146    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        10.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        22.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                                      N/A  thrpt    5   2995309.787 ±  257322.503   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                                       N/A  thrpt    5      1813.586 ±     145.417  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                                  N/A  thrpt    5       952.777 ±      26.252    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                              N/A  thrpt    5      1733.222 ±     560.044  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5       910.610 ±     286.448    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.525 ±       3.698  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.274 ±       1.935    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                            N/A  thrpt    5        26.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                             N/A  thrpt    5        39.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                                N/A  thrpt    5   7466055.395 ±  302142.244   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                                 N/A  thrpt    5       824.910 ±      28.776  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                            N/A  thrpt    5       173.875 ±       4.095    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                        N/A  thrpt    5       863.329 ±     699.279  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm                   N/A  thrpt    5       182.245 ±     152.980    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space                    N/A  thrpt    5         0.554 ±       4.590  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm               N/A  thrpt    5         0.116 ±       0.964    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                                      N/A  thrpt    5        13.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                                       N/A  thrpt    5        30.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                               N/A  thrpt    5    216912.408 ±    3576.103   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      1910.375 ±      59.954  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5     13860.323 ±     411.869    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1861.525 ±     673.256  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     13506.571 ±    4913.817    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.333 ±       1.314  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         2.419 ±       9.552    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        28.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        44.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                            128  thrpt    5   1548482.459 ±   82900.301   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5        89.476 ±      14.103  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5        90.963 ±      17.286    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       102.344 ±     539.628  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       105.480 ±     556.181    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.073 ±       0.632  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.075 ±       0.647    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         2.000                counts
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] MutableBitSetBenchmark.readPlayJson                                                                 128  thrpt    5     75424.929 ±    2118.782   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3323.368 ±      83.159  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     69328.165 ±    1838.704    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3231.792 ±     656.080  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     67404.178 ±   12401.313    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.021 ±       0.057  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.435 ±       1.183    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        48.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        66.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                            128  thrpt    5   1588157.359 ±   60574.491   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       858.734 ±      52.761  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5       850.875 ±      26.982    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       851.614 ±     690.548  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       843.290 ±     671.589    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.804 ±       6.741  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.790 ±       6.627    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5        13.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        35.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                           128  thrpt    5   1687557.426 ±   51309.742   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       485.937 ±      15.509  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       453.171 ±      22.649    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       462.488 ±     696.061  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       432.138 ±     660.978    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.012 ±       0.044  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.012 ±       0.041    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         7.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        20.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   1800354.483 ±   27889.281   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5        20.683 ±      20.190  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5        18.094 ±      18.025    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                           128  thrpt    5        51.161 ±     440.508  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5        45.042 ±     387.829    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5         1.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time                                          128  thrpt    5         3.000                    ms
[info] MutableBitSetBenchmark.writePlayJson                                                                128  thrpt    5     50924.359 ±    3136.301   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      2185.690 ±     180.122  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     67541.920 ±    1881.021    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space                               128  thrpt    5         0.004 ±       0.030  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm                          128  thrpt    5         0.112 ±       0.962    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.Metaspace                                            128  thrpt    5         0.010 ±       0.090  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.Metaspace.norm                                       128  thrpt    5         0.331 ±       2.848    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2089.503 ±     567.007  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     64605.450 ±   19192.042    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Old_Gen                                           128  thrpt    5         0.500 ±       4.309  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm                                      128  thrpt    5        15.863 ±     136.586    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.262 ±       1.714  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         8.183 ±      53.327    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        33.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        75.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5    268216.501 ±   12505.731   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1086.797 ±      69.558  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      6376.674 ±     150.105    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1058.708 ±     576.471  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      6209.007 ±    3237.097    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.650 ±       5.327  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         3.778 ±      30.948    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        16.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        32.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5     39742.642 ±     885.417   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1981.412 ±      66.652  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     78454.649 ±    1674.774    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1931.439 ±     550.403  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     76472.594 ±   21491.959    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.173 ±       1.354  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         6.894 ±      54.072    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        29.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        43.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    112902.320 ±    4459.607   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1137.931 ±      41.938  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     15860.149 ±     253.875    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1113.761 ±     686.014  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     15543.617 ±   10176.850    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.833 ±       5.499  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        11.561 ±      76.329    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        17.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        38.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5    303809.009 ±   15475.181   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       421.324 ±      32.581  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2181.982 ±     121.489    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       396.477 ±     569.952  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2051.724 ±    2917.105    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.004 ±       0.036  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.021 ±       0.183    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         6.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        17.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    363018.862 ±    5555.787   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         3.691 ±       0.057  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5        16.001 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5     57583.397 ±    1727.880   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1390.987 ±      53.839  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     38006.069 ±     661.995    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1318.059 ±      49.723  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     36014.593 ±    1340.470    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.142 ±       0.996  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         3.839 ±      26.930    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        20.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        29.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                                       128  thrpt    5     72644.549 ±    1959.760   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1703.209 ±      68.861  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5     36898.592 ±     970.191    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1650.922 ±      28.432  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     35767.532 ±    1194.180    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.766 ±       4.809  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        16.722 ±     105.172    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                             128  thrpt    5        25.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                              128  thrpt    5        42.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                                128  thrpt    5    132217.075 ±    1503.061   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5       911.995 ±      26.491  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     10855.571 ±     389.041    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       915.358 ±     559.361  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     10897.542 ±    6707.414    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.924 ±       7.691  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        10.973 ±      91.279    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        14.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        40.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                               128  thrpt    5    258977.345 ±    6137.080   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1100.528 ±      22.006  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      6686.572 ±     158.335    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1058.529 ±     562.372  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      6435.299 ±    3576.133    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.666 ±       5.337  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         4.058 ±      32.493    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        16.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        31.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                                    128  thrpt    5     34573.359 ±    3374.006   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1846.053 ±     141.406  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     84018.095 ±    2596.204    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1788.647 ±     704.678  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     81510.441 ±   36448.888    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.304 ±       2.048  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        14.234 ±      96.813    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        27.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        43.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                               128  thrpt    5    178864.868 ±    4239.952   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1016.162 ±      22.601  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5      8940.015 ±     178.262    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       981.081 ±      11.264  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      8631.484 ±     187.671    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.858 ±       6.301  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         7.486 ±      54.891    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        15.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        38.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                              128  thrpt    5    475661.081 ±   22463.430   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1441.095 ±      89.579  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      4767.592 ±      99.085    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1387.408 ±     556.772  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      4588.518 ±    1738.144    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.660 ±       5.617  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         2.180 ±      18.548    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        21.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        37.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    519108.359 ±   14355.936   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5       981.544 ±      25.831  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5      2975.830 ±      73.433    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5       991.821 ±      10.650  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      3007.018 ±      60.362    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.666 ±       4.917  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         2.001 ±      14.743    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        15.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5        33.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                                   128  thrpt    5     74025.546 ±    1161.226   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1605.580 ±      32.196  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     34128.534 ±     892.038    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1523.387 ±     683.095  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     32377.662 ±   14375.884    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.158 ±       1.096  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         3.357 ±      23.223    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        23.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        34.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                                 128  thrpt    5     95825.957 ±    2705.185   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1579.099 ±      25.608  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     25935.120 ±     641.814    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1517.641 ±     686.934  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     24938.459 ±   11781.592    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.785 ±       4.305  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        12.886 ±      70.796    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        23.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        41.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                          128  thrpt    5    167124.893 ±    5656.693   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       718.648 ±      27.853  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      6766.822 ±      97.427    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       720.994 ±     567.483  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      6794.723 ±    5508.088    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.904 ±       7.468  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         8.437 ±      69.691    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        11.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        40.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                         128  thrpt    5    277129.775 ±    4063.021   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1016.940 ±      14.463  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      5775.224 ±      73.840    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       992.343 ±       9.417  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      5635.606 ±     124.932    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.650 ±       5.023  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.693 ±      28.569    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        15.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        33.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                              128  thrpt    5     66722.412 ±    1694.097   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2617.421 ±      62.340  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     61732.381 ±     944.539    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2523.307 ±     636.203  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     59505.227 ±   14434.795    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.212 ±       1.478  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         4.988 ±      34.698    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        38.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        54.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                                128  thrpt    5    204807.373 ±    6074.024   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1436.484 ±      79.517  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     11035.719 ±     390.981    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1385.273 ±     560.400  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     10640.441 ±    4176.713    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.762 ±       6.120  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         5.920 ±      47.610    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        21.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        37.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                         128  thrpt    5    497526.947 ±   30264.756   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       403.064 ±      30.983  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1274.848 ±      43.532    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       377.826 ±     602.395  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1191.175 ±    1833.524    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.017 ±       0.105  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.052 ±       0.325    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         6.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        21.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                        128  thrpt    5    622016.293 ±   48104.451   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       349.703 ±      10.411  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       885.053 ±      95.874    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       314.756 ±     126.879  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       796.957 ±     344.313    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.004 ±       0.036  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.011 ±       0.094    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        14.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    683217.811 ±   61629.124   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         6.952 ±       0.644  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5        16.012 ±       0.094    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                             128  thrpt    5     34775.109 ±    1178.164   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1898.204 ±      90.214  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     85897.232 ±    1760.177    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1850.377 ±     682.341  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     83716.950 ±   29877.977    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.841 ±       6.714  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        38.297 ±     305.994    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        28.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        47.000                    ms
[info] PrimitivesBenchmark.readCirce                                                                       N/A  thrpt    5    859656.070 ±   10406.449   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                        N/A  thrpt    5      2310.313 ±      68.741  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5      4228.906 ±      95.412    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      2255.893 ±     591.465  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      4129.525 ±    1094.234    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.870 ±       6.777  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         1.596 ±      12.435    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                             N/A  thrpt    5        34.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                              N/A  thrpt    5        52.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                                N/A  thrpt    5   1840837.089 ±   75438.566   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5      1176.871 ±      56.299  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5      1006.183 ±      19.799    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1173.511 ±     693.440  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5      1002.561 ±     568.807    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.926 ±       7.551  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.780 ±       6.353    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                                      N/A  thrpt    5        18.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                                       N/A  thrpt    5        44.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                               N/A  thrpt    5   8582488.130 ±  270530.924   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       273.718 ±      40.202  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5        50.207 ±       8.945    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       285.672 ±     714.134  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        52.576 ±     132.424    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.002 ±       0.008    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                                     N/A  thrpt    5         5.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                                      N/A  thrpt    5        13.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                                    N/A  thrpt    5    318905.666 ±   25697.412   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      2148.696 ±     124.055  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5     10602.688 ±     623.762    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      2128.453 ±     727.317  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5     10498.103 ±    3311.937    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.421 ±       1.754  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         2.110 ±       8.926    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                          N/A  thrpt    5        32.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                           N/A  thrpt    5        53.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                                      N/A  thrpt    5   1092904.510 ±   41135.855   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                                       N/A  thrpt    5      1791.487 ±      91.400  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5      2579.716 ±      48.945    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      1716.588 ±     547.461  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      2472.630 ±     826.441    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.808 ±       6.207  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         1.177 ±       9.053    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                            N/A  thrpt    5        26.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                             N/A  thrpt    5        52.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                               N/A  thrpt    5   2697800.610 ±  192222.217   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5      1187.313 ±      72.113  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5       692.620 ±      19.434    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1114.610 ±     691.331  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5       650.232 ±     401.929    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.779 ±       5.444  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.454 ±       3.189    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                                     N/A  thrpt    5        17.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                                      N/A  thrpt    5        38.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                              N/A  thrpt    5   6327494.315 ±  274046.688   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       726.828 ±      14.778  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       180.797 ±       4.656    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       727.788 ±     575.026  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       181.363 ±     152.622    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.674 ±       5.539  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.171 ±       1.405    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                                    N/A  thrpt    5        11.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                                     N/A  thrpt    5        30.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                                      N/A  thrpt    5   6756826.469 ±  123245.751   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                       N/A  thrpt    5       426.168 ±      20.591  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                  N/A  thrpt    5        99.258 ±       5.687    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       380.834 ±     611.297  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5        88.706 ±     142.782    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.019 ±       0.100  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.004 ±       0.023    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                            N/A  thrpt    5         6.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                             N/A  thrpt    5        17.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                                   N/A  thrpt    5    420905.993 ±   10881.451   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                                    N/A  thrpt    5      2359.069 ±      95.298  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5      8819.507 ±     189.879    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2243.864 ±     499.604  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5      8387.229 ±    1719.702    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.941 ±       7.837  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         3.536 ±      29.454    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                         N/A  thrpt    5        34.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                          N/A  thrpt    5        52.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                        128  thrpt    5     78533.661 ±    1917.864   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                         128  thrpt    5      2201.406 ±      75.534  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                    128  thrpt    5     44110.471 ±     971.208    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                128  thrpt    5      2125.474 ±     668.666  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                           128  thrpt    5     42573.509 ±   12372.431    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                            128  thrpt    5         0.762 ±       6.381  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                       128  thrpt    5        15.183 ±     127.139    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                              128  thrpt    5        32.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                               128  thrpt    5        44.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                                 128  thrpt    5    126244.543 ±    3634.961   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                  128  thrpt    5      1996.158 ±      50.614  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                             128  thrpt    5     24876.892 ±     613.789    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1905.348 ±     514.919  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     23752.933 ±    6884.249    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.925 ±       7.607  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        11.529 ±      94.864    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                                       128  thrpt    5        29.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                        128  thrpt    5        47.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                                128  thrpt    5    177649.062 ±    3820.692   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                                 128  thrpt    5      2710.434 ±      71.013  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                            128  thrpt    5     24010.300 ±     277.416    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2609.573 ±     579.569  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     23120.310 ±    5363.976    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.058 ±       0.373  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.520 ±       3.333    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                                      128  thrpt    5        39.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                                       128  thrpt    5        53.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                                     128  thrpt    5     60317.580 ±    1990.647   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                      128  thrpt    5      3055.571 ±     104.086  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                 128  thrpt    5     79730.397 ±    1654.127    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2933.706 ±     499.447  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     76543.908 ±   12157.020    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.165 ±       1.109  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         4.322 ±      29.254    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                           128  thrpt    5        44.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                            128  thrpt    5        64.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                                       128  thrpt    5    186858.555 ±    4696.219   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                        128  thrpt    5      1326.328 ±      36.683  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                   128  thrpt    5     11168.668 ±     284.554    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                               128  thrpt    5      1252.020 ±     566.562  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                          128  thrpt    5     10546.980 ±    4907.820    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                           128  thrpt    5         0.745 ±       5.759  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                      128  thrpt    5         6.273 ±      48.417    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                             128  thrpt    5        19.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                              128  thrpt    5        38.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                                128  thrpt    5    461872.110 ±   22805.769   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                                 128  thrpt    5       411.835 ±      18.573  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                            128  thrpt    5      1403.241 ±      48.869    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5       377.359 ±     600.498  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      1288.049 ±    2078.701    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.012 ±       0.072  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.043 ±       0.246    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                                      128  thrpt    5         6.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                                       128  thrpt    5        20.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                               128  thrpt    5    629201.371 ±   62012.679   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                128  thrpt    5       351.502 ±      20.696  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                           128  thrpt    5       879.298 ±      53.274    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5       315.022 ±     127.252  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5       788.326 ±     331.910    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.008 ±       0.072  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.020 ±       0.175    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                                     128  thrpt    5         5.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                                      128  thrpt    5        14.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                       128  thrpt    5    712047.930 ±   12982.109   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                        128  thrpt    5         7.239 ±       0.134  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                   128  thrpt    5        16.001 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                             128  thrpt    5           ≈ 0                counts
[info] SetOfIntsBenchmark.writePlayJson                                                                    128  thrpt    5     34648.894 ±    1620.690   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                     128  thrpt    5      1890.147 ±     119.023  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                128  thrpt    5     85843.280 ±    2140.208    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1850.515 ±     690.816  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     84062.329 ±   31974.456    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.824 ±       6.476  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5        38.154 ±     300.368    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                          128  thrpt    5        28.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                           128  thrpt    5        51.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                               128  thrpt    5   3367028.667 ±  237712.141   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      2934.061 ±     217.029  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5      1371.318 ±      15.498    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2815.258 ±     694.795  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      1315.334 ±     269.071    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.050 ±       0.134  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.023 ±       0.064    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        42.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        58.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                         128  thrpt    5   6230661.549 ±  247321.674   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                          128  thrpt    5      1207.623 ±      56.936  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                     128  thrpt    5       305.021 ±       4.632    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1171.446 ±     682.420  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       295.991 ±     175.149    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.896 ±       7.346  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.224 ±       1.836    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                               128  thrpt    5        18.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                                128  thrpt    5        40.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                        128  thrpt    5   4152128.468 ±  187027.537   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      2295.293 ±     102.208  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5       869.884 ±      18.050    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      2254.591 ±     544.109  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       854.649 ±     216.733    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.183 ±       1.311  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.071 ±       0.507    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        34.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        47.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                                       128  thrpt    5   6879249.600 ±  161471.938   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1332.771 ±      47.789  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       304.877 ±       5.799    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1323.483 ±      13.234  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       302.765 ±       7.979    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.646 ±       5.424  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.149 ±       1.249    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        20.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        35.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                            128  thrpt    5   4082917.209 ±  169184.058   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2450.976 ±     142.403  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5       944.658 ±      15.751    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2327.150 ±     107.923  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       896.963 ±      15.162    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.125 ±       0.763  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.049 ±       0.298    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        35.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        47.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                              128  thrpt    5   2201449.424 ±  123261.194   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1316.230 ±      62.850  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5       940.887 ±      30.686    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1318.574 ±      11.686  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       942.678 ±      55.352    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.720 ±       5.890  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.513 ±       4.188    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        20.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        38.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                        128  thrpt    5   5742761.107 ±  281335.368   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                         128  thrpt    5       569.195 ±      30.496  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                    128  thrpt    5       155.979 ±       6.134    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                128  thrpt    5       521.274 ±     687.838  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       142.990 ±     190.227    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.011 ±       0.045  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.003 ±       0.012    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                              128  thrpt    5         8.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                               128  thrpt    5        27.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                                       128  thrpt    5   4608526.556 ±  252054.426   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1262.559 ±      79.647  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5       431.040 ±       7.322    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1248.638 ±     570.577  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       426.677 ±     206.539    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.775 ±       5.688  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.264 ±       1.942    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        43.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                                      128  thrpt    5   6003996.235 ±   49862.707   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       596.581 ±      11.775  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5       156.379 ±       4.106    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       595.900 ±     571.246  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       156.233 ±     150.169    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.021 ±       0.080  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.005 ±       0.021    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        24.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   6303497.164 ±  519743.833   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                           128  thrpt    5   4527420.964 ±  128228.416   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1283.883 ±      46.269  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5       446.218 ±      13.385    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1251.173 ±     570.740  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       435.123 ±     207.331    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.716 ±       6.034  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.249 ±       2.099    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        36.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                            128  thrpt    5   1479474.383 ±   55936.765   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2116.520 ±     103.885  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5      2251.374 ±      45.380    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1994.902 ±      60.048  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      2122.148 ±      77.751    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.716 ±       5.498  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.757 ±       5.810    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        30.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        43.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                                      128  thrpt    5   2831358.049 ±  144738.250   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       548.720 ±      30.686  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       304.990 ±      12.563    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       586.691 ±     560.981  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       326.303 ±     314.575    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.030 ±       0.088  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.016 ±       0.049    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         9.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        29.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                                     128  thrpt    5   1720598.573 ±   54975.274   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       951.561 ±      29.000  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       870.410 ±      28.746    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       917.481 ±     561.091  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       839.722 ±     525.011    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.793 ±       6.627  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.726 ±       6.064    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        38.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                                    128  thrpt    5   2424381.974 ±   41414.756   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       469.259 ±      15.200  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       304.624 ±      13.778    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       449.279 ±     627.072  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       291.958 ±     411.612    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.004 ±       0.036  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.003 ±       0.023    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        17.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                         128  thrpt    5   1686434.546 ±   70072.752   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5       961.932 ±      63.268  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5       897.597 ±      29.544    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5       920.326 ±     564.318  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       857.993 ±     506.024    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.756 ±       4.639  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.706 ±       4.350    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        34.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                           128  thrpt    5   1828377.348 ±   88000.705   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1407.933 ±      57.495  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      1211.785 ±      25.067    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1385.732 ±     559.082  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1193.043 ±     497.276    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.670 ±       5.594  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.572 ±       4.771    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        21.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        37.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                                     128  thrpt    5   3026388.617 ±   71730.953   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       804.647 ±      15.340  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5       418.392 ±      13.225    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       783.823 ±     688.657  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       407.981 ±     367.658    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.890 ±       7.412  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.467 ±       3.890    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5        12.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        33.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                                    128  thrpt    5   2854227.754 ±  368213.157   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1255.797 ±     158.944  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       692.366 ±      17.099    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1182.811 ±     691.360  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       651.299 ±     346.293    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.731 ±       5.785  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.407 ±       3.229    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        18.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        35.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                                   128  thrpt    5   3343575.430 ±  108195.760   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       897.808 ±      25.483  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       422.527 ±      13.341    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       925.928 ±     566.280  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       435.991 ±     272.110    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.644 ±       5.452  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.304 ±       2.578    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        33.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   3635790.009 ±  122319.895   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         1.669 ±      14.366  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.734 ±       6.315    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                        128  thrpt    5   2861650.051 ±   79393.088   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1427.168 ±      58.477  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5       784.714 ±      15.595    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1386.247 ±     572.363  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       762.541 ±     329.724    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.701 ±       5.949  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.389 ±       3.297    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        21.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        40.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                                       N/A  thrpt    5     11779.457 ±     345.880   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                        N/A  thrpt    5      1391.663 ±      77.469  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5    185912.806 ±    5964.129    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1371.019 ±     569.353  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5    183112.242 ±   73252.042    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.903 ±       6.752  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5       121.398 ±     909.427    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                             N/A  thrpt    5        21.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                              N/A  thrpt    5        46.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                                N/A  thrpt    5     21917.989 ±     767.850   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5       337.007 ±      10.483  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5     24201.719 ±    1602.571    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5       319.427 ±       4.696  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5     22937.972 ±     919.508    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.012 ±       0.072  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.895 ±       5.134    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                                      N/A  thrpt    5         5.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                                       N/A  thrpt    5         9.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                               N/A  thrpt    5     22477.496 ±    1530.633   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       255.034 ±      31.542  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     17867.150 ±    3406.911    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       234.247 ±     523.912  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     16473.007 ±   37035.337    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.010 ±       0.054  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.692 ±       3.724    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                                     N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                                      N/A  thrpt    5        12.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                                    N/A  thrpt    5      7473.323 ±     276.296   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      2098.846 ±     112.585  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5    441967.753 ±    9489.542    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1990.165 ±     552.243  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5    419004.248 ±  108484.139    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         1.505 ±       7.225  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5       316.826 ±    1510.306    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                          N/A  thrpt    5        31.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                           N/A  thrpt    5        78.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                               N/A  thrpt    5     63347.357 ±    1694.045   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5       818.687 ±      35.401  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     20338.362 ±     553.235    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       781.061 ±     685.382  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     19408.113 ±   17114.044    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         1.009 ±       7.814  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5        25.066 ±     193.893    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                                     N/A  thrpt    5        12.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                                      N/A  thrpt    5        40.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                              N/A  thrpt    5     69925.815 ±    2660.779   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       481.326 ±      16.455  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5     10832.854 ±     403.914    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       513.255 ±     676.602  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5     11569.681 ±   15454.938    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.019 ±       0.100  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.426 ±       2.286    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                                    N/A  thrpt    5         8.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                                     N/A  thrpt    5        25.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                                      N/A  thrpt    5     74928.552 ±    6811.420   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                       N/A  thrpt    5         7.619 ±       0.693  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                  N/A  thrpt    5       160.006 ±       0.001    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                            N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                                 128  thrpt    5    317562.948 ±    3656.492   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1904.890 ±      56.197  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5      9440.347 ±     199.095    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1855.309 ±     683.873  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      9193.830 ±    3344.720    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.737 ±       6.078  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         3.653 ±      30.132    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                                       128  thrpt    5        28.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                        128  thrpt    5        43.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                          128  thrpt    5    479291.332 ±   11021.693   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       562.677 ±      22.326  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      1847.136 ±      85.168    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       586.390 ±     561.483  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1926.342 ±    1861.204    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.004 ±       0.036  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.014 ±       0.117    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        32.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5   1231615.387 ±   35697.234   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       662.314 ±      11.169  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       846.170 ±      16.605    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       662.477 ±       5.473  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       846.390 ±      22.379    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.525 ±       4.340  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.667 ±       5.517    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        27.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5    103503.470 ±    3943.870   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      3314.153 ±      91.366  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     50394.208 ±    1059.346    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      3212.994 ±     624.930  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     48864.344 ±   10273.010    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.083 ±       0.321  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.263 ±       4.835    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        48.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        65.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                                128  thrpt    5    343412.391 ±    9602.954   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1201.553 ±      36.395  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5      5505.289 ±      94.606    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1186.240 ±     692.454  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      5435.794 ±    3191.586    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.716 ±       4.511  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         3.278 ±      20.666    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        18.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        36.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    716258.396 ±   38554.705   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       561.854 ±      35.756  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1234.512 ±      46.336    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       523.764 ±     689.436  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1150.336 ±    1507.826    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.012 ±       0.066  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.027 ±       0.144    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         8.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        26.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5   1623637.129 ±   36250.830   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       773.080 ±      10.273  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       749.319 ±      12.969    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       728.469 ±     569.528  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       706.045 ±     550.966    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.654 ±       4.332  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.634 ±       4.192    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        11.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        27.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5   1734370.201 ±   79955.236   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         0.207 ±       1.776  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.187 ±       1.607    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5    456949.368 ±    2080.688   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       697.046 ±      12.735  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      2400.448 ±      43.712    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       657.855 ±       4.284  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      2265.487 ±      23.338    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.708 ±       5.871  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.440 ±      20.237    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        33.000                    ms
[info] Benchmark result is saved to graalvmce1.json
[success] Total time: 5657 s, completed Apr 29, 2018 4:34:33 AM
