[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed May 2, 2018 9:39:58 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:987:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1073:75: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toFloat(pos: Int): Float = java.lang.Float.parseFloat(new String(buf, 0, mark, pos - mark))
[warn]                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:445:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:453:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:964:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] 5 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.25.3-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.25.3-SNAPSHOT.jar ...
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("a");
[info]       private[this] val r1: Array[String] = Array("b");
[info]       private[this] val r2: Array[String] = Array("l", "r");
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = JsoniterCodecs.this.adtCodec.decodeValue(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = JsoniterCodecs.this.adtCodec.decodeValue(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "bd");
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               ArrayBuffer.empty[Boolean];
[info]             do
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`)
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Char] = new Array[Char](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Double] = new Array[Double](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Float] = new Array[Float](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Int] = new Array[Int](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Long] = new Array[Long](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Short] = new Array[Short](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "l");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("geometry");
[info]       private[this] val r1: Array[String] = Array("coordinates");
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d6(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do
[info]               x.+=(d6(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do
[info]               x.+=(d5(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d7(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d8(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do
[info]               x.+=(d8(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d11(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d14(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d8(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d7(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d10(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d12(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do
[info]               x.+=(JsoniterCodecs.this.geoJSONCodec.decodeValue(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e6(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             e6(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e7(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e8(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             e8(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e11(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e6(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e14(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e8(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e7(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e10(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e12(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             JsoniterCodecs.this.geoJSONCodec.encodeValue(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("status");
[info]       private[this] val r1: Array[String] = Array("distance", "duration", "status");
[info]       private[this] val r2: Array[String] = Array("text", "value");
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l))
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "i");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Set.empty[Int];
[info]             do
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private[this] val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private[this] val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private[this] val r4: Array[String] = Array("url", "description");
[info]       private[this] val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(r5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:64:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:65:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:66:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:70:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:71:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:72:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:73:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:74:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:75:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:76:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 14 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.3-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.3-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.3-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java -prof gc -rf json -rff graalvmee1.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22443.873 ops/s
[info] # Warmup Iteration   2: 151034.497 ops/s
[info] # Warmup Iteration   3: 967735.368 ops/s
[info] Iteration   1: 1060715.221 ops/s
[info]                  ·gc.alloc.rate:                   2349.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              3486.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2234.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3315.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1031567.281 ops/s
[info]                  ·gc.alloc.rate:                   2278.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              3476.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3466.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1023044.527 ops/s
[info]                  ·gc.alloc.rate:               2272.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          3496.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2310.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3554.622 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 1040674.219 ops/s
[info]                  ·gc.alloc.rate:                   2311.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              3496.402 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3029.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 981664.284 ops/s
[info]                  ·gc.alloc.rate:                   2211.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              3544.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3775.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   1027533.107 ±(99.9%) 112497.345 ops/s [Average]
[info]   (min, avg, max) = (981664.284, 1027533.107, 1060715.221), stdev = 29215.203
[info]   CI (99.9%): [915035.762, 1140030.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2284.763 ±(99.9%) 197.303 MB/sec [Average]
[info]   (min, avg, max) = (2211.419, 2284.763, 2349.593), stdev = 51.239
[info]   CI (99.9%): [2087.460, 2482.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3499.819 ±(99.9%) 101.386 B/op [Average]
[info]   (min, avg, max) = (3476.121, 3499.819, 3544.497), stdev = 26.330
[info]   CI (99.9%): [3398.432, 3601.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2235.242 ±(99.9%) 529.012 MB/sec [Average]
[info]   (min, avg, max) = (2003.029, 2235.242, 2355.781), stdev = 137.383
[info]   CI (99.9%): [1706.230, 2764.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3428.374 ±(99.9%) 1072.012 B/op [Average]
[info]   (min, avg, max) = (3029.413, 3428.374, 3775.882), stdev = 278.398
[info]   CI (99.9%): [2356.361, 4500.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.228 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.063, 0.159), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:29:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54965.000 ops/s
[info] # Warmup Iteration   2: 1446372.283 ops/s
[info] # Warmup Iteration   3: 1808608.030 ops/s
[info] Iteration   1: 1902185.578 ops/s
[info]                  ·gc.alloc.rate:                   1233.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              1020.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1070.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1938624.673 ops/s
[info]                  ·gc.alloc.rate:                   1261.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              1023.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1058.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.490 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1912450.728 ops/s
[info]                  ·gc.alloc.rate:                   1228.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              1010.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     809.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1856301.197 ops/s
[info]                  ·gc.alloc.rate:                   1202.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              1019.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1118.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 1958174.271 ops/s
[info]                  ·gc.alloc.rate:                   1267.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              1018.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1066.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1913547.289 ±(99.9%) 149480.497 ops/s [Average]
[info]   (min, avg, max) = (1856301.197, 1913547.289, 1958174.271), stdev = 38819.610
[info]   CI (99.9%): [1764066.792, 2063027.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1238.648 ±(99.9%) 100.659 MB/sec [Average]
[info]   (min, avg, max) = (1202.844, 1238.648, 1267.234), stdev = 26.141
[info]   CI (99.9%): [1137.989, 1339.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1018.720 ±(99.9%) 18.472 B/op [Average]
[info]   (min, avg, max) = (1010.871, 1018.720, 1023.754), stdev = 4.797
[info]   CI (99.9%): [1000.248, 1037.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1245.694 ±(99.9%) 564.736 MB/sec [Average]
[info]   (min, avg, max) = (984.290, 1245.694, 1326.411), stdev = 146.660
[info]   CI (99.9%): [680.957, 1810.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1024.826 ±(99.9%) 471.106 B/op [Average]
[info]   (min, avg, max) = (809.985, 1024.826, 1118.267), stdev = 122.345
[info]   CI (99.9%): [553.720, 1495.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.217 ±(99.9%) 0.988 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.217, 0.604), stdev = 0.257
[info]   CI (99.9%): [≈ 0, 1.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.177 ±(99.9%) 0.802 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.177, 0.490), stdev = 0.208
[info]   CI (99.9%): [≈ 0, 0.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 13.000), stdev = 3.347
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:28:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1470578.661 ops/s
[info] # Warmup Iteration   2: 4453147.662 ops/s
[info] # Warmup Iteration   3: 5200111.257 ops/s
[info] Iteration   1: 5279316.775 ops/s
[info]                  ·gc.alloc.rate:                   360.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              107.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          584.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 5277508.008 ops/s
[info]                  ·gc.alloc.rate:                   373.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              111.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5294284.945 ops/s
[info]                  ·gc.alloc.rate:               359.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97.828 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 5308353.884 ops/s
[info]                  ·gc.alloc.rate:               362.028 MB/sec
[info]                  ·gc.alloc.rate.norm:          107.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97.566 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 5311285.885 ops/s
[info]                  ·gc.alloc.rate:                   360.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              106.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5294149.899 ±(99.9%) 60651.845 ops/s [Average]
[info]   (min, avg, max) = (5277508.008, 5294149.899, 5311285.885), stdev = 15751.091
[info]   CI (99.9%): [5233498.055, 5354801.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   362.988 ±(99.9%) 22.143 MB/sec [Average]
[info]   (min, avg, max) = (359.488, 362.988, 373.132), stdev = 5.751
[info]   CI (99.9%): [340.845, 385.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   107.913 ±(99.9%) 7.302 B/op [Average]
[info]   (min, avg, max) = (106.760, 107.913, 111.272), stdev = 1.896
[info]   CI (99.9%): [100.611, 115.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   380.036 ±(99.9%) 439.467 MB/sec [Average]
[info]   (min, avg, max) = (328.415, 380.036, 584.193), stdev = 114.128
[info]   CI (99.9%): [≈ 0, 819.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   113.022 ±(99.9%) 131.619 B/op [Average]
[info]   (min, avg, max) = (97.566, 113.022, 174.166), stdev = 34.181
[info]   CI (99.9%): [≈ 0, 244.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.040 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.021), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 8.000), stdev = 1.949
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:28:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1418.536 ops/s
[info] # Warmup Iteration   2: 164604.079 ops/s
[info] # Warmup Iteration   3: 434306.147 ops/s
[info] Iteration   1: 529428.404 ops/s
[info]                  ·gc.alloc.rate:                   2482.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              7380.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6824.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.633 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.828 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 526659.115 ops/s
[info]                  ·gc.alloc.rate:                   2454.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              7336.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2295.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6860.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.809 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 520485.697 ops/s
[info]                  ·gc.alloc.rate:               2460.627 MB/sec
[info]                  ·gc.alloc.rate.norm:          7436.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2641.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7982.785 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 529274.344 ops/s
[info]                  ·gc.alloc.rate:                   2501.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              7437.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2337.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6951.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 534112.898 ops/s
[info]                  ·gc.alloc.rate:                   2529.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              7454.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6940.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   527992.091 ±(99.9%) 19185.157 ops/s [Average]
[info]   (min, avg, max) = (520485.697, 527992.091, 534112.898), stdev = 4982.324
[info]   CI (99.9%): [508806.934, 547177.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2485.866 ±(99.9%) 118.116 MB/sec [Average]
[info]   (min, avg, max) = (2454.957, 2485.866, 2529.749), stdev = 30.674
[info]   CI (99.9%): [2367.751, 2603.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   7408.987 ±(99.9%) 189.273 B/op [Average]
[info]   (min, avg, max) = (7336.363, 7408.987, 7454.306), stdev = 49.153
[info]   CI (99.9%): [7219.715, 7598.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2385.151 ±(99.9%) 560.767 MB/sec [Average]
[info]   (min, avg, max) = (2295.507, 2385.151, 2641.400), stdev = 145.629
[info]   CI (99.9%): [1824.383, 2945.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7111.762 ±(99.9%) 1886.239 B/op [Average]
[info]   (min, avg, max) = (6824.083, 7111.762, 7982.785), stdev = 489.850
[info]   CI (99.9%): [5225.524, 8998.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.606 ±(99.9%) 4.383 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.606, 2.633), stdev = 1.138
[info]   CI (99.9%): [≈ 0, 4.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.801 ±(99.9%) 13.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.801, 7.828), stdev = 3.383
[info]   CI (99.9%): [≈ 0, 14.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.000, 16.000), stdev = 2.345
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:28:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32052.277 ops/s
[info] # Warmup Iteration   2: 569617.058 ops/s
[info] # Warmup Iteration   3: 956570.173 ops/s
[info] Iteration   1: 1012345.394 ops/s
[info]                  ·gc.alloc.rate:                   2716.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              4220.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2538.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3944.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.656 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.019 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 1018770.961 ops/s
[info]                  ·gc.alloc.rate:                   2719.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              4201.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2560.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3955.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.366 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.200 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 1034686.973 ops/s
[info]                  ·gc.alloc.rate:                   2818.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              4287.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2906.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4420.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1027748.529 ops/s
[info]                  ·gc.alloc.rate:                   2779.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2633.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4032.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1050624.248 ops/s
[info]                  ·gc.alloc.rate:                   2820.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              4225.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2670.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4000.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   1028835.221 ±(99.9%) 57224.162 ops/s [Average]
[info]   (min, avg, max) = (1012345.394, 1028835.221, 1050624.248), stdev = 14860.933
[info]   CI (99.9%): [971611.059, 1086059.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   2770.955 ±(99.9%) 196.638 MB/sec [Average]
[info]   (min, avg, max) = (2716.187, 2770.955, 2820.653), stdev = 51.066
[info]   CI (99.9%): [2574.317, 2967.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   4238.351 ±(99.9%) 129.798 B/op [Average]
[info]   (min, avg, max) = (4201.800, 4238.351, 4287.595), stdev = 33.708
[info]   CI (99.9%): [4108.553, 4368.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2661.764 ±(99.9%) 565.585 MB/sec [Average]
[info]   (min, avg, max) = (2538.191, 2661.764, 2906.439), stdev = 146.881
[info]   CI (99.9%): [2096.179, 3227.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4070.725 ±(99.9%) 765.974 B/op [Average]
[info]   (min, avg, max) = (3944.308, 4070.725, 4420.895), stdev = 198.921
[info]   CI (99.9%): [3304.750, 4836.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 5.545 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.833, 3.366), stdev = 1.440
[info]   CI (99.9%): [≈ 0, 6.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.288 ±(99.9%) 8.567 B/op [Average]
[info]   (min, avg, max) = (0.031, 1.288, 5.200), stdev = 2.225
[info]   CI (99.9%): [≈ 0, 9.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 16.000, 26.000), stdev = 6.442
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:28:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 171241.943 ops/s
[info] # Warmup Iteration   2: 2074768.783 ops/s
[info] # Warmup Iteration   3: 2571758.554 ops/s
[info] Iteration   1: 2837248.471 ops/s
[info]                  ·gc.alloc.rate:                   1144.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              634.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     537.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2991877.754 ops/s
[info]                  ·gc.alloc.rate:                   1193.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              627.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     683.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2892536.560 ops/s
[info]                  ·gc.alloc.rate:                   1143.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              621.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     533.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.521 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2889112.371 ops/s
[info]                  ·gc.alloc.rate:                   1142.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              622.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     535.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2962115.707 ops/s
[info]                  ·gc.alloc.rate:                   1177.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              625.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     700.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   2914578.173 ±(99.9%) 238532.279 ops/s [Average]
[info]   (min, avg, max) = (2837248.471, 2914578.173, 2991877.754), stdev = 61946.075
[info]   CI (99.9%): [2676045.894, 3153110.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1160.205 ±(99.9%) 90.691 MB/sec [Average]
[info]   (min, avg, max) = (1142.798, 1160.205, 1193.110), stdev = 23.552
[info]   CI (99.9%): [1069.513, 1250.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   626.520 ±(99.9%) 20.071 B/op [Average]
[info]   (min, avg, max) = (621.957, 626.520, 634.887), stdev = 5.212
[info]   CI (99.9%): [606.448, 646.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1110.099 ±(99.9%) 698.863 MB/sec [Average]
[info]   (min, avg, max) = (968.692, 1110.099, 1318.348), stdev = 181.493
[info]   CI (99.9%): [411.236, 1808.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   598.122 ±(99.9%) 330.495 B/op [Average]
[info]   (min, avg, max) = (533.721, 598.122, 700.475), stdev = 85.829
[info]   CI (99.9%): [267.626, 928.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.237 ±(99.9%) 1.555 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.237, 0.958), stdev = 0.404
[info]   CI (99.9%): [≈ 0, 1.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.129 ±(99.9%) 0.846 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.129, 0.521), stdev = 0.220
[info]   CI (99.9%): [≈ 0, 0.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 8.000), stdev = 1.225
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:27:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2123299.012 ops/s
[info] # Warmup Iteration   2: 15620207.501 ops/s
[info] # Warmup Iteration   3: 20374444.121 ops/s
[info] Iteration   1: 19825665.597 ops/s
[info]                  ·gc.alloc.rate:                   1033.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 19942699.384 ops/s
[info]                  ·gc.alloc.rate:                   1041.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 20231805.049 ops/s
[info]                  ·gc.alloc.rate:                   1059.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.318 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 20194000.731 ops/s
[info]                  ·gc.alloc.rate:                   1059.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 20200098.521 ops/s
[info]                  ·gc.alloc.rate:               1064.691 MB/sec
[info]                  ·gc.alloc.rate.norm:          82.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 101.599 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   20078853.856 ±(99.9%) 704771.656 ops/s [Average]
[info]   (min, avg, max) = (19825665.597, 20078853.856, 20231805.049), stdev = 183026.961
[info]   CI (99.9%): [19374082.200, 20783625.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1051.793 ±(99.9%) 51.447 MB/sec [Average]
[info]   (min, avg, max) = (1033.760, 1051.793, 1064.691), stdev = 13.361
[info]   CI (99.9%): [1000.346, 1103.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   82.433 ±(99.9%) 1.320 B/op [Average]
[info]   (min, avg, max) = (82.060, 82.433, 82.951), stdev = 0.343
[info]   CI (99.9%): [81.113, 83.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1047.778 ±(99.9%) 551.682 MB/sec [Average]
[info]   (min, avg, max) = (980.959, 1047.778, 1304.039), stdev = 143.270
[info]   CI (99.9%): [496.096, 1599.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   82.096 ±(99.9%) 42.058 B/op [Average]
[info]   (min, avg, max) = (76.425, 82.096, 101.599), stdev = 10.922
[info]   CI (99.9%): [40.038, 124.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 6.936 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.862, 4.083), stdev = 1.801
[info]   CI (99.9%): [≈ 0, 7.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.067 ±(99.9%) 0.539 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.318), stdev = 0.140
[info]   CI (99.9%): [≈ 0, 0.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 11.000), stdev = 2.793
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:27:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1637273.028 ops/s
[info] # Warmup Iteration   2: 17649299.553 ops/s
[info] # Warmup Iteration   3: 20258005.913 ops/s
[info] Iteration   1: 20272100.379 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 20249946.034 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 20099625.309 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 20220391.469 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 20213517.698 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   20211116.178 ±(99.9%) 256500.600 ops/s [Average]
[info]   (min, avg, max) = (20099625.309, 20211116.178, 20272100.379), stdev = 66612.391
[info]   CI (99.9%): [19954615.578, 20467616.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:27:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9404.420 ops/s
[info] # Warmup Iteration   2: 372869.538 ops/s
[info] # Warmup Iteration   3: 993784.734 ops/s
[info] Iteration   1: 1068619.809 ops/s
[info]                  ·gc.alloc.rate:                   2494.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              3673.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2621.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3860.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.259 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.326 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 1077361.824 ops/s
[info]                  ·gc.alloc.rate:                   2501.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              3654.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2300.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3361.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1068511.812 ops/s
[info]                  ·gc.alloc.rate:                   2522.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              3713.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2657.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3912.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1017996.650 ops/s
[info]                  ·gc.alloc.rate:                   2389.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              3693.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3108.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1051408.724 ops/s
[info]                  ·gc.alloc.rate:                   2490.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              3726.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4030.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   1056779.764 ±(99.9%) 91009.438 ops/s [Average]
[info]   (min, avg, max) = (1017996.650, 1056779.764, 1077361.824), stdev = 23634.862
[info]   CI (99.9%): [965770.325, 1147789.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2479.631 ±(99.9%) 200.389 MB/sec [Average]
[info]   (min, avg, max) = (2389.180, 2479.631, 2522.460), stdev = 52.040
[info]   CI (99.9%): [2279.242, 2680.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3692.225 ±(99.9%) 112.161 B/op [Average]
[info]   (min, avg, max) = (3654.288, 3692.225, 3726.115), stdev = 29.128
[info]   CI (99.9%): [3580.064, 3804.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2456.884 ±(99.9%) 1134.443 MB/sec [Average]
[info]   (min, avg, max) = (2010.531, 2456.884, 2694.218), stdev = 294.611
[info]   CI (99.9%): [1322.441, 3591.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3654.592 ±(99.9%) 1534.102 B/op [Average]
[info]   (min, avg, max) = (3108.238, 3654.592, 4030.615), stdev = 398.401
[info]   CI (99.9%): [2120.490, 5188.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.502 ±(99.9%) 3.783 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.502, 2.259), stdev = 0.982
[info]   CI (99.9%): [≈ 0, 4.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.740 ±(99.9%) 5.570 B/op [Average]
[info]   (min, avg, max) = (0.061, 0.740, 3.326), stdev = 1.447
[info]   CI (99.9%): [≈ 0, 6.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.600, 17.000), stdev = 3.050
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:27:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103185.895 ops/s
[info] # Warmup Iteration   2: 2248308.457 ops/s
[info] # Warmup Iteration   3: 3690911.188 ops/s
[info] Iteration   1: 3755696.808 ops/s
[info]                  ·gc.alloc.rate:                   3648.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              1528.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3581.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1500.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 3892028.200 ops/s
[info]                  ·gc.alloc.rate:                   3824.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              1546.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3650.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1476.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 3908691.756 ops/s
[info]                  ·gc.alloc.rate:                   3849.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              1549.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3700.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1490.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 3863937.233 ops/s
[info]                  ·gc.alloc.rate:                   3801.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              1548.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3726.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1517.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 3947760.184 ops/s
[info]                  ·gc.alloc.rate:                   3881.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              1547.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3736.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1489.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   3873622.836 ±(99.9%) 279439.057 ops/s [Average]
[info]   (min, avg, max) = (3755696.808, 3873622.836, 3947760.184), stdev = 72569.436
[info]   CI (99.9%): [3594183.779, 4153061.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   3801.116 ±(99.9%) 347.410 MB/sec [Average]
[info]   (min, avg, max) = (3648.712, 3801.116, 3881.504), stdev = 90.221
[info]   CI (99.9%): [3453.705, 4148.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1544.268 ±(99.9%) 33.283 B/op [Average]
[info]   (min, avg, max) = (1528.968, 1544.268, 1549.932), stdev = 8.644
[info]   CI (99.9%): [1510.985, 1577.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3679.101 ±(99.9%) 245.944 MB/sec [Average]
[info]   (min, avg, max) = (3581.758, 3679.101, 3736.742), stdev = 63.871
[info]   CI (99.9%): [3433.157, 3925.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1494.904 ±(99.9%) 59.712 B/op [Average]
[info]   (min, avg, max) = (1476.058, 1494.904, 1517.723), stdev = 15.507
[info]   CI (99.9%): [1435.191, 1554.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.100 ±(99.9%) 0.418 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.100, 0.291), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.176 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.041, 0.122), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   55.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.000, 11.000), stdev = 0.001
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 15.000), stdev = 1.000
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:26:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.547 ops/s
[info] # Warmup Iteration   2: 9556137.004 ops/s
[info] # Warmup Iteration   3: 10675555.905 ops/s
[info] Iteration   1: 11161333.106 ops/s
[info]                  ·gc.alloc.rate:                   1431.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              201.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1285.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 11667909.826 ops/s
[info]                  ·gc.alloc.rate:                   1467.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1616.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 11676087.615 ops/s
[info]                  ·gc.alloc.rate:                   1452.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              195.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 11527722.286 ops/s
[info]                  ·gc.alloc.rate:                   1438.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11668144.588 ops/s
[info]                  ·gc.alloc.rate:                   1462.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   11540239.484 ±(99.9%) 849852.186 ops/s [Average]
[info]   (min, avg, max) = (11161333.106, 11540239.484, 11676087.615), stdev = 220703.914
[info]   CI (99.9%): [10690387.298, 12390091.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1450.564 ±(99.9%) 59.231 MB/sec [Average]
[info]   (min, avg, max) = (1431.349, 1450.564, 1467.287), stdev = 15.382
[info]   CI (99.9%): [1391.333, 1509.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   197.847 ±(99.9%) 9.102 B/op [Average]
[info]   (min, avg, max) = (195.795, 197.847, 201.825), stdev = 2.364
[info]   CI (99.9%): [188.744, 206.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1371.045 ±(99.9%) 532.501 MB/sec [Average]
[info]   (min, avg, max) = (1285.462, 1371.045, 1616.794), stdev = 138.289
[info]   CI (99.9%): [838.543, 1903.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   186.904 ±(99.9%) 67.394 B/op [Average]
[info]   (min, avg, max) = (176.168, 186.904, 218.035), stdev = 17.502
[info]   CI (99.9%): [119.510, 254.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.007, 0.011), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:27:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47090.034 ops/s
[info] # Warmup Iteration   2: 2770323.862 ops/s
[info] # Warmup Iteration   3: 3498735.019 ops/s
[info] Iteration   1: 3773444.096 ops/s
[info]                  ·gc.alloc.rate:                   2297.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              958.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     956.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.278 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3819001.925 ops/s
[info]                  ·gc.alloc.rate:                   2309.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              951.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2318.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     955.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3814771.051 ops/s
[info]                  ·gc.alloc.rate:               2328.869 MB/sec
[info]                  ·gc.alloc.rate.norm:          960.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 827.228 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 3785997.154 ops/s
[info]                  ·gc.alloc.rate:                   2325.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              966.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     979.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3699603.923 ops/s
[info]                  ·gc.alloc.rate:                   2270.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              965.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     862.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3778563.630 ±(99.9%) 185294.963 ops/s [Average]
[info]   (min, avg, max) = (3699603.923, 3778563.630, 3819001.925), stdev = 48120.513
[info]   CI (99.9%): [3593268.667, 3963858.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2306.515 ±(99.9%) 91.663 MB/sec [Average]
[info]   (min, avg, max) = (2270.479, 2306.515, 2328.869), stdev = 23.805
[info]   CI (99.9%): [2214.852, 2398.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   960.746 ±(99.9%) 23.363 B/op [Average]
[info]   (min, avg, max) = (951.956, 960.746, 966.884), stdev = 6.067
[info]   CI (99.9%): [937.383, 984.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2200.288 ±(99.9%) 651.883 MB/sec [Average]
[info]   (min, avg, max) = (2005.101, 2200.288, 2355.819), stdev = 169.292
[info]   CI (99.9%): [1548.405, 2852.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   916.314 ±(99.9%) 257.905 B/op [Average]
[info]   (min, avg, max) = (827.228, 916.314, 979.330), stdev = 66.977
[info]   CI (99.9%): [658.409, 1174.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.192 ±(99.9%) 1.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.192, 0.666), stdev = 0.274
[info]   CI (99.9%): [≈ 0, 1.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.080 ±(99.9%) 0.439 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.080, 0.278), stdev = 0.114
[info]   CI (99.9%): [≈ 0, 0.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 11.000), stdev = 0.894
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:27:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3809333.639 ops/s
[info] # Warmup Iteration   2: 12908563.817 ops/s
[info] # Warmup Iteration   3: 14575508.199 ops/s
[info] Iteration   1: 13997119.912 ops/s
[info]                  ·gc.alloc.rate:                   1879.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              211.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.656 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.411 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 14160116.902 ops/s
[info]                  ·gc.alloc.rate:                   1847.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              205.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     182.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 14106668.929 ops/s
[info]                  ·gc.alloc.rate:                   1840.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              205.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 14528718.012 ops/s
[info]                  ·gc.alloc.rate:                   1885.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              204.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 14573123.148 ops/s
[info]                  ·gc.alloc.rate:                   1931.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   14273149.381 ±(99.9%) 1004095.434 ops/s [Average]
[info]   (min, avg, max) = (13997119.912, 14273149.381, 14573123.148), stdev = 260760.395
[info]   CI (99.9%): [13269053.947, 15277244.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1877.119 ±(99.9%) 139.988 MB/sec [Average]
[info]   (min, avg, max) = (1840.397, 1877.119, 1931.895), stdev = 36.354
[info]   CI (99.9%): [1737.131, 2017.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   206.992 ±(99.9%) 11.236 B/op [Average]
[info]   (min, avg, max) = (204.287, 206.992, 211.321), stdev = 2.918
[info]   CI (99.9%): [195.756, 218.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1853.462 ±(99.9%) 712.000 MB/sec [Average]
[info]   (min, avg, max) = (1642.663, 1853.462, 2006.256), stdev = 184.904
[info]   CI (99.9%): [1141.461, 2565.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   204.481 ±(99.9%) 82.345 B/op [Average]
[info]   (min, avg, max) = (179.823, 204.481, 222.760), stdev = 21.385
[info]   CI (99.9%): [122.135, 286.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.781 ±(99.9%) 6.189 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.781, 3.656), stdev = 1.607
[info]   CI (99.9%): [≈ 0, 6.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.088 ±(99.9%) 0.696 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.088, 0.411), stdev = 0.181
[info]   CI (99.9%): [≈ 0, 0.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 13.000), stdev = 2.793
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:26:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11461.139 ops/s
[info] # Warmup Iteration   2: 731138.045 ops/s
[info] # Warmup Iteration   3: 1702756.328 ops/s
[info] Iteration   1: 1813166.893 ops/s
[info]                  ·gc.alloc.rate:                   3108.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              2698.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2948.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2559.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.705 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1815335.560 ops/s
[info]                  ·gc.alloc.rate:                   3136.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              2718.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3307.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2866.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1800109.977 ops/s
[info]                  ·gc.alloc.rate:                   3130.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              2736.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3013.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2634.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 1746002.612 ops/s
[info]                  ·gc.alloc.rate:                   3034.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              2734.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2433.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1767735.762 ops/s
[info]                  ·gc.alloc.rate:                   3077.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              2740.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3050.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2715.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1788470.161 ±(99.9%) 117121.809 ops/s [Average]
[info]   (min, avg, max) = (1746002.612, 1788470.161, 1815335.560), stdev = 30416.162
[info]   CI (99.9%): [1671348.352, 1905591.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3097.327 ±(99.9%) 162.053 MB/sec [Average]
[info]   (min, avg, max) = (3034.173, 3097.327, 3136.104), stdev = 42.085
[info]   CI (99.9%): [2935.274, 3259.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   2725.578 ±(99.9%) 67.551 B/op [Average]
[info]   (min, avg, max) = (2698.076, 2725.578, 2740.063), stdev = 17.543
[info]   CI (99.9%): [2658.028, 2793.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3003.913 ±(99.9%) 839.825 MB/sec [Average]
[info]   (min, avg, max) = (2699.421, 3003.913, 3307.660), stdev = 218.100
[info]   CI (99.9%): [2164.088, 3843.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2641.950 ±(99.9%) 628.269 B/op [Average]
[info]   (min, avg, max) = (2433.153, 2641.950, 2866.873), stdev = 163.160
[info]   CI (99.9%): [2013.680, 3270.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.200 ±(99.9%) 1.319 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.200, 0.812), stdev = 0.343
[info]   CI (99.9%): [≈ 0, 1.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.174 ±(99.9%) 1.144 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.174, 0.705), stdev = 0.297
[info]   CI (99.9%): [≈ 0, 1.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   45.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 10.000), stdev = 0.707
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 14.000, 15.000), stdev = 1.225
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:26:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 147938.644 ops/s
[info] # Warmup Iteration   2: 2344876.799 ops/s
[info] # Warmup Iteration   3: 4958230.864 ops/s
[info] Iteration   1: 5111181.406 ops/s
[info]                  ·gc.alloc.rate:                   2557.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              787.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2617.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     805.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.203 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.678 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 5018842.191 ops/s
[info]                  ·gc.alloc.rate:                   2514.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              788.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     722.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 5193926.408 ops/s
[info]                  ·gc.alloc.rate:                   2639.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              799.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2650.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     803.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 5072305.442 ops/s
[info]                  ·gc.alloc.rate:                   2574.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              798.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2340.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     726.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 5210007.777 ops/s
[info]                  ·gc.alloc.rate:                   2650.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              800.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     814.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   5121252.645 ±(99.9%) 311308.005 ops/s [Average]
[info]   (min, avg, max) = (5018842.191, 5121252.645, 5210007.777), stdev = 80845.700
[info]   CI (99.9%): [4809944.640, 5432560.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2587.303 ±(99.9%) 220.156 MB/sec [Average]
[info]   (min, avg, max) = (2514.303, 2587.303, 2650.356), stdev = 57.174
[info]   CI (99.9%): [2367.147, 2807.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   795.052 ±(99.9%) 25.162 B/op [Average]
[info]   (min, avg, max) = (787.430, 795.052, 800.609), stdev = 6.535
[info]   CI (99.9%): [769.890, 820.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2521.510 ±(99.9%) 710.417 MB/sec [Average]
[info]   (min, avg, max) = (2303.586, 2521.510, 2695.356), stdev = 184.493
[info]   CI (99.9%): [1811.093, 3231.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   774.381 ±(99.9%) 176.658 B/op [Average]
[info]   (min, avg, max) = (722.362, 774.381, 814.202), stdev = 45.878
[info]   CI (99.9%): [597.723, 951.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.470 ±(99.9%) 3.733 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.470, 2.203), stdev = 0.969
[info]   CI (99.9%): [≈ 0, 4.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.145 ±(99.9%) 1.149 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.145, 0.678), stdev = 0.298
[info]   CI (99.9%): [≈ 0, 1.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.600, 15.000), stdev = 2.074
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:26:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.590 ops/s
[info] # Warmup Iteration   2: 20141030.610 ops/s
[info] # Warmup Iteration   3: 23318924.229 ops/s
[info] Iteration   1: 23557075.854 ops/s
[info]                  ·gc.alloc.rate:               746.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65.290 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 24142675.223 ops/s
[info]                  ·gc.alloc.rate:                   754.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 24412199.984 ops/s
[info]                  ·gc.alloc.rate:                   766.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 23565674.273 ops/s
[info]                  ·gc.alloc.rate:                   737.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 24352945.776 ops/s
[info]                  ·gc.alloc.rate:                   775.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              50.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.181 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.335 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   24006114.222 ±(99.9%) 1610229.399 ops/s [Average]
[info]   (min, avg, max) = (23557075.854, 24006114.222, 24412199.984), stdev = 418171.461
[info]   CI (99.9%): [22395884.823, 25616343.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   756.052 ±(99.9%) 58.773 MB/sec [Average]
[info]   (min, avg, max) = (737.251, 756.052, 775.402), stdev = 15.263
[info]   CI (99.9%): [697.280, 814.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   49.562 ±(99.9%) 1.514 B/op [Average]
[info]   (min, avg, max) = (49.213, 49.562, 50.090), stdev = 0.393
[info]   CI (99.9%): [48.048, 51.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   782.822 ±(99.9%) 685.910 MB/sec [Average]
[info]   (min, avg, max) = (652.187, 782.822, 978.652), stdev = 178.129
[info]   CI (99.9%): [96.912, 1468.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   51.347 ±(99.9%) 45.512 B/op [Average]
[info]   (min, avg, max) = (42.089, 51.347, 65.290), stdev = 11.819
[info]   CI (99.9%): [5.835, 96.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.045 ±(99.9%) 8.902 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.045, 5.181), stdev = 2.312
[info]   CI (99.9%): [≈ 0, 9.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.575 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.068, 0.335), stdev = 0.149
[info]   CI (99.9%): [≈ 0, 0.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 11.000), stdev = 1.517
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:26:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 336317.195 ops/s
[info] # Warmup Iteration   2: 9121146.439 ops/s
[info] # Warmup Iteration   3: 9562612.014 ops/s
[info] Iteration   1: 11071070.231 ops/s
[info]                  ·gc.alloc.rate:               349.303 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.695 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 11243542.719 ops/s
[info]                  ·gc.alloc.rate:               350.835 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.131 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 10836950.050 ops/s
[info]                  ·gc.alloc.rate:                   342.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.728 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 10895928.942 ops/s
[info]                  ·gc.alloc.rate:               339.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.715 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 11112979.815 ops/s
[info]                  ·gc.alloc.rate:                   361.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              51.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   11032094.352 ±(99.9%) 636796.585 ops/s [Average]
[info]   (min, avg, max) = (10836950.050, 11032094.352, 11243542.719), stdev = 165374.051
[info]   CI (99.9%): [10395297.767, 11668890.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   348.575 ±(99.9%) 32.504 MB/sec [Average]
[info]   (min, avg, max) = (339.267, 348.575, 361.030), stdev = 8.441
[info]   CI (99.9%): [316.072, 381.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   49.720 ±(99.9%) 3.264 B/op [Average]
[info]   (min, avg, max) = (48.998, 49.720, 51.119), stdev = 0.848
[info]   CI (99.9%): [46.456, 52.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   322.663 ±(99.9%) 3.291 MB/sec [Average]
[info]   (min, avg, max) = (321.420, 322.663, 323.478), stdev = 0.855
[info]   CI (99.9%): [319.372, 325.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   46.034 ±(99.9%) 2.772 B/op [Average]
[info]   (min, avg, max) = (45.131, 46.034, 46.824), stdev = 0.720
[info]   CI (99.9%): [43.262, 48.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:26:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5784305.053 ops/s
[info] # Warmup Iteration   2: 27661098.241 ops/s
[info] # Warmup Iteration   3: 33585225.822 ops/s
[info] Iteration   1: 34777704.448 ops/s
[info]                  ·gc.alloc.rate:                   1090.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 34444192.307 ops/s
[info]                  ·gc.alloc.rate:                   1084.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 34365661.996 ops/s
[info]                  ·gc.alloc.rate:                   1081.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 35059820.075 ops/s
[info]                  ·gc.alloc.rate:                   1101.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 33610024.795 ops/s
[info]                  ·gc.alloc.rate:               1097.930 MB/sec
[info]                  ·gc.alloc.rate.norm:          51.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.856 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   34451480.724 ±(99.9%) 2102011.412 ops/s [Average]
[info]   (min, avg, max) = (33610024.795, 34451480.724, 35059820.075), stdev = 545885.689
[info]   CI (99.9%): [32349469.312, 36553492.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1091.094 ±(99.9%) 33.010 MB/sec [Average]
[info]   (min, avg, max) = (1081.020, 1091.094, 1101.338), stdev = 8.572
[info]   CI (99.9%): [1058.085, 1124.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49.838 ±(99.9%) 3.395 B/op [Average]
[info]   (min, avg, max) = (49.347, 49.838, 51.412), stdev = 0.882
[info]   CI (99.9%): [46.443, 53.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1047.924 ±(99.9%) 566.197 MB/sec [Average]
[info]   (min, avg, max) = (979.275, 1047.924, 1310.918), stdev = 147.040
[info]   CI (99.9%): [481.727, 1614.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   47.863 ±(99.9%) 25.846 B/op [Average]
[info]   (min, avg, max) = (44.018, 47.863, 59.805), stdev = 6.712
[info]   CI (99.9%): [22.017, 73.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.836 ±(99.9%) 6.939 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.836, 4.060), stdev = 1.802
[info]   CI (99.9%): [≈ 0, 7.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.318 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.186), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 15.000), stdev = 4.561
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:25:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5391605.610 ops/s
[info] # Warmup Iteration   2: 30562391.039 ops/s
[info] # Warmup Iteration   3: 39540017.969 ops/s
[info] Iteration   1: 39524938.996 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 39395782.262 ops/s
[info]                  ·gc.alloc.rate:      0.849 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.034 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 39511302.845 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 39530390.717 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 39493265.163 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   39491135.997 ±(99.9%) 212546.700 ops/s [Average]
[info]   (min, avg, max) = (39395782.262, 39491135.997, 39530390.717), stdev = 55197.703
[info]   CI (99.9%): [39278589.296, 39703682.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.170 ±(99.9%) 1.461 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.170, 0.849), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.007 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.007, 0.034), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:25:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36063.632 ops/s
[info] # Warmup Iteration   2: 1132395.165 ops/s
[info] # Warmup Iteration   3: 2117669.948 ops/s
[info] Iteration   1: 2303712.361 ops/s
[info]                  ·gc.alloc.rate:                   3260.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              2227.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2934.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2004.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.341 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2287395.628 ops/s
[info]                  ·gc.alloc.rate:                   3237.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              2227.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3296.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2268.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 2270243.981 ops/s
[info]                  ·gc.alloc.rate:                   3246.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              2250.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3008.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2086.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 2274286.393 ops/s
[info]                  ·gc.alloc.rate:                   3267.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              2260.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3373.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2334.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 2261781.967 ops/s
[info]                  ·gc.alloc.rate:                   3237.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              2252.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2123.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   2279484.066 ±(99.9%) 63136.541 ops/s [Average]
[info]   (min, avg, max) = (2261781.967, 2279484.066, 2303712.361), stdev = 16396.359
[info]   CI (99.9%): [2216347.525, 2342620.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3249.930 ±(99.9%) 52.147 MB/sec [Average]
[info]   (min, avg, max) = (3237.322, 3249.930, 3267.106), stdev = 13.543
[info]   CI (99.9%): [3197.782, 3302.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2243.964 ±(99.9%) 58.718 B/op [Average]
[info]   (min, avg, max) = (2227.788, 2243.964, 2260.978), stdev = 15.249
[info]   CI (99.9%): [2185.246, 2302.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3133.073 ±(99.9%) 736.868 MB/sec [Average]
[info]   (min, avg, max) = (2934.469, 3133.073, 3373.958), stdev = 191.362
[info]   CI (99.9%): [2396.205, 3869.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2163.426 ±(99.9%) 521.028 B/op [Average]
[info]   (min, avg, max) = (2004.764, 2163.426, 2334.924), stdev = 135.309
[info]   CI (99.9%): [1642.398, 2684.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.137 ±(99.9%) 0.783 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.137, 0.500), stdev = 0.203
[info]   CI (99.9%): [≈ 0, 0.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.094 ±(99.9%) 0.534 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.094, 0.341), stdev = 0.139
[info]   CI (99.9%): [≈ 0, 0.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 15.000), stdev = 0.707
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:25:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35340.362 ops/s
[info] # Warmup Iteration   2: 333938.767 ops/s
[info] # Warmup Iteration   3: 348941.024 ops/s
[info] Iteration   1: 375599.179 ops/s
[info]                  ·gc.alloc.rate:                   2220.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              9302.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1946.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8152.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.660 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 376136.016 ops/s
[info]                  ·gc.alloc.rate:                   2218.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              9280.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2277.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9527.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.460 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.290 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 374496.005 ops/s
[info]                  ·gc.alloc.rate:                   2232.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              9383.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9596.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 375119.444 ops/s
[info]                  ·gc.alloc.rate:                   2237.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              9386.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8286.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 387297.717 ops/s
[info]                  ·gc.alloc.rate:                   2321.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              9432.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2329.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9466.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   377729.672 ±(99.9%) 20727.065 ops/s [Average]
[info]   (min, avg, max) = (374496.005, 377729.672, 387297.717), stdev = 5382.753
[info]   CI (99.9%): [357002.607, 398456.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2246.066 ±(99.9%) 164.310 MB/sec [Average]
[info]   (min, avg, max) = (2218.636, 2246.066, 2321.106), stdev = 42.671
[info]   CI (99.9%): [2081.755, 2410.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9357.054 ±(99.9%) 243.744 B/op [Average]
[info]   (min, avg, max) = (9280.847, 9357.054, 9432.447), stdev = 63.300
[info]   CI (99.9%): [9113.310, 9600.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2162.380 ±(99.9%) 714.267 MB/sec [Average]
[info]   (min, avg, max) = (1946.261, 2162.380, 2329.541), stdev = 185.493
[info]   CI (99.9%): [1448.113, 2876.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9006.012 ±(99.9%) 2775.360 B/op [Average]
[info]   (min, avg, max) = (8152.704, 9006.012, 9596.592), stdev = 720.752
[info]   CI (99.9%): [6230.652, 11781.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.679 ±(99.9%) 4.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.679, 2.460), stdev = 1.062
[info]   CI (99.9%): [≈ 0, 4.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.842 ±(99.9%) 17.104 B/op [Average]
[info]   (min, avg, max) = (0.085, 2.842, 10.290), stdev = 4.442
[info]   CI (99.9%): [≈ 0, 19.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.200, 16.000), stdev = 4.025
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:25:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40702.603 ops/s
[info] # Warmup Iteration   2: 634077.921 ops/s
[info] # Warmup Iteration   3: 750435.214 ops/s
[info] Iteration   1: 922893.932 ops/s
[info]                  ·gc.alloc.rate:                   777.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              1325.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1095.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.630 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.486 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 918224.255 ops/s
[info]                  ·gc.alloc.rate:                   788.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              1350.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1659.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 924529.881 ops/s
[info]                  ·gc.alloc.rate:               786.385 MB/sec
[info]                  ·gc.alloc.rate.norm:          1338.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1103.393 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 942204.821 ops/s
[info]                  ·gc.alloc.rate:                   802.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              1340.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1087.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.661 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 920380.885 ops/s
[info]                  ·gc.alloc.rate:                   786.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              1345.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1677.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   925646.755 ±(99.9%) 36824.413 ops/s [Average]
[info]   (min, avg, max) = (918224.255, 925646.755, 942204.821), stdev = 9563.183
[info]   CI (99.9%): [888822.342, 962471.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   788.185 ±(99.9%) 34.764 MB/sec [Average]
[info]   (min, avg, max) = (777.256, 788.185, 802.371), stdev = 9.028
[info]   CI (99.9%): [753.421, 822.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1340.136 ±(99.9%) 36.411 B/op [Average]
[info]   (min, avg, max) = (1325.544, 1340.136, 1350.925), stdev = 9.456
[info]   CI (99.9%): [1303.725, 1376.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   778.076 ±(99.9%) 691.289 MB/sec [Average]
[info]   (min, avg, max) = (642.119, 778.076, 981.002), stdev = 179.525
[info]   CI (99.9%): [86.788, 1469.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1324.528 ±(99.9%) 1209.671 B/op [Average]
[info]   (min, avg, max) = (1087.103, 1324.528, 1677.424), stdev = 314.148
[info]   CI (99.9%): [114.857, 2534.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.634 ±(99.9%) 4.337 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.634, 2.630), stdev = 1.126
[info]   CI (99.9%): [≈ 0, 4.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.079 ±(99.9%) 7.399 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.079, 4.486), stdev = 1.921
[info]   CI (99.9%): [≈ 0, 8.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:25:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 671061.903 ops/s
[info] # Warmup Iteration   2: 1583023.880 ops/s
[info] # Warmup Iteration   3: 1695568.212 ops/s
[info] Iteration   1: 1672079.923 ops/s
[info]                  ·gc.alloc.rate:                   1161.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              1092.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1239.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1720789.038 ops/s
[info]                  ·gc.alloc.rate:                   1170.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              1070.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     904.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.763 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1723940.653 ops/s
[info]                  ·gc.alloc.rate:                   1175.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              1073.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1198.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.874 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1709487.189 ops/s
[info]                  ·gc.alloc.rate:                   1186.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              1092.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     903.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1727315.224 ops/s
[info]                  ·gc.alloc.rate:               1180.093 MB/sec
[info]                  ·gc.alloc.rate.norm:          1075.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1311.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1194.852 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1710722.406 ±(99.9%) 87090.720 ops/s [Average]
[info]   (min, avg, max) = (1672079.923, 1710722.406, 1727315.224), stdev = 22617.184
[info]   CI (99.9%): [1623631.685, 1797813.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1174.716 ±(99.9%) 36.913 MB/sec [Average]
[info]   (min, avg, max) = (1161.011, 1174.716, 1186.136), stdev = 9.586
[info]   CI (99.9%): [1137.803, 1211.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1080.787 ±(99.9%) 41.493 B/op [Average]
[info]   (min, avg, max) = (1070.435, 1080.787, 1092.845), stdev = 10.776
[info]   CI (99.9%): [1039.295, 1122.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1182.271 ±(99.9%) 692.732 MB/sec [Average]
[info]   (min, avg, max) = (981.238, 1182.271, 1316.944), stdev = 179.900
[info]   CI (99.9%): [489.539, 1875.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1088.140 ±(99.9%) 650.578 B/op [Average]
[info]   (min, avg, max) = (903.386, 1088.140, 1239.623), stdev = 168.953
[info]   CI (99.9%): [437.563, 1738.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 5.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.021), stdev = 1.305
[info]   CI (99.9%): [≈ 0, 5.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.735 ±(99.9%) 4.596 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.735, 2.763), stdev = 1.193
[info]   CI (99.9%): [≈ 0, 5.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 14.000), stdev = 4.037
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:24:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10580.357 ops/s
[info] # Warmup Iteration   2: 138468.154 ops/s
[info] # Warmup Iteration   3: 183018.115 ops/s
[info] Iteration   1: 209191.843 ops/s
[info]                  ·gc.alloc.rate:                   3830.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              28815.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3584.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26963.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.253 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 213372.882 ops/s
[info]                  ·gc.alloc.rate:                   3902.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              28785.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3987.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29412.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.614 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 218339.986 ops/s
[info]                  ·gc.alloc.rate:                   4036.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              29095.333 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3706.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26712.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 206204.589 ops/s
[info]                  ·gc.alloc.rate:                        3754.556 MB/sec
[info]                  ·gc.alloc.rate.norm:                   28657.257 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.016 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.121 B/op
[info]                  ·gc.churn.Metaspace:                   0.045 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:               3694.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          28196.616 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  3.516 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             26.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      1.907 B/op
[info]                  ·gc.count:                             12.000 counts
[info]                  ·gc.time:                              57.000 ms
[info] Iteration   5: 211579.300 ops/s
[info]                  ·gc.alloc.rate:                   3904.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              29039.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3738.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27804.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   211737.720 ±(99.9%) 17581.236 ops/s [Average]
[info]   (min, avg, max) = (206204.589, 211737.720, 218339.986), stdev = 4565.791
[info]   CI (99.9%): [194156.484, 229318.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3885.771 ±(99.9%) 402.389 MB/sec [Average]
[info]   (min, avg, max) = (3754.556, 3885.771, 4036.946), stdev = 104.499
[info]   CI (99.9%): [3483.382, 4288.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   28878.560 ±(99.9%) 706.344 B/op [Average]
[info]   (min, avg, max) = (28657.257, 28878.560, 29095.333), stdev = 183.435
[info]   CI (99.9%): [28172.217, 29584.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.027 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.016), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.024 ±(99.9%) 0.208 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.121), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.Metaspace":
[info]   0.009 ±(99.9%) 0.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.045), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.Metaspace.norm":
[info]   0.069 ±(99.9%) 0.595 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.069, 0.345), stdev = 0.154
[info]   CI (99.9%): [≈ 0, 0.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3742.128 ±(99.9%) 572.872 MB/sec [Average]
[info]   (min, avg, max) = (3584.723, 3742.128, 3987.403), stdev = 148.773
[info]   CI (99.9%): [3169.255, 4315.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   27817.870 ±(99.9%) 4147.337 B/op [Average]
[info]   (min, avg, max) = (26712.223, 27817.870, 29412.782), stdev = 1077.050
[info]   CI (99.9%): [23670.533, 31965.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Old_Gen":
[info]   0.703 ±(99.9%) 6.055 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.703, 3.516), stdev = 1.572
[info]   CI (99.9%): [≈ 0, 6.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   5.367 ±(99.9%) 46.216 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.367, 26.837), stdev = 12.002
[info]   CI (99.9%): [≈ 0, 51.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.112 ±(99.9%) 0.366 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.112, 0.250), stdev = 0.095
[info]   CI (99.9%): [≈ 0, 0.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.846 ±(99.9%) 2.803 B/op [Average]
[info]   (min, avg, max) = (0.155, 0.846, 1.907), stdev = 0.728
[info]   CI (99.9%): [≈ 0, 3.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   57.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.400, 12.000), stdev = 0.548
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   120.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 24.000, 57.000), stdev = 18.466
[info]   CI (99.9%): [120.000, 120.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:24:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97855.415 ops/s
[info] # Warmup Iteration   2: 362376.504 ops/s
[info] # Warmup Iteration   3: 404739.147 ops/s
[info] Iteration   1: 452786.498 ops/s
[info]                  ·gc.alloc.rate:                   1477.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              5136.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4564.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.998 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 459816.325 ops/s
[info]                  ·gc.alloc.rate:                   1511.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              5173.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5593.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.061 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 458470.375 ops/s
[info]                  ·gc.alloc.rate:                   1494.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              5130.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4472.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 453583.125 ops/s
[info]                  ·gc.alloc.rate:                   1497.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              5196.568 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5675.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 463743.853 ops/s
[info]                  ·gc.alloc.rate:                   1530.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              5193.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4471.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   457680.035 ±(99.9%) 17507.692 ops/s [Average]
[info]   (min, avg, max) = (452786.498, 457680.035, 463743.853), stdev = 4546.692
[info]   CI (99.9%): [440172.343, 475187.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1502.336 ±(99.9%) 75.829 MB/sec [Average]
[info]   (min, avg, max) = (1477.700, 1502.336, 1530.270), stdev = 19.693
[info]   CI (99.9%): [1426.506, 1578.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5165.925 ±(99.9%) 120.137 B/op [Average]
[info]   (min, avg, max) = (5130.210, 5165.925, 5196.568), stdev = 31.199
[info]   CI (99.9%): [5045.788, 5286.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1440.786 ±(99.9%) 683.012 MB/sec [Average]
[info]   (min, avg, max) = (1302.981, 1440.786, 1635.935), stdev = 177.376
[info]   CI (99.9%): [757.774, 2123.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4955.640 ±(99.9%) 2392.673 B/op [Average]
[info]   (min, avg, max) = (4471.742, 4955.640, 5675.531), stdev = 621.370
[info]   CI (99.9%): [2562.967, 7348.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 5.282 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.883, 3.164), stdev = 1.372
[info]   CI (99.9%): [≈ 0, 6.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.055 ±(99.9%) 18.348 B/op [Average]
[info]   (min, avg, max) = (0.071, 3.055, 10.998), stdev = 4.765
[info]   CI (99.9%): [≈ 0, 21.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 18.000), stdev = 5.263
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:24:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178662.872 ops/s
[info] # Warmup Iteration   2: 971236.571 ops/s
[info] # Warmup Iteration   3: 969314.531 ops/s
[info] Iteration   1: 961310.716 ops/s
[info]                  ·gc.alloc.rate:                   633.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              1037.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1050.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.969 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.586 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1004809.144 ops/s
[info]                  ·gc.alloc.rate:                   473.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              742.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     503.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 965315.491 ops/s
[info]                  ·gc.alloc.rate:                   461.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1051.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 949141.785 ops/s
[info]                  ·gc.alloc.rate:               448.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          743.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 536.278 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1002095.458 ops/s
[info]                  ·gc.alloc.rate:               485.893 MB/sec
[info]                  ·gc.alloc.rate.norm:          763.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1017.984 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   976534.519 ±(99.9%) 97429.828 ops/s [Average]
[info]   (min, avg, max) = (949141.785, 976534.519, 1004809.144), stdev = 25302.217
[info]   CI (99.9%): [879104.691, 1073964.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   500.701 ±(99.9%) 290.710 MB/sec [Average]
[info]   (min, avg, max) = (448.639, 500.701, 633.460), stdev = 75.497
[info]   CI (99.9%): [209.991, 791.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   807.775 ±(99.9%) 494.535 B/op [Average]
[info]   (min, avg, max) = (742.115, 807.775, 1037.034), stdev = 128.429
[info]   CI (99.9%): [313.240, 1302.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   515.959 ±(99.9%) 680.375 MB/sec [Average]
[info]   (min, avg, max) = (321.421, 515.959, 648.226), stdev = 176.691
[info]   CI (99.9%): [≈ 0, 1196.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   831.975 ±(99.9%) 1099.291 B/op [Average]
[info]   (min, avg, max) = (503.430, 831.975, 1051.338), stdev = 285.483
[info]   CI (99.9%): [≈ 0, 1931.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.210 ±(99.9%) 1.635 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.210, 0.969), stdev = 0.425
[info]   CI (99.9%): [≈ 0, 1.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.344 ±(99.9%) 2.678 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.344, 1.586), stdev = 0.695
[info]   CI (99.9%): [≈ 0, 3.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 5.000), stdev = 1.581
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:24:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1425140.098 ops/s
[info] # Warmup Iteration   2: 2291033.025 ops/s
[info] # Warmup Iteration   3: 2717930.611 ops/s
[info] Iteration   1: 2753157.309 ops/s
[info]                  ·gc.alloc.rate:                   1320.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              754.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     754.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2668527.560 ops/s
[info]                  ·gc.alloc.rate:                   1283.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     777.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.347 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2772829.506 ops/s
[info]                  ·gc.alloc.rate:                   1312.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     743.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2705906.992 ops/s
[info]                  ·gc.alloc.rate:                   1315.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              764.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     760.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2740871.510 ops/s
[info]                  ·gc.alloc.rate:                   1291.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              741.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     566.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2728258.575 ±(99.9%) 159150.756 ops/s [Average]
[info]   (min, avg, max) = (2668527.560, 2728258.575, 2772829.506), stdev = 41330.946
[info]   CI (99.9%): [2569107.819, 2887409.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1304.785 ±(99.9%) 61.183 MB/sec [Average]
[info]   (min, avg, max) = (1283.954, 1304.785, 1320.388), stdev = 15.889
[info]   CI (99.9%): [1243.603, 1365.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   752.618 ±(99.9%) 36.119 B/op [Average]
[info]   (min, avg, max) = (741.532, 752.618, 764.603), stdev = 9.380
[info]   CI (99.9%): [716.499, 788.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1248.672 ±(99.9%) 562.910 MB/sec [Average]
[info]   (min, avg, max) = (987.321, 1248.672, 1319.044), stdev = 146.186
[info]   CI (99.9%): [685.761, 1811.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   720.516 ±(99.9%) 334.630 B/op [Average]
[info]   (min, avg, max) = (566.693, 720.516, 777.932), stdev = 86.902
[info]   CI (99.9%): [385.885, 1055.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.842 ±(99.9%) 6.755 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.842, 3.979), stdev = 1.754
[info]   CI (99.9%): [≈ 0, 7.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.495 ±(99.9%) 3.986 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.495, 2.347), stdev = 1.035
[info]   CI (99.9%): [≈ 0, 4.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 14.000), stdev = 4.159
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:24:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 853912.531 ops/s
[info] # Warmup Iteration   2: 2738026.563 ops/s
[info] # Warmup Iteration   3: 2764864.753 ops/s
[info] Iteration   1: 2762428.304 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2768505.343 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2771754.302 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2781930.388 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2782640.615 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2773451.790 ±(99.9%) 33634.618 ops/s [Average]
[info]   (min, avg, max) = (2762428.304, 2773451.790, 2782640.615), stdev = 8734.804
[info]   CI (99.9%): [2739817.172, 2807086.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:24:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82911.491 ops/s
[info] # Warmup Iteration   2: 423477.556 ops/s
[info] # Warmup Iteration   3: 561103.014 ops/s
[info] Iteration   1: 637551.555 ops/s
[info]                  ·gc.alloc.rate:                   1357.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              3350.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3210.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.577 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.890 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 642356.804 ops/s
[info]                  ·gc.alloc.rate:                   1231.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              3016.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3182.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.570 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.747 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 644483.070 ops/s
[info]                  ·gc.alloc.rate:                   1152.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              2813.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3152.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.930 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.713 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 661951.966 ops/s
[info]                  ·gc.alloc.rate:                   925.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              2200.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1533.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 663543.493 ops/s
[info]                  ·gc.alloc.rate:                   927.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              2199.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2296.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   649977.378 ±(99.9%) 45970.136 ops/s [Average]
[info]   (min, avg, max) = (637551.555, 649977.378, 663543.493), stdev = 11938.298
[info]   CI (99.9%): [604007.242, 695947.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1118.880 ±(99.9%) 732.739 MB/sec [Average]
[info]   (min, avg, max) = (925.707, 1118.880, 1357.813), stdev = 190.290
[info]   CI (99.9%): [386.141, 1851.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2716.207 ±(99.9%) 1958.113 B/op [Average]
[info]   (min, avg, max) = (2199.607, 2716.207, 3350.489), stdev = 508.516
[info]   CI (99.9%): [758.094, 4674.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1100.839 ±(99.9%) 1124.398 MB/sec [Average]
[info]   (min, avg, max) = (644.827, 1100.839, 1300.899), stdev = 292.003
[info]   CI (99.9%): [≈ 0, 2225.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2675.008 ±(99.9%) 2868.178 B/op [Average]
[info]   (min, avg, max) = (1533.138, 2675.008, 3210.049), stdev = 744.857
[info]   CI (99.9%): [≈ 0, 5543.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.428 ±(99.9%) 5.701 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.428, 3.570), stdev = 1.480
[info]   CI (99.9%): [≈ 0, 7.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.500 ±(99.9%) 13.967 B/op [Average]
[info]   (min, avg, max) = (0.049, 3.500, 8.747), stdev = 3.627
[info]   CI (99.9%): [≈ 0, 17.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.600, 22.000), stdev = 7.765
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:23:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4555.461 ops/s
[info] # Warmup Iteration   2: 13971.155 ops/s
[info] # Warmup Iteration   3: 15703.554 ops/s
[info] Iteration   1: 20752.714 ops/s
[info]                  ·gc.alloc.rate:                   1639.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              124321.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1798.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     136376.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.805 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 743.569 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 21615.518 ops/s
[info]                  ·gc.alloc.rate:                   1724.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              125539.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1514.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110251.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 419.562 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 21316.679 ops/s
[info]                  ·gc.alloc.rate:                   1682.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              124194.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1829.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135104.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.759 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 20517.225 ops/s
[info]                  ·gc.alloc.rate:                   1929.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              147982.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1869.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143438.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 318.781 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 20407.493 ops/s
[info]                  ·gc.alloc.rate:                   1909.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              147271.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1918.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147961.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 163.931 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   20921.926 ±(99.9%) 2013.741 ops/s [Average]
[info]   (min, avg, max) = (20407.493, 20921.926, 21615.518), stdev = 522.962
[info]   CI (99.9%): [18908.186, 22935.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1776.951 ±(99.9%) 515.076 MB/sec [Average]
[info]   (min, avg, max) = (1639.326, 1776.951, 1929.169), stdev = 133.764
[info]   CI (99.9%): [1261.874, 2292.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   133861.936 ±(99.9%) 48438.005 B/op [Average]
[info]   (min, avg, max) = (124194.988, 133861.936, 147982.579), stdev = 12579.196
[info]   CI (99.9%): [85423.931, 182299.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1786.245 ±(99.9%) 610.804 MB/sec [Average]
[info]   (min, avg, max) = (1514.219, 1786.245, 1918.889), stdev = 158.624
[info]   CI (99.9%): [1175.441, 2397.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   134626.561 ±(99.9%) 56228.487 B/op [Average]
[info]   (min, avg, max) = (110251.330, 134626.561, 147961.729), stdev = 14602.360
[info]   CI (99.9%): [78398.073, 190855.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   4.399 ±(99.9%) 14.200 MB/sec [Average]
[info]   (min, avg, max) = (0.146, 4.399, 9.805), stdev = 3.688
[info]   CI (99.9%): [≈ 0, 18.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   331.320 ±(99.9%) 1069.675 B/op [Average]
[info]   (min, avg, max) = (10.759, 331.320, 743.569), stdev = 277.791
[info]   CI (99.9%): [≈ 0, 1400.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 15.400, 27.000), stdev = 6.841
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:23:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7845.799 ops/s
[info] # Warmup Iteration   2: 29516.486 ops/s
[info] # Warmup Iteration   3: 44488.470 ops/s
[info] Iteration   1: 41308.887 ops/s
[info]                  ·gc.alloc.rate:                   1423.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              54232.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1616.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61559.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.793 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 38417.042 ops/s
[info]                  ·gc.alloc.rate:                   1330.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              54495.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53364.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.413 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.907 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 39271.373 ops/s
[info]                  ·gc.alloc.rate:                   1075.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              43112.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38816.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 101.836 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 39433.204 ops/s
[info]                  ·gc.alloc.rate:                   1077.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              42984.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38616.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.323 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 39569.145 ops/s
[info]                  ·gc.alloc.rate:                   1094.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              43545.650 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51653.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.452 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   39599.930 ±(99.9%) 4064.415 ops/s [Average]
[info]   (min, avg, max) = (38417.042, 39599.930, 41308.887), stdev = 1055.516
[info]   CI (99.9%): [35535.515, 43664.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1200.355 ±(99.9%) 634.479 MB/sec [Average]
[info]   (min, avg, max) = (1075.751, 1200.355, 1423.792), stdev = 164.772
[info]   CI (99.9%): [565.877, 1834.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   47674.057 ±(99.9%) 23532.167 B/op [Average]
[info]   (min, avg, max) = (42984.648, 47674.057, 54495.554), stdev = 6111.229
[info]   CI (99.9%): [24141.890, 71206.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1230.751 ±(99.9%) 1048.001 MB/sec [Average]
[info]   (min, avg, max) = (967.652, 1230.751, 1616.151), stdev = 272.162
[info]   CI (99.9%): [182.750, 2278.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   48802.069 ±(99.9%) 38273.048 B/op [Average]
[info]   (min, avg, max) = (38616.076, 48802.069, 61559.266), stdev = 9939.389
[info]   CI (99.9%): [10529.020, 87075.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.849 ±(99.9%) 4.258 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.849, 2.541), stdev = 1.106
[info]   CI (99.9%): [≈ 0, 5.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   34.262 ±(99.9%) 171.359 B/op [Average]
[info]   (min, avg, max) = (0.793, 34.262, 101.836), stdev = 44.502
[info]   CI (99.9%): [≈ 0, 205.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.200, 15.000), stdev = 1.643
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:23:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14578.666 ops/s
[info] # Warmup Iteration   2: 42737.664 ops/s
[info] # Warmup Iteration   3: 50015.937 ops/s
[info] Iteration   1: 43630.173 ops/s
[info]                  ·gc.alloc.rate:                   806.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              29085.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          591.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21337.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.100 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 256.105 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 48501.609 ops/s
[info]                  ·gc.alloc.rate:                   835.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              27096.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          898.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29137.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.409 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 49170.345 ops/s
[info]                  ·gc.alloc.rate:                   856.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              27422.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          909.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29106.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 149.075 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   4: 50479.337 ops/s
[info]                  ·gc.alloc.rate:                   693.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              21632.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          610.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19045.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.899 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 152.701 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 50505.777 ops/s
[info]                  ·gc.alloc.rate:                   696.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              21707.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          607.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18931.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.297 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   48457.448 ±(99.9%) 10907.665 ops/s [Average]
[info]   (min, avg, max) = (43630.173, 48457.448, 50505.777), stdev = 2832.686
[info]   CI (99.9%): [37549.783, 59365.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   777.870 ±(99.9%) 298.041 MB/sec [Average]
[info]   (min, avg, max) = (693.963, 777.870, 856.805), stdev = 77.400
[info]   CI (99.9%): [479.830, 1075.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   25389.001 ±(99.9%) 13392.158 B/op [Average]
[info]   (min, avg, max) = (21632.762, 25389.001, 29085.821), stdev = 3477.901
[info]   CI (99.9%): [11996.842, 38781.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.596 ±(99.9%) 634.571 MB/sec [Average]
[info]   (min, avg, max) = (591.522, 723.596, 909.406), stdev = 164.796
[info]   CI (99.9%): [89.025, 1358.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   23511.665 ±(99.9%) 20064.971 B/op [Average]
[info]   (min, avg, max) = (18931.411, 23511.665, 29137.919), stdev = 5210.809
[info]   CI (99.9%): [3446.694, 43576.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   3.348 ±(99.9%) 12.184 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.348, 7.100), stdev = 3.164
[info]   CI (99.9%): [≈ 0, 15.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   112.118 ±(99.9%) 423.057 B/op [Average]
[info]   (min, avg, max) = (1.297, 112.118, 256.105), stdev = 109.867
[info]   CI (99.9%): [≈ 0, 535.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   89.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 17.800, 25.000), stdev = 7.918
[info]   CI (99.9%): [89.000, 89.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:23:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3432.482 ops/s
[info] # Warmup Iteration   2: 11398.479 ops/s
[info] # Warmup Iteration   3: 39465.389 ops/s
[info] Iteration   1: 39996.678 ops/s
[info]                  ·gc.alloc.rate:                   1744.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              68653.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1614.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63540.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.638 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 36976.715 ops/s
[info]                  ·gc.alloc.rate:                   1793.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              76318.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69237.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.866 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.843 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 38366.677 ops/s
[info]                  ·gc.alloc.rate:                   1629.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              66850.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67512.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.461 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 37611.071 ops/s
[info]                  ·gc.alloc.rate:                   1588.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              66470.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69420.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.742 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 37678.067 ops/s
[info]                  ·gc.alloc.rate:                   1574.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              65754.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55787.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.478 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   38125.842 ±(99.9%) 4450.791 ops/s [Average]
[info]   (min, avg, max) = (36976.715, 38125.842, 39996.678), stdev = 1155.856
[info]   CI (99.9%): [33675.050, 42576.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1666.192 ±(99.9%) 375.605 MB/sec [Average]
[info]   (min, avg, max) = (1574.649, 1666.192, 1793.146), stdev = 97.543
[info]   CI (99.9%): [1290.587, 2041.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   68809.491 ±(99.9%) 16679.887 B/op [Average]
[info]   (min, avg, max) = (65754.652, 68809.491, 76318.793), stdev = 4331.714
[info]   CI (99.9%): [52129.603, 85489.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1576.519 ±(99.9%) 521.944 MB/sec [Average]
[info]   (min, avg, max) = (1335.954, 1576.519, 1659.066), stdev = 135.547
[info]   CI (99.9%): [1054.575, 2098.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65099.721 ±(99.9%) 22017.109 B/op [Average]
[info]   (min, avg, max) = (55787.159, 65099.721, 69420.983), stdev = 5717.773
[info]   CI (99.9%): [43082.612, 87116.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.423 ±(99.9%) 1.962 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.423, 1.084), stdev = 0.510
[info]   CI (99.9%): [≈ 0, 2.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   17.632 ±(99.9%) 81.627 B/op [Average]
[info]   (min, avg, max) = (1.638, 17.632, 44.461), stdev = 21.198
[info]   CI (99.9%): [≈ 0, 99.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:23:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7059.601 ops/s
[info] # Warmup Iteration   2: 13863.205 ops/s
[info] # Warmup Iteration   3: 28267.959 ops/s
[info] Iteration   1: 34511.061 ops/s
[info]                  ·gc.alloc.rate:                   2279.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              103960.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2231.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101737.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.304 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 241.843 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   2: 33362.864 ops/s
[info]                  ·gc.alloc.rate:                   2415.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              113913.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2541.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119818.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.521 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 33359.992 ops/s
[info]                  ·gc.alloc.rate:                   2390.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              112789.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2242.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105784.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.973 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 423.315 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 34032.135 ops/s
[info]                  ·gc.alloc.rate:                   2254.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              104257.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2272.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105082.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.776 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 35105.913 ops/s
[info]                  ·gc.alloc.rate:                   2298.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              103030.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88426.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.800 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   34074.393 ±(99.9%) 2902.796 ops/s [Average]
[info]   (min, avg, max) = (33359.992, 34074.393, 35105.913), stdev = 753.847
[info]   CI (99.9%): [31171.597, 36977.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2327.853 ±(99.9%) 273.941 MB/sec [Average]
[info]   (min, avg, max) = (2254.492, 2327.853, 2415.765), stdev = 71.142
[info]   CI (99.9%): [2053.913, 2601.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   107590.323 ±(99.9%) 20383.624 B/op [Average]
[info]   (min, avg, max) = (103030.864, 107590.323, 113913.052), stdev = 5293.562
[info]   CI (99.9%): [87206.699, 127973.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2251.867 ±(99.9%) 776.290 MB/sec [Average]
[info]   (min, avg, max) = (1972.522, 2251.867, 2541.000), stdev = 201.600
[info]   CI (99.9%): [1475.576, 3028.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   104169.978 ±(99.9%) 43141.141 B/op [Average]
[info]   (min, avg, max) = (88426.565, 104169.978, 119818.403), stdev = 11203.617
[info]   CI (99.9%): [61028.837, 147311.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.302 ±(99.9%) 14.705 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 3.302, 8.973), stdev = 3.819
[info]   CI (99.9%): [≈ 0, 18.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   154.051 ±(99.9%) 689.853 B/op [Average]
[info]   (min, avg, max) = (2.800, 154.051, 423.315), stdev = 179.153
[info]   CI (99.9%): [≈ 0, 843.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 15.600, 30.000), stdev = 8.620
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:22:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5515.749 ops/s
[info] # Warmup Iteration   2: 12741.784 ops/s
[info] # Warmup Iteration   3: 28160.153 ops/s
[info] Iteration   1: 33352.808 ops/s
[info]                  ·gc.alloc.rate:                   1862.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              87891.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1586.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74848.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.965 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 32333.185 ops/s
[info]                  ·gc.alloc.rate:                   2049.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              99741.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2255.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109763.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.267 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 31439.481 ops/s
[info]                  ·gc.alloc.rate:                   1976.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              98899.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1864.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93309.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.610 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 230.721 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   4: 33997.749 ops/s
[info]                  ·gc.alloc.rate:                   1854.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              85843.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1746.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80856.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.729 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   5: 33228.055 ops/s
[info]                  ·gc.alloc.rate:                   1822.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              86307.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1750.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82887.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.293 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 487.497 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   32870.256 ±(99.9%) 3835.055 ops/s [Average]
[info]   (min, avg, max) = (31439.481, 32870.256, 33997.749), stdev = 995.952
[info]   CI (99.9%): [29035.201, 36705.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1912.876 ±(99.9%) 369.016 MB/sec [Average]
[info]   (min, avg, max) = (1822.229, 1912.876, 2049.188), stdev = 95.832
[info]   CI (99.9%): [1543.860, 2281.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   91736.828 ±(99.9%) 26843.168 B/op [Average]
[info]   (min, avg, max) = (85843.567, 91736.828, 99741.746), stdev = 6971.086
[info]   CI (99.9%): [64893.660, 118579.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1840.450 ±(99.9%) 970.547 MB/sec [Average]
[info]   (min, avg, max) = (1586.208, 1840.450, 2255.089), stdev = 252.048
[info]   CI (99.9%): [869.902, 2810.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   88333.198 ±(99.9%) 52776.506 B/op [Average]
[info]   (min, avg, max) = (74848.886, 88333.198, 109763.731), stdev = 13705.891
[info]   CI (99.9%): [35556.692, 141109.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.101 ±(99.9%) 17.145 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.101, 10.293), stdev = 4.452
[info]   CI (99.9%): [≈ 0, 20.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   149.436 ±(99.9%) 816.142 B/op [Average]
[info]   (min, avg, max) = (1.965, 149.436, 487.497), stdev = 211.950
[info]   CI (99.9%): [≈ 0, 965.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   124.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 24.800, 36.000), stdev = 12.317
[info]   CI (99.9%): [124.000, 124.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:22:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9081.288 ops/s
[info] # Warmup Iteration   2: 17298.291 ops/s
[info] # Warmup Iteration   3: 37489.489 ops/s
[info] Iteration   1: 39513.279 ops/s
[info]                  ·gc.alloc.rate:                   2262.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              90104.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2260.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90012.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.465 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.338 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 36662.466 ops/s
[info]                  ·gc.alloc.rate:                   2042.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              87677.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1929.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82815.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      14.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 600.959 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 37717.752 ops/s
[info]                  ·gc.alloc.rate:                   2098.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              87528.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2231.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93083.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.986 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 249.643 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 40924.711 ops/s
[info]                  ·gc.alloc.rate:                   2103.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              80876.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1929.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74190.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.604 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 39285.859 ops/s
[info]                  ·gc.alloc.rate:                   2015.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              80726.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78230.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.668 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   38820.814 ±(99.9%) 6384.807 ops/s [Average]
[info]   (min, avg, max) = (36662.466, 38820.814, 40924.711), stdev = 1658.114
[info]   CI (99.9%): [32436.006, 45205.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   2104.500 ±(99.9%) 369.104 MB/sec [Average]
[info]   (min, avg, max) = (2015.179, 2104.500, 2262.308), stdev = 95.855
[info]   CI (99.9%): [1735.396, 2473.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   85382.634 ±(99.9%) 16579.510 B/op [Average]
[info]   (min, avg, max) = (80726.387, 85382.634, 90104.198), stdev = 4305.646
[info]   CI (99.9%): [68803.125, 101962.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2060.780 ±(99.9%) 653.197 MB/sec [Average]
[info]   (min, avg, max) = (1929.279, 2060.780, 2260.006), stdev = 169.633
[info]   CI (99.9%): [1407.583, 2713.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   83666.405 ±(99.9%) 30383.205 B/op [Average]
[info]   (min, avg, max) = (74190.127, 83666.405, 93083.735), stdev = 7890.422
[info]   CI (99.9%): [53283.200, 114049.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   4.328 ±(99.9%) 22.810 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 4.328, 14.000), stdev = 5.924
[info]   CI (99.9%): [≈ 0, 27.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   183.242 ±(99.9%) 979.878 B/op [Average]
[info]   (min, avg, max) = (1.668, 183.242, 600.959), stdev = 254.471
[info]   CI (99.9%): [≈ 0, 1163.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 16.000, 32.000), stdev = 9.618
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:22:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7992.744 ops/s
[info] # Warmup Iteration   2: 22863.726 ops/s
[info] # Warmup Iteration   3: 38329.591 ops/s
[info] Iteration   1: 39690.743 ops/s
[info]                  ·gc.alloc.rate:                   2259.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              89579.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2270.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90044.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.653 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 38010.593 ops/s
[info]                  ·gc.alloc.rate:                   2068.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              85630.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80621.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.444 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 390.958 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 41330.507 ops/s
[info]                  ·gc.alloc.rate:                   2050.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              78096.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1938.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73818.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.378 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 40967.701 ops/s
[info]                  ·gc.alloc.rate:                   2015.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              77412.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1949.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74881.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.997 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 40956.649 ops/s
[info]                  ·gc.alloc.rate:                   2023.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              77746.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75794.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.600 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   40191.238 ±(99.9%) 5270.036 ops/s [Average]
[info]   (min, avg, max) = (38010.593, 40191.238, 41330.507), stdev = 1368.612
[info]   CI (99.9%): [34921.202, 45461.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2083.471 ±(99.9%) 386.804 MB/sec [Average]
[info]   (min, avg, max) = (2015.076, 2083.471, 2259.080), stdev = 100.452
[info]   CI (99.9%): [1696.666, 2470.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   81692.776 ±(99.9%) 21485.763 B/op [Average]
[info]   (min, avg, max) = (77412.027, 81692.776, 89579.359), stdev = 5579.784
[info]   CI (99.9%): [60207.014, 103178.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   2015.817 ±(99.9%) 551.090 MB/sec [Average]
[info]   (min, avg, max) = (1938.578, 2015.817, 2270.816), stdev = 143.116
[info]   CI (99.9%): [1464.727, 2566.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   79032.126 ±(99.9%) 25737.159 B/op [Average]
[info]   (min, avg, max) = (73818.370, 79032.126, 90044.727), stdev = 6683.858
[info]   CI (99.9%): [53294.968, 104769.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   2.222 ±(99.9%) 15.687 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.222, 9.444), stdev = 4.074
[info]   CI (99.9%): [≈ 0, 17.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   91.317 ±(99.9%) 650.363 B/op [Average]
[info]   (min, avg, max) = (1.600, 91.317, 390.958), stdev = 168.897
[info]   CI (99.9%): [≈ 0, 741.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.800, 27.000), stdev = 8.585
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:22:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1060.228 ops/s
[info] # Warmup Iteration   2: 4187.955 ops/s
[info] # Warmup Iteration   3: 7757.245 ops/s
[info] Iteration   1: 9485.641 ops/s
[info]                  ·gc.alloc.rate:                   1291.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              214239.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216192.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.908 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 9225.890 ops/s
[info]                  ·gc.alloc.rate:                   1261.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              215105.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222316.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.288 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 731.492 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 9229.008 ops/s
[info]                  ·gc.alloc.rate:                   1257.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              214382.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220824.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.545 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9388.541 ops/s
[info]                  ·gc.alloc.rate:                   1265.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              212178.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162590.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.876 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 9399.519 ops/s
[info]                  ·gc.alloc.rate:                   1295.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              216888.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217277.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.457 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   9345.720 ±(99.9%) 440.250 ops/s [Average]
[info]   (min, avg, max) = (9225.890, 9345.720, 9485.641), stdev = 114.332
[info]   CI (99.9%): [8905.470, 9785.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1274.105 ±(99.9%) 68.535 MB/sec [Average]
[info]   (min, avg, max) = (1257.233, 1274.105, 1295.275), stdev = 17.798
[info]   CI (99.9%): [1205.570, 1342.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   214558.764 ±(99.9%) 6536.128 B/op [Average]
[info]   (min, avg, max) = (212178.328, 214558.764, 216888.116), stdev = 1697.412
[info]   CI (99.9%): [208022.636, 221094.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1233.773 ±(99.9%) 568.122 MB/sec [Average]
[info]   (min, avg, max) = (969.922, 1233.773, 1303.317), stdev = 147.540
[info]   CI (99.9%): [665.650, 1801.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   207840.336 ±(99.9%) 97879.473 B/op [Average]
[info]   (min, avg, max) = (162590.698, 207840.336, 222316.747), stdev = 25418.988
[info]   CI (99.9%): [109960.863, 305719.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.016 ±(99.9%) 7.071 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.016, 4.288), stdev = 1.836
[info]   CI (99.9%): [≈ 0, 8.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   173.056 ±(99.9%) 1206.682 B/op [Average]
[info]   (min, avg, max) = (6.908, 173.056, 731.492), stdev = 313.372
[info]   CI (99.9%): [≈ 0, 1379.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.800, 22.000), stdev = 7.530
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:22:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2542.104 ops/s
[info] # Warmup Iteration   2: 13764.136 ops/s
[info] # Warmup Iteration   3: 13264.664 ops/s
[info] Iteration   1: 15626.990 ops/s
[info]                  ·gc.alloc.rate:                   1648.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              166014.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1836.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     184979.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      37.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3781.019 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         39.000 ms
[info] Iteration   2: 21255.446 ops/s
[info]                  ·gc.alloc.rate:                   1718.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              127210.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121786.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.164 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 21874.749 ops/s
[info]                  ·gc.alloc.rate:                   1733.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              124756.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1442.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103812.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.308 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 21772.342 ops/s
[info]                  ·gc.alloc.rate:                   1884.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              136233.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2111.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152603.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.111 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 224.874 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 21268.910 ops/s
[info]                  ·gc.alloc.rate:                   1995.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              147597.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1875.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138712.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268.305 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   20359.687 ±(99.9%) 10245.625 ops/s [Average]
[info]   (min, avg, max) = (15626.990, 20359.687, 21874.749), stdev = 2660.756
[info]   CI (99.9%): [10114.062, 30605.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1796.117 ±(99.9%) 541.705 MB/sec [Average]
[info]   (min, avg, max) = (1648.617, 1796.117, 1995.156), stdev = 140.679
[info]   CI (99.9%): [1254.412, 2337.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   140362.410 ±(99.9%) 65118.784 B/op [Average]
[info]   (min, avg, max) = (124756.357, 140362.410, 166014.439), stdev = 16911.141
[info]   CI (99.9%): [75243.626, 205481.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1782.186 ±(99.9%) 970.001 MB/sec [Average]
[info]   (min, avg, max) = (1442.893, 1782.186, 2111.165), stdev = 251.906
[info]   CI (99.9%): [812.185, 2752.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   140378.931 ±(99.9%) 119062.290 B/op [Average]
[info]   (min, avg, max) = (103812.762, 140378.931, 184979.699), stdev = 30920.099
[info]   CI (99.9%): [21316.641, 259441.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   8.961 ±(99.9%) 61.830 MB/sec [Average]
[info]   (min, avg, max) = (0.074, 8.961, 37.548), stdev = 16.057
[info]   CI (99.9%): [≈ 0, 70.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   862.534 ±(99.9%) 6297.882 B/op [Average]
[info]   (min, avg, max) = (5.308, 862.534, 3781.019), stdev = 1635.540
[info]   CI (99.9%): [≈ 0, 7160.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   97.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 19.400, 39.000), stdev = 11.149
[info]   CI (99.9%): [97.000, 97.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:21:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16624.654 ops/s
[info] # Warmup Iteration   2: 36319.579 ops/s
[info] # Warmup Iteration   3: 52325.076 ops/s
[info] Iteration   1: 46082.106 ops/s
[info]                  ·gc.alloc.rate:                   1745.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              59587.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54897.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.451 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.401 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 52310.571 ops/s
[info]                  ·gc.alloc.rate:                   1678.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              50481.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1838.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55295.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.216 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 156.851 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         42.000 ms
[info] Iteration   3: 44747.019 ops/s
[info]                  ·gc.alloc.rate:                   1342.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              47203.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1206.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42409.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.646 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   4: 48313.873 ops/s
[info]                  ·gc.alloc.rate:                   1360.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              44314.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1204.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39223.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.592 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.433 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   5: 49109.604 ops/s
[info]                  ·gc.alloc.rate:                   1387.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              44471.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1533.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49155.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.570 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 146.449 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   48112.635 ±(99.9%) 11244.199 ops/s [Average]
[info]   (min, avg, max) = (44747.019, 48112.635, 52310.571), stdev = 2920.083
[info]   CI (99.9%): [36868.436, 59356.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1502.946 ±(99.9%) 743.528 MB/sec [Average]
[info]   (min, avg, max) = (1342.340, 1502.946, 1745.579), stdev = 193.092
[info]   CI (99.9%): [759.418, 2246.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   49211.729 ±(99.9%) 24334.790 B/op [Average]
[info]   (min, avg, max) = (44314.787, 49211.729, 59587.682), stdev = 6319.668
[info]   CI (99.9%): [24876.939, 73546.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1478.188 ±(99.9%) 1053.136 MB/sec [Average]
[info]   (min, avg, max) = (1204.139, 1478.188, 1838.787), stdev = 273.496
[info]   CI (99.9%): [425.052, 2531.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   48196.193 ±(99.9%) 27915.587 B/op [Average]
[info]   (min, avg, max) = (39223.135, 48196.193, 55295.804), stdev = 7249.589
[info]   CI (99.9%): [20280.607, 76111.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.536 ±(99.9%) 7.709 MB/sec [Average]
[info]   (min, avg, max) = (0.451, 3.536, 5.216), stdev = 2.002
[info]   CI (99.9%): [≈ 0, 11.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   114.756 ±(99.9%) 248.739 B/op [Average]
[info]   (min, avg, max) = (15.401, 114.756, 170.646), stdev = 64.597
[info]   CI (99.9%): [≈ 0, 363.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   148.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (22.000, 29.600, 42.000), stdev = 8.385
[info]   CI (99.9%): [148.000, 148.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:21:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30170.155 ops/s
[info] # Warmup Iteration   2: 49974.962 ops/s
[info] # Warmup Iteration   3: 56271.511 ops/s
[info] Iteration   1: 68526.887 ops/s
[info]                  ·gc.alloc.rate:                   818.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              18793.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          616.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14167.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.234 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.204 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 68197.462 ops/s
[info]                  ·gc.alloc.rate:                   786.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              18152.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:          928.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21430.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.480 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 66654.924 ops/s
[info]                  ·gc.alloc.rate:                   761.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              17970.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          626.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14785.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.530 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 67499.229 ops/s
[info]                  ·gc.alloc.rate:                   783.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              18241.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          940.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21912.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.419 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 67572.327 ops/s
[info]                  ·gc.alloc.rate:                   768.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              17886.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          629.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14669.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.238 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   67690.166 ±(99.9%) 2776.420 ops/s [Average]
[info]   (min, avg, max) = (66654.924, 67690.166, 68526.887), stdev = 721.027
[info]   CI (99.9%): [64913.746, 70466.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   783.487 ±(99.9%) 85.459 MB/sec [Average]
[info]   (min, avg, max) = (761.083, 783.487, 818.382), stdev = 22.194
[info]   CI (99.9%): [698.028, 868.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   18208.670 ±(99.9%) 1370.999 B/op [Average]
[info]   (min, avg, max) = (17886.076, 18208.670, 18793.349), stdev = 356.044
[info]   CI (99.9%): [16837.671, 19579.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   748.534 ±(99.9%) 655.179 MB/sec [Average]
[info]   (min, avg, max) = (616.942, 748.534, 940.598), stdev = 170.148
[info]   CI (99.9%): [93.355, 1403.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   17393.038 ±(99.9%) 15079.241 B/op [Average]
[info]   (min, avg, max) = (14167.465, 17393.038, 21912.162), stdev = 3916.031
[info]   CI (99.9%): [2313.797, 32472.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.817 ±(99.9%) 8.745 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.817, 5.234), stdev = 2.271
[info]   CI (99.9%): [≈ 0, 10.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   42.174 ±(99.9%) 201.722 B/op [Average]
[info]   (min, avg, max) = (0.480, 42.174, 120.204), stdev = 52.387
[info]   CI (99.9%): [≈ 0, 243.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.800, 18.000), stdev = 4.764
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:21:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1845.116 ops/s
[info] # Warmup Iteration   2: 15806.160 ops/s
[info] # Warmup Iteration   3: 38479.563 ops/s
[info] Iteration   1: 42888.610 ops/s
[info]                  ·gc.alloc.rate:                   2473.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              90763.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84264.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.780 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 101.997 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 39430.706 ops/s
[info]                  ·gc.alloc.rate:                   2528.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              100933.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91755.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 189.587 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 44272.271 ops/s
[info]                  ·gc.alloc.rate:                   2494.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              88647.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2638.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93770.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.006 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 45182.858 ops/s
[info]                  ·gc.alloc.rate:                   2520.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              87755.294 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2330.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81133.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.076 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 45207.578 ops/s
[info]                  ·gc.alloc.rate:               2544.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          88567.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2683.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 93412.897 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   43396.405 ±(99.9%) 9278.279 ops/s [Average]
[info]   (min, avg, max) = (39430.706, 43396.405, 45207.578), stdev = 2409.540
[info]   CI (99.9%): [34118.126, 52674.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2512.294 ±(99.9%) 108.636 MB/sec [Average]
[info]   (min, avg, max) = (2473.839, 2512.294, 2544.424), stdev = 28.212
[info]   CI (99.9%): [2403.658, 2620.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   91333.504 ±(99.9%) 21103.977 B/op [Average]
[info]   (min, avg, max) = (87755.294, 91333.504, 100933.418), stdev = 5480.636
[info]   CI (99.9%): [70229.527, 112437.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2449.507 ±(99.9%) 747.346 MB/sec [Average]
[info]   (min, avg, max) = (2296.710, 2449.507, 2683.619), stdev = 194.083
[info]   CI (99.9%): [1702.160, 3196.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   88867.380 ±(99.9%) 22290.737 B/op [Average]
[info]   (min, avg, max) = (81133.594, 88867.380, 93770.854), stdev = 5788.834
[info]   CI (99.9%): [66576.642, 111158.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.755 ±(99.9%) 7.731 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.755, 4.750), stdev = 2.008
[info]   CI (99.9%): [≈ 0, 9.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   67.133 ±(99.9%) 306.601 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 67.133, 189.587), stdev = 79.623
[info]   CI (99.9%): [≈ 0, 373.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.200, 16.000), stdev = 2.168
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:21:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7340.724 ops/s
[info] # Warmup Iteration   2: 21706.614 ops/s
[info] # Warmup Iteration   3: 37475.498 ops/s
[info] Iteration   1: 38368.603 ops/s
[info]                  ·gc.alloc.rate:                   2165.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              88781.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2273.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93206.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.562 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 38792.557 ops/s
[info]                  ·gc.alloc.rate:                   1865.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              75678.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1958.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79426.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.530 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 224.305 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 42199.025 ops/s
[info]                  ·gc.alloc.rate:                   1832.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              68344.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60767.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.882 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 41237.344 ops/s
[info]                  ·gc.alloc.rate:                   1785.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              68133.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62491.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.972 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 41026.341 ops/s
[info]                  ·gc.alloc.rate:                   1800.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              69046.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76073.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.396 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   40324.774 ±(99.9%) 6389.079 ops/s [Average]
[info]   (min, avg, max) = (38368.603, 40324.774, 42199.025), stdev = 1659.224
[info]   CI (99.9%): [33935.695, 46713.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1889.802 ±(99.9%) 604.960 MB/sec [Average]
[info]   (min, avg, max) = (1785.266, 1889.802, 2165.311), stdev = 157.106
[info]   CI (99.9%): [1284.842, 2494.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   73996.624 ±(99.9%) 34021.129 B/op [Average]
[info]   (min, avg, max) = (68133.309, 73996.624, 88781.082), stdev = 8835.179
[info]   CI (99.9%): [39975.495, 108017.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1896.316 ±(99.9%) 1039.886 MB/sec [Average]
[info]   (min, avg, max) = (1629.416, 1896.316, 2273.235), stdev = 270.055
[info]   CI (99.9%): [856.430, 2936.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   74393.184 ±(99.9%) 51280.029 B/op [Average]
[info]   (min, avg, max) = (60767.572, 74393.184, 93206.148), stdev = 13317.261
[info]   CI (99.9%): [23113.155, 125673.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.173 ±(99.9%) 9.380 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.173, 5.530), stdev = 2.436
[info]   CI (99.9%): [≈ 0, 10.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   47.423 ±(99.9%) 380.761 B/op [Average]
[info]   (min, avg, max) = (2.396, 47.423, 224.305), stdev = 98.883
[info]   CI (99.9%): [≈ 0, 428.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.200, 19.000), stdev = 4.868
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:21:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19822.054 ops/s
[info] # Warmup Iteration   2: 43031.626 ops/s
[info] # Warmup Iteration   3: 51168.764 ops/s
[info] Iteration   1: 54166.347 ops/s
[info]                  ·gc.alloc.rate:                   1784.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              51842.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47671.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.446 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129.192 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 55030.030 ops/s
[info]                  ·gc.alloc.rate:                   1731.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              49491.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47000.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.763 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 55164.971 ops/s
[info]                  ·gc.alloc.rate:                   1725.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              49235.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47139.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.594 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 56864.913 ops/s
[info]                  ·gc.alloc.rate:               1774.612 MB/sec
[info]                  ·gc.alloc.rate.norm:          49115.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46027.534 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 55737.522 ops/s
[info]                  ·gc.alloc.rate:                   1774.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              50091.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56647.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   55392.756 ±(99.9%) 3837.938 ops/s [Average]
[info]   (min, avg, max) = (54166.347, 55392.756, 56864.913), stdev = 996.700
[info]   CI (99.9%): [51554.818, 59230.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1758.161 ±(99.9%) 105.487 MB/sec [Average]
[info]   (min, avg, max) = (1725.843, 1758.161, 1784.249), stdev = 27.395
[info]   CI (99.9%): [1652.674, 1863.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49955.264 ±(99.9%) 4313.090 B/op [Average]
[info]   (min, avg, max) = (49115.363, 49955.264, 51842.354), stdev = 1120.096
[info]   CI (99.9%): [45642.174, 54268.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1721.479 ±(99.9%) 615.884 MB/sec [Average]
[info]   (min, avg, max) = (1640.696, 1721.479, 2007.178), stdev = 159.943
[info]   CI (99.9%): [1105.595, 2337.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   48897.406 ±(99.9%) 16838.098 B/op [Average]
[info]   (min, avg, max) = (46027.534, 48897.406, 56647.296), stdev = 4372.801
[info]   CI (99.9%): [32059.308, 65735.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.931 ±(99.9%) 7.572 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.931, 4.446), stdev = 1.966
[info]   CI (99.9%): [≈ 0, 8.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   27.027 ±(99.9%) 220.041 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 27.027, 129.192), stdev = 57.144
[info]   CI (99.9%): [≈ 0, 247.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.095
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:20:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13447.493 ops/s
[info] # Warmup Iteration   2: 45583.291 ops/s
[info] # Warmup Iteration   3: 54183.354 ops/s
[info] Iteration   1: 54306.635 ops/s
[info]                  ·gc.alloc.rate:                   1681.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              48733.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47545.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139.925 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 57130.018 ops/s
[info]                  ·gc.alloc.rate:                   1693.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              46656.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44904.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.014 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 56191.824 ops/s
[info]                  ·gc.alloc.rate:                   1652.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              46272.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45712.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.166 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 57258.032 ops/s
[info]                  ·gc.alloc.rate:                   1686.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              46349.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45199.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.572 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 54326.336 ops/s
[info]                  ·gc.alloc.rate:                   1629.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              47193.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48026.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.809 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   55842.569 ±(99.9%) 5593.746 ops/s [Average]
[info]   (min, avg, max) = (54306.635, 55842.569, 57258.032), stdev = 1452.678
[info]   CI (99.9%): [50248.823, 61436.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1668.637 ±(99.9%) 104.675 MB/sec [Average]
[info]   (min, avg, max) = (1629.125, 1668.637, 1693.638), stdev = 27.184
[info]   CI (99.9%): [1563.963, 1773.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   47040.903 ±(99.9%) 3900.747 B/op [Average]
[info]   (min, avg, max) = (46272.045, 47040.903, 48733.190), stdev = 1013.012
[info]   CI (99.9%): [43140.155, 50941.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1641.118 ±(99.9%) 42.974 MB/sec [Average]
[info]   (min, avg, max) = (1630.058, 1641.118, 1657.874), stdev = 11.160
[info]   CI (99.9%): [1598.143, 1684.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   46277.972 ±(99.9%) 5456.701 B/op [Average]
[info]   (min, avg, max) = (44904.891, 46277.972, 48026.603), stdev = 1417.088
[info]   CI (99.9%): [40821.271, 51734.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.020 ±(99.9%) 8.201 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.020, 4.829), stdev = 2.130
[info]   CI (99.9%): [≈ 0, 9.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   29.497 ±(99.9%) 237.756 B/op [Average]
[info]   (min, avg, max) = (0.572, 29.497, 139.925), stdev = 61.745
[info]   CI (99.9%): [≈ 0, 267.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 15.000), stdev = 3.937
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:20:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43198.286 ops/s
[info] # Warmup Iteration   2: 336239.456 ops/s
[info] # Warmup Iteration   3: 403004.700 ops/s
[info] Iteration   1: 409118.751 ops/s
[info]                  ·gc.alloc.rate:                   2232.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              8589.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2234.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8597.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.140 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 412261.433 ops/s
[info]                  ·gc.alloc.rate:                   2234.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              8527.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2234.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8529.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.672 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 413436.138 ops/s
[info]                  ·gc.alloc.rate:                   2235.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              8508.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1921.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7313.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 408720.380 ops/s
[info]                  ·gc.alloc.rate:                   2237.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              8611.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2274.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8753.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 413645.124 ops/s
[info]                  ·gc.alloc.rate:                   2276.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              8663.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2309.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8788.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   411436.365 ±(99.9%) 9093.219 ops/s [Average]
[info]   (min, avg, max) = (408720.380, 411436.365, 413645.124), stdev = 2361.480
[info]   CI (99.9%): [402343.146, 420529.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2243.189 ±(99.9%) 72.994 MB/sec [Average]
[info]   (min, avg, max) = (2232.647, 2243.189, 2276.969), stdev = 18.956
[info]   CI (99.9%): [2170.195, 2316.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8579.806 ±(99.9%) 242.645 B/op [Average]
[info]   (min, avg, max) = (8508.293, 8579.806, 8663.122), stdev = 63.014
[info]   CI (99.9%): [8337.160, 8822.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2194.993 ±(99.9%) 601.469 MB/sec [Average]
[info]   (min, avg, max) = (1921.242, 2194.993, 2309.942), stdev = 156.200
[info]   CI (99.9%): [1593.524, 2796.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8396.650 ±(99.9%) 2367.161 B/op [Average]
[info]   (min, avg, max) = (7313.812, 8396.650, 8788.571), stdev = 614.744
[info]   CI (99.9%): [6029.489, 10763.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.424 ±(99.9%) 7.385 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.424, 3.936), stdev = 1.918
[info]   CI (99.9%): [≈ 0, 8.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.458 ±(99.9%) 28.336 B/op [Average]
[info]   (min, avg, max) = (0.079, 5.458, 15.140), stdev = 7.359
[info]   CI (99.9%): [≈ 0, 33.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 14.000, 27.000), stdev = 7.649
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:20:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.765 ops/s
[info] # Warmup Iteration   2: 1456304.628 ops/s
[info] # Warmup Iteration   3: 1673957.666 ops/s
[info] Iteration   1: 1763405.044 ops/s
[info]                  ·gc.alloc.rate:                   567.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              505.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     578.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1746214.355 ops/s
[info]                  ·gc.alloc.rate:               570.484 MB/sec
[info]                  ·gc.alloc.rate.norm:          514.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 585.079 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1771750.158 ops/s
[info]                  ·gc.alloc.rate:                   578.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              514.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     577.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1813607.856 ops/s
[info]                  ·gc.alloc.rate:               583.705 MB/sec
[info]                  ·gc.alloc.rate.norm:          506.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 282.104 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1821912.328 ops/s
[info]                  ·gc.alloc.rate:                   595.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              514.626 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     562.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1783377.948 ±(99.9%) 126457.176 ops/s [Average]
[info]   (min, avg, max) = (1746214.355, 1783377.948, 1821912.328), stdev = 32840.527
[info]   CI (99.9%): [1656920.773, 1909835.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   579.181 ±(99.9%) 43.936 MB/sec [Average]
[info]   (min, avg, max) = (567.003, 579.181, 595.803), stdev = 11.410
[info]   CI (99.9%): [535.245, 623.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   511.073 ±(99.9%) 17.112 B/op [Average]
[info]   (min, avg, max) = (505.948, 511.073, 514.626), stdev = 4.444
[info]   CI (99.9%): [493.961, 528.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   584.882 ±(99.9%) 559.179 MB/sec [Average]
[info]   (min, avg, max) = (325.118, 584.882, 651.575), stdev = 145.217
[info]   CI (99.9%): [25.704, 1144.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   517.196 ±(99.9%) 507.027 B/op [Average]
[info]   (min, avg, max) = (282.104, 517.196, 585.079), stdev = 131.673
[info]   CI (99.9%): [10.169, 1024.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.094 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.057), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.051), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 8.000), stdev = 1.949
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:20:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 155901.309 ops/s
[info] # Warmup Iteration   2: 870741.293 ops/s
[info] # Warmup Iteration   3: 858351.949 ops/s
[info] Iteration   1: 833667.130 ops/s
[info]                  ·gc.alloc.rate:                   312.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              589.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     613.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 852313.365 ops/s
[info]                  ·gc.alloc.rate:               319.027 MB/sec
[info]                  ·gc.alloc.rate.norm:          589.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 600.253 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 858279.350 ops/s
[info]                  ·gc.alloc.rate:                   321.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              588.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     594.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 858701.998 ops/s
[info]                  ·gc.alloc.rate:                   324.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              595.543 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     594.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 857578.667 ops/s
[info]                  ·gc.alloc.rate:               329.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          604.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 596.019 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   852108.102 ±(99.9%) 40914.901 ops/s [Average]
[info]   (min, avg, max) = (833667.130, 852108.102, 858701.998), stdev = 10625.470
[info]   CI (99.9%): [811193.201, 893023.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   321.333 ±(99.9%) 24.570 MB/sec [Average]
[info]   (min, avg, max) = (312.356, 321.333, 329.330), stdev = 6.381
[info]   CI (99.9%): [296.763, 345.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   593.427 ±(99.9%) 25.923 B/op [Average]
[info]   (min, avg, max) = (588.570, 593.427, 604.361), stdev = 6.732
[info]   CI (99.9%): [567.504, 619.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   324.777 ±(99.9%) 1.289 MB/sec [Average]
[info]   (min, avg, max) = (324.421, 324.777, 325.141), stdev = 0.335
[info]   CI (99.9%): [323.487, 326.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   599.894 ±(99.9%) 30.992 B/op [Average]
[info]   (min, avg, max) = (594.615, 599.894, 613.710), stdev = 8.048
[info]   CI (99.9%): [568.902, 630.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.076), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:20:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 963823.677 ops/s
[info] # Warmup Iteration   2: 2074440.591 ops/s
[info] # Warmup Iteration   3: 2046519.486 ops/s
[info] Iteration   1: 2050720.693 ops/s
[info]                  ·gc.alloc.rate:               405.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 251.538 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2037321.558 ops/s
[info]                  ·gc.alloc.rate:                   410.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              316.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     506.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2050163.014 ops/s
[info]                  ·gc.alloc.rate:               402.617 MB/sec
[info]                  ·gc.alloc.rate.norm:          309.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252.106 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2047876.032 ops/s
[info]                  ·gc.alloc.rate:                   402.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              309.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2048725.995 ops/s
[info]                  ·gc.alloc.rate:               404.382 MB/sec
[info]                  ·gc.alloc.rate.norm:          310.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252.529 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   2046961.459 ±(99.9%) 21201.241 ops/s [Average]
[info]   (min, avg, max) = (2037321.558, 2046961.459, 2050720.693), stdev = 5505.895
[info]   CI (99.9%): [2025760.218, 2068162.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   405.083 ±(99.9%) 12.002 MB/sec [Average]
[info]   (min, avg, max) = (402.557, 405.083, 410.131), stdev = 3.117
[info]   CI (99.9%): [393.081, 417.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   311.462 ±(99.9%) 12.099 B/op [Average]
[info]   (min, avg, max) = (309.072, 311.462, 316.825), stdev = 3.142
[info]   CI (99.9%): [299.364, 323.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   393.963 ±(99.9%) 564.464 MB/sec [Average]
[info]   (min, avg, max) = (327.741, 393.963, 656.189), stdev = 146.589
[info]   CI (99.9%): [≈ 0, 958.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   303.145 ±(99.9%) 438.607 B/op [Average]
[info]   (min, avg, max) = (251.538, 303.145, 506.903), stdev = 113.905
[info]   CI (99.9%): [≈ 0, 741.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.032), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 8.000), stdev = 2.074
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:19:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3990.476 ops/s
[info] # Warmup Iteration   2: 113029.932 ops/s
[info] # Warmup Iteration   3: 154249.275 ops/s
[info] Iteration   1: 154513.486 ops/s
[info]                  ·gc.alloc.rate:                   4045.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              41207.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3966.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40408.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.908 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 152497.479 ops/s
[info]                  ·gc.alloc.rate:                   4028.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              41579.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4022.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41512.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.379 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 156075.692 ops/s
[info]                  ·gc.alloc.rate:                   4142.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              41746.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4054.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40860.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.629 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 155276.637 ops/s
[info]                  ·gc.alloc.rate:                   4120.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              41763.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3734.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37852.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.633 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 154774.717 ops/s
[info]                  ·gc.alloc.rate:                   4114.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              41843.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4081.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41503.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.847 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   154627.602 ±(99.9%) 5126.673 ops/s [Average]
[info]   (min, avg, max) = (152497.479, 154627.602, 156075.692), stdev = 1331.381
[info]   CI (99.9%): [149500.929, 159754.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4090.395 ±(99.9%) 192.876 MB/sec [Average]
[info]   (min, avg, max) = (4028.861, 4090.395, 4142.521), stdev = 50.089
[info]   CI (99.9%): [3897.519, 4283.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   41628.198 ±(99.9%) 978.400 B/op [Average]
[info]   (min, avg, max) = (41207.405, 41628.198, 41843.656), stdev = 254.087
[info]   CI (99.9%): [40649.798, 42606.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3971.959 ±(99.9%) 536.691 MB/sec [Average]
[info]   (min, avg, max) = (3734.602, 3971.959, 4081.391), stdev = 139.377
[info]   CI (99.9%): [3435.268, 4508.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   40427.535 ±(99.9%) 5825.002 B/op [Average]
[info]   (min, avg, max) = (37852.584, 40427.535, 41512.378), stdev = 1512.734
[info]   CI (99.9%): [34602.534, 46252.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.241 ±(99.9%) 1.244 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.241, 0.812), stdev = 0.323
[info]   CI (99.9%): [≈ 0, 1.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.479 ±(99.9%) 12.863 B/op [Average]
[info]   (min, avg, max) = (0.629, 2.479, 8.379), stdev = 3.340
[info]   CI (99.9%): [≈ 0, 15.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   59.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.800, 12.000), stdev = 0.447
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 15.600, 17.000), stdev = 0.894
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:19:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 120954.424 ops/s
[info] # Warmup Iteration   2: 375894.876 ops/s
[info] # Warmup Iteration   3: 439672.489 ops/s
[info] Iteration   1: 442611.557 ops/s
[info]                  ·gc.alloc.rate:                   1449.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              5153.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4663.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.511 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 456720.924 ops/s
[info]                  ·gc.alloc.rate:                   1505.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              5186.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5631.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.591 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 442975.812 ops/s
[info]                  ·gc.alloc.rate:                   1444.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              5132.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4624.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 437005.881 ops/s
[info]                  ·gc.alloc.rate:                   1444.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              5202.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5886.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 455576.950 ops/s
[info]                  ·gc.alloc.rate:                   1504.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              5196.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4552.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   446978.225 ±(99.9%) 33535.605 ops/s [Average]
[info]   (min, avg, max) = (437005.881, 446978.225, 456720.924), stdev = 8709.090
[info]   CI (99.9%): [413442.620, 480513.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1469.560 ±(99.9%) 123.584 MB/sec [Average]
[info]   (min, avg, max) = (1444.498, 1469.560, 1505.072), stdev = 32.094
[info]   CI (99.9%): [1345.976, 1593.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5174.269 ±(99.9%) 116.378 B/op [Average]
[info]   (min, avg, max) = (5132.014, 5174.269, 5202.641), stdev = 30.223
[info]   CI (99.9%): [5057.891, 5290.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1439.942 ±(99.9%) 683.725 MB/sec [Average]
[info]   (min, avg, max) = (1301.696, 1439.942, 1634.496), stdev = 177.561
[info]   CI (99.9%): [756.216, 2123.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5071.698 ±(99.9%) 2444.992 B/op [Average]
[info]   (min, avg, max) = (4552.222, 5071.698, 5886.348), stdev = 634.957
[info]   CI (99.9%): [2626.705, 7516.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.870 ±(99.9%) 4.994 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.870, 2.956), stdev = 1.297
[info]   CI (99.9%): [≈ 0, 5.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.065 ±(99.9%) 17.711 B/op [Average]
[info]   (min, avg, max) = (0.072, 3.065, 10.511), stdev = 4.599
[info]   CI (99.9%): [≈ 0, 20.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 17.000), stdev = 4.775
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:19:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.817 ops/s
[info] # Warmup Iteration   2: 2100447.109 ops/s
[info] # Warmup Iteration   3: 2571570.215 ops/s
[info] Iteration   1: 2611608.186 ops/s
[info]                  ·gc.alloc.rate:                   1240.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     588.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2655361.288 ops/s
[info]                  ·gc.alloc.rate:                   1262.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.533 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     774.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.117 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.440 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 2578216.836 ops/s
[info]                  ·gc.alloc.rate:                   1226.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     794.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.419 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2616158.416 ops/s
[info]                  ·gc.alloc.rate:               1247.336 MB/sec
[info]                  ·gc.alloc.rate.norm:          750.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 584.280 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2571401.749 ops/s
[info]                  ·gc.alloc.rate:                   1218.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     794.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   2606549.295 ±(99.9%) 129707.506 ops/s [Average]
[info]   (min, avg, max) = (2571401.749, 2606549.295, 2655361.288), stdev = 33684.627
[info]   CI (99.9%): [2476841.789, 2736256.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1239.225 ±(99.9%) 67.121 MB/sec [Average]
[info]   (min, avg, max) = (1218.649, 1239.225, 1262.912), stdev = 17.431
[info]   CI (99.9%): [1172.104, 1306.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   748.166 ±(99.9%) 6.545 B/op [Average]
[info]   (min, avg, max) = (745.724, 748.166, 750.366), stdev = 1.700
[info]   CI (99.9%): [741.621, 754.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1170.672 ±(99.9%) 690.791 MB/sec [Average]
[info]   (min, avg, max) = (971.250, 1170.672, 1306.013), stdev = 179.396
[info]   CI (99.9%): [479.881, 1861.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   707.098 ±(99.9%) 425.148 B/op [Average]
[info]   (min, avg, max) = (584.280, 707.098, 794.248), stdev = 110.410
[info]   CI (99.9%): [281.949, 1132.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.973 ±(99.9%) 6.857 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.973, 4.117), stdev = 1.781
[info]   CI (99.9%): [≈ 0, 7.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.580 ±(99.9%) 4.062 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.580, 2.440), stdev = 1.055
[info]   CI (99.9%): [≈ 0, 4.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 15.000), stdev = 3.782
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:19:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247029.998 ops/s
[info] # Warmup Iteration   2: 998447.267 ops/s
[info] # Warmup Iteration   3: 1187781.368 ops/s
[info] Iteration   1: 1197923.975 ops/s
[info]                  ·gc.alloc.rate:               559.997 MB/sec
[info]                  ·gc.alloc.rate.norm:          735.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 422.720 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1104748.507 ops/s
[info]                  ·gc.alloc.rate:                   533.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              759.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     917.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1191844.449 ops/s
[info]                  ·gc.alloc.rate:               571.516 MB/sec
[info]                  ·gc.alloc.rate.norm:          754.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 851.513 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1175671.679 ops/s
[info]                  ·gc.alloc.rate:               554.143 MB/sec
[info]                  ·gc.alloc.rate.norm:          741.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 432.058 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1191850.267 ops/s
[info]                  ·gc.alloc.rate:                   571.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              754.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     854.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1172407.775 ±(99.9%) 149076.385 ops/s [Average]
[info]   (min, avg, max) = (1104748.507, 1172407.775, 1197923.975), stdev = 38714.664
[info]   CI (99.9%): [1023331.390, 1321484.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   558.058 ±(99.9%) 60.498 MB/sec [Average]
[info]   (min, avg, max) = (533.326, 558.058, 571.516), stdev = 15.711
[info]   CI (99.9%): [497.559, 618.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   749.160 ±(99.9%) 38.408 B/op [Average]
[info]   (min, avg, max) = (735.749, 749.160, 759.780), stdev = 9.974
[info]   CI (99.9%): [710.752, 787.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   516.114 ±(99.9%) 681.488 MB/sec [Average]
[info]   (min, avg, max) = (321.742, 516.114, 647.108), stdev = 176.980
[info]   CI (99.9%): [≈ 0, 1197.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   695.534 ±(99.9%) 948.082 B/op [Average]
[info]   (min, avg, max) = (422.720, 695.534, 917.234), stdev = 246.214
[info]   CI (99.9%): [≈ 0, 1643.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.052 ±(99.9%) 0.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.052, 0.178), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:19:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1475309.850 ops/s
[info] # Warmup Iteration   2: 2769432.513 ops/s
[info] # Warmup Iteration   3: 2926969.717 ops/s
[info] Iteration   1: 2963192.210 ops/s
[info]                  ·gc.alloc.rate:                   1410.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     700.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.698 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.433 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 3038793.797 ops/s
[info]                  ·gc.alloc.rate:                   1439.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     681.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.722 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3044216.857 ops/s
[info]                  ·gc.alloc.rate:                   1460.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              754.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     845.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3054469.388 ops/s
[info]                  ·gc.alloc.rate:                   1465.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              754.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     676.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3050966.958 ops/s
[info]                  ·gc.alloc.rate:               1464.005 MB/sec
[info]                  ·gc.alloc.rate.norm:          755.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 680.729 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   3030327.842 ±(99.9%) 146382.187 ops/s [Average]
[info]   (min, avg, max) = (2963192.210, 3030327.842, 3054469.388), stdev = 38014.989
[info]   CI (99.9%): [2883945.655, 3176710.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1447.864 ±(99.9%) 89.465 MB/sec [Average]
[info]   (min, avg, max) = (1410.704, 1447.864, 1465.117), stdev = 23.234
[info]   CI (99.9%): [1358.399, 1537.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   751.945 ±(99.9%) 16.817 B/op [Average]
[info]   (min, avg, max) = (745.502, 751.945, 755.207), stdev = 4.367
[info]   CI (99.9%): [735.128, 768.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1380.962 ±(99.9%) 549.513 MB/sec [Average]
[info]   (min, avg, max) = (1313.005, 1380.962, 1636.196), stdev = 142.707
[info]   CI (99.9%): [831.449, 1930.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   717.162 ±(99.9%) 279.395 B/op [Average]
[info]   (min, avg, max) = (676.544, 717.162, 845.862), stdev = 72.558
[info]   CI (99.9%): [437.767, 996.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.831 ±(99.9%) 4.627 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.831, 2.698), stdev = 1.202
[info]   CI (99.9%): [≈ 0, 5.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.438 ±(99.9%) 2.450 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.438, 1.433), stdev = 0.636
[info]   CI (99.9%): [≈ 0, 2.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 14.000), stdev = 3.715
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:18:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1940548.824 ops/s
[info] # Warmup Iteration   2: 2926912.597 ops/s
[info] # Warmup Iteration   3: 3126305.868 ops/s
[info] Iteration   1: 3124958.062 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3115814.714 ops/s
[info]                  ·gc.alloc.rate:      0.093 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.047 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3124353.020 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3126288.832 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3135104.475 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3125303.820 ±(99.9%) 26404.989 ops/s [Average]
[info]   (min, avg, max) = (3115814.714, 3125303.820, 3135104.475), stdev = 6857.292
[info]   CI (99.9%): [3098898.831, 3151708.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.019 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.019, 0.093), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.010 ±(99.9%) 0.081 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.010, 0.047), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:18:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49419.021 ops/s
[info] # Warmup Iteration   2: 523682.996 ops/s
[info] # Warmup Iteration   3: 522828.897 ops/s
[info] Iteration   1: 1009764.552 ops/s
[info]                  ·gc.alloc.rate:                   1078.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2014.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.523 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.373 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 1012695.144 ops/s
[info]                  ·gc.alloc.rate:                   1081.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1506.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.260 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.620 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1005202.044 ops/s
[info]                  ·gc.alloc.rate:                   1078.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              1689.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          962.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1507.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 999313.955 ops/s
[info]                  ·gc.alloc.rate:                   1081.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              1703.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1282.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2019.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.426 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1023703.592 ops/s
[info]                  ·gc.alloc.rate:               1087.152 MB/sec
[info]                  ·gc.alloc.rate.norm:          1671.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:      963.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1481.472 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   1010135.858 ±(99.9%) 35093.044 ops/s [Average]
[info]   (min, avg, max) = (999313.955, 1010135.858, 1023703.592), stdev = 9113.552
[info]   CI (99.9%): [975042.814, 1045228.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1081.390 ±(99.9%) 13.354 MB/sec [Average]
[info]   (min, avg, max) = (1078.468, 1081.390, 1087.152), stdev = 3.468
[info]   CI (99.9%): [1068.036, 1094.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1684.901 ±(99.9%) 45.998 B/op [Average]
[info]   (min, avg, max) = (1671.354, 1684.901, 1703.091), stdev = 11.946
[info]   CI (99.9%): [1638.903, 1730.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1093.984 ±(99.9%) 679.388 MB/sec [Average]
[info]   (min, avg, max) = (962.647, 1093.984, 1292.374), stdev = 176.435
[info]   CI (99.9%): [414.596, 1773.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1705.645 ±(99.9%) 1093.991 B/op [Average]
[info]   (min, avg, max) = (1481.472, 1705.645, 2019.016), stdev = 284.106
[info]   CI (99.9%): [611.654, 2799.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.269 ±(99.9%) 6.826 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.269, 4.260), stdev = 1.773
[info]   CI (99.9%): [≈ 0, 8.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.975 ±(99.9%) 10.606 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.975, 6.620), stdev = 2.754
[info]   CI (99.9%): [≈ 0, 12.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.200, 19.000), stdev = 6.380
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:18:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21614.828 ops/s
[info] # Warmup Iteration   2: 160288.626 ops/s
[info] # Warmup Iteration   3: 198764.771 ops/s
[info] Iteration   1: 204335.329 ops/s
[info]                  ·gc.alloc.rate:                   2538.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              19549.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17489.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.513 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 205551.784 ops/s
[info]                  ·gc.alloc.rate:                   2539.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              19446.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2606.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19958.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.956 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 210106.533 ops/s
[info]                  ·gc.alloc.rate:                   2628.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              19692.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2643.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19803.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.312 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 208415.111 ops/s
[info]                  ·gc.alloc.rate:                   2608.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              19700.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2340.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17674.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.472 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 208538.698 ops/s
[info]                  ·gc.alloc.rate:                   2624.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              19810.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20341.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   207389.491 ±(99.9%) 9124.476 ops/s [Average]
[info]   (min, avg, max) = (204335.329, 207389.491, 210106.533), stdev = 2369.597
[info]   CI (99.9%): [198265.015, 216513.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   2588.276 ±(99.9%) 174.698 MB/sec [Average]
[info]   (min, avg, max) = (2538.599, 2588.276, 2628.899), stdev = 45.368
[info]   CI (99.9%): [2413.578, 2762.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19639.838 ±(99.9%) 548.153 B/op [Average]
[info]   (min, avg, max) = (19446.808, 19639.838, 19810.771), stdev = 142.354
[info]   CI (99.9%): [19091.686, 20187.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2511.562 ±(99.9%) 739.001 MB/sec [Average]
[info]   (min, avg, max) = (2271.150, 2511.562, 2695.343), stdev = 191.916
[info]   CI (99.9%): [1772.561, 3250.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19053.742 ±(99.9%) 5233.918 B/op [Average]
[info]   (min, avg, max) = (17489.693, 19053.742, 20341.760), stdev = 1359.232
[info]   CI (99.9%): [13819.824, 24287.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.479 ±(99.9%) 3.588 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.479, 2.144), stdev = 0.932
[info]   CI (99.9%): [≈ 0, 4.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.682 ±(99.9%) 27.644 B/op [Average]
[info]   (min, avg, max) = (0.157, 3.682, 16.513), stdev = 7.179
[info]   CI (99.9%): [≈ 0, 31.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.600, 12.000), stdev = 1.517
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:18:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92227.640 ops/s
[info] # Warmup Iteration   2: 322080.084 ops/s
[info] # Warmup Iteration   3: 330118.241 ops/s
[info] Iteration   1: 447391.959 ops/s
[info]                  ·gc.alloc.rate:                   307.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              1083.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1138.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.580 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 448385.274 ops/s
[info]                  ·gc.alloc.rate:                   310.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              1088.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1134.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 446463.500 ops/s
[info]                  ·gc.alloc.rate:               310.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          1093.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1138.940 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 446914.654 ops/s
[info]                  ·gc.alloc.rate:                   313.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              1105.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1135.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 441818.059 ops/s
[info]                  ·gc.alloc.rate:               318.166 MB/sec
[info]                  ·gc.alloc.rate.norm:          1133.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1148.550 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   446194.689 ±(99.9%) 9813.027 ops/s [Average]
[info]   (min, avg, max) = (441818.059, 446194.689, 448385.274), stdev = 2548.412
[info]   CI (99.9%): [436381.662, 456007.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   312.057 ±(99.9%) 15.457 MB/sec [Average]
[info]   (min, avg, max) = (307.915, 312.057, 318.166), stdev = 4.014
[info]   CI (99.9%): [296.600, 327.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1100.734 ±(99.9%) 76.801 B/op [Average]
[info]   (min, avg, max) = (1083.245, 1100.734, 1133.372), stdev = 19.945
[info]   CI (99.9%): [1023.933, 1177.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   322.967 ±(99.9%) 2.168 MB/sec [Average]
[info]   (min, avg, max) = (322.401, 322.967, 323.734), stdev = 0.563
[info]   CI (99.9%): [320.799, 325.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1139.157 ±(99.9%) 21.863 B/op [Average]
[info]   (min, avg, max) = (1134.033, 1139.157, 1148.550), stdev = 5.678
[info]   CI (99.9%): [1117.294, 1161.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.526 ±(99.9%) 4.421 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.526, 2.580), stdev = 1.148
[info]   CI (99.9%): [≈ 0, 4.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.852 ±(99.9%) 15.555 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.852, 9.078), stdev = 4.040
[info]   CI (99.9%): [≈ 0, 17.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:18:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 507239.074 ops/s
[info] # Warmup Iteration   2: 1287140.668 ops/s
[info] # Warmup Iteration   3: 1315591.268 ops/s
[info] Iteration   1: 1326739.272 ops/s
[info]                  ·gc.alloc.rate:                   262.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              311.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1329445.032 ops/s
[info]                  ·gc.alloc.rate:      262.185 MB/sec
[info]                  ·gc.alloc.rate.norm: 310.320 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1325663.602 ops/s
[info]                  ·gc.alloc.rate:               258.191 MB/sec
[info]                  ·gc.alloc.rate.norm:          306.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 389.120 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1318534.147 ops/s
[info]                  ·gc.alloc.rate:                   263.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              314.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     391.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1324486.003 ops/s
[info]                  ·gc.alloc.rate:               262.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 389.869 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1324973.611 ±(99.9%) 15557.234 ops/s [Average]
[info]   (min, avg, max) = (1318534.147, 1324973.611, 1329445.032), stdev = 4040.164
[info]   CI (99.9%): [1309416.377, 1340530.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   261.822 ±(99.9%) 8.219 MB/sec [Average]
[info]   (min, avg, max) = (258.191, 261.822, 263.862), stdev = 2.135
[info]   CI (99.9%): [253.602, 270.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   310.987 ±(99.9%) 11.680 B/op [Average]
[info]   (min, avg, max) = (306.524, 310.987, 314.941), stdev = 3.033
[info]   CI (99.9%): [299.306, 322.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   247.890 ±(99.9%) 546.967 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.890, 328.115), stdev = 142.046
[info]   CI (99.9%): [≈ 0, 794.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   294.733 ±(99.9%) 650.668 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 294.733, 391.215), stdev = 168.976
[info]   CI (99.9%): [≈ 0, 945.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.093 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.044), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.111 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.053), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 4.000), stdev = 1.732
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:17:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4257.251 ops/s
[info] # Warmup Iteration   2: 86831.074 ops/s
[info] # Warmup Iteration   3: 120579.181 ops/s
[info] Iteration   1: 118513.472 ops/s
[info]                  ·gc.alloc.rate:                   3847.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              51092.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3642.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48375.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.764 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 117534.897 ops/s
[info]                  ·gc.alloc.rate:                   3854.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              51617.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3682.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49311.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.836 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 122621.466 ops/s
[info]                  ·gc.alloc.rate:                   4037.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              51818.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4053.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52026.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.336 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 122063.612 ops/s
[info]                  ·gc.alloc.rate:                   4006.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              51662.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3733.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48141.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.342 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 122423.720 ops/s
[info]                  ·gc.alloc.rate:               4028.266 MB/sec
[info]                  ·gc.alloc.rate.norm:          51752.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:      4076.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52368.106 B/op
[info]                  ·gc.count:                    12.000 counts
[info]                  ·gc.time:                     18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   120631.433 ±(99.9%) 9293.136 ops/s [Average]
[info]   (min, avg, max) = (117534.897, 120631.433, 122621.466), stdev = 2413.398
[info]   CI (99.9%): [111338.297, 129924.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3954.839 ±(99.9%) 367.380 MB/sec [Average]
[info]   (min, avg, max) = (3847.251, 3954.839, 4037.144), stdev = 95.407
[info]   CI (99.9%): [3587.459, 4322.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51588.717 ±(99.9%) 1108.949 B/op [Average]
[info]   (min, avg, max) = (51092.922, 51588.717, 51818.413), stdev = 287.991
[info]   CI (99.9%): [50479.768, 52697.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3837.700 ±(99.9%) 808.381 MB/sec [Average]
[info]   (min, avg, max) = (3642.599, 3837.700, 4076.150), stdev = 209.934
[info]   CI (99.9%): [3029.320, 4646.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50044.789 ±(99.9%) 7766.627 B/op [Average]
[info]   (min, avg, max) = (48141.974, 50044.789, 52368.106), stdev = 2016.968
[info]   CI (99.9%): [42278.162, 57811.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.292 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.208), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.256 ±(99.9%) 3.871 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.256, 2.764), stdev = 1.005
[info]   CI (99.9%): [≈ 0, 5.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   57.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.400, 12.000), stdev = 0.548
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   83.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.600, 18.000), stdev = 1.342
[info]   CI (99.9%): [83.000, 83.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:17:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74864.820 ops/s
[info] # Warmup Iteration   2: 285178.375 ops/s
[info] # Warmup Iteration   3: 338450.917 ops/s
[info] Iteration   1: 351980.445 ops/s
[info]                  ·gc.alloc.rate:                   1920.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              8587.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8760.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.315 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 337212.431 ops/s
[info]                  ·gc.alloc.rate:                   1828.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              8532.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7589.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 355025.825 ops/s
[info]                  ·gc.alloc.rate:                   1932.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              8566.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8704.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 352364.940 ops/s
[info]                  ·gc.alloc.rate:               1932.531 MB/sec
[info]                  ·gc.alloc.rate.norm:          8631.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1651.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7377.151 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 353103.150 ops/s
[info]                  ·gc.alloc.rate:                   1949.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8910.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.835 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   349937.358 ±(99.9%) 27761.104 ops/s [Average]
[info]   (min, avg, max) = (337212.431, 349937.358, 355025.825), stdev = 7209.471
[info]   CI (99.9%): [322176.254, 377698.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1912.768 ±(99.9%) 186.096 MB/sec [Average]
[info]   (min, avg, max) = (1828.375, 1912.768, 1949.966), stdev = 48.329
[info]   CI (99.9%): [1726.672, 2098.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8601.352 ±(99.9%) 233.833 B/op [Average]
[info]   (min, avg, max) = (8532.247, 8601.352, 8688.745), stdev = 60.726
[info]   CI (99.9%): [8367.518, 8835.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1840.093 ±(99.9%) 710.371 MB/sec [Average]
[info]   (min, avg, max) = (1626.325, 1840.093, 1999.726), stdev = 184.481
[info]   CI (99.9%): [1129.722, 2550.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8268.385 ±(99.9%) 2790.030 B/op [Average]
[info]   (min, avg, max) = (7377.151, 8268.385, 8910.469), stdev = 724.562
[info]   CI (99.9%): [5478.356, 11058.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.926 ±(99.9%) 7.309 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.926, 4.320), stdev = 1.898
[info]   CI (99.9%): [≈ 0, 8.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.145 ±(99.9%) 32.678 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.145, 19.315), stdev = 8.486
[info]   CI (99.9%): [≈ 0, 36.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 14.000), stdev = 3.114
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:17:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 613751.087 ops/s
[info] # Warmup Iteration   2: 2126029.771 ops/s
[info] # Warmup Iteration   3: 2222629.501 ops/s
[info] Iteration   1: 2230952.593 ops/s
[info]                  ·gc.alloc.rate:                   617.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     458.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2211982.280 ops/s
[info]                  ·gc.alloc.rate:               652.411 MB/sec
[info]                  ·gc.alloc.rate.norm:          464.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 463.074 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 2239574.238 ops/s
[info]                  ·gc.alloc.rate:                   626.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              439.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     458.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2250475.425 ops/s
[info]                  ·gc.alloc.rate:                   613.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     228.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2295081.315 ops/s
[info]                  ·gc.alloc.rate:                   640.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     448.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.518 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.413 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   2245613.170 ±(99.9%) 119512.365 ops/s [Average]
[info]   (min, avg, max) = (2211982.280, 2245613.170, 2295081.315), stdev = 31036.982
[info]   CI (99.9%): [2126100.805, 2365125.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   629.905 ±(99.9%) 62.248 MB/sec [Average]
[info]   (min, avg, max) = (613.886, 629.905, 652.411), stdev = 16.166
[info]   CI (99.9%): [567.656, 692.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   441.530 ±(99.9%) 51.338 B/op [Average]
[info]   (min, avg, max) = (429.315, 441.530, 464.201), stdev = 13.332
[info]   CI (99.9%): [390.192, 492.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   586.708 ±(99.9%) 559.610 MB/sec [Average]
[info]   (min, avg, max) = (326.754, 586.708, 654.138), stdev = 145.329
[info]   CI (99.9%): [27.098, 1146.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   411.336 ±(99.9%) 394.062 B/op [Average]
[info]   (min, avg, max) = (228.512, 411.336, 463.074), stdev = 102.337
[info]   CI (99.9%): [17.274, 805.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.716 ±(99.9%) 6.032 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 3.518), stdev = 1.566
[info]   CI (99.9%): [≈ 0, 6.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.491 ±(99.9%) 4.136 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.491, 2.413), stdev = 1.074
[info]   CI (99.9%): [≈ 0, 4.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 9.000), stdev = 1.949
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:17:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1756957.108 ops/s
[info] # Warmup Iteration   2: 3027478.107 ops/s
[info] # Warmup Iteration   3: 3307317.724 ops/s
[info] Iteration   1: 3507247.622 ops/s
[info]                  ·gc.alloc.rate:                   970.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     443.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3454432.551 ops/s
[info]                  ·gc.alloc.rate:               949.948 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 300.314 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 3454739.099 ops/s
[info]                  ·gc.alloc.rate:                   952.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.442 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3432261.325 ops/s
[info]                  ·gc.alloc.rate:                   951.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     451.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3410755.888 ops/s
[info]                  ·gc.alloc.rate:                   951.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     453.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   3451887.297 ±(99.9%) 138252.975 ops/s [Average]
[info]   (min, avg, max) = (3410755.888, 3451887.297, 3507247.622), stdev = 35903.859
[info]   CI (99.9%): [3313634.321, 3590140.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   955.207 ±(99.9%) 32.272 MB/sec [Average]
[info]   (min, avg, max) = (949.948, 955.207, 970.083), stdev = 8.381
[info]   CI (99.9%): [922.935, 987.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   435.461 ±(99.9%) 9.024 B/op [Average]
[info]   (min, avg, max) = (432.794, 435.461, 438.911), stdev = 2.344
[info]   CI (99.9%): [426.436, 444.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.773 ±(99.9%) 563.253 MB/sec [Average]
[info]   (min, avg, max) = (659.164, 920.773, 989.916), stdev = 146.275
[info]   CI (99.9%): [357.520, 1484.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   419.801 ±(99.9%) 257.631 B/op [Average]
[info]   (min, avg, max) = (300.314, 419.801, 453.089), stdev = 66.906
[info]   CI (99.9%): [162.171, 677.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 5.220 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 3.164), stdev = 1.356
[info]   CI (99.9%): [≈ 0, 6.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.374 ±(99.9%) 2.378 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.374, 1.442), stdev = 0.618
[info]   CI (99.9%): [≈ 0, 2.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:17:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1674517.909 ops/s
[info] # Warmup Iteration   2: 2969007.381 ops/s
[info] # Warmup Iteration   3: 3523549.014 ops/s
[info] Iteration   1: 3523182.390 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3529481.047 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3529173.472 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3536994.930 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3539724.676 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   3531711.303 ±(99.9%) 25563.161 ops/s [Average]
[info]   (min, avg, max) = (3523182.390, 3531711.303, 3539724.676), stdev = 6638.672
[info]   CI (99.9%): [3506148.142, 3557274.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:16:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7218.922 ops/s
[info] # Warmup Iteration   2: 23491.802 ops/s
[info] # Warmup Iteration   3: 49874.899 ops/s
[info] Iteration   1: 48383.200 ops/s
[info]                  ·gc.alloc.rate:                   1960.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              63738.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63424.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.220 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.202 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 48910.441 ops/s
[info]                  ·gc.alloc.rate:                   2097.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              67487.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62461.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 284.264 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 57981.658 ops/s
[info]                  ·gc.alloc.rate:                   2022.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              54897.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52473.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.967 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.236 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 58920.416 ops/s
[info]                  ·gc.alloc.rate:                   2084.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              55697.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2279.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60898.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.666 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   5: 59557.593 ops/s
[info]                  ·gc.alloc.rate:                   2085.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              55119.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51711.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.273 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   54750.662 ±(99.9%) 21576.111 ops/s [Average]
[info]   (min, avg, max) = (48383.200, 54750.662, 59557.593), stdev = 5603.247
[info]   CI (99.9%): [33174.551, 76326.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2050.130 ±(99.9%) 224.542 MB/sec [Average]
[info]   (min, avg, max) = (1960.027, 2050.130, 2097.384), stdev = 58.313
[info]   CI (99.9%): [1825.588, 2274.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   59387.854 ±(99.9%) 22497.319 B/op [Average]
[info]   (min, avg, max) = (54897.140, 59387.854, 67487.136), stdev = 5842.482
[info]   CI (99.9%): [36890.535, 81885.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2012.252 ±(99.9%) 576.741 MB/sec [Average]
[info]   (min, avg, max) = (1933.174, 2012.252, 2279.701), stdev = 149.778
[info]   CI (99.9%): [1435.511, 2588.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   58193.832 ±(99.9%) 21751.656 B/op [Average]
[info]   (min, avg, max) = (51711.441, 58193.832, 63424.644), stdev = 5648.836
[info]   CI (99.9%): [36442.176, 79945.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.187 ±(99.9%) 12.314 MB/sec [Average]
[info]   (min, avg, max) = (0.967, 3.187, 8.834), stdev = 3.198
[info]   CI (99.9%): [≈ 0, 15.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   97.328 ±(99.9%) 407.626 B/op [Average]
[info]   (min, avg, max) = (26.236, 97.328, 284.264), stdev = 105.859
[info]   CI (99.9%): [≈ 0, 504.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   97.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 19.400, 31.000), stdev = 8.019
[info]   CI (99.9%): [97.000, 97.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:16:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37585.378 ops/s
[info] # Warmup Iteration   2: 131310.265 ops/s
[info] # Warmup Iteration   3: 242394.878 ops/s
[info] Iteration   1: 305313.256 ops/s
[info]                  ·gc.alloc.rate:                   3268.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              16850.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3253.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16771.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.416 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 309840.409 ops/s
[info]                  ·gc.alloc.rate:                   3324.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              16889.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3264.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16580.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.757 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 312450.735 ops/s
[info]                  ·gc.alloc.rate:                   3386.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              17055.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3302.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16629.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 317015.981 ops/s
[info]                  ·gc.alloc.rate:                   3416.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              16959.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3013.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14957.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.310 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 320879.742 ops/s
[info]                  ·gc.alloc.rate:                   3469.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              17016.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3376.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16559.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   313100.025 ±(99.9%) 23386.057 ops/s [Average]
[info]   (min, avg, max) = (305313.256, 313100.025, 320879.742), stdev = 6073.285
[info]   CI (99.9%): [289713.967, 336486.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3373.223 ±(99.9%) 301.884 MB/sec [Average]
[info]   (min, avg, max) = (3268.791, 3373.223, 3469.694), stdev = 78.398
[info]   CI (99.9%): [3071.339, 3675.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   16954.256 ±(99.9%) 329.468 B/op [Average]
[info]   (min, avg, max) = (16850.230, 16954.256, 17055.505), stdev = 85.562
[info]   CI (99.9%): [16624.788, 17283.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3241.832 ±(99.9%) 526.360 MB/sec [Average]
[info]   (min, avg, max) = (3013.011, 3241.832, 3376.459), stdev = 136.694
[info]   CI (99.9%): [2715.472, 3768.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16299.902 ±(99.9%) 2906.739 B/op [Average]
[info]   (min, avg, max) = (14957.642, 16299.902, 16771.447), stdev = 754.871
[info]   CI (99.9%): [13393.162, 19206.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.782 ±(99.9%) 3.853 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.782, 2.021), stdev = 1.001
[info]   CI (99.9%): [≈ 0, 4.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.000 ±(99.9%) 19.766 B/op [Average]
[info]   (min, avg, max) = (0.204, 4.000, 10.416), stdev = 5.133
[info]   CI (99.9%): [≈ 0, 23.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 15.600, 24.000), stdev = 4.827
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:16:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71431.647 ops/s
[info] # Warmup Iteration   2: 484585.961 ops/s
[info] # Warmup Iteration   3: 671757.929 ops/s
[info] Iteration   1: 677269.677 ops/s
[info]                  ·gc.alloc.rate:                   1857.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              4316.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3765.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 685680.740 ops/s
[info]                  ·gc.alloc.rate:                   1879.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              4314.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4506.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.670 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.539 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 692870.871 ops/s
[info]                  ·gc.alloc.rate:                   1924.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              4372.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4503.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 692703.729 ops/s
[info]                  ·gc.alloc.rate:                   1918.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              4359.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3784.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 685771.856 ops/s
[info]                  ·gc.alloc.rate:                   1929.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              4427.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4618.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   686859.375 ±(99.9%) 24718.371 ops/s [Average]
[info]   (min, avg, max) = (677269.677, 686859.375, 692870.871), stdev = 6419.282
[info]   CI (99.9%): [662141.004, 711577.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1902.031 ±(99.9%) 122.717 MB/sec [Average]
[info]   (min, avg, max) = (1857.346, 1902.031, 1929.643), stdev = 31.869
[info]   CI (99.9%): [1779.315, 2024.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4357.771 ±(99.9%) 179.219 B/op [Average]
[info]   (min, avg, max) = (4314.057, 4357.771, 4427.128), stdev = 46.543
[info]   CI (99.9%): [4178.552, 4536.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1849.036 ±(99.9%) 729.833 MB/sec [Average]
[info]   (min, avg, max) = (1620.452, 1849.036, 2013.122), stdev = 189.535
[info]   CI (99.9%): [1119.203, 2578.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4235.660 ±(99.9%) 1629.091 B/op [Average]
[info]   (min, avg, max) = (3765.631, 4235.660, 4618.651), stdev = 423.070
[info]   CI (99.9%): [2606.569, 5864.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.159 ±(99.9%) 1.101 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.159, 0.670), stdev = 0.286
[info]   CI (99.9%): [≈ 0, 1.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.365 ±(99.9%) 2.528 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.365, 1.539), stdev = 0.657
[info]   CI (99.9%): [≈ 0, 2.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 9.000), stdev = 0.837
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:16:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1454880.406 ops/s
[info] # Warmup Iteration   2: 2492306.322 ops/s
[info] # Warmup Iteration   3: 2852518.481 ops/s
[info] Iteration   1: 2928229.281 ops/s
[info]                  ·gc.alloc.rate:                   1046.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              562.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     530.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2790798.610 ops/s
[info]                  ·gc.alloc.rate:                   1023.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              577.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     557.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2762968.769 ops/s
[info]                  ·gc.alloc.rate:                   985.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              561.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     563.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.885 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2776769.229 ops/s
[info]                  ·gc.alloc.rate:                   988.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2843764.722 ops/s
[info]                  ·gc.alloc.rate:               1003.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          555.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 544.151 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2820506.122 ±(99.9%) 260105.514 ops/s [Average]
[info]   (min, avg, max) = (2762968.769, 2820506.122, 2928229.281), stdev = 67548.576
[info]   CI (99.9%): [2560400.608, 3080611.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1009.407 ±(99.9%) 98.353 MB/sec [Average]
[info]   (min, avg, max) = (985.797, 1009.407, 1046.281), stdev = 25.542
[info]   CI (99.9%): [911.054, 1107.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   563.281 ±(99.9%) 31.955 B/op [Average]
[info]   (min, avg, max) = (555.155, 563.281, 577.258), stdev = 8.299
[info]   CI (99.9%): [531.327, 595.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   986.827 ±(99.9%) 10.941 MB/sec [Average]
[info]   (min, avg, max) = (983.238, 986.827, 989.859), stdev = 2.841
[info]   CI (99.9%): [975.886, 997.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   550.903 ±(99.9%) 51.462 B/op [Average]
[info]   (min, avg, max) = (530.796, 550.903, 563.862), stdev = 13.365
[info]   CI (99.9%): [499.440, 602.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 5.523 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 3.310), stdev = 1.434
[info]   CI (99.9%): [≈ 0, 6.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.441 ±(99.9%) 3.147 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.441, 1.885), stdev = 0.817
[info]   CI (99.9%): [≈ 0, 3.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.050
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:16:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2675.947 ops/s
[info] # Warmup Iteration   2: 62652.997 ops/s
[info] # Warmup Iteration   3: 117102.846 ops/s
[info] Iteration   1: 118755.066 ops/s
[info]                  ·gc.alloc.rate:                   3994.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              52940.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3955.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52425.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.943 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.755 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 124266.154 ops/s
[info]                  ·gc.alloc.rate:                   4002.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              50680.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3633.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46009.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.826 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73.773 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 127093.397 ops/s
[info]                  ·gc.alloc.rate:                   4075.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              50463.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3981.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49300.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.673 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.100 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   4: 132799.660 ops/s
[info]                  ·gc.alloc.rate:                   4321.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              51214.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4323.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51237.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   5: 132588.425 ops/s
[info]                  ·gc.alloc.rate:               4307.260 MB/sec
[info]                  ·gc.alloc.rate.norm:          51102.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:      4034.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47864.909 B/op
[info]                  ·gc.count:                    12.000 counts
[info]                  ·gc.time:                     18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   127100.540 ±(99.9%) 22803.289 ops/s [Average]
[info]   (min, avg, max) = (118755.066, 127100.540, 132799.660), stdev = 5921.942
[info]   CI (99.9%): [104297.251, 149903.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4140.097 ±(99.9%) 624.542 MB/sec [Average]
[info]   (min, avg, max) = (3994.580, 4140.097, 4321.389), stdev = 162.192
[info]   CI (99.9%): [3515.554, 4764.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51280.332 ±(99.9%) 3762.984 B/op [Average]
[info]   (min, avg, max) = (50463.314, 51280.332, 52940.663), stdev = 977.235
[info]   CI (99.9%): [47517.347, 55043.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3985.581 ±(99.9%) 945.968 MB/sec [Average]
[info]   (min, avg, max) = (3633.363, 3985.581, 4323.301), stdev = 245.665
[info]   CI (99.9%): [3039.612, 4931.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49367.635 ±(99.9%) 9890.401 B/op [Average]
[info]   (min, avg, max) = (46009.343, 49367.635, 52425.710), stdev = 2568.506
[info]   CI (99.9%): [39477.233, 59258.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.093 ±(99.9%) 9.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.093, 5.826), stdev = 2.396
[info]   CI (99.9%): [≈ 0, 11.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   26.575 ±(99.9%) 116.642 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.575, 73.773), stdev = 30.291
[info]   CI (99.9%): [≈ 0, 143.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   60.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 12.000, 13.000), stdev = 0.707
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   116.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 23.200, 28.000), stdev = 3.701
[info]   CI (99.9%): [116.000, 116.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:15:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44062.192 ops/s
[info] # Warmup Iteration   2: 218020.068 ops/s
[info] # Warmup Iteration   3: 291150.869 ops/s
[info] Iteration   1: 329593.930 ops/s
[info]                  ·gc.alloc.rate:                   2592.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              12380.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2263.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10807.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.374 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 328998.939 ops/s
[info]                  ·gc.alloc.rate:                   2598.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              12432.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2598.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12431.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.591 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.610 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 327738.769 ops/s
[info]                  ·gc.alloc.rate:                   2608.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              12524.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2624.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12600.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 322807.889 ops/s
[info]                  ·gc.alloc.rate:                   2572.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              12538.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2325.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11333.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 328514.764 ops/s
[info]                  ·gc.alloc.rate:               2624.835 MB/sec
[info]                  ·gc.alloc.rate.norm:          12572.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2683.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12854.999 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   327530.858 ±(99.9%) 10497.730 ops/s [Average]
[info]   (min, avg, max) = (322807.889, 327530.858, 329593.930), stdev = 2726.227
[info]   CI (99.9%): [317033.128, 338028.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2599.516 ±(99.9%) 73.919 MB/sec [Average]
[info]   (min, avg, max) = (2572.825, 2599.516, 2624.835), stdev = 19.197
[info]   CI (99.9%): [2525.597, 2673.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12489.681 ±(99.9%) 307.420 B/op [Average]
[info]   (min, avg, max) = (12380.581, 12489.681, 12572.041), stdev = 79.836
[info]   CI (99.9%): [12182.261, 12797.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2499.106 ±(99.9%) 734.049 MB/sec [Average]
[info]   (min, avg, max) = (2263.369, 2499.106, 2683.912), stdev = 190.630
[info]   CI (99.9%): [1765.057, 3233.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12005.615 ±(99.9%) 3413.941 B/op [Average]
[info]   (min, avg, max) = (10807.619, 12005.615, 12854.999), stdev = 886.590
[info]   CI (99.9%): [8591.674, 15419.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.526 ±(99.9%) 2.717 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.526, 1.591), stdev = 0.706
[info]   CI (99.9%): [≈ 0, 3.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.518 ±(99.9%) 12.991 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.518, 7.610), stdev = 3.374
[info]   CI (99.9%): [≈ 0, 15.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 16.000), stdev = 2.588
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:15:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 489449.553 ops/s
[info] # Warmup Iteration   2: 1784727.290 ops/s
[info] # Warmup Iteration   3: 2045037.381 ops/s
[info] Iteration   1: 1988404.044 ops/s
[info]                  ·gc.alloc.rate:               729.169 MB/sec
[info]                  ·gc.alloc.rate.norm:          577.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 516.198 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 2052400.886 ops/s
[info]                  ·gc.alloc.rate:                   734.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              562.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     749.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2053340.318 ops/s
[info]                  ·gc.alloc.rate:               721.069 MB/sec
[info]                  ·gc.alloc.rate.norm:          552.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 501.669 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 2058838.350 ops/s
[info]                  ·gc.alloc.rate:                   721.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     500.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.299 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.522 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2075804.176 ops/s
[info]                  ·gc.alloc.rate:                   724.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     495.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.821 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   2045757.555 ±(99.9%) 128650.756 ops/s [Average]
[info]   (min, avg, max) = (1988404.044, 2045757.555, 2075804.176), stdev = 33410.193
[info]   CI (99.9%): [1917106.798, 2174408.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   726.039 ±(99.9%) 21.719 MB/sec [Average]
[info]   (min, avg, max) = (721.069, 726.039, 734.199), stdev = 5.640
[info]   CI (99.9%): [704.320, 747.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   558.561 ±(99.9%) 44.649 B/op [Average]
[info]   (min, avg, max) = (549.305, 558.561, 577.181), stdev = 11.595
[info]   CI (99.9%): [513.912, 603.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   718.965 ±(99.9%) 558.900 MB/sec [Average]
[info]   (min, avg, max) = (652.128, 718.965, 978.599), stdev = 145.145
[info]   CI (99.9%): [160.065, 1277.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   552.886 ±(99.9%) 424.833 B/op [Average]
[info]   (min, avg, max) = (495.975, 552.886, 749.783), stdev = 110.328
[info]   CI (99.9%): [128.054, 977.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.880 ±(99.9%) 5.509 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.880, 3.299), stdev = 1.431
[info]   CI (99.9%): [≈ 0, 6.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.671 ±(99.9%) 4.210 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.671, 2.522), stdev = 1.093
[info]   CI (99.9%): [≈ 0, 4.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 11.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:15:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 782902.374 ops/s
[info] # Warmup Iteration   2: 2610153.742 ops/s
[info] # Warmup Iteration   3: 2740223.907 ops/s
[info] Iteration   1: 2778351.345 ops/s
[info]                  ·gc.alloc.rate:                   968.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 2744162.224 ops/s
[info]                  ·gc.alloc.rate:               964.102 MB/sec
[info]                  ·gc.alloc.rate.norm:          552.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 566.427 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 2763733.923 ops/s
[info]                  ·gc.alloc.rate:                   967.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     563.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2766309.099 ops/s
[info]                  ·gc.alloc.rate:                   974.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     559.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2777557.397 ops/s
[info]                  ·gc.alloc.rate:                   971.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     555.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2766022.798 ±(99.9%) 53364.620 ops/s [Average]
[info]   (min, avg, max) = (2744162.224, 2766022.798, 2778351.345), stdev = 13858.622
[info]   CI (99.9%): [2712658.177, 2819387.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   969.360 ±(99.9%) 14.825 MB/sec [Average]
[info]   (min, avg, max) = (964.102, 969.360, 974.108), stdev = 3.850
[info]   CI (99.9%): [954.535, 984.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   551.545 ±(99.9%) 8.034 B/op [Average]
[info]   (min, avg, max) = (548.750, 551.545, 554.177), stdev = 2.086
[info]   CI (99.9%): [543.511, 559.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   985.040 ±(99.9%) 14.269 MB/sec [Average]
[info]   (min, avg, max) = (979.965, 985.040, 988.973), stdev = 3.706
[info]   CI (99.9%): [970.771, 999.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   560.478 ±(99.9%) 16.761 B/op [Average]
[info]   (min, avg, max) = (555.265, 560.478, 566.427), stdev = 4.353
[info]   CI (99.9%): [543.717, 577.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.835 ±(99.9%) 6.367 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.835, 3.781), stdev = 1.653
[info]   CI (99.9%): [≈ 0, 7.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.476 ±(99.9%) 3.626 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.476, 2.153), stdev = 0.942
[info]   CI (99.9%): [≈ 0, 4.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 12.000), stdev = 4.025
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:15:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1803016.444 ops/s
[info] # Warmup Iteration   2: 2802029.529 ops/s
[info] # Warmup Iteration   3: 2951136.971 ops/s
[info] Iteration   1: 2951744.728 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2943063.738 ops/s
[info]                  ·gc.alloc.rate:      0.971 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.519 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2942543.354 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2951895.431 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2953041.042 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   2948457.659 ±(99.9%) 19981.084 ops/s [Average]
[info]   (min, avg, max) = (2942543.354, 2948457.659, 2953041.042), stdev = 5189.024
[info]   CI (99.9%): [2928476.574, 2968438.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.194 ±(99.9%) 1.672 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.194, 0.971), stdev = 0.434
[info]   CI (99.9%): [≈ 0, 1.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.104 ±(99.9%) 0.894 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.104, 0.519), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 0.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:14:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34333.449 ops/s
[info] # Warmup Iteration   2: 519657.601 ops/s
[info] # Warmup Iteration   3: 721169.968 ops/s
[info] Iteration   1: 779850.283 ops/s
[info]                  ·gc.alloc.rate:                   4746.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              9575.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4687.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9454.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 784519.595 ops/s
[info]                  ·gc.alloc.rate:                   4748.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              9526.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4398.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8824.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 773850.950 ops/s
[info]                  ·gc.alloc.rate:                   4746.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              9654.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4754.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9670.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.169 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 792757.830 ops/s
[info]                  ·gc.alloc.rate:                   4839.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              9606.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4425.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8784.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 785484.546 ops/s
[info]                  ·gc.alloc.rate:                   4809.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              9637.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4766.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9549.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   783292.641 ±(99.9%) 27015.980 ops/s [Average]
[info]   (min, avg, max) = (773850.950, 783292.641, 792757.830), stdev = 7015.964
[info]   CI (99.9%): [756276.661, 810308.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   4778.502 ±(99.9%) 167.811 MB/sec [Average]
[info]   (min, avg, max) = (4746.908, 4778.502, 4839.662), stdev = 43.580
[info]   CI (99.9%): [4610.691, 4946.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9600.082 ±(99.9%) 195.932 B/op [Average]
[info]   (min, avg, max) = (9526.838, 9600.082, 9654.720), stdev = 50.883
[info]   CI (99.9%): [9404.150, 9796.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   4606.433 ±(99.9%) 693.701 MB/sec [Average]
[info]   (min, avg, max) = (4398.770, 4606.433, 4766.002), stdev = 180.152
[info]   CI (99.9%): [3912.731, 5300.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9256.587 ±(99.9%) 1618.133 B/op [Average]
[info]   (min, avg, max) = (8784.090, 9256.587, 9670.626), stdev = 420.224
[info]   CI (99.9%): [7638.454, 10874.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.134 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (0.084, 0.134, 0.169), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   68.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.600, 14.000), stdev = 0.548
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   100.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (19.000, 20.000, 21.000), stdev = 0.707
[info]   CI (99.9%): [100.000, 100.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:14:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3015.916 ops/s
[info] # Warmup Iteration   2: 19877.458 ops/s
[info] # Warmup Iteration   3: 29112.565 ops/s
[info] Iteration   1: 28538.222 ops/s
[info]                  ·gc.alloc.rate:                   1741.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              95982.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107754.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106.604 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 28660.721 ops/s
[info]                  ·gc.alloc.rate:                   1816.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              99718.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89442.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.773 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 152.265 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 28735.273 ops/s
[info]                  ·gc.alloc.rate:                   1830.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              100262.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106459.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.744 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.497 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 30343.920 ops/s
[info]                  ·gc.alloc.rate:                   1836.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              95233.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84303.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.159 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 30340.261 ops/s
[info]                  ·gc.alloc.rate:                   1807.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              93753.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85022.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.559 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   29323.679 ±(99.9%) 3590.098 ops/s [Average]
[info]   (min, avg, max) = (28538.222, 29323.679, 30343.920), stdev = 932.337
[info]   CI (99.9%): [25733.581, 32913.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1806.414 ±(99.9%) 145.590 MB/sec [Average]
[info]   (min, avg, max) = (1741.938, 1806.414, 1836.082), stdev = 37.809
[info]   CI (99.9%): [1660.824, 1952.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   96990.001 ±(99.9%) 11015.855 B/op [Average]
[info]   (min, avg, max) = (93753.038, 96990.001, 100262.850), stdev = 2860.783
[info]   CI (99.9%): [85974.145, 108005.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1758.535 ±(99.9%) 672.387 MB/sec [Average]
[info]   (min, avg, max) = (1625.354, 1758.535, 1955.581), stdev = 174.617
[info]   CI (99.9%): [1086.148, 2430.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   94596.348 ±(99.9%) 44658.020 B/op [Average]
[info]   (min, avg, max) = (84303.451, 94596.348, 107754.016), stdev = 11597.546
[info]   CI (99.9%): [49938.328, 139254.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.328 ±(99.9%) 4.589 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.328, 2.773), stdev = 1.192
[info]   CI (99.9%): [≈ 0, 5.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   72.817 ±(99.9%) 252.643 B/op [Average]
[info]   (min, avg, max) = (2.159, 72.817, 152.265), stdev = 65.611
[info]   CI (99.9%): [≈ 0, 325.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.400, 24.000), stdev = 7.021
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:14:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.738 ops/s
[info] # Warmup Iteration   2: 74385.420 ops/s
[info] # Warmup Iteration   3: 96112.974 ops/s
[info] Iteration   1: 102639.672 ops/s
[info]                  ·gc.alloc.rate:                   968.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              14851.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          880.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13493.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.428 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83.230 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 94824.538 ops/s
[info]                  ·gc.alloc.rate:                   919.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              15253.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          885.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14694.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.505 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   3: 98470.492 ops/s
[info]                  ·gc.alloc.rate:                   797.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              12749.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          888.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14198.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.175 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.774 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 93606.961 ops/s
[info]                  ·gc.alloc.rate:                   965.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              16240.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          898.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15114.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.086 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.334 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   5: 97203.090 ops/s
[info]                  ·gc.alloc.rate:                   771.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              12490.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          602.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9750.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.629 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.759 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   97348.951 ±(99.9%) 13565.803 ops/s [Average]
[info]   (min, avg, max) = (93606.961, 97348.951, 102639.672), stdev = 3522.996
[info]   CI (99.9%): [83783.148, 110914.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   884.605 ±(99.9%) 361.384 MB/sec [Average]
[info]   (min, avg, max) = (771.448, 884.605, 968.544), stdev = 93.850
[info]   CI (99.9%): [523.221, 1245.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   14317.043 ±(99.9%) 6285.451 B/op [Average]
[info]   (min, avg, max) = (12490.302, 14317.043, 16240.788), stdev = 1632.312
[info]   CI (99.9%): [8031.593, 20602.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   831.040 ±(99.9%) 493.278 MB/sec [Average]
[info]   (min, avg, max) = (602.214, 831.040, 898.979), stdev = 128.103
[info]   CI (99.9%): [337.761, 1324.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   13450.160 ±(99.9%) 8296.512 B/op [Average]
[info]   (min, avg, max) = (9750.282, 13450.160, 15114.861), stdev = 2154.578
[info]   CI (99.9%): [5153.648, 21746.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   4.065 ±(99.9%) 7.329 MB/sec [Average]
[info]   (min, avg, max) = (1.175, 4.065, 6.086), stdev = 1.903
[info]   CI (99.9%): [≈ 0, 11.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   65.920 ±(99.9%) 120.237 B/op [Average]
[info]   (min, avg, max) = (18.774, 65.920, 102.334), stdev = 31.225
[info]   CI (99.9%): [≈ 0, 186.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   126.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 25.200, 32.000), stdev = 8.871
[info]   CI (99.9%): [126.000, 126.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:14:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11394.101 ops/s
[info] # Warmup Iteration   2: 40166.015 ops/s
[info] # Warmup Iteration   3: 58431.606 ops/s
[info] Iteration   1: 60519.265 ops/s
[info]                  ·gc.alloc.rate:                   1362.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              35428.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33712.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.885 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   2: 78230.022 ops/s
[info]                  ·gc.alloc.rate:                   1378.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              27726.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25986.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.864 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.506 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 71680.974 ops/s
[info]                  ·gc.alloc.rate:                   1462.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              32105.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1614.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35424.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.536 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.772 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   4: 77018.384 ops/s
[info]                  ·gc.alloc.rate:                   1411.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              28826.206 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1251.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25552.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.926 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.339 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   5: 68947.793 ops/s
[info]                  ·gc.alloc.rate:                   1333.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              30430.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1235.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28191.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.846 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   71279.287 ±(99.9%) 27406.283 ops/s [Average]
[info]   (min, avg, max) = (60519.265, 71279.287, 78230.022), stdev = 7117.325
[info]   CI (99.9%): [43873.004, 98685.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1389.654 ±(99.9%) 191.555 MB/sec [Average]
[info]   (min, avg, max) = (1333.238, 1389.654, 1462.962), stdev = 49.746
[info]   CI (99.9%): [1198.099, 1581.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   30903.265 ±(99.9%) 11640.383 B/op [Average]
[info]   (min, avg, max) = (27726.124, 30903.265, 35428.223), stdev = 3022.970
[info]   CI (99.9%): [19262.882, 42543.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1337.734 ±(99.9%) 603.604 MB/sec [Average]
[info]   (min, avg, max) = (1235.178, 1337.734, 1614.211), stdev = 156.754
[info]   CI (99.9%): [734.130, 1941.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29773.480 ±(99.9%) 17446.945 B/op [Average]
[info]   (min, avg, max) = (25552.114, 29773.480, 35424.964), stdev = 4530.916
[info]   CI (99.9%): [12326.535, 47220.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.122 ±(99.9%) 5.749 MB/sec [Average]
[info]   (min, avg, max) = (0.536, 2.122, 4.594), stdev = 1.493
[info]   CI (99.9%): [≈ 0, 7.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   47.469 ±(99.9%) 132.618 B/op [Average]
[info]   (min, avg, max) = (11.772, 47.469, 104.846), stdev = 34.441
[info]   CI (99.9%): [≈ 0, 180.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   129.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 25.800, 30.000), stdev = 5.263
[info]   CI (99.9%): [129.000, 129.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:14:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34077.353 ops/s
[info] # Warmup Iteration   2: 75716.835 ops/s
[info] # Warmup Iteration   3: 95674.306 ops/s
[info] Iteration   1: 96691.490 ops/s
[info]                  ·gc.alloc.rate:                   1622.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              26403.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27204.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      17.619 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 286.651 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         78.000 ms
[info] Iteration   2: 106389.196 ops/s
[info]                  ·gc.alloc.rate:                   991.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              14673.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1083.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16034.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      15.339 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226.902 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 126917.250 ops/s
[info]                  ·gc.alloc.rate:                   1085.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              13457.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1101.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13654.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.220 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   4: 134756.004 ops/s
[info]                  ·gc.alloc.rate:                   823.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              9614.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          845.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9872.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.109 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.303 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 135758.124 ops/s
[info]                  ·gc.alloc.rate:                   819.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              9495.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          570.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6614.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.506 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.831 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   120102.413 ±(99.9%) 67863.015 ops/s [Average]
[info]   (min, avg, max) = (96691.490, 120102.413, 135758.124), stdev = 17623.809
[info]   CI (99.9%): [52239.398, 187965.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1068.481 ±(99.9%) 1271.069 MB/sec [Average]
[info]   (min, avg, max) = (819.099, 1068.481, 1622.912), stdev = 330.093
[info]   CI (99.9%): [≈ 0, 2339.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   14728.678 ±(99.9%) 26640.785 B/op [Average]
[info]   (min, avg, max) = (9495.421, 14728.678, 26403.451), stdev = 6918.527
[info]   CI (99.9%): [≈ 0, 41369.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1054.635 ±(99.9%) 1567.041 MB/sec [Average]
[info]   (min, avg, max) = (570.559, 1054.635, 1672.157), stdev = 406.955
[info]   CI (99.9%): [≈ 0, 2621.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   14676.078 ±(99.9%) 30315.014 B/op [Average]
[info]   (min, avg, max) = (6614.221, 14676.078, 27204.620), stdev = 7872.713
[info]   CI (99.9%): [≈ 0, 44991.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   9.076 ±(99.9%) 26.421 MB/sec [Average]
[info]   (min, avg, max) = (3.109, 9.076, 17.619), stdev = 6.861
[info]   CI (99.9%): [≈ 0, 35.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   132.182 ±(99.9%) 447.056 B/op [Average]
[info]   (min, avg, max) = (36.303, 132.182, 286.651), stdev = 116.099
[info]   CI (99.9%): [≈ 0, 579.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 1.483
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   154.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 30.800, 78.000), stdev = 27.417
[info]   CI (99.9%): [154.000, 154.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:13:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1628.114 ops/s
[info] # Warmup Iteration   2: 15369.918 ops/s
[info] # Warmup Iteration   3: 50639.279 ops/s
[info] Iteration   1: 48682.250 ops/s
[info]                  ·gc.alloc.rate:                   2117.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              68442.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63056.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.346 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 49493.992 ops/s
[info]                  ·gc.alloc.rate:                   2181.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              69375.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73200.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.132 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 48890.242 ops/s
[info]                  ·gc.alloc.rate:                   2067.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              66553.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63957.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.340 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 50045.846 ops/s
[info]                  ·gc.alloc.rate:                   2099.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              66016.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62961.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.619 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 48225.954 ops/s
[info]                  ·gc.alloc.rate:                   2044.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              66709.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65741.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.359 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   49067.657 ±(99.9%) 2741.196 ops/s [Average]
[info]   (min, avg, max) = (48225.954, 49067.657, 50045.846), stdev = 711.880
[info]   CI (99.9%): [46326.460, 51808.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2102.018 ±(99.9%) 202.807 MB/sec [Average]
[info]   (min, avg, max) = (2044.569, 2102.018, 2181.800), stdev = 52.668
[info]   CI (99.9%): [1899.211, 2304.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   67419.523 ±(99.9%) 5476.688 B/op [Average]
[info]   (min, avg, max) = (66016.739, 67419.523, 69375.045), stdev = 1422.278
[info]   CI (99.9%): [61942.836, 72896.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2051.266 ±(99.9%) 547.913 MB/sec [Average]
[info]   (min, avg, max) = (1950.440, 2051.266, 2302.109), stdev = 142.291
[info]   CI (99.9%): [1503.353, 2599.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65783.500 ±(99.9%) 16533.892 B/op [Average]
[info]   (min, avg, max) = (62961.905, 65783.500, 73200.557), stdev = 4293.799
[info]   CI (99.9%): [49249.608, 82317.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.596 ±(99.9%) 4.684 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.596, 2.772), stdev = 1.216
[info]   CI (99.9%): [≈ 0, 5.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   18.959 ±(99.9%) 148.915 B/op [Average]
[info]   (min, avg, max) = (1.340, 18.959, 88.132), stdev = 38.673
[info]   CI (99.9%): [≈ 0, 167.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.800, 13.000), stdev = 2.168
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9982.951 ops/s
[info] # Warmup Iteration   2: 25113.940 ops/s
[info] # Warmup Iteration   3: 38766.028 ops/s
[info] Iteration   1: 40612.949 ops/s
[info]                  ·gc.alloc.rate:                   1050.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              40695.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37742.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.119 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 43867.051 ops/s
[info]                  ·gc.alloc.rate:                   783.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              28106.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34933.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.138 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.802 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 43025.502 ops/s
[info]                  ·gc.alloc.rate:                   698.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              25541.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23831.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119.555 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 43279.921 ops/s
[info]                  ·gc.alloc.rate:                   707.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              25731.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23593.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.383 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 43102.778 ops/s
[info]                  ·gc.alloc.rate:                   694.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              25354.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23594.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.203 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   42777.640 ±(99.9%) 4829.503 ops/s [Average]
[info]   (min, avg, max) = (40612.949, 42777.640, 43867.051), stdev = 1254.207
[info]   CI (99.9%): [37948.137, 47607.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   786.853 ±(99.9%) 584.050 MB/sec [Average]
[info]   (min, avg, max) = (694.443, 786.853, 1050.168), stdev = 151.676
[info]   CI (99.9%): [202.804, 1370.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   29085.886 ±(99.9%) 25358.379 B/op [Average]
[info]   (min, avg, max) = (25354.422, 29085.886, 40695.328), stdev = 6585.490
[info]   CI (99.9%): [3727.507, 54444.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   778.945 ±(99.9%) 686.060 MB/sec [Average]
[info]   (min, avg, max) = (646.244, 778.945, 974.250), stdev = 178.168
[info]   CI (99.9%): [92.885, 1465.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   28739.142 ±(99.9%) 26985.601 B/op [Average]
[info]   (min, avg, max) = (23593.444, 28739.142, 37742.334), stdev = 7008.075
[info]   CI (99.9%): [1753.541, 55724.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.447 ±(99.9%) 4.678 MB/sec [Average]
[info]   (min, avg, max) = (0.395, 1.447, 3.268), stdev = 1.215
[info]   CI (99.9%): [≈ 0, 6.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   53.612 ±(99.9%) 173.572 B/op [Average]
[info]   (min, avg, max) = (14.383, 53.612, 119.555), stdev = 45.076
[info]   CI (99.9%): [≈ 0, 227.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.200, 16.000), stdev = 6.058
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:13:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11294.016 ops/s
[info] # Warmup Iteration   2: 30898.517 ops/s
[info] # Warmup Iteration   3: 38154.124 ops/s
[info] Iteration   1: 38200.523 ops/s
[info]                  ·gc.alloc.rate:                   930.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              38325.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39588.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 43881.721 ops/s
[info]                  ·gc.alloc.rate:                   455.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              16342.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          320.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11503.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.909 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 40771.154 ops/s
[info]                  ·gc.alloc.rate:                   644.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              24896.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24789.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.764 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 43744.692 ops/s
[info]                  ·gc.alloc.rate:                   464.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              16711.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23152.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.864 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 42505.541 ops/s
[info]                  ·gc.alloc.rate:                   654.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              24236.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23876.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   41820.726 ±(99.9%) 9158.097 ops/s [Average]
[info]   (min, avg, max) = (38200.523, 41820.726, 43881.721), stdev = 2378.329
[info]   CI (99.9%): [32662.629, 50978.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   630.023 ±(99.9%) 742.449 MB/sec [Average]
[info]   (min, avg, max) = (455.848, 630.023, 930.256), stdev = 192.812
[info]   CI (99.9%): [≈ 0, 1372.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   24102.473 ±(99.9%) 34321.928 B/op [Average]
[info]   (min, avg, max) = (16342.613, 24102.473, 38325.437), stdev = 8913.296
[info]   CI (99.9%): [≈ 0, 58424.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   642.461 ±(99.9%) 871.397 MB/sec [Average]
[info]   (min, avg, max) = (320.870, 642.461, 960.922), stdev = 226.299
[info]   CI (99.9%): [≈ 0, 1513.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24581.932 ±(99.9%) 38450.469 B/op [Average]
[info]   (min, avg, max) = (11503.517, 24581.932, 39588.842), stdev = 9985.465
[info]   CI (99.9%): [≈ 0, 63032.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.543 ±(99.9%) 5.820 MB/sec [Average]
[info]   (min, avg, max) = (0.123, 1.543, 3.999), stdev = 1.511
[info]   CI (99.9%): [≈ 0, 7.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   58.384 ±(99.9%) 218.385 B/op [Average]
[info]   (min, avg, max) = (4.764, 58.384, 148.090), stdev = 56.714
[info]   CI (99.9%): [≈ 0, 276.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 16.000), stdev = 4.159
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:13:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14882.465 ops/s
[info] # Warmup Iteration   2: 25884.933 ops/s
[info] # Warmup Iteration   3: 39283.779 ops/s
[info] Iteration   1: 46719.321 ops/s
[info]                  ·gc.alloc.rate:                   658.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              22184.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          636.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21453.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91.603 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 46101.968 ops/s
[info]                  ·gc.alloc.rate:                   481.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              16437.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          638.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21808.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.613 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 49136.114 ops/s
[info]                  ·gc.alloc.rate:               501.142 MB/sec
[info]                  ·gc.alloc.rate.norm:          16045.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10273.881 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 47923.585 ops/s
[info]                  ·gc.alloc.rate:                   499.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              16408.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21089.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.684 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 49585.421 ops/s
[info]                  ·gc.alloc.rate:                   507.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              16112.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10202.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.661 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   47893.282 ±(99.9%) 5774.641 ops/s [Average]
[info]   (min, avg, max) = (46101.968, 47893.282, 49585.421), stdev = 1499.656
[info]   CI (99.9%): [42118.640, 53667.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   529.705 ±(99.9%) 279.820 MB/sec [Average]
[info]   (min, avg, max) = (481.514, 529.705, 658.533), stdev = 72.668
[info]   CI (99.9%): [249.884, 809.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   17437.812 ±(99.9%) 10240.564 B/op [Average]
[info]   (min, avg, max) = (16045.567, 17437.812, 22184.996), stdev = 2659.442
[info]   CI (99.9%): [7197.248, 27678.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   512.039 ±(99.9%) 671.015 MB/sec [Average]
[info]   (min, avg, max) = (320.878, 512.039, 642.218), stdev = 174.260
[info]   CI (99.9%): [≈ 0, 1183.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   16965.357 ±(99.9%) 23667.903 B/op [Average]
[info]   (min, avg, max) = (10202.212, 16965.357, 21808.380), stdev = 6146.479
[info]   CI (99.9%): [≈ 0, 40633.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.732 ±(99.9%) 4.525 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.732, 2.719), stdev = 1.175
[info]   CI (99.9%): [≈ 0, 5.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24.712 ±(99.9%) 152.523 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.712, 91.603), stdev = 39.610
[info]   CI (99.9%): [≈ 0, 177.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 12.000), stdev = 3.114
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:13:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14852.978 ops/s
[info] # Warmup Iteration   2: 31825.820 ops/s
[info] # Warmup Iteration   3: 43007.390 ops/s
[info] Iteration   1: 46820.243 ops/s
[info]                  ·gc.alloc.rate:               696.780 MB/sec
[info]                  ·gc.alloc.rate.norm:          23422.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21799.149 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 49287.463 ops/s
[info]                  ·gc.alloc.rate:                   583.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              18594.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20612.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.683 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 49682.571 ops/s
[info]                  ·gc.alloc.rate:               534.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          16923.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10276.226 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 48287.945 ops/s
[info]                  ·gc.alloc.rate:                   527.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              17180.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21189.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.377 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 49067.221 ops/s
[info]                  ·gc.alloc.rate:                   531.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              17042.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20854.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.589 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   48629.089 ±(99.9%) 4358.013 ops/s [Average]
[info]   (min, avg, max) = (46820.243, 48629.089, 49682.571), stdev = 1131.762
[info]   CI (99.9%): [44271.075, 52987.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   574.577 ±(99.9%) 277.272 MB/sec [Average]
[info]   (min, avg, max) = (527.326, 574.577, 696.780), stdev = 72.007
[info]   CI (99.9%): [297.305, 851.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   18632.614 ±(99.9%) 10634.467 B/op [Average]
[info]   (min, avg, max) = (16923.012, 18632.614, 23422.917), stdev = 2761.737
[info]   CI (99.9%): [7998.146, 29267.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   583.989 ±(99.9%) 558.821 MB/sec [Average]
[info]   (min, avg, max) = (324.398, 583.989, 650.373), stdev = 145.124
[info]   CI (99.9%): [25.167, 1142.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   18946.258 ±(99.9%) 18741.614 B/op [Average]
[info]   (min, avg, max) = (10276.226, 18946.258, 21799.149), stdev = 4867.138
[info]   CI (99.9%): [204.643, 37687.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.173 ±(99.9%) 5.394 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.173, 3.417), stdev = 1.401
[info]   CI (99.9%): [≈ 0, 6.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   37.730 ±(99.9%) 173.126 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37.730, 109.589), stdev = 44.960
[info]   CI (99.9%): [≈ 0, 210.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 10.000), stdev = 2.168
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:12:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3930.072 ops/s
[info] # Warmup Iteration   2: 8768.383 ops/s
[info] # Warmup Iteration   3: 10060.351 ops/s
[info] Iteration   1: 16454.077 ops/s
[info]                  ·gc.alloc.rate:                   1178.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              112660.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1418.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135552.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.721 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1024.738 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         50.000 ms
[info] Iteration   2: 16517.867 ops/s
[info]                  ·gc.alloc.rate:                   1213.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              115587.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1156.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110176.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.729 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 14941.278 ops/s
[info]                  ·gc.alloc.rate:                   1774.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              186929.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1764.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185847.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      15.931 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1677.913 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         47.000 ms
[info] Iteration   4: 16639.969 ops/s
[info]                  ·gc.alloc.rate:                   1175.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              111156.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1152.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108996.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      17.590 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1663.699 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 16390.813 ops/s
[info]                  ·gc.alloc.rate:                   1431.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              137931.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1156.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111419.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.998 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   16188.801 ±(99.9%) 2708.711 ops/s [Average]
[info]   (min, avg, max) = (14941.278, 16188.801, 16639.969), stdev = 703.444
[info]   CI (99.9%): [13480.090, 18897.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1354.680 ±(99.9%) 992.213 MB/sec [Average]
[info]   (min, avg, max) = (1175.240, 1354.680, 1774.765), stdev = 257.675
[info]   CI (99.9%): [362.467, 2346.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   132853.037 ±(99.9%) 123680.744 B/op [Average]
[info]   (min, avg, max) = (111156.516, 132853.037, 186929.634), stdev = 32119.496
[info]   CI (99.9%): [9172.293, 256533.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1329.569 ±(99.9%) 1033.895 MB/sec [Average]
[info]   (min, avg, max) = (1152.407, 1329.569, 1764.492), stdev = 268.499
[info]   CI (99.9%): [295.673, 2363.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   130398.658 ±(99.9%) 126666.942 B/op [Average]
[info]   (min, avg, max) = (108996.964, 130398.658, 185847.573), stdev = 32895.002
[info]   CI (99.9%): [3731.716, 257065.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   8.862 ±(99.9%) 32.528 MB/sec [Average]
[info]   (min, avg, max) = (0.029, 8.862, 17.590), stdev = 8.447
[info]   CI (99.9%): [≈ 0, 41.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   874.615 ±(99.9%) 3226.645 B/op [Average]
[info]   (min, avg, max) = (2.729, 874.615, 1677.913), stdev = 837.950
[info]   CI (99.9%): [≈ 0, 4101.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   150.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 30.000, 50.000), stdev = 17.421
[info]   CI (99.9%): [150.000, 150.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:12:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1592.017 ops/s
[info] # Warmup Iteration   2: 9258.659 ops/s
[info] # Warmup Iteration   3: 9956.348 ops/s
[info] Iteration   1: 12741.606 ops/s
[info]                  ·gc.alloc.rate:                   997.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              123234.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          875.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108198.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.267 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 774.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         40.000 ms
[info] Iteration   2: 16857.730 ops/s
[info]                  ·gc.alloc.rate:                   1061.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              99100.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1131.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105659.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.765 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         43.000 ms
[info] Iteration   3: 16388.861 ops/s
[info]                  ·gc.alloc.rate:                   1053.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              101191.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          856.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82263.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.989 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   4: 15233.747 ops/s
[info]                  ·gc.alloc.rate:                   1023.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              105722.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1159.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119750.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 953.270 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   5: 16419.763 ops/s
[info]                  ·gc.alloc.rate:                        1085.104 MB/sec
[info]                  ·gc.alloc.rate.norm:                   104010.997 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.021 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.029 B/op
[info]                  ·gc.churn.Metaspace:                   0.058 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              5.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:               908.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          87098.744 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  46.428 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             4450.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           7.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      684.692 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              49.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   15528.341 ±(99.9%) 6430.425 ops/s [Average]
[info]   (min, avg, max) = (12741.606, 15528.341, 16857.730), stdev = 1669.961
[info]   CI (99.9%): [9097.917, 21958.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1044.294 ±(99.9%) 131.457 MB/sec [Average]
[info]   (min, avg, max) = (997.709, 1044.294, 1085.104), stdev = 34.139
[info]   CI (99.9%): [912.837, 1175.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   106651.944 ±(99.9%) 37016.600 B/op [Average]
[info]   (min, avg, max) = (99100.553, 106651.944, 123234.018), stdev = 9613.093
[info]   CI (99.9%): [69635.345, 143668.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.406 ±(99.9%) 3.494 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.406, 2.029), stdev = 0.907
[info]   CI (99.9%): [≈ 0, 3.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.012 ±(99.9%) 0.100 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.058), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   1.113 ±(99.9%) 9.586 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.113, 5.566), stdev = 2.489
[info]   CI (99.9%): [≈ 0, 10.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   986.448 ±(99.9%) 564.746 MB/sec [Average]
[info]   (min, avg, max) = (856.671, 986.448, 1159.123), stdev = 146.663
[info]   CI (99.9%): [421.701, 1551.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   100594.265 ±(99.9%) 59920.019 B/op [Average]
[info]   (min, avg, max) = (82263.832, 100594.265, 119750.738), stdev = 15561.039
[info]   CI (99.9%): [40674.246, 160514.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   9.286 ±(99.9%) 79.952 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 9.286, 46.428), stdev = 20.763
[info]   CI (99.9%): [≈ 0, 89.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   890.056 ±(99.9%) 7663.648 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 890.056, 4450.278), stdev = 1990.225
[info]   CI (99.9%): [≈ 0, 8553.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.684 ±(99.9%) 15.673 MB/sec [Average]
[info]   (min, avg, max) = (0.072, 4.684, 9.227), stdev = 4.070
[info]   CI (99.9%): [≈ 0, 20.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   497.370 ±(99.9%) 1661.357 B/op [Average]
[info]   (min, avg, max) = (6.765, 497.370, 953.270), stdev = 431.449
[info]   CI (99.9%): [≈ 0, 2158.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   201.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (33.000, 40.200, 49.000), stdev = 6.221
[info]   CI (99.9%): [201.000, 201.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:12:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79202.184 ops/s
[info] # Warmup Iteration   2: 94129.562 ops/s
[info] # Warmup Iteration   3: 150323.281 ops/s
[info] Iteration   1: 149897.002 ops/s
[info]                  ·gc.alloc.rate:                   398.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              4185.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6756.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.656 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 155076.564 ops/s
[info]                  ·gc.alloc.rate:               428.144 MB/sec
[info]                  ·gc.alloc.rate.norm:          4345.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3268.730 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 151143.854 ops/s
[info]                  ·gc.alloc.rate:                   404.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              4210.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3353.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 158360.325 ops/s
[info]                  ·gc.alloc.rate:               430.833 MB/sec
[info]                  ·gc.alloc.rate.norm:          4275.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6394.922 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 159484.920 ops/s
[info]                  ·gc.alloc.rate:               421.364 MB/sec
[info]                  ·gc.alloc.rate.norm:          4158.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3194.934 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   154792.533 ±(99.9%) 16349.078 ops/s [Average]
[info]   (min, avg, max) = (149897.002, 154792.533, 159484.920), stdev = 4245.804
[info]   CI (99.9%): [138443.455, 171141.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   416.668 ±(99.9%) 55.489 MB/sec [Average]
[info]   (min, avg, max) = (398.659, 416.668, 430.833), stdev = 14.410
[info]   CI (99.9%): [361.179, 472.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4235.046 ±(99.9%) 290.080 B/op [Average]
[info]   (min, avg, max) = (4158.163, 4235.046, 4345.046), stdev = 75.333
[info]   CI (99.9%): [3944.966, 4525.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   451.156 ±(99.9%) 677.615 MB/sec [Average]
[info]   (min, avg, max) = (322.086, 451.156, 644.360), stdev = 175.974
[info]   CI (99.9%): [≈ 0, 1128.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4593.789 ±(99.9%) 6987.419 B/op [Average]
[info]   (min, avg, max) = (3194.934, 4593.789, 6756.478), stdev = 1814.611
[info]   CI (99.9%): [≈ 0, 11581.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 1.097 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.656), stdev = 0.285
[info]   CI (99.9%): [≈ 0, 1.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 2.191
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:12:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1928.208 ops/s
[info] # Warmup Iteration   2: 6985.828 ops/s
[info] # Warmup Iteration   3: 9775.208 ops/s
[info] Iteration   1: 16279.827 ops/s
[info]                  ·gc.alloc.rate:                   1439.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              139139.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1253.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121202.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 15598.702 ops/s
[info]                  ·gc.alloc.rate:                   1386.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              139910.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1557.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     157074.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.100 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 15758.834 ops/s
[info]                  ·gc.alloc.rate:                   1410.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              140911.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1245.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124410.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.079 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 16476.736 ops/s
[info]                  ·gc.alloc.rate:                   1469.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              140409.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1553.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148378.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.626 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1014.945 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 16398.892 ops/s
[info]                  ·gc.alloc.rate:               1467.091 MB/sec
[info]                  ·gc.alloc.rate.norm:          140792.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1225.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 117630.767 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   16102.598 ±(99.9%) 1529.709 ops/s [Average]
[info]   (min, avg, max) = (15598.702, 16102.598, 16476.736), stdev = 397.261
[info]   CI (99.9%): [14572.889, 17632.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1434.821 ±(99.9%) 138.416 MB/sec [Average]
[info]   (min, avg, max) = (1386.867, 1434.821, 1469.979), stdev = 35.946
[info]   CI (99.9%): [1296.405, 1573.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   140232.382 ±(99.9%) 2792.757 B/op [Average]
[info]   (min, avg, max) = (139139.147, 140232.382, 140911.074), stdev = 725.270
[info]   CI (99.9%): [137439.625, 143025.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1367.116 ±(99.9%) 662.362 MB/sec [Average]
[info]   (min, avg, max) = (1225.743, 1367.116, 1557.009), stdev = 172.013
[info]   CI (99.9%): [704.754, 2029.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   133739.461 ±(99.9%) 68410.632 B/op [Average]
[info]   (min, avg, max) = (117630.767, 133739.461, 157074.682), stdev = 17766.024
[info]   CI (99.9%): [65328.829, 202150.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.154 ±(99.9%) 18.236 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.154, 10.626), stdev = 4.736
[info]   CI (99.9%): [≈ 0, 20.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   205.837 ±(99.9%) 1741.728 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 205.837, 1014.945), stdev = 452.321
[info]   CI (99.9%): [≈ 0, 1947.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 15.400, 22.000), stdev = 6.465
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:12:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14008.596 ops/s
[info] # Warmup Iteration   2: 30964.337 ops/s
[info] # Warmup Iteration   3: 62465.190 ops/s
[info] Iteration   1: 54623.875 ops/s
[info]                  ·gc.alloc.rate:                   1453.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              41873.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46744.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.186 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 69797.301 ops/s
[info]                  ·gc.alloc.rate:                   1619.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              36504.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29133.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.695 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 69996.357 ops/s
[info]                  ·gc.alloc.rate:                   1633.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              36727.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1619.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36408.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.020 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 70857.776 ops/s
[info]                  ·gc.alloc.rate:                   1636.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              36351.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36073.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.554 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.952 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 70845.571 ops/s
[info]                  ·gc.alloc.rate:               1641.049 MB/sec
[info]                  ·gc.alloc.rate.norm:          36454.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1620.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36005.128 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   67224.176 ±(99.9%) 27186.684 ops/s [Average]
[info]   (min, avg, max) = (54623.875, 67224.176, 70857.776), stdev = 7060.296
[info]   CI (99.9%): [40037.492, 94410.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1596.706 ±(99.9%) 310.103 MB/sec [Average]
[info]   (min, avg, max) = (1453.397, 1596.706, 1641.049), stdev = 80.533
[info]   CI (99.9%): [1286.604, 1906.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   37582.417 ±(99.9%) 9252.254 B/op [Average]
[info]   (min, avg, max) = (36351.818, 37582.417, 41873.614), stdev = 2402.781
[info]   CI (99.9%): [28330.163, 46834.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1555.752 ±(99.9%) 567.446 MB/sec [Average]
[info]   (min, avg, max) = (1292.158, 1555.752, 1624.003), stdev = 147.364
[info]   CI (99.9%): [988.306, 2123.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   36873.215 ±(99.9%) 24273.945 B/op [Average]
[info]   (min, avg, max) = (29133.787, 36873.215, 46744.767), stdev = 6303.866
[info]   CI (99.9%): [12599.270, 61147.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.256 ±(99.9%) 5.362 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.256, 3.554), stdev = 1.392
[info]   CI (99.9%): [≈ 0, 6.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   29.571 ±(99.9%) 119.405 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 29.571, 78.952), stdev = 31.009
[info]   CI (99.9%): [≈ 0, 148.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   83.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 16.600, 32.000), stdev = 9.397
[info]   CI (99.9%): [83.000, 83.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19780.480 ops/s
[info] # Warmup Iteration   2: 55892.704 ops/s
[info] # Warmup Iteration   3: 94053.988 ops/s
[info] Iteration   1: 104138.376 ops/s
[info]                  ·gc.alloc.rate:                   1382.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              20891.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19657.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.375 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 104206.953 ops/s
[info]                  ·gc.alloc.rate:                        1390.350 MB/sec
[info]                  ·gc.alloc.rate.norm:                   20990.238 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.014 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.218 B/op
[info]                  ·gc.churn.Metaspace:                   0.042 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1612.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          24340.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.855 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      73.293 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              48.000 ms
[info] Iteration   3: 107080.455 ops/s
[info]                  ·gc.alloc.rate:                   1416.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              20817.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18995.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 107116.023 ops/s
[info]                  ·gc.alloc.rate:                   1419.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              20858.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19037.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 107010.644 ops/s
[info]                  ·gc.alloc.rate:               1424.476 MB/sec
[info]                  ·gc.alloc.rate.norm:          20948.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19183.120 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   105910.490 ±(99.9%) 6111.159 ops/s [Average]
[info]   (min, avg, max) = (104138.376, 105910.490, 107116.023), stdev = 1587.048
[info]   CI (99.9%): [99799.332, 112021.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1406.800 ±(99.9%) 73.439 MB/sec [Average]
[info]   (min, avg, max) = (1382.355, 1406.800, 1424.476), stdev = 19.072
[info]   CI (99.9%): [1333.362, 1480.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20901.175 ±(99.9%) 267.048 B/op [Average]
[info]   (min, avg, max) = (20817.083, 20901.175, 20990.238), stdev = 69.351
[info]   CI (99.9%): [20634.127, 21168.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.044 ±(99.9%) 0.375 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.218), stdev = 0.097
[info]   CI (99.9%): [≈ 0, 0.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.127 ±(99.9%) 1.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.127, 0.635), stdev = 0.284
[info]   CI (99.9%): [≈ 0, 1.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1361.252 ±(99.9%) 540.622 MB/sec [Average]
[info]   (min, avg, max) = (1292.886, 1361.252, 1612.280), stdev = 140.398
[info]   CI (99.9%): [820.630, 1901.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20242.793 ±(99.9%) 8878.956 B/op [Average]
[info]   (min, avg, max) = (18995.410, 20242.793, 24340.738), stdev = 2305.837
[info]   CI (99.9%): [11363.837, 29121.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.342 ±(99.9%) 8.135 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.342, 4.855), stdev = 2.113
[info]   CI (99.9%): [≈ 0, 9.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.256 ±(99.9%) 122.827 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.256, 73.293), stdev = 31.898
[info]   CI (99.9%): [≈ 0, 143.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   82.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 16.400, 48.000), stdev = 18.188
[info]   CI (99.9%): [82.000, 82.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:11:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109191.340 ops/s
[info] # Warmup Iteration   2: 205683.051 ops/s
[info] # Warmup Iteration   3: 237373.582 ops/s
[info] Iteration   1: 237219.482 ops/s
[info]                  ·gc.alloc.rate:               381.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          2533.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2172.305 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 237124.917 ops/s
[info]                  ·gc.alloc.rate:               382.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          2535.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2173.111 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 237646.847 ops/s
[info]                  ·gc.alloc.rate:               384.724 MB/sec
[info]                  ·gc.alloc.rate.norm:          2547.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2170.526 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 236682.789 ops/s
[info]                  ·gc.alloc.rate:                   396.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              2634.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4360.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 228371.747 ops/s
[info]                  ·gc.alloc.rate:                   383.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              2640.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2260.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   235409.156 ±(99.9%) 15205.856 ops/s [Average]
[info]   (min, avg, max) = (228371.747, 235409.156, 237646.847), stdev = 3948.912
[info]   CI (99.9%): [220203.301, 250615.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   385.571 ±(99.9%) 23.238 MB/sec [Average]
[info]   (min, avg, max) = (381.784, 385.571, 396.169), stdev = 6.035
[info]   CI (99.9%): [362.332, 408.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2578.262 ±(99.9%) 208.441 B/op [Average]
[info]   (min, avg, max) = (2533.056, 2578.262, 2640.032), stdev = 54.131
[info]   CI (99.9%): [2369.821, 2786.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   393.295 ±(99.9%) 565.105 MB/sec [Average]
[info]   (min, avg, max) = (327.411, 393.295, 655.819), stdev = 146.756
[info]   CI (99.9%): [≈ 0, 958.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2627.568 ±(99.9%) 3734.176 B/op [Average]
[info]   (min, avg, max) = (2170.526, 2627.568, 4360.946), stdev = 969.754
[info]   CI (99.9%): [≈ 0, 6361.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.720 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.114, 0.430), stdev = 0.187
[info]   CI (99.9%): [≈ 0, 0.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 7.000), stdev = 1.342
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:11:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 115472.181 ops/s
[info] # Warmup Iteration   2: 250910.949 ops/s
[info] # Warmup Iteration   3: 287810.033 ops/s
[info] Iteration   1: 278988.551 ops/s
[info]                  ·gc.alloc.rate:      3.315 MB/sec
[info]                  ·gc.alloc.rate.norm: 18.695 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 277796.091 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 285780.833 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 286191.602 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 285703.549 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   282892.125 ±(99.9%) 15916.572 ops/s [Average]
[info]   (min, avg, max) = (277796.091, 282892.125, 286191.602), stdev = 4133.483
[info]   CI (99.9%): [266975.553, 298808.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.663 ±(99.9%) 5.707 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.663, 3.315), stdev = 1.482
[info]   CI (99.9%): [≈ 0, 6.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   3.740 ±(99.9%) 32.191 B/op [Average]
[info]   (min, avg, max) = (0.002, 3.740, 18.695), stdev = 8.360
[info]   CI (99.9%): [≈ 0, 35.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:11:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11020.981 ops/s
[info] # Warmup Iteration   2: 49876.284 ops/s
[info] # Warmup Iteration   3: 69868.438 ops/s
[info] Iteration   1: 75542.311 ops/s
[info]                  ·gc.alloc.rate:                   1610.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              33405.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1776.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36859.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.700 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         61.000 ms
[info] Iteration   2: 63609.736 ops/s
[info]                  ·gc.alloc.rate:                   1753.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              43368.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41006.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      21.174 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 523.648 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         63.000 ms
[info] Iteration   3: 83592.382 ops/s
[info]                  ·gc.alloc.rate:                   1985.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              37368.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37029.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.847 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         52.000 ms
[info] Iteration   4: 74314.513 ops/s
[info]                  ·gc.alloc.rate:                   1337.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              28324.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1367.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28969.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      39.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 844.414 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         139.000 ms
[info] Iteration   5: 97491.865 ops/s
[info]                  ·gc.alloc.rate:                   1661.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              26825.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1470.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23739.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.024 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         43.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   78910.161 ±(99.9%) 48469.510 ops/s [Average]
[info]   (min, avg, max) = (63609.736, 78910.161, 97491.865), stdev = 12587.378
[info]   CI (99.9%): [30440.652, 127379.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1669.714 ±(99.9%) 904.915 MB/sec [Average]
[info]   (min, avg, max) = (1337.455, 1669.714, 1985.686), stdev = 235.004
[info]   CI (99.9%): [764.799, 2574.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   33858.723 ±(99.9%) 26050.073 B/op [Average]
[info]   (min, avg, max) = (26825.219, 33858.723, 43368.988), stdev = 6765.121
[info]   CI (99.9%): [7808.649, 59908.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1648.161 ±(99.9%) 920.790 MB/sec [Average]
[info]   (min, avg, max) = (1367.887, 1648.161, 1967.671), stdev = 239.126
[info]   CI (99.9%): [727.372, 2568.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   33521.105 ±(99.9%) 26946.751 B/op [Average]
[info]   (min, avg, max) = (23739.862, 33521.105, 41006.870), stdev = 6997.986
[info]   CI (99.9%): [6574.354, 60467.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   13.133 ±(99.9%) 66.264 MB/sec [Average]
[info]   (min, avg, max) = (0.789, 13.133, 39.872), stdev = 17.209
[info]   CI (99.9%): [≈ 0, 79.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   290.126 ±(99.9%) 1452.300 B/op [Average]
[info]   (min, avg, max) = (14.847, 290.126, 844.414), stdev = 377.158
[info]   CI (99.9%): [≈ 0, 1742.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   358.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (43.000, 71.600, 139.000), stdev = 38.507
[info]   CI (99.9%): [358.000, 358.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:10:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7853.962 ops/s
[info] # Warmup Iteration   2: 41509.953 ops/s
[info] # Warmup Iteration   3: 115981.117 ops/s
[info] Iteration   1: 120362.855 ops/s
[info]                  ·gc.alloc.rate:                   1785.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              23348.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25504.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.265 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.620 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 130139.944 ops/s
[info]                  ·gc.alloc.rate:                   1956.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              23665.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19746.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.897 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 129912.433 ops/s
[info]                  ·gc.alloc.rate:                   1635.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              19807.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19811.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.568 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 131141.610 ops/s
[info]                  ·gc.alloc.rate:                   1651.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              19825.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19562.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.500 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 132045.656 ops/s
[info]                  ·gc.alloc.rate:               1649.900 MB/sec
[info]                  ·gc.alloc.rate.norm:          19660.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1631.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19444.687 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   128720.500 ±(99.9%) 18285.917 ops/s [Average]
[info]   (min, avg, max) = (120362.855, 128720.500, 132045.656), stdev = 4748.795
[info]   CI (99.9%): [110434.583, 147006.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1735.941 ±(99.9%) 530.199 MB/sec [Average]
[info]   (min, avg, max) = (1635.389, 1735.941, 1956.832), stdev = 137.691
[info]   CI (99.9%): [1205.742, 2266.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   21261.241 ±(99.9%) 7908.406 B/op [Average]
[info]   (min, avg, max) = (19660.103, 21261.241, 23665.136), stdev = 2053.788
[info]   CI (99.9%): [13352.835, 29169.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1696.197 ±(99.9%) 547.663 MB/sec [Average]
[info]   (min, avg, max) = (1630.009, 1696.197, 1950.592), stdev = 142.226
[info]   CI (99.9%): [1148.534, 2243.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20814.024 ±(99.9%) 10112.634 B/op [Average]
[info]   (min, avg, max) = (19444.687, 20814.024, 25504.702), stdev = 2626.219
[info]   CI (99.9%): [10701.389, 30926.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.493 ±(99.9%) 5.694 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.493, 3.432), stdev = 1.479
[info]   CI (99.9%): [≈ 0, 7.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   18.517 ±(99.9%) 70.156 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.517, 41.568), stdev = 18.219
[info]   CI (99.9%): [≈ 0, 88.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.000, 19.000), stdev = 5.196
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16937.013 ops/s
[info] # Warmup Iteration   2: 81886.110 ops/s
[info] # Warmup Iteration   3: 120370.702 ops/s
[info] Iteration   1: 141227.874 ops/s
[info]                  ·gc.alloc.rate:                   859.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              9573.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          949.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10574.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.293 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 155460.814 ops/s
[info]                  ·gc.alloc.rate:                   935.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              9470.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          954.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9667.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 158351.168 ops/s
[info]                  ·gc.alloc.rate:                   950.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              9448.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          962.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9564.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.246 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 156291.473 ops/s
[info]                  ·gc.alloc.rate:                   940.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              9471.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9703.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.274 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.108 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 157498.032 ops/s
[info]                  ·gc.alloc.rate:                   934.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              9336.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          637.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6364.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.248 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   153765.872 ±(99.9%) 27323.761 ops/s [Average]
[info]   (min, avg, max) = (141227.874, 153765.872, 158351.168), stdev = 7095.894
[info]   CI (99.9%): [126442.111, 181089.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   924.117 ±(99.9%) 141.519 MB/sec [Average]
[info]   (min, avg, max) = (859.374, 924.117, 950.615), stdev = 36.752
[info]   CI (99.9%): [782.598, 1065.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9459.951 ±(99.9%) 324.985 B/op [Average]
[info]   (min, avg, max) = (9336.380, 9459.951, 9573.227), stdev = 84.398
[info]   CI (99.9%): [9134.966, 9784.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   893.441 ±(99.9%) 552.413 MB/sec [Average]
[info]   (min, avg, max) = (637.022, 893.441, 963.625), stdev = 143.460
[info]   CI (99.9%): [341.029, 1445.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9174.917 ±(99.9%) 6248.915 B/op [Average]
[info]   (min, avg, max) = (6364.165, 9174.917, 10574.917), stdev = 1622.823
[info]   CI (99.9%): [2926.002, 15423.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.578 ±(99.9%) 8.337 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.578, 5.274), stdev = 2.165
[info]   CI (99.9%): [≈ 0, 9.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.021 ±(99.9%) 83.678 B/op [Average]
[info]   (min, avg, max) = (0.211, 16.021, 53.108), stdev = 21.731
[info]   CI (99.9%): [≈ 0, 99.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 11.200, 15.000), stdev = 4.970
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:10:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64589.642 ops/s
[info] # Warmup Iteration   2: 184856.270 ops/s
[info] # Warmup Iteration   3: 227072.260 ops/s
[info] Iteration   1: 219419.988 ops/s
[info]                  ·gc.alloc.rate:               145.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          1044.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1834.871 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 229104.024 ops/s
[info]                  ·gc.alloc.rate:      149.067 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 229414.688 ops/s
[info]                  ·gc.alloc.rate:      149.264 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 228471.697 ops/s
[info]                  ·gc.alloc.rate:                   153.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              1058.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2257.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 229561.708 ops/s
[info]                  ·gc.alloc.rate:      149.363 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   227194.421 ±(99.9%) 16812.533 ops/s [Average]
[info]   (min, avg, max) = (219419.988, 227194.421, 229561.708), stdev = 4366.162
[info]   CI (99.9%): [210381.888, 244006.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   149.377 ±(99.9%) 11.037 MB/sec [Average]
[info]   (min, avg, max) = (145.556, 149.377, 153.637), stdev = 2.866
[info]   CI (99.9%): [138.341, 160.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1034.889 ±(99.9%) 60.611 B/op [Average]
[info]   (min, avg, max) = (1024.002, 1034.889, 1058.364), stdev = 15.741
[info]   CI (99.9%): [974.278, 1095.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   116.708 ±(99.9%) 623.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 116.708, 327.739), stdev = 161.820
[info]   CI (99.9%): [≈ 0, 739.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   818.515 ±(99.9%) 4354.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 818.515, 2257.706), stdev = 1130.724
[info]   CI (99.9%): [≈ 0, 5172.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.247 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.143), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 4.000), stdev = 2.191
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:10:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1858.382 ops/s
[info] # Warmup Iteration   2: 47310.116 ops/s
[info] # Warmup Iteration   3: 77211.253 ops/s
[info] Iteration   1: 80874.432 ops/s
[info]                  ·gc.alloc.rate:                   2628.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              51154.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2616.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50916.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.291 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 82044.272 ops/s
[info]                  ·gc.alloc.rate:                   2570.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              49287.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44042.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.597 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 81149.129 ops/s
[info]                  ·gc.alloc.rate:                   2575.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              49930.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2653.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51434.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.653 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 84221.718 ops/s
[info]                  ·gc.alloc.rate:                   2663.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              49767.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2680.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50073.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.167 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 82861.351 ops/s
[info]                  ·gc.alloc.rate:                   2628.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              49930.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2360.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44842.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   82230.181 ±(99.9%) 5239.524 ops/s [Average]
[info]   (min, avg, max) = (80874.432, 82230.181, 84221.718), stdev = 1360.688
[info]   CI (99.9%): [76990.656, 87469.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2613.420 ±(99.9%) 153.048 MB/sec [Average]
[info]   (min, avg, max) = (2570.152, 2613.420, 2663.826), stdev = 39.746
[info]   CI (99.9%): [2460.373, 2766.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50014.055 ±(99.9%) 2656.115 B/op [Average]
[info]   (min, avg, max) = (49287.243, 50014.055, 51154.396), stdev = 689.785
[info]   CI (99.9%): [47357.940, 52670.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2521.485 ±(99.9%) 688.476 MB/sec [Average]
[info]   (min, avg, max) = (2296.636, 2521.485, 2680.183), stdev = 178.795
[info]   CI (99.9%): [1833.009, 3209.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48261.813 ±(99.9%) 13600.225 B/op [Average]
[info]   (min, avg, max) = (44042.083, 48261.813, 51434.604), stdev = 3531.935
[info]   CI (99.9%): [34661.588, 61862.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.927 ±(99.9%) 7.008 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.927, 4.177), stdev = 1.820
[info]   CI (99.9%): [≈ 0, 7.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   18.021 ±(99.9%) 136.420 B/op [Average]
[info]   (min, avg, max) = (0.395, 18.021, 81.291), stdev = 35.428
[info]   CI (99.9%): [≈ 0, 154.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.000, 16.000), stdev = 2.449
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:10:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37139.224 ops/s
[info] # Warmup Iteration   2: 172923.135 ops/s
[info] # Warmup Iteration   3: 216898.306 ops/s
[info] Iteration   1: 240259.791 ops/s
[info]                  ·gc.alloc.rate:                   1563.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              10245.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10667.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.760 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.631 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 244417.667 ops/s
[info]                  ·gc.alloc.rate:                   1583.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              10193.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8339.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.826 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 242786.047 ops/s
[info]                  ·gc.alloc.rate:                   1580.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              10244.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10482.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 237709.250 ops/s
[info]                  ·gc.alloc.rate:                   1547.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              10245.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10782.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 238042.549 ops/s
[info]                  ·gc.alloc.rate:                   1556.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              10293.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8694.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   240643.061 ±(99.9%) 11285.219 ops/s [Average]
[info]   (min, avg, max) = (237709.250, 240643.061, 244417.667), stdev = 2930.736
[info]   CI (99.9%): [229357.841, 251928.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1566.385 ±(99.9%) 58.769 MB/sec [Average]
[info]   (min, avg, max) = (1547.439, 1566.385, 1583.178), stdev = 15.262
[info]   CI (99.9%): [1507.615, 1625.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10244.560 ±(99.9%) 135.708 B/op [Average]
[info]   (min, avg, max) = (10193.822, 10244.560, 10293.472), stdev = 35.243
[info]   CI (99.9%): [10108.852, 10380.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1496.848 ±(99.9%) 674.718 MB/sec [Average]
[info]   (min, avg, max) = (1295.135, 1496.848, 1628.481), stdev = 175.222
[info]   CI (99.9%): [822.130, 2171.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9793.196 ±(99.9%) 4531.064 B/op [Average]
[info]   (min, avg, max) = (8339.156, 9793.196, 10782.074), stdev = 1176.703
[info]   CI (99.9%): [5262.132, 14324.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.919 ±(99.9%) 6.234 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.919, 3.760), stdev = 1.619
[info]   CI (99.9%): [≈ 0, 7.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.001 ±(99.9%) 40.845 B/op [Average]
[info]   (min, avg, max) = (0.138, 6.001, 24.631), stdev = 10.607
[info]   CI (99.9%): [≈ 0, 46.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 20.000), stdev = 6.245
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:09:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 205192.529 ops/s
[info] # Warmup Iteration   2: 631454.098 ops/s
[info] # Warmup Iteration   3: 753680.501 ops/s
[info] Iteration   1: 756107.075 ops/s
[info]                  ·gc.alloc.rate:                   592.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              1233.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1339.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 744042.443 ops/s
[info]                  ·gc.alloc.rate:               585.825 MB/sec
[info]                  ·gc.alloc.rate.norm:          1238.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1362.711 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 760753.874 ops/s
[info]                  ·gc.alloc.rate:               600.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          1242.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 669.083 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 771908.092 ops/s
[info]                  ·gc.alloc.rate:                   614.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              1253.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1321.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 768514.738 ops/s
[info]                  ·gc.alloc.rate:               618.529 MB/sec
[info]                  ·gc.alloc.rate.norm:          1266.676 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1332.881 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   760265.244 ±(99.9%) 42371.016 ops/s [Average]
[info]   (min, avg, max) = (744042.443, 760265.244, 771908.092), stdev = 11003.618
[info]   CI (99.9%): [717894.229, 802636.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   602.464 ±(99.9%) 53.856 MB/sec [Average]
[info]   (min, avg, max) = (585.825, 602.464, 618.529), stdev = 13.986
[info]   CI (99.9%): [548.608, 656.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1246.836 ±(99.9%) 51.262 B/op [Average]
[info]   (min, avg, max) = (1233.150, 1246.836, 1266.676), stdev = 13.313
[info]   CI (99.9%): [1195.574, 1298.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   582.159 ±(99.9%) 557.087 MB/sec [Average]
[info]   (min, avg, max) = (323.408, 582.159, 650.857), stdev = 144.674
[info]   CI (99.9%): [25.071, 1139.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1205.142 ±(99.9%) 1155.359 B/op [Average]
[info]   (min, avg, max) = (669.083, 1205.142, 1362.711), stdev = 300.043
[info]   CI (99.9%): [49.783, 2360.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.181 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.087), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:09:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 350986.317 ops/s
[info] # Warmup Iteration   2: 564722.519 ops/s
[info] # Warmup Iteration   3: 673821.046 ops/s
[info] Iteration   1: 682425.184 ops/s
[info]                  ·gc.alloc.rate:               531.612 MB/sec
[info]                  ·gc.alloc.rate.norm:          1226.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 755.888 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 670956.107 ops/s
[info]                  ·gc.alloc.rate:                   535.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              1257.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1539.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 652599.386 ops/s
[info]                  ·gc.alloc.rate:               511.442 MB/sec
[info]                  ·gc.alloc.rate.norm:          1233.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 792.056 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 656566.656 ops/s
[info]                  ·gc.alloc.rate:                   527.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              1263.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1576.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 656318.823 ops/s
[info]                  ·gc.alloc.rate:               521.241 MB/sec
[info]                  ·gc.alloc.rate.norm:          1249.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 789.169 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   663773.231 ±(99.9%) 48395.977 ops/s [Average]
[info]   (min, avg, max) = (652599.386, 663773.231, 682425.184), stdev = 12568.282
[info]   CI (99.9%): [615377.254, 712169.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   525.457 ±(99.9%) 36.707 MB/sec [Average]
[info]   (min, avg, max) = (511.442, 525.457, 535.882), stdev = 9.533
[info]   CI (99.9%): [488.749, 562.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1245.978 ±(99.9%) 60.865 B/op [Average]
[info]   (min, avg, max) = (1226.042, 1245.978, 1263.477), stdev = 15.807
[info]   CI (99.9%): [1185.112, 1306.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.790 ±(99.9%) 692.641 MB/sec [Average]
[info]   (min, avg, max) = (327.753, 459.790, 657.526), stdev = 179.877
[info]   CI (99.9%): [≈ 0, 1152.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1090.469 ±(99.9%) 1643.770 B/op [Average]
[info]   (min, avg, max) = (755.888, 1090.469, 1576.095), stdev = 426.882
[info]   CI (99.9%): [≈ 0, 2734.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.100), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 8.000), stdev = 2.490
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:09:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 233565.235 ops/s
[info] # Warmup Iteration   2: 690872.378 ops/s
[info] # Warmup Iteration   3: 675556.441 ops/s
[info] Iteration   1: 676532.195 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 675395.194 ops/s
[info]                  ·gc.alloc.rate:      0.124 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.288 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 675924.074 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 675497.744 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 676136.807 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   675897.203 ±(99.9%) 1798.840 ops/s [Average]
[info]   (min, avg, max) = (675395.194, 675897.203, 676532.195), stdev = 467.153
[info]   CI (99.9%): [674098.363, 677696.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.025 ±(99.9%) 0.212 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.025, 0.124), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.058 ±(99.9%) 0.494 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.058, 0.288), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:09:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40270.186 ops/s
[info] # Warmup Iteration   2: 324161.767 ops/s
[info] # Warmup Iteration   3: 546365.207 ops/s
[info] Iteration   1: 604233.409 ops/s
[info]                  ·gc.alloc.rate:                   1493.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              3889.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3400.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 607832.392 ops/s
[info]                  ·gc.alloc.rate:                   1504.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              3893.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4246.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.417 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 609999.307 ops/s
[info]                  ·gc.alloc.rate:                   1504.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              3882.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3384.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.215 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 613471.236 ops/s
[info]                  ·gc.alloc.rate:               1522.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          3901.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4217.390 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 591505.605 ops/s
[info]                  ·gc.alloc.rate:               1474.871 MB/sec
[info]                  ·gc.alloc.rate.norm:          3924.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1325.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3527.175 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   605408.390 ±(99.9%) 32595.980 ops/s [Average]
[info]   (min, avg, max) = (591505.605, 605408.390, 613471.236), stdev = 8465.073
[info]   CI (99.9%): [572812.410, 638004.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1499.808 ±(99.9%) 66.769 MB/sec [Average]
[info]   (min, avg, max) = (1474.871, 1499.808, 1522.021), stdev = 17.340
[info]   CI (99.9%): [1433.039, 1566.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3898.132 ±(99.9%) 61.808 B/op [Average]
[info]   (min, avg, max) = (3882.794, 3898.132, 3924.201), stdev = 16.051
[info]   CI (99.9%): [3836.323, 3959.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1445.802 ±(99.9%) 693.689 MB/sec [Average]
[info]   (min, avg, max) = (1305.736, 1445.802, 1645.296), stdev = 180.149
[info]   CI (99.9%): [752.113, 2139.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3755.278 ±(99.9%) 1689.808 B/op [Average]
[info]   (min, avg, max) = (3384.194, 3755.278, 4246.686), stdev = 438.838
[info]   CI (99.9%): [2065.471, 5445.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.527 ±(99.9%) 4.205 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.527, 2.479), stdev = 1.092
[info]   CI (99.9%): [≈ 0, 4.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.364 ±(99.9%) 10.883 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.364, 6.417), stdev = 2.826
[info]   CI (99.9%): [≈ 0, 12.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 11.000), stdev = 2.280
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:09:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8352.480 ops/s
[info] # Warmup Iteration   2: 18911.904 ops/s
[info] # Warmup Iteration   3: 29206.631 ops/s
[info] Iteration   1: 39512.793 ops/s
[info]                  ·gc.alloc.rate:                   1873.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              74642.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1837.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73194.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.239 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.354 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         44.000 ms
[info] Iteration   2: 37654.809 ops/s
[info]                  ·gc.alloc.rate:                   2021.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              84498.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1866.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78000.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.547 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148.261 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   3: 40692.626 ops/s
[info]                  ·gc.alloc.rate:                   2147.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              83019.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2174.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84066.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.226 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 395.329 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 43871.286 ops/s
[info]                  ·gc.alloc.rate:                   2037.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              73086.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1865.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66916.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.240 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 41893.251 ops/s
[info]                  ·gc.alloc.rate:                   1923.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              72266.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1898.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71323.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.256 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   40724.953 ±(99.9%) 9063.441 ops/s [Average]
[info]   (min, avg, max) = (37654.809, 40724.953, 43871.286), stdev = 2353.747
[info]   CI (99.9%): [31661.512, 49788.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   2000.948 ±(99.9%) 410.137 MB/sec [Average]
[info]   (min, avg, max) = (1873.943, 2000.948, 2147.510), stdev = 106.511
[info]   CI (99.9%): [1590.811, 2411.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   77502.624 ±(99.9%) 22326.273 B/op [Average]
[info]   (min, avg, max) = (72266.503, 77502.624, 84498.050), stdev = 5798.062
[info]   CI (99.9%): [55176.351, 99828.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1928.569 ±(99.9%) 536.058 MB/sec [Average]
[info]   (min, avg, max) = (1837.599, 1928.569, 2174.590), stdev = 139.213
[info]   CI (99.9%): [1392.511, 2464.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   74700.182 ±(99.9%) 25315.077 B/op [Average]
[info]   (min, avg, max) = (66916.146, 74700.182, 84066.425), stdev = 6574.245
[info]   CI (99.9%): [49385.105, 100015.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.048 ±(99.9%) 16.367 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 3.048, 10.226), stdev = 4.250
[info]   CI (99.9%): [≈ 0, 19.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   120.288 ±(99.9%) 633.896 B/op [Average]
[info]   (min, avg, max) = (2.240, 120.288, 395.329), stdev = 164.621
[info]   CI (99.9%): [≈ 0, 754.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   116.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 23.200, 44.000), stdev = 16.208
[info]   CI (99.9%): [116.000, 116.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:08:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.522 ops/s
[info] # Warmup Iteration   2: 219325.259 ops/s
[info] # Warmup Iteration   3: 287869.114 ops/s
[info] Iteration   1: 302924.122 ops/s
[info]                  ·gc.alloc.rate:      314.126 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 292599.579 ops/s
[info]                  ·gc.alloc.rate:               308.817 MB/sec
[info]                  ·gc.alloc.rate.norm:          1661.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1741.410 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 283674.622 ops/s
[info]                  ·gc.alloc.rate:                   300.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              1665.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1799.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.099 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.549 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 284454.734 ops/s
[info]                  ·gc.alloc.rate:               302.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          1676.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1794.933 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 284106.568 ops/s
[info]                  ·gc.alloc.rate:               302.949 MB/sec
[info]                  ·gc.alloc.rate.norm:          1678.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1798.989 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   289551.925 ±(99.9%) 32117.682 ops/s [Average]
[info]   (min, avg, max) = (283674.622, 289551.925, 302924.122), stdev = 8340.860
[info]   CI (99.9%): [257434.243, 321669.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   305.831 ±(99.9%) 21.527 MB/sec [Average]
[info]   (min, avg, max) = (300.269, 305.831, 314.126), stdev = 5.590
[info]   CI (99.9%): [284.304, 327.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1662.723 ±(99.9%) 71.632 B/op [Average]
[info]   (min, avg, max) = (1632.001, 1662.723, 1678.146), stdev = 18.603
[info]   CI (99.9%): [1591.091, 1734.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   259.464 ±(99.9%) 558.518 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 259.464, 324.764), stdev = 145.045
[info]   CI (99.9%): [≈ 0, 817.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1427.027 ±(99.9%) 3073.235 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1427.027, 1799.804), stdev = 798.109
[info]   CI (99.9%): [≈ 0, 4500.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.020 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.099), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.110 ±(99.9%) 0.945 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.110, 0.549), stdev = 0.245
[info]   CI (99.9%): [≈ 0, 1.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 5.000), stdev = 1.871
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:08:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19492.117 ops/s
[info] # Warmup Iteration   2: 62650.541 ops/s
[info] # Warmup Iteration   3: 122551.923 ops/s
[info] Iteration   1: 116237.638 ops/s
[info]                  ·gc.alloc.rate:                   1147.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              15533.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17497.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.703 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.593 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 132388.171 ops/s
[info]                  ·gc.alloc.rate:                   1224.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              14560.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11554.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.742 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 129083.941 ops/s
[info]                  ·gc.alloc.rate:                   1210.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              14794.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15878.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.087 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.280 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 132277.849 ops/s
[info]                  ·gc.alloc.rate:                   1239.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              14738.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15566.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.743 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 128174.825 ops/s
[info]                  ·gc.alloc.rate:                   1183.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              14527.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12109.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   127632.485 ±(99.9%) 25574.143 ops/s [Average]
[info]   (min, avg, max) = (116237.638, 127632.485, 132388.171), stdev = 6641.524
[info]   CI (99.9%): [102058.342, 153206.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1200.956 ±(99.9%) 140.383 MB/sec [Average]
[info]   (min, avg, max) = (1147.262, 1200.956, 1239.059), stdev = 36.457
[info]   CI (99.9%): [1060.572, 1341.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   14830.728 ±(99.9%) 1574.225 B/op [Average]
[info]   (min, avg, max) = (14527.000, 14830.728, 15533.109), stdev = 408.821
[info]   CI (99.9%): [13256.503, 16404.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1171.682 ±(99.9%) 677.650 MB/sec [Average]
[info]   (min, avg, max) = (971.952, 1171.682, 1308.641), stdev = 175.984
[info]   CI (99.9%): [494.032, 1849.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   14521.248 ±(99.9%) 9894.050 B/op [Average]
[info]   (min, avg, max) = (11554.491, 14521.248, 17497.763), stdev = 2569.453
[info]   CI (99.9%): [4627.198, 24415.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 4.473 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.787, 2.703), stdev = 1.162
[info]   CI (99.9%): [≈ 0, 5.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.323 ±(99.9%) 60.388 B/op [Average]
[info]   (min, avg, max) = (0.256, 10.323, 36.593), stdev = 15.683
[info]   CI (99.9%): [≈ 0, 70.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.581
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:08:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 192801.337 ops/s
[info] # Warmup Iteration   2: 361203.685 ops/s
[info] # Warmup Iteration   3: 531459.542 ops/s
[info] Iteration   1: 520279.614 ops/s
[info]                  ·gc.alloc.rate:               344.590 MB/sec
[info]                  ·gc.alloc.rate.norm:          1042.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 988.401 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 521835.554 ops/s
[info]                  ·gc.alloc.rate:               357.386 MB/sec
[info]                  ·gc.alloc.rate.norm:          1077.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 985.500 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 522463.399 ops/s
[info]                  ·gc.alloc.rate:                   363.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              1094.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     985.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 551658.826 ops/s
[info]                  ·gc.alloc.rate:               367.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          1048.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 933.145 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 553753.323 ops/s
[info]                  ·gc.alloc.rate:                   367.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              1042.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     931.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   533998.143 ±(99.9%) 65893.952 ops/s [Average]
[info]   (min, avg, max) = (520279.614, 533998.143, 553753.323), stdev = 17112.450
[info]   CI (99.9%): [468104.191, 599892.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   360.050 ±(99.9%) 36.816 MB/sec [Average]
[info]   (min, avg, max) = (344.590, 360.050, 367.660), stdev = 9.561
[info]   CI (99.9%): [323.234, 396.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1061.405 ±(99.9%) 91.409 B/op [Average]
[info]   (min, avg, max) = (1042.367, 1061.405, 1094.963), stdev = 23.739
[info]   CI (99.9%): [969.996, 1152.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   327.115 ±(99.9%) 1.747 MB/sec [Average]
[info]   (min, avg, max) = (326.750, 327.115, 327.872), stdev = 0.454
[info]   CI (99.9%): [325.368, 328.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   964.766 ±(99.9%) 114.146 B/op [Average]
[info]   (min, avg, max) = (931.511, 964.766, 988.401), stdev = 29.643
[info]   CI (99.9%): [850.621, 1078.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.063), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:08:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1850.786 ops/s
[info] # Warmup Iteration   2: 10033.493 ops/s
[info] # Warmup Iteration   3: 30228.965 ops/s
[info] Iteration   1: 44640.448 ops/s
[info]                  ·gc.alloc.rate:                   2129.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              75077.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1889.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66606.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 141.842 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   2: 47292.931 ops/s
[info]                  ·gc.alloc.rate:                   2394.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              79673.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2498.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83132.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 415.260 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   3: 51238.444 ops/s
[info]                  ·gc.alloc.rate:                   2201.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              67601.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2200.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67574.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.031 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 52922.796 ops/s
[info]                  ·gc.alloc.rate:                   2270.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              67514.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2241.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66652.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.095 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 52882.771 ops/s
[info]                  ·gc.alloc.rate:                   2257.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              67195.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58308.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.239 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   49795.478 ±(99.9%) 14178.361 ops/s [Average]
[info]   (min, avg, max) = (44640.448, 49795.478, 52922.796), stdev = 3682.075
[info]   CI (99.9%): [35617.117, 63973.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2250.792 ±(99.9%) 375.980 MB/sec [Average]
[info]   (min, avg, max) = (2129.506, 2250.792, 2394.208), stdev = 97.641
[info]   CI (99.9%): [1874.812, 2626.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   71412.515 ±(99.9%) 21883.077 B/op [Average]
[info]   (min, avg, max) = (67195.425, 71412.515, 79673.618), stdev = 5682.966
[info]   CI (99.9%): [49529.438, 93295.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2157.828 ±(99.9%) 935.954 MB/sec [Average]
[info]   (min, avg, max) = (1889.214, 2157.828, 2498.144), stdev = 243.064
[info]   CI (99.9%): [1221.873, 3093.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   68454.786 ±(99.9%) 34753.200 B/op [Average]
[info]   (min, avg, max) = (58308.193, 68454.786, 83132.347), stdev = 9025.296
[info]   CI (99.9%): [33701.585, 103207.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.532 ±(99.9%) 20.246 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.532, 12.479), stdev = 5.258
[info]   CI (99.9%): [≈ 0, 23.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   118.493 ±(99.9%) 676.142 B/op [Average]
[info]   (min, avg, max) = (1.239, 118.493, 415.260), stdev = 175.592
[info]   CI (99.9%): [≈ 0, 794.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   89.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 17.800, 36.000), stdev = 11.692
[info]   CI (99.9%): [89.000, 89.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13405.004 ops/s
[info] # Warmup Iteration   2: 53693.889 ops/s
[info] # Warmup Iteration   3: 83280.018 ops/s
[info] Iteration   1: 92187.361 ops/s
[info]                  ·gc.alloc.rate:                   864.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              14753.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16695.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.805 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.813 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 94968.107 ops/s
[info]                  ·gc.alloc.rate:                   756.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              12542.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10818.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 95038.353 ops/s
[info]                  ·gc.alloc.rate:                   767.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              12706.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10810.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 95266.801 ops/s
[info]                  ·gc.alloc.rate:                   756.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              12503.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10795.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.618 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 95517.983 ops/s
[info]                  ·gc.alloc.rate:                   769.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              12680.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16102.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.122 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   94595.721 ±(99.9%) 5250.064 ops/s [Average]
[info]   (min, avg, max) = (92187.361, 94595.721, 95517.983), stdev = 1363.425
[info]   CI (99.9%): [89345.657, 99845.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   783.017 ±(99.9%) 176.544 MB/sec [Average]
[info]   (min, avg, max) = (756.795, 783.017, 864.348), stdev = 45.848
[info]   CI (99.9%): [606.473, 959.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   13037.236 ±(99.9%) 3709.157 B/op [Average]
[info]   (min, avg, max) = (12503.607, 13037.236, 14753.332), stdev = 963.256
[info]   CI (99.9%): [9328.079, 16746.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   782.937 ±(99.9%) 684.575 MB/sec [Average]
[info]   (min, avg, max) = (652.819, 782.937, 978.113), stdev = 177.782
[info]   CI (99.9%): [98.362, 1467.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13044.688 ±(99.9%) 11817.693 B/op [Average]
[info]   (min, avg, max) = (10795.993, 13044.688, 16695.150), stdev = 3069.017
[info]   CI (99.9%): [1226.995, 24862.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.198 ±(99.9%) 5.161 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 1.198, 3.185), stdev = 1.340
[info]   CI (99.9%): [≈ 0, 6.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   19.980 ±(99.9%) 85.718 B/op [Average]
[info]   (min, avg, max) = (0.129, 19.980, 52.618), stdev = 22.261
[info]   CI (99.9%): [≈ 0, 105.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 14.000), stdev = 3.240
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:07:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.622 ops/s
[info] # Warmup Iteration   2: 73156.960 ops/s
[info] # Warmup Iteration   3: 114386.276 ops/s
[info] Iteration   1: 121413.571 ops/s
[info]                  ·gc.alloc.rate:                   461.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              5977.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8410.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.575 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 122785.455 ops/s
[info]                  ·gc.alloc.rate:               461.818 MB/sec
[info]                  ·gc.alloc.rate.norm:          5918.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4158.441 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 119302.317 ops/s
[info]                  ·gc.alloc.rate:                   461.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              6093.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8577.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 118678.007 ops/s
[info]                  ·gc.alloc.rate:               447.734 MB/sec
[info]                  ·gc.alloc.rate.norm:          5937.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4311.020 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 118989.297 ops/s
[info]                  ·gc.alloc.rate:                   451.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              5974.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4299.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.508 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   120233.729 ±(99.9%) 6872.010 ops/s [Average]
[info]   (min, avg, max) = (118678.007, 120233.729, 122785.455), stdev = 1784.639
[info]   CI (99.9%): [113361.720, 127105.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   456.870 ±(99.9%) 25.754 MB/sec [Average]
[info]   (min, avg, max) = (447.734, 456.870, 461.908), stdev = 6.688
[info]   CI (99.9%): [431.116, 482.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   5980.356 ±(99.9%) 261.888 B/op [Average]
[info]   (min, avg, max) = (5918.667, 5980.356, 6093.576), stdev = 68.011
[info]   CI (99.9%): [5718.468, 6242.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   454.749 ±(99.9%) 684.758 MB/sec [Average]
[info]   (min, avg, max) = (324.472, 454.749, 650.176), stdev = 177.829
[info]   CI (99.9%): [≈ 0, 1139.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   5951.468 ±(99.9%) 8943.384 B/op [Average]
[info]   (min, avg, max) = (4158.441, 5951.468, 8577.237), stdev = 2322.568
[info]   CI (99.9%): [≈ 0, 14894.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.044), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.272 ±(99.9%) 1.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.272, 0.575), stdev = 0.272
[info]   CI (99.9%): [≈ 0, 1.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:07:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37183.114 ops/s
[info] # Warmup Iteration   2: 82970.950 ops/s
[info] # Warmup Iteration   3: 99663.277 ops/s
[info] Iteration   1: 107322.655 ops/s
[info]                  ·gc.alloc.rate:                   404.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              5932.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4772.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.420 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 107244.336 ops/s
[info]                  ·gc.alloc.rate:               405.858 MB/sec
[info]                  ·gc.alloc.rate.norm:          5953.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4780.519 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 106230.601 ops/s
[info]                  ·gc.alloc.rate:                   404.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              5995.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4826.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.810 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 104629.553 ops/s
[info]                  ·gc.alloc.rate:               398.397 MB/sec
[info]                  ·gc.alloc.rate.norm:          5991.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4909.908 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 106438.944 ops/s
[info]                  ·gc.alloc.rate:                   407.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              6030.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9652.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.616 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   106373.218 ±(99.9%) 4185.219 ops/s [Average]
[info]   (min, avg, max) = (104629.553, 106373.218, 107322.655), stdev = 1086.888
[info]   CI (99.9%): [102187.999, 110558.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   404.271 ±(99.9%) 13.622 MB/sec [Average]
[info]   (min, avg, max) = (398.397, 404.271, 407.846), stdev = 3.538
[info]   CI (99.9%): [390.649, 417.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5980.595 ±(99.9%) 148.046 B/op [Average]
[info]   (min, avg, max) = (5932.217, 5980.595, 6030.592), stdev = 38.447
[info]   CI (99.9%): [5832.549, 6128.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   391.283 ±(99.9%) 562.988 MB/sec [Average]
[info]   (min, avg, max) = (325.472, 391.283, 652.824), stdev = 146.206
[info]   CI (99.9%): [≈ 0, 954.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5788.300 ±(99.9%) 8321.609 B/op [Average]
[info]   (min, avg, max) = (4772.071, 5788.300, 9652.947), stdev = 2161.095
[info]   CI (99.9%): [≈ 0, 14109.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.095 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.055), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.369 ±(99.9%) 1.402 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.369, 0.810), stdev = 0.364
[info]   CI (99.9%): [≈ 0, 1.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 8.000), stdev = 1.924
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:07:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30396.738 ops/s
[info] # Warmup Iteration   2: 109224.467 ops/s
[info] # Warmup Iteration   3: 117761.842 ops/s
[info] Iteration   1: 122094.808 ops/s
[info]                  ·gc.alloc.rate:                   462.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              5957.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4216.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.844 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.872 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 121198.000 ops/s
[info]                  ·gc.alloc.rate:                   466.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              6052.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8512.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.372 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 118051.231 ops/s
[info]                  ·gc.alloc.rate:               444.484 MB/sec
[info]                  ·gc.alloc.rate.norm:          5925.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4369.585 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 118436.906 ops/s
[info]                  ·gc.alloc.rate:                   446.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              5931.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4355.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 117659.078 ops/s
[info]                  ·gc.alloc.rate:                   452.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              6050.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8785.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.453 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   119488.005 ±(99.9%) 7757.305 ops/s [Average]
[info]   (min, avg, max) = (117659.078, 119488.005, 122094.808), stdev = 2014.547
[info]   CI (99.9%): [111730.700, 127245.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   454.315 ±(99.9%) 36.883 MB/sec [Average]
[info]   (min, avg, max) = (444.484, 454.315, 466.104), stdev = 9.578
[info]   CI (99.9%): [417.432, 491.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5983.577 ±(99.9%) 243.018 B/op [Average]
[info]   (min, avg, max) = (5925.965, 5983.577, 6052.690), stdev = 63.111
[info]   CI (99.9%): [5740.559, 6226.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.002 ±(99.9%) 693.083 MB/sec [Average]
[info]   (min, avg, max) = (327.169, 459.002, 656.848), stdev = 179.991
[info]   CI (99.9%): [≈ 0, 1152.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6047.798 ±(99.9%) 9154.004 B/op [Average]
[info]   (min, avg, max) = (4216.149, 6047.798, 8785.879), stdev = 2377.266
[info]   CI (99.9%): [≈ 0, 15201.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.183 ±(99.9%) 1.424 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.183, 0.844), stdev = 0.370
[info]   CI (99.9%): [≈ 0, 1.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.360 ±(99.9%) 18.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.360, 10.872), stdev = 4.762
[info]   CI (99.9%): [≈ 0, 20.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:07:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48269.891 ops/s
[info] # Warmup Iteration   2: 105935.955 ops/s
[info] # Warmup Iteration   3: 117910.721 ops/s
[info] Iteration   1: 122806.640 ops/s
[info]                  ·gc.alloc.rate:               363.410 MB/sec
[info]                  ·gc.alloc.rate.norm:          4657.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4200.383 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 123905.720 ops/s
[info]                  ·gc.alloc.rate:               368.500 MB/sec
[info]                  ·gc.alloc.rate.norm:          4679.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4163.232 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 123518.663 ops/s
[info]                  ·gc.alloc.rate:                   369.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              4707.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4176.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 122511.103 ops/s
[info]                  ·gc.alloc.rate:               367.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          4725.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4214.775 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 123264.244 ops/s
[info]                  ·gc.alloc.rate:                   367.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              4697.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4188.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.631 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   123201.274 ±(99.9%) 2137.904 ops/s [Average]
[info]   (min, avg, max) = (122511.103, 123201.274, 123905.720), stdev = 555.207
[info]   CI (99.9%): [121063.370, 125339.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   367.439 ±(99.9%) 9.022 MB/sec [Average]
[info]   (min, avg, max) = (363.410, 367.439, 369.481), stdev = 2.343
[info]   CI (99.9%): [358.417, 376.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4693.450 ±(99.9%) 100.796 B/op [Average]
[info]   (min, avg, max) = (4657.063, 4693.450, 4725.348), stdev = 26.176
[info]   CI (99.9%): [4592.654, 4794.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   327.918 ±(99.9%) 0.749 MB/sec [Average]
[info]   (min, avg, max) = (327.752, 327.918, 328.174), stdev = 0.194
[info]   CI (99.9%): [327.169, 328.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   4188.685 ±(99.9%) 77.601 B/op [Average]
[info]   (min, avg, max) = (4163.232, 4188.685, 4214.775), stdev = 20.153
[info]   CI (99.9%): [4111.084, 4266.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.084 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.049), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.133 ±(99.9%) 1.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.631), stdev = 0.279
[info]   CI (99.9%): [≈ 0, 1.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:07:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1195.247 ops/s
[info] # Warmup Iteration   2: 6544.472 ops/s
[info] # Warmup Iteration   3: 8671.445 ops/s
[info] Iteration   1: 12662.895 ops/s
[info]                  ·gc.alloc.rate:                   1902.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              236438.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1789.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222447.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.817 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 350.127 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 12593.320 ops/s
[info]                  ·gc.alloc.rate:                   1895.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              236927.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1813.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226615.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.805 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 13300.083 ops/s
[info]                  ·gc.alloc.rate:                   1992.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              235741.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2187.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258853.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.706 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 11346.006 ops/s
[info]                  ·gc.alloc.rate:                   2297.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              318610.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2246.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311643.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1069.022 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   5: 11476.583 ops/s
[info]                  ·gc.alloc.rate:                   2498.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              342649.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2529.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     346876.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1558.502 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   12275.777 ±(99.9%) 3223.451 ops/s [Average]
[info]   (min, avg, max) = (11346.006, 12275.777, 13300.083), stdev = 837.120
[info]   CI (99.9%): [9052.326, 15499.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   2117.274 ±(99.9%) 1034.349 MB/sec [Average]
[info]   (min, avg, max) = (1895.932, 2117.274, 2498.725), stdev = 268.617
[info]   CI (99.9%): [1082.925, 3151.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   274073.587 ±(99.9%) 201486.475 B/op [Average]
[info]   (min, avg, max) = (235741.959, 274073.587, 342649.994), stdev = 52325.398
[info]   CI (99.9%): [72587.112, 475560.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2113.437 ±(99.9%) 1204.146 MB/sec [Average]
[info]   (min, avg, max) = (1789.847, 2113.437, 2529.542), stdev = 312.713
[info]   CI (99.9%): [909.292, 3317.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   273287.306 ±(99.9%) 209654.888 B/op [Average]
[info]   (min, avg, max) = (222447.790, 273287.306, 346876.030), stdev = 54446.709
[info]   CI (99.9%): [63632.418, 482942.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   4.424 ±(99.9%) 19.127 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 4.424, 11.365), stdev = 4.967
[info]   CI (99.9%): [≈ 0, 23.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   601.032 ±(99.9%) 2645.882 B/op [Average]
[info]   (min, avg, max) = (7.805, 601.032, 1558.502), stdev = 687.127
[info]   CI (99.9%): [≈ 0, 3246.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   88.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 17.600, 36.000), stdev = 11.546
[info]   CI (99.9%): [88.000, 88.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:06:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 569.351 ops/s
[info] # Warmup Iteration   2: 5025.203 ops/s
[info] # Warmup Iteration   3: 11275.007 ops/s
[info] Iteration   1: 13382.226 ops/s
[info]                  ·gc.alloc.rate:                   1901.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              223614.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1936.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227789.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.448 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 13512.988 ops/s
[info]                  ·gc.alloc.rate:                   1888.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              219955.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187278.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.849 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 13281.751 ops/s
[info]                  ·gc.alloc.rate:               1865.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          221076.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1948.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 230885.637 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 13373.041 ops/s
[info]                  ·gc.alloc.rate:                   1911.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              224917.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     232511.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.900 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 13388.794 ops/s
[info]                  ·gc.alloc.rate:               1901.574 MB/sec
[info]                  ·gc.alloc.rate.norm:          223510.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 195472.669 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   13387.760 ±(99.9%) 317.347 ops/s [Average]
[info]   (min, avg, max) = (13281.751, 13387.760, 13512.988), stdev = 82.414
[info]   CI (99.9%): [13070.413, 13705.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1893.668 ±(99.9%) 67.750 MB/sec [Average]
[info]   (min, avg, max) = (1865.639, 1893.668, 1911.203), stdev = 17.595
[info]   CI (99.9%): [1825.917, 1961.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   222615.049 ±(99.9%) 7829.922 B/op [Average]
[info]   (min, avg, max) = (219955.818, 222615.049, 224917.211), stdev = 2033.406
[info]   CI (99.9%): [214785.127, 230444.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1826.404 ±(99.9%) 677.206 MB/sec [Average]
[info]   (min, avg, max) = (1608.081, 1826.404, 1975.736), stdev = 175.868
[info]   CI (99.9%): [1149.198, 2503.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   214787.693 ±(99.9%) 83305.090 B/op [Average]
[info]   (min, avg, max) = (187278.963, 214787.693, 232511.694), stdev = 21634.067
[info]   CI (99.9%): [131482.604, 298092.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.439 ±(99.9%) 9.385 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.439, 4.900), stdev = 2.437
[info]   CI (99.9%): [≈ 0, 11.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 10.000), stdev = 1.304
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:06:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91405.483 ops/s
[info] # Warmup Iteration   2: 200301.745 ops/s
[info] # Warmup Iteration   3: 224035.810 ops/s
[info] Iteration   1: 214950.662 ops/s
[info]                  ·gc.alloc.rate:               586.403 MB/sec
[info]                  ·gc.alloc.rate.norm:          4293.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2350.859 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 215548.270 ops/s
[info]                  ·gc.alloc.rate:               581.546 MB/sec
[info]                  ·gc.alloc.rate.norm:          4246.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4703.596 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 214961.857 ops/s
[info]                  ·gc.alloc.rate:                   576.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              4223.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4730.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 215055.104 ops/s
[info]                  ·gc.alloc.rate:               576.945 MB/sec
[info]                  ·gc.alloc.rate.norm:          4222.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4743.563 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 216590.420 ops/s
[info]                  ·gc.alloc.rate:                   574.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              4171.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2359.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.878 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   215421.263 ±(99.9%) 2688.325 ops/s [Average]
[info]   (min, avg, max) = (214950.662, 215421.263, 216590.420), stdev = 698.149
[info]   CI (99.9%): [212732.937, 218109.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   579.149 ±(99.9%) 18.722 MB/sec [Average]
[info]   (min, avg, max) = (574.082, 579.149, 586.403), stdev = 4.862
[info]   CI (99.9%): [560.428, 597.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4231.309 ±(99.9%) 170.315 B/op [Average]
[info]   (min, avg, max) = (4171.564, 4231.309, 4293.614), stdev = 44.230
[info]   CI (99.9%): [4060.993, 4401.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   516.869 ±(99.9%) 681.819 MB/sec [Average]
[info]   (min, avg, max) = (321.070, 516.869, 648.193), stdev = 177.066
[info]   CI (99.9%): [≈ 0, 1198.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3777.748 ±(99.9%) 5000.240 B/op [Average]
[info]   (min, avg, max) = (2350.859, 3777.748, 4743.563), stdev = 1298.546
[info]   CI (99.9%): [≈ 0, 8777.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.608 ±(99.9%) 5.172 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.608, 3.011), stdev = 1.343
[info]   CI (99.9%): [≈ 0, 5.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.421 ±(99.9%) 37.578 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.421, 21.878), stdev = 9.759
[info]   CI (99.9%): [≈ 0, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 11.000), stdev = 2.828
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:06:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 587.702 ops/s
[info] # Warmup Iteration   2: 3245.581 ops/s
[info] # Warmup Iteration   3: 6230.849 ops/s
[info] Iteration   1: 6537.117 ops/s
[info]                  ·gc.alloc.rate:                   1673.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              402951.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     390550.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.033 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 6738.655 ops/s
[info]                  ·gc.alloc.rate:                   1724.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              402770.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     380303.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 520.534 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 6465.861 ops/s
[info]                  ·gc.alloc.rate:                   1641.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              399461.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397330.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.803 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6612.871 ops/s
[info]                  ·gc.alloc.rate:                   1703.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              405357.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     389926.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.909 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 6479.522 ops/s
[info]                  ·gc.alloc.rate:                   1675.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              406922.482 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     401164.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.056 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   6566.805 ±(99.9%) 431.992 ops/s [Average]
[info]   (min, avg, max) = (6465.861, 6566.805, 6738.655), stdev = 112.187
[info]   CI (99.9%): [6134.813, 6998.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1683.657 ±(99.9%) 121.721 MB/sec [Average]
[info]   (min, avg, max) = (1641.463, 1683.657, 1724.568), stdev = 31.611
[info]   CI (99.9%): [1561.936, 1805.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   403492.739 ±(99.9%) 10943.248 B/op [Average]
[info]   (min, avg, max) = (399461.386, 403492.739, 406922.482), stdev = 2841.927
[info]   CI (99.9%): [392549.491, 414435.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1634.655 ±(99.9%) 43.055 MB/sec [Average]
[info]   (min, avg, max) = (1622.264, 1634.655, 1651.694), stdev = 11.181
[info]   CI (99.9%): [1591.600, 1677.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   391854.813 ±(99.9%) 30775.246 B/op [Average]
[info]   (min, avg, max) = (380303.269, 391854.813, 401164.048), stdev = 7992.234
[info]   CI (99.9%): [361079.567, 422630.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.521 ±(99.9%) 3.694 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.521, 2.229), stdev = 0.959
[info]   CI (99.9%): [≈ 0, 4.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   122.267 ±(99.9%) 861.582 B/op [Average]
[info]   (min, avg, max) = (5.056, 122.267, 520.534), stdev = 223.750
[info]   CI (99.9%): [≈ 0, 983.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 11.000), stdev = 1.871
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7116.250 ops/s
[info] # Warmup Iteration   2: 20234.507 ops/s
[info] # Warmup Iteration   3: 31630.765 ops/s
[info] Iteration   1: 35032.820 ops/s
[info]                  ·gc.alloc.rate:                   2102.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              94421.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2262.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101577.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 136.466 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 32089.210 ops/s
[info]                  ·gc.alloc.rate:                   2366.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              115995.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2269.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111280.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.462 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 30083.636 ops/s
[info]                  ·gc.alloc.rate:                   2352.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              123015.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2467.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129050.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.497 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.003 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         58.000 ms
[info] Iteration   4: 33563.869 ops/s
[info]                  ·gc.alloc.rate:                   2049.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              96115.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1789.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83932.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.466 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 256.326 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         48.000 ms
[info] Iteration   5: 34995.572 ops/s
[info]                  ·gc.alloc.rate:                   2078.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              93466.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2105.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94678.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 297.955 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   33153.021 ±(99.9%) 8088.702 ops/s [Average]
[info]   (min, avg, max) = (30083.636, 33153.021, 35032.820), stdev = 2100.610
[info]   CI (99.9%): [25064.319, 41241.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2189.967 ±(99.9%) 599.737 MB/sec [Average]
[info]   (min, avg, max) = (2049.705, 2189.967, 2366.127), stdev = 155.750
[info]   CI (99.9%): [1590.229, 2789.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   104602.830 ±(99.9%) 53375.058 B/op [Average]
[info]   (min, avg, max) = (93466.367, 104602.830, 123015.811), stdev = 13861.333
[info]   CI (99.9%): [51227.771, 157977.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2179.116 ±(99.9%) 972.871 MB/sec [Average]
[info]   (min, avg, max) = (1789.894, 2179.116, 2467.783), stdev = 252.652
[info]   CI (99.9%): [1206.245, 3151.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   104103.929 ±(99.9%) 66023.937 B/op [Average]
[info]   (min, avg, max) = (83932.310, 104103.929, 129050.682), stdev = 17146.207
[info]   CI (99.9%): [38079.992, 170127.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.218 ±(99.9%) 10.845 MB/sec [Average]
[info]   (min, avg, max) = (0.458, 3.218, 6.627), stdev = 2.816
[info]   CI (99.9%): [≈ 0, 14.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   147.842 ±(99.9%) 490.851 B/op [Average]
[info]   (min, avg, max) = (22.462, 147.842, 297.955), stdev = 127.472
[info]   CI (99.9%): [≈ 0, 638.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   181.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (18.000, 36.200, 58.000), stdev = 17.152
[info]   CI (99.9%): [181.000, 181.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:05:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5070.948 ops/s
[info] # Warmup Iteration   2: 18512.852 ops/s
[info] # Warmup Iteration   3: 23753.969 ops/s
[info] Iteration   1: 35456.810 ops/s
[info]                  ·gc.alloc.rate:                   2067.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              91763.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1771.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78636.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      11.473 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 509.226 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 36569.604 ops/s
[info]                  ·gc.alloc.rate:                   1984.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              85382.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2092.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90061.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 396.692 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 37737.413 ops/s
[info]                  ·gc.alloc.rate:                   2015.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              84028.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2117.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88304.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      24.612 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1026.227 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 38640.318 ops/s
[info]                  ·gc.alloc.rate:                   1835.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              74738.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1525.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62132.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.696 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 37731.299 ops/s
[info]                  ·gc.alloc.rate:                   2246.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              93712.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2189.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91306.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.444 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268.743 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   37227.089 ±(99.9%) 4746.631 ops/s [Average]
[info]   (min, avg, max) = (35456.810, 37227.089, 38640.318), stdev = 1232.685
[info]   CI (99.9%): [32480.457, 41973.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2029.809 ±(99.9%) 573.393 MB/sec [Average]
[info]   (min, avg, max) = (1835.228, 2029.809, 2246.915), stdev = 148.908
[info]   CI (99.9%): [1456.415, 2603.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   85925.211 ±(99.9%) 28799.442 B/op [Average]
[info]   (min, avg, max) = (74738.813, 85925.211, 93712.260), stdev = 7479.124
[info]   CI (99.9%): [57125.770, 114724.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1939.468 ±(99.9%) 1084.260 MB/sec [Average]
[info]   (min, avg, max) = (1525.680, 1939.468, 2189.225), stdev = 281.579
[info]   CI (99.9%): [855.207, 3023.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   82088.242 ±(99.9%) 47055.356 B/op [Average]
[info]   (min, avg, max) = (62132.612, 82088.242, 91306.165), stdev = 12220.126
[info]   CI (99.9%): [35032.887, 129143.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   10.358 ±(99.9%) 34.841 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 10.358, 24.612), stdev = 9.048
[info]   CI (99.9%): [≈ 0, 45.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   440.517 ±(99.9%) 1455.839 B/op [Average]
[info]   (min, avg, max) = (1.696, 440.517, 1026.227), stdev = 378.077
[info]   CI (99.9%): [≈ 0, 1896.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   100.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 20.000, 32.000), stdev = 9.028
[info]   CI (99.9%): [100.000, 100.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:05:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 134085.150 ops/s
[info] # Warmup Iteration   2: 306477.605 ops/s
[info] # Warmup Iteration   3: 321619.215 ops/s
[info] Iteration   1: 321001.480 ops/s
[info]                  ·gc.alloc.rate:                   729.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              3577.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3220.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 321776.850 ops/s
[info]                  ·gc.alloc.rate:                   732.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              3581.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3215.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 320966.635 ops/s
[info]                  ·gc.alloc.rate:               728.870 MB/sec
[info]                  ·gc.alloc.rate.norm:          3573.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3227.302 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 311872.779 ops/s
[info]                  ·gc.alloc.rate:                   749.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              3780.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4988.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.163 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.963 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 316679.246 ops/s
[info]                  ·gc.alloc.rate:                   732.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              3638.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3271.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.863 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   318459.398 ±(99.9%) 16143.615 ops/s [Average]
[info]   (min, avg, max) = (311872.779, 318459.398, 321776.850), stdev = 4192.446
[info]   CI (99.9%): [302315.783, 334603.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   734.398 ±(99.9%) 32.114 MB/sec [Average]
[info]   (min, avg, max) = (728.870, 734.398, 749.077), stdev = 8.340
[info]   CI (99.9%): [702.284, 766.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3630.322 ±(99.9%) 338.516 B/op [Average]
[info]   (min, avg, max) = (3573.707, 3630.322, 3780.228), stdev = 87.911
[info]   CI (99.9%): [3291.807, 3968.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.860 ±(99.9%) 569.811 MB/sec [Average]
[info]   (min, avg, max) = (656.831, 723.860, 988.570), stdev = 147.978
[info]   CI (99.9%): [154.049, 1293.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3584.716 ±(99.9%) 3023.647 B/op [Average]
[info]   (min, avg, max) = (3215.951, 3584.716, 4988.833), stdev = 785.232
[info]   CI (99.9%): [561.069, 6608.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 5.248 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 3.163), stdev = 1.363
[info]   CI (99.9%): [≈ 0, 6.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.226 ±(99.9%) 26.483 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.226, 15.963), stdev = 6.878
[info]   CI (99.9%): [≈ 0, 30.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 2.510
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:05:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 193618.248 ops/s
[info] # Warmup Iteration   2: 348910.532 ops/s
[info] # Warmup Iteration   3: 354678.607 ops/s
[info] Iteration   1: 354764.316 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 354595.425 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 354767.466 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 354737.176 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 354739.431 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   354720.763 ±(99.9%) 275.028 ops/s [Average]
[info]   (min, avg, max) = (354595.425, 354720.763, 354767.466), stdev = 71.424
[info]   CI (99.9%): [354445.735, 354995.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:05:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4498.551 ops/s
[info] # Warmup Iteration   2: 17030.924 ops/s
[info] # Warmup Iteration   3: 37103.599 ops/s
[info] Iteration   1: 40241.758 ops/s
[info]                  ·gc.alloc.rate:               2346.098 MB/sec
[info]                  ·gc.alloc.rate.norm:          91466.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2414.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94117.552 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     57.000 ms
[info] Iteration   2: 38310.462 ops/s
[info]                  ·gc.alloc.rate:                   2681.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              110089.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2464.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101176.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      20.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 854.458 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         62.000 ms
[info] Iteration   3: 38925.081 ops/s
[info]                  ·gc.alloc.rate:                   2544.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              102837.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2608.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105423.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.381 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.387 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         39.000 ms
[info] Iteration   4: 39027.200 ops/s
[info]                  ·gc.alloc.rate:                   2088.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              84180.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2193.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88450.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      28.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1147.693 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         82.000 ms
[info] Iteration   5: 29268.883 ops/s
[info]                  ·gc.alloc.rate:                   2740.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              147279.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2455.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131998.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      16.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 893.621 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         73.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   37154.677 ±(99.9%) 17187.457 ops/s [Average]
[info]   (min, avg, max) = (29268.883, 37154.677, 40241.758), stdev = 4463.528
[info]   CI (99.9%): [19967.220, 54342.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2480.033 ±(99.9%) 1026.006 MB/sec [Average]
[info]   (min, avg, max) = (2088.012, 2480.033, 2740.302), stdev = 266.450
[info]   CI (99.9%): [1454.027, 3506.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   107170.843 ±(99.9%) 94541.205 B/op [Average]
[info]   (min, avg, max) = (84180.913, 107170.843, 147279.887), stdev = 24552.051
[info]   CI (99.9%): [12629.638, 201712.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2427.333 ±(99.9%) 576.545 MB/sec [Average]
[info]   (min, avg, max) = (2193.917, 2427.333, 2608.557), stdev = 149.727
[info]   CI (99.9%): [1850.788, 3003.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   104233.393 ±(99.9%) 64809.506 B/op [Average]
[info]   (min, avg, max) = (88450.615, 104233.393, 131998.858), stdev = 16830.823
[info]   CI (99.9%): [39423.886, 169042.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   13.257 ±(99.9%) 48.757 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 13.257, 28.467), stdev = 12.662
[info]   CI (99.9%): [≈ 0, 62.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   582.232 ±(99.9%) 2065.687 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 582.232, 1147.693), stdev = 536.452
[info]   CI (99.9%): [≈ 0, 2647.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   313.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (39.000, 62.600, 82.000), stdev = 16.380
[info]   CI (99.9%): [313.000, 313.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9178.865 ops/s
[info] # Warmup Iteration   2: 78515.900 ops/s
[info] # Warmup Iteration   3: 153322.508 ops/s
[info] Iteration   1: 167541.918 ops/s
[info]                  ·gc.alloc.rate:                   2359.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              22157.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2594.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24359.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.965 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 171711.484 ops/s
[info]                  ·gc.alloc.rate:                   2404.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              22043.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2273.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20836.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.350 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 173065.217 ops/s
[info]                  ·gc.alloc.rate:                   2416.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              21973.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2285.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20781.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 169822.216 ops/s
[info]                  ·gc.alloc.rate:                   2405.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              22291.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21419.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.965 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 170189.214 ops/s
[info]                  ·gc.alloc.rate:                   2399.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              22191.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2336.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21607.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   170466.010 ±(99.9%) 8019.257 ops/s [Average]
[info]   (min, avg, max) = (167541.918, 170466.010, 173065.217), stdev = 2082.575
[info]   CI (99.9%): [162446.753, 178485.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2397.251 ±(99.9%) 84.158 MB/sec [Average]
[info]   (min, avg, max) = (2359.668, 2397.251, 2416.263), stdev = 21.856
[info]   CI (99.9%): [2313.093, 2481.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22131.474 ±(99.9%) 481.246 B/op [Average]
[info]   (min, avg, max) = (21973.992, 22131.474, 22291.580), stdev = 124.978
[info]   CI (99.9%): [21650.228, 22612.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2360.137 ±(99.9%) 512.441 MB/sec [Average]
[info]   (min, avg, max) = (2273.329, 2360.137, 2594.149), stdev = 133.079
[info]   CI (99.9%): [1847.696, 2872.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21800.778 ±(99.9%) 5678.346 B/op [Average]
[info]   (min, avg, max) = (20781.665, 21800.778, 24359.398), stdev = 1474.649
[info]   CI (99.9%): [16122.432, 27479.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.884 ±(99.9%) 4.346 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.884, 2.233), stdev = 1.129
[info]   CI (99.9%): [≈ 0, 5.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8.209 ±(99.9%) 40.412 B/op [Average]
[info]   (min, avg, max) = (0.379, 8.209, 20.965), stdev = 10.495
[info]   CI (99.9%): [≈ 0, 48.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.600, 22.000), stdev = 5.983
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:04:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.793 ops/s
[info] # Warmup Iteration   2: 469853.343 ops/s
[info] # Warmup Iteration   3: 505399.842 ops/s
[info] Iteration   1: 534972.691 ops/s
[info]                  ·gc.alloc.rate:               564.101 MB/sec
[info]                  ·gc.alloc.rate.norm:          1659.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 956.354 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 533369.257 ops/s
[info]                  ·gc.alloc.rate:                   575.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              1696.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1918.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 560095.524 ops/s
[info]                  ·gc.alloc.rate:               603.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          1694.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1827.978 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 566945.066 ops/s
[info]                  ·gc.alloc.rate:                   606.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              1682.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1807.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 567834.370 ops/s
[info]                  ·gc.alloc.rate:               598.736 MB/sec
[info]                  ·gc.alloc.rate.norm:          1659.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 902.848 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   552643.381 ±(99.9%) 65985.027 ops/s [Average]
[info]   (min, avg, max) = (533369.257, 552643.381, 567834.370), stdev = 17136.102
[info]   CI (99.9%): [486658.355, 618628.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   589.519 ±(99.9%) 72.377 MB/sec [Average]
[info]   (min, avg, max) = (564.101, 589.519, 606.253), stdev = 18.796
[info]   CI (99.9%): [517.141, 661.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1678.746 ±(99.9%) 70.634 B/op [Average]
[info]   (min, avg, max) = (1659.510, 1678.746, 1696.881), stdev = 18.343
[info]   CI (99.9%): [1608.112, 1749.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.600 ±(99.9%) 686.119 MB/sec [Average]
[info]   (min, avg, max) = (325.083, 520.600, 651.185), stdev = 178.183
[info]   CI (99.9%): [≈ 0, 1206.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1482.668 ±(99.9%) 1952.086 B/op [Average]
[info]   (min, avg, max) = (902.848, 1482.668, 1918.460), stdev = 506.951
[info]   CI (99.9%): [≈ 0, 3434.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.028), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.169 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.083), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 2.168
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:04:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82944.255 ops/s
[info] # Warmup Iteration   2: 278271.239 ops/s
[info] # Warmup Iteration   3: 357564.927 ops/s
[info] Iteration   1: 506922.848 ops/s
[info]                  ·gc.alloc.rate:                   491.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              1524.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2010.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.305 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 528777.485 ops/s
[info]                  ·gc.alloc.rate:               510.482 MB/sec
[info]                  ·gc.alloc.rate.norm:          1519.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 963.606 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 497848.561 ops/s
[info]                  ·gc.alloc.rate:               489.260 MB/sec
[info]                  ·gc.alloc.rate.norm:          1546.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2046.836 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 513382.830 ops/s
[info]                  ·gc.alloc.rate:               500.229 MB/sec
[info]                  ·gc.alloc.rate.norm:          1532.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 992.496 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 526728.066 ops/s
[info]                  ·gc.alloc.rate:               522.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          1562.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1936.699 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   514731.958 ±(99.9%) 50538.689 ops/s [Average]
[info]   (min, avg, max) = (497848.561, 514731.958, 528777.485), stdev = 13124.737
[info]   CI (99.9%): [464193.269, 565270.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   502.835 ±(99.9%) 54.132 MB/sec [Average]
[info]   (min, avg, max) = (489.260, 502.835, 522.984), stdev = 14.058
[info]   CI (99.9%): [448.703, 556.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1537.144 ±(99.9%) 67.714 B/op [Average]
[info]   (min, avg, max) = (1519.087, 1537.144, 1562.615), stdev = 17.585
[info]   CI (99.9%): [1469.430, 1604.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   518.229 ±(99.9%) 683.300 MB/sec [Average]
[info]   (min, avg, max) = (323.815, 518.229, 648.185), stdev = 177.451
[info]   CI (99.9%): [≈ 0, 1201.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1589.988 ±(99.9%) 2156.820 B/op [Average]
[info]   (min, avg, max) = (963.606, 1589.988, 2046.836), stdev = 560.119
[info]   CI (99.9%): [≈ 0, 3746.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.342 ±(99.9%) 2.944 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.342, 1.709), stdev = 0.764
[info]   CI (99.9%): [≈ 0, 3.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.061 ±(99.9%) 9.136 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.061, 5.305), stdev = 2.373
[info]   CI (99.9%): [≈ 0, 10.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:04:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 311623.503 ops/s
[info] # Warmup Iteration   2: 531970.632 ops/s
[info] # Warmup Iteration   3: 665655.016 ops/s
[info] Iteration   1: 657714.542 ops/s
[info]                  ·gc.alloc.rate:               488.959 MB/sec
[info]                  ·gc.alloc.rate.norm:          1170.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1568.462 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 690716.891 ops/s
[info]                  ·gc.alloc.rate:               459.166 MB/sec
[info]                  ·gc.alloc.rate.norm:          1046.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 747.574 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 685283.599 ops/s
[info]                  ·gc.alloc.rate:                   466.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              1070.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1507.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 681226.360 ops/s
[info]                  ·gc.alloc.rate:               460.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          1064.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 758.757 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 665352.405 ops/s
[info]                  ·gc.alloc.rate:               464.260 MB/sec
[info]                  ·gc.alloc.rate.norm:          1098.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 778.436 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   676058.760 ±(99.9%) 53695.394 ops/s [Average]
[info]   (min, avg, max) = (657714.542, 676058.760, 690716.891), stdev = 13944.523
[info]   CI (99.9%): [622363.365, 729754.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   467.884 ±(99.9%) 46.619 MB/sec [Average]
[info]   (min, avg, max) = (459.166, 467.884, 488.959), stdev = 12.107
[info]   CI (99.9%): [421.266, 514.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1089.946 ±(99.9%) 186.870 B/op [Average]
[info]   (min, avg, max) = (1046.025, 1089.946, 1170.060), stdev = 48.530
[info]   CI (99.9%): [903.075, 1276.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.516 ±(99.9%) 690.546 MB/sec [Average]
[info]   (min, avg, max) = (328.158, 459.516, 656.481), stdev = 179.333
[info]   CI (99.9%): [≈ 0, 1150.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1072.200 ±(99.9%) 1640.394 B/op [Average]
[info]   (min, avg, max) = (747.574, 1072.200, 1568.462), stdev = 426.005
[info]   CI (99.9%): [≈ 0, 2712.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 2.191
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:04:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4107.050 ops/s
[info] # Warmup Iteration   2: 64771.778 ops/s
[info] # Warmup Iteration   3: 105011.496 ops/s
[info] Iteration   1: 100097.578 ops/s
[info]                  ·gc.alloc.rate:                   3384.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              53208.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3298.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51866.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.600 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 100727.310 ops/s
[info]                  ·gc.alloc.rate:                   3384.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              52869.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3000.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46873.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.976 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 101600.019 ops/s
[info]                  ·gc.alloc.rate:                   3458.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              53556.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3367.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52140.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.967 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 103832.749 ops/s
[info]                  ·gc.alloc.rate:                   3538.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              53638.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3385.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51323.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.631 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 103845.631 ops/s
[info]                  ·gc.alloc.rate:                   3534.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              53568.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51469.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   102020.658 ±(99.9%) 6714.414 ops/s [Average]
[info]   (min, avg, max) = (100097.578, 102020.658, 103845.631), stdev = 1743.712
[info]   CI (99.9%): [95306.243, 108735.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3460.135 ±(99.9%) 293.321 MB/sec [Average]
[info]   (min, avg, max) = (3384.107, 3460.135, 3538.645), stdev = 76.175
[info]   CI (99.9%): [3166.814, 3753.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   53368.348 ±(99.9%) 1251.848 B/op [Average]
[info]   (min, avg, max) = (52869.611, 53368.348, 53638.824), stdev = 325.101
[info]   CI (99.9%): [52116.500, 54620.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3289.765 ±(99.9%) 639.254 MB/sec [Average]
[info]   (min, avg, max) = (3000.655, 3289.765, 3396.065), stdev = 166.012
[info]   CI (99.9%): [2650.511, 3929.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50734.799 ±(99.9%) 8403.336 B/op [Average]
[info]   (min, avg, max) = (46873.879, 50734.799, 52140.392), stdev = 2182.320
[info]   CI (99.9%): [42331.463, 59138.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.321 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.083, 0.229), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.298 ±(99.9%) 5.066 B/op [Average]
[info]   (min, avg, max) = (0.315, 1.298, 3.600), stdev = 1.316
[info]   CI (99.9%): [≈ 0, 6.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.600, 15.000), stdev = 1.140
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:04:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51004.809 ops/s
[info] # Warmup Iteration   2: 204145.082 ops/s
[info] # Warmup Iteration   3: 236528.932 ops/s
[info] Iteration   1: 242407.734 ops/s
[info]                  ·gc.alloc.rate:                   1734.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              11259.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10561.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 233644.050 ops/s
[info]                  ·gc.alloc.rate:                   1674.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              11278.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11038.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.561 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 235674.728 ops/s
[info]                  ·gc.alloc.rate:               1676.552 MB/sec
[info]                  ·gc.alloc.rate.norm:          11196.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1654.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11047.639 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 237197.660 ops/s
[info]                  ·gc.alloc.rate:                   1706.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              11324.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1666.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11060.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 242964.465 ops/s
[info]                  ·gc.alloc.rate:                   1754.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              11360.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10869.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   238377.727 ±(99.9%) 15921.560 ops/s [Average]
[info]   (min, avg, max) = (233644.050, 238377.727, 242964.465), stdev = 4134.779
[info]   CI (99.9%): [222456.167, 254299.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1709.274 ±(99.9%) 135.832 MB/sec [Average]
[info]   (min, avg, max) = (1674.318, 1709.274, 1754.645), stdev = 35.275
[info]   CI (99.9%): [1573.441, 1845.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11283.884 ±(99.9%) 242.886 B/op [Average]
[info]   (min, avg, max) = (11196.162, 11283.884, 11360.931), stdev = 63.077
[info]   CI (99.9%): [11040.999, 11526.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1653.090 ±(99.9%) 80.686 MB/sec [Average]
[info]   (min, avg, max) = (1626.680, 1653.090, 1678.786), stdev = 20.954
[info]   CI (99.9%): [1572.404, 1733.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10915.678 ±(99.9%) 819.011 B/op [Average]
[info]   (min, avg, max) = (10561.707, 10915.678, 11060.742), stdev = 212.694
[info]   CI (99.9%): [10096.667, 11734.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.194 ±(99.9%) 0.822 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.194, 0.561), stdev = 0.214
[info]   CI (99.9%): [≈ 0, 1.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:03:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.826 ops/s
[info] # Warmup Iteration   2: 1138299.675 ops/s
[info] # Warmup Iteration   3: 1080871.605 ops/s
[info] Iteration   1: 1247532.187 ops/s
[info]                  ·gc.alloc.rate:                   694.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     819.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1237864.758 ops/s
[info]                  ·gc.alloc.rate:                   696.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              885.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     826.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1208235.585 ops/s
[info]                  ·gc.alloc.rate:               684.315 MB/sec
[info]                  ·gc.alloc.rate.norm:          891.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 847.729 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 1234127.227 ops/s
[info]                  ·gc.alloc.rate:                   693.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              884.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     831.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1241475.586 ops/s
[info]                  ·gc.alloc.rate:                   698.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              885.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     827.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   1233847.069 ±(99.9%) 58323.121 ops/s [Average]
[info]   (min, avg, max) = (1208235.585, 1233847.069, 1247532.187), stdev = 15146.329
[info]   CI (99.9%): [1175523.948, 1292170.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   693.438 ±(99.9%) 21.189 MB/sec [Average]
[info]   (min, avg, max) = (684.315, 693.438, 698.882), stdev = 5.503
[info]   CI (99.9%): [672.249, 714.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   884.510 ±(99.9%) 20.774 B/op [Average]
[info]   (min, avg, max) = (876.142, 884.510, 891.135), stdev = 5.395
[info]   CI (99.9%): [863.735, 905.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   651.147 ±(99.9%) 5.295 MB/sec [Average]
[info]   (min, avg, max) = (649.519, 651.147, 652.851), stdev = 1.375
[info]   CI (99.9%): [645.852, 656.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   830.627 ±(99.9%) 40.578 B/op [Average]
[info]   (min, avg, max) = (819.409, 830.627, 847.729), stdev = 10.538
[info]   CI (99.9%): [790.048, 871.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.822 ±(99.9%) 6.870 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.822, 4.013), stdev = 1.784
[info]   CI (99.9%): [≈ 0, 7.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.042 ±(99.9%) 8.709 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.042, 5.087), stdev = 2.262
[info]   CI (99.9%): [≈ 0, 9.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:03:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 378843.942 ops/s
[info] # Warmup Iteration   2: 1025540.280 ops/s
[info] # Warmup Iteration   3: 1196336.668 ops/s
[info] Iteration   1: 1164894.861 ops/s
[info]                  ·gc.alloc.rate:                   652.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              881.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     871.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1142705.992 ops/s
[info]                  ·gc.alloc.rate:               663.310 MB/sec
[info]                  ·gc.alloc.rate.norm:          913.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 889.073 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1148455.626 ops/s
[info]                  ·gc.alloc.rate:                   649.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              890.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     886.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1198595.642 ops/s
[info]                  ·gc.alloc.rate:               672.435 MB/sec
[info]                  ·gc.alloc.rate.norm:          882.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 851.114 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1235471.206 ops/s
[info]                  ·gc.alloc.rate:                   690.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              879.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   1178024.666 ±(99.9%) 149350.871 ops/s [Average]
[info]   (min, avg, max) = (1142705.992, 1178024.666, 1235471.206), stdev = 38785.947
[info]   CI (99.9%): [1028673.795, 1327375.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   665.678 ±(99.9%) 63.548 MB/sec [Average]
[info]   (min, avg, max) = (649.725, 665.678, 690.392), stdev = 16.503
[info]   CI (99.9%): [602.130, 729.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   889.589 ±(99.9%) 54.001 B/op [Average]
[info]   (min, avg, max) = (879.480, 889.589, 913.572), stdev = 14.024
[info]   CI (99.9%): [835.588, 943.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   647.248 ±(99.9%) 9.219 MB/sec [Average]
[info]   (min, avg, max) = (644.836, 647.248, 650.850), stdev = 2.394
[info]   CI (99.9%): [638.028, 656.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   865.378 ±(99.9%) 97.340 B/op [Average]
[info]   (min, avg, max) = (829.108, 865.378, 889.073), stdev = 25.279
[info]   CI (99.9%): [768.038, 962.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.016 ±(99.9%) 0.075 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.097 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.053), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:03:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 486837.888 ops/s
[info] # Warmup Iteration   2: 1065019.550 ops/s
[info] # Warmup Iteration   3: 1107511.508 ops/s
[info] Iteration   1: 1143849.331 ops/s
[info]                  ·gc.alloc.rate:                   645.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              888.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     902.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1123293.490 ops/s
[info]                  ·gc.alloc.rate:                   632.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              885.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     920.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1113835.818 ops/s
[info]                  ·gc.alloc.rate:               629.261 MB/sec
[info]                  ·gc.alloc.rate.norm:          889.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 929.478 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 1131376.227 ops/s
[info]                  ·gc.alloc.rate:                   633.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              880.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     916.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1134153.860 ops/s
[info]                  ·gc.alloc.rate:                   631.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              875.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     914.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.275 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1129301.745 ±(99.9%) 43682.869 ops/s [Average]
[info]   (min, avg, max) = (1113835.818, 1129301.745, 1143849.331), stdev = 11344.302
[info]   CI (99.9%): [1085618.876, 1172984.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   634.319 ±(99.9%) 24.794 MB/sec [Average]
[info]   (min, avg, max) = (629.261, 634.319, 645.517), stdev = 6.439
[info]   CI (99.9%): [609.525, 659.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   883.957 ±(99.9%) 21.404 B/op [Average]
[info]   (min, avg, max) = (875.857, 883.957, 889.137), stdev = 5.559
[info]   CI (99.9%): [862.553, 905.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.806 ±(99.9%) 4.531 MB/sec [Average]
[info]   (min, avg, max) = (656.155, 657.806, 659.163), stdev = 1.177
[info]   CI (99.9%): [653.275, 662.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   916.751 ±(99.9%) 37.359 B/op [Average]
[info]   (min, avg, max) = (902.827, 916.751, 929.478), stdev = 9.702
[info]   CI (99.9%): [879.391, 954.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.637 ±(99.9%) 5.261 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.637, 3.081), stdev = 1.366
[info]   CI (99.9%): [≈ 0, 5.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.884 ±(99.9%) 7.301 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.884, 4.275), stdev = 1.896
[info]   CI (99.9%): [≈ 0, 8.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 679054.092 ops/s
[info] # Warmup Iteration   2: 1133571.229 ops/s
[info] # Warmup Iteration   3: 1151085.083 ops/s
[info] Iteration   1: 1153246.600 ops/s
[info]                  ·gc.alloc.rate:      0.156 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.212 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1147191.283 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1152354.713 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1107080.203 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1107874.987 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1133549.557 ±(99.9%) 92084.234 ops/s [Average]
[info]   (min, avg, max) = (1107080.203, 1133549.557, 1153246.600), stdev = 23913.983
[info]   CI (99.9%): [1041465.323, 1225633.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.031 ±(99.9%) 0.267 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.031, 0.156), stdev = 0.069
[info]   CI (99.9%): [≈ 0, 0.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.043 ±(99.9%) 0.365 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.043, 0.212), stdev = 0.095
[info]   CI (99.9%): [≈ 0, 0.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6035.641 ops/s
[info] # Warmup Iteration   2: 19435.029 ops/s
[info] # Warmup Iteration   3: 38594.906 ops/s
[info] Iteration   1: 39266.411 ops/s
[info]                  ·gc.alloc.rate:                   1978.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              79320.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78258.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.335 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.497 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 36546.353 ops/s
[info]                  ·gc.alloc.rate:                   1961.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              84457.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84170.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.647 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.067 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 40094.939 ops/s
[info]                  ·gc.alloc.rate:                   1725.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              67750.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63852.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.735 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.111 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 40637.893 ops/s
[info]                  ·gc.alloc.rate:                   1760.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              68193.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75757.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.643 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 40893.868 ops/s
[info]                  ·gc.alloc.rate:                   1754.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              67497.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63284.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.801 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   39487.893 ±(99.9%) 6771.410 ops/s [Average]
[info]   (min, avg, max) = (36546.353, 39487.893, 40893.868), stdev = 1758.514
[info]   CI (99.9%): [32716.482, 46259.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1836.235 ±(99.9%) 473.849 MB/sec [Average]
[info]   (min, avg, max) = (1725.992, 1836.235, 1978.983), stdev = 123.057
[info]   CI (99.9%): [1362.385, 2310.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   73443.857 ±(99.9%) 30512.330 B/op [Average]
[info]   (min, avg, max) = (67497.746, 73443.857, 84457.051), stdev = 7923.955
[info]   CI (99.9%): [42931.527, 103956.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1826.907 ±(99.9%) 672.594 MB/sec [Average]
[info]   (min, avg, max) = (1626.696, 1826.907, 1956.080), stdev = 174.671
[info]   CI (99.9%): [1154.313, 2499.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   73064.776 ±(99.9%) 35400.605 B/op [Average]
[info]   (min, avg, max) = (63284.757, 73064.776, 84170.665), stdev = 9193.425
[info]   CI (99.9%): [37664.171, 108465.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.377 ±(99.9%) 5.659 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.377, 3.647), stdev = 1.470
[info]   CI (99.9%): [≈ 0, 7.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   57.024 ±(99.9%) 243.117 B/op [Average]
[info]   (min, avg, max) = (0.801, 57.024, 157.067), stdev = 63.137
[info]   CI (99.9%): [≈ 0, 300.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.400, 21.000), stdev = 5.941
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:02:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20889.990 ops/s
[info] # Warmup Iteration   2: 95495.886 ops/s
[info] # Warmup Iteration   3: 138743.416 ops/s
[info] Iteration   1: 130892.930 ops/s
[info]                  ·gc.alloc.rate:                   1815.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              21829.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1934.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23259.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.754 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 135299.200 ops/s
[info]                  ·gc.alloc.rate:                   1702.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              19791.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18756.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.422 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 135564.548 ops/s
[info]                  ·gc.alloc.rate:                   1696.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              19692.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18735.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.970 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.088 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 139872.469 ops/s
[info]                  ·gc.alloc.rate:                   1757.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              19766.759 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18135.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.234 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 142108.639 ops/s
[info]                  ·gc.alloc.rate:                   1803.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              19972.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21542.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.461 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   136747.557 ±(99.9%) 16815.478 ops/s [Average]
[info]   (min, avg, max) = (130892.930, 136747.557, 142108.639), stdev = 4366.926
[info]   CI (99.9%): [119932.079, 153563.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1755.000 ±(99.9%) 213.319 MB/sec [Average]
[info]   (min, avg, max) = (1696.284, 1755.000, 1815.682), stdev = 55.398
[info]   CI (99.9%): [1541.681, 1968.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20210.492 ±(99.9%) 3506.951 B/op [Average]
[info]   (min, avg, max) = (19692.454, 20210.492, 21829.227), stdev = 910.744
[info]   CI (99.9%): [16703.541, 23717.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1743.855 ±(99.9%) 689.435 MB/sec [Average]
[info]   (min, avg, max) = (1612.370, 1743.855, 1945.254), stdev = 179.044
[info]   CI (99.9%): [1054.420, 2433.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20085.931 ±(99.9%) 8520.940 B/op [Average]
[info]   (min, avg, max) = (18135.890, 20085.931, 23259.328), stdev = 2212.861
[info]   CI (99.9%): [11564.991, 28606.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.959 ±(99.9%) 10.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.959, 5.552), stdev = 2.620
[info]   CI (99.9%): [≈ 0, 12.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   23.192 ±(99.9%) 120.190 B/op [Average]
[info]   (min, avg, max) = (0.234, 23.192, 66.754), stdev = 31.213
[info]   CI (99.9%): [≈ 0, 143.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.400, 26.000), stdev = 7.861
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:02:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39791.379 ops/s
[info] # Warmup Iteration   2: 155262.163 ops/s
[info] # Warmup Iteration   3: 181766.542 ops/s
[info] Iteration   1: 187324.167 ops/s
[info]                  ·gc.alloc.rate:                   1111.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              9338.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          928.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7804.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.638 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.170 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 185617.763 ops/s
[info]                  ·gc.alloc.rate:                   1117.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              9474.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1251.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10612.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.295 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 186720.918 ops/s
[info]                  ·gc.alloc.rate:                   1109.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              9351.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          947.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7981.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.545 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 194347.582 ops/s
[info]                  ·gc.alloc.rate:                   1155.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              9356.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1267.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10265.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 194860.894 ops/s
[info]                  ·gc.alloc.rate:                   1156.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              9338.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          947.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7653.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   189774.265 ±(99.9%) 17154.979 ops/s [Average]
[info]   (min, avg, max) = (185617.763, 189774.265, 194860.894), stdev = 4455.093
[info]   CI (99.9%): [172619.286, 206929.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1130.063 ±(99.9%) 91.243 MB/sec [Average]
[info]   (min, avg, max) = (1109.753, 1130.063, 1156.272), stdev = 23.696
[info]   CI (99.9%): [1038.820, 1221.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9371.938 ±(99.9%) 221.879 B/op [Average]
[info]   (min, avg, max) = (9338.497, 9371.938, 9474.031), stdev = 57.621
[info]   CI (99.9%): [9150.058, 9593.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1068.606 ±(99.9%) 672.628 MB/sec [Average]
[info]   (min, avg, max) = (928.924, 1068.606, 1267.655), stdev = 174.679
[info]   CI (99.9%): [395.978, 1741.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8863.578 ±(99.9%) 5576.417 B/op [Average]
[info]   (min, avg, max) = (7653.388, 8863.578, 10612.672), stdev = 1448.178
[info]   CI (99.9%): [3287.161, 14439.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.775 ±(99.9%) 12.636 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.775, 7.638), stdev = 3.282
[info]   CI (99.9%): [≈ 0, 15.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   23.040 ±(99.9%) 105.354 B/op [Average]
[info]   (min, avg, max) = (0.168, 23.040, 64.170), stdev = 27.360
[info]   CI (99.9%): [≈ 0, 128.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.200, 16.000), stdev = 4.604
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:02:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92607.464 ops/s
[info] # Warmup Iteration   2: 188834.343 ops/s
[info] # Warmup Iteration   3: 244546.171 ops/s
[info] Iteration   1: 237033.110 ops/s
[info]                  ·gc.alloc.rate:                   1271.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              8445.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1281.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8511.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 238520.910 ops/s
[info]                  ·gc.alloc.rate:                   1281.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              8452.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8498.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.860 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.871 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 237917.497 ops/s
[info]                  ·gc.alloc.rate:                   1266.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              8375.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1286.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8509.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.356 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.589 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 240822.510 ops/s
[info]                  ·gc.alloc.rate:                   1285.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              8402.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1281.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8378.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 238837.303 ops/s
[info]                  ·gc.alloc.rate:                   1288.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1288.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8489.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   238626.266 ±(99.9%) 5418.208 ops/s [Average]
[info]   (min, avg, max) = (237033.110, 238626.266, 240822.510), stdev = 1407.091
[info]   CI (99.9%): [233208.058, 244044.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1278.587 ±(99.9%) 35.873 MB/sec [Average]
[info]   (min, avg, max) = (1266.116, 1278.587, 1288.154), stdev = 9.316
[info]   CI (99.9%): [1242.714, 1314.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   8432.972 ±(99.9%) 169.812 B/op [Average]
[info]   (min, avg, max) = (8375.940, 8432.972, 8488.234), stdev = 44.100
[info]   CI (99.9%): [8263.160, 8602.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1285.334 ±(99.9%) 12.240 MB/sec [Average]
[info]   (min, avg, max) = (1281.959, 1285.334, 1288.383), stdev = 3.179
[info]   CI (99.9%): [1273.094, 1297.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8477.686 ±(99.9%) 216.129 B/op [Average]
[info]   (min, avg, max) = (8378.525, 8477.686, 8511.937), stdev = 56.128
[info]   CI (99.9%): [8261.557, 8693.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.068 ±(99.9%) 5.457 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.068, 2.860), stdev = 1.417
[info]   CI (99.9%): [≈ 0, 6.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.057 ±(99.9%) 36.041 B/op [Average]
[info]   (min, avg, max) = (0.136, 7.057, 18.871), stdev = 9.360
[info]   CI (99.9%): [≈ 0, 43.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.600, 18.000), stdev = 5.983
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3095.625 ops/s
[info] # Warmup Iteration   2: 57483.416 ops/s
[info] # Warmup Iteration   3: 92465.577 ops/s
[info] Iteration   1: 95447.828 ops/s
[info]                  ·gc.alloc.rate:                   3289.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              54243.473 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3288.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54226.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.772 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 103112.923 ops/s
[info]                  ·gc.alloc.rate:                   3285.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              50146.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3319.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50666.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.981 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 103509.648 ops/s
[info]                  ·gc.alloc.rate:                   3273.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              49771.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3014.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45828.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.266 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 105284.447 ops/s
[info]                  ·gc.alloc.rate:                   3389.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              50669.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3373.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50435.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 103400.679 ops/s
[info]                  ·gc.alloc.rate:                   3322.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              50562.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46438.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.634 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   102151.105 ±(99.9%) 14799.192 ops/s [Average]
[info]   (min, avg, max) = (95447.828, 102151.105, 105284.447), stdev = 3843.303
[info]   CI (99.9%): [87351.913, 116950.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3312.170 ±(99.9%) 180.791 MB/sec [Average]
[info]   (min, avg, max) = (3273.419, 3312.170, 3389.658), stdev = 46.951
[info]   CI (99.9%): [3131.379, 3492.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51078.782 ±(99.9%) 6948.849 B/op [Average]
[info]   (min, avg, max) = (49771.799, 51078.782, 54243.473), stdev = 1804.594
[info]   CI (99.9%): [44129.933, 58027.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3209.576 ±(99.9%) 634.638 MB/sec [Average]
[info]   (min, avg, max) = (3014.060, 3209.576, 3373.978), stdev = 164.813
[info]   CI (99.9%): [2574.938, 3844.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49519.037 ±(99.9%) 13259.329 B/op [Average]
[info]   (min, avg, max) = (45828.290, 49519.037, 54226.462), stdev = 3443.406
[info]   CI (99.9%): [36259.708, 62778.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.598 ±(99.9%) 3.207 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.598, 1.927), stdev = 0.833
[info]   CI (99.9%): [≈ 0, 3.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   9.593 ±(99.9%) 52.619 B/op [Average]
[info]   (min, avg, max) = (0.311, 9.593, 31.772), stdev = 13.665
[info]   CI (99.9%): [≈ 0, 62.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 15.000, 18.000), stdev = 2.121
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:01:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49716.916 ops/s
[info] # Warmup Iteration   2: 203189.346 ops/s
[info] # Warmup Iteration   3: 217686.551 ops/s
[info] Iteration   1: 231445.381 ops/s
[info]                  ·gc.alloc.rate:                   1504.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              10231.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11064.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 229188.079 ops/s
[info]                  ·gc.alloc.rate:                   1486.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              10207.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8993.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 236655.507 ops/s
[info]                  ·gc.alloc.rate:               1536.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          10218.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1651.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10984.504 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 236349.859 ops/s
[info]                  ·gc.alloc.rate:                   1532.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              10208.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8860.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.277 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 233259.268 ops/s
[info]                  ·gc.alloc.rate:                   1540.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              10396.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11295.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.281 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   233379.619 ±(99.9%) 12309.801 ops/s [Average]
[info]   (min, avg, max) = (229188.079, 233379.619, 236655.507), stdev = 3196.816
[info]   CI (99.9%): [221069.818, 245689.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1520.323 ±(99.9%) 90.784 MB/sec [Average]
[info]   (min, avg, max) = (1486.621, 1520.323, 1540.869), stdev = 23.576
[info]   CI (99.9%): [1429.539, 1611.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10252.519 ±(99.9%) 311.340 B/op [Average]
[info]   (min, avg, max) = (10207.951, 10252.519, 10396.099), stdev = 80.854
[info]   CI (99.9%): [9941.179, 10563.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1518.687 ±(99.9%) 701.292 MB/sec [Average]
[info]   (min, avg, max) = (1309.791, 1518.687, 1674.197), stdev = 182.123
[info]   CI (99.9%): [817.395, 2219.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10239.863 ±(99.9%) 4638.293 B/op [Average]
[info]   (min, avg, max) = (8860.862, 10239.863, 11295.649), stdev = 1204.550
[info]   CI (99.9%): [5601.571, 14878.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.225 ±(99.9%) 0.485 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.225, 0.286), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.342
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:01:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136479.658 ops/s
[info] # Warmup Iteration   2: 585896.874 ops/s
[info] # Warmup Iteration   3: 864411.879 ops/s
[info] Iteration   1: 863390.816 ops/s
[info]                  ·gc.alloc.rate:               677.401 MB/sec
[info]                  ·gc.alloc.rate.norm:          1234.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:      640.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1168.163 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 846099.063 ops/s
[info]                  ·gc.alloc.rate:                   700.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              1302.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1195.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 842167.968 ops/s
[info]                  ·gc.alloc.rate:                   666.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              1244.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1206.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 859849.444 ops/s
[info]                  ·gc.alloc.rate:                   687.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              1257.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1777.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 868374.294 ops/s
[info]                  ·gc.alloc.rate:                   684.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              1239.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1184.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   855976.317 ±(99.9%) 43561.505 ops/s [Average]
[info]   (min, avg, max) = (842167.968, 855976.317, 868374.294), stdev = 11312.785
[info]   CI (99.9%): [812414.812, 899537.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   683.231 ±(99.9%) 49.101 MB/sec [Average]
[info]   (min, avg, max) = (666.224, 683.231, 700.778), stdev = 12.751
[info]   CI (99.9%): [634.130, 732.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1255.958 ±(99.9%) 106.261 B/op [Average]
[info]   (min, avg, max) = (1234.651, 1255.958, 1302.903), stdev = 27.596
[info]   CI (99.9%): [1149.697, 1362.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   711.077 ±(99.9%) 561.763 MB/sec [Average]
[info]   (min, avg, max) = (640.922, 711.077, 971.908), stdev = 145.888
[info]   CI (99.9%): [149.315, 1272.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1306.549 ±(99.9%) 1016.182 B/op [Average]
[info]   (min, avg, max) = (1168.163, 1306.549, 1777.945), stdev = 263.899
[info]   CI (99.9%): [290.367, 2322.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.116), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 273998.862 ops/s
[info] # Warmup Iteration   2: 432940.063 ops/s
[info] # Warmup Iteration   3: 664966.970 ops/s
[info] Iteration   1: 636558.207 ops/s
[info]                  ·gc.alloc.rate:               530.820 MB/sec
[info]                  ·gc.alloc.rate.norm:          1312.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1622.341 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 662145.310 ops/s
[info]                  ·gc.alloc.rate:               522.504 MB/sec
[info]                  ·gc.alloc.rate.norm:          1241.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 780.624 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 670012.035 ops/s
[info]                  ·gc.alloc.rate:               537.552 MB/sec
[info]                  ·gc.alloc.rate.norm:          1262.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1543.650 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 672097.380 ops/s
[info]                  ·gc.alloc.rate:                   523.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              1225.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     769.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 674507.408 ops/s
[info]                  ·gc.alloc.rate:               539.571 MB/sec
[info]                  ·gc.alloc.rate.norm:          1258.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1535.715 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   663064.068 ±(99.9%) 59785.194 ops/s [Average]
[info]   (min, avg, max) = (636558.207, 663064.068, 674507.408), stdev = 15526.025
[info]   CI (99.9%): [603278.874, 722849.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   530.750 ±(99.9%) 30.291 MB/sec [Average]
[info]   (min, avg, max) = (522.504, 530.750, 539.571), stdev = 7.866
[info]   CI (99.9%): [500.459, 561.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1260.223 ±(99.9%) 125.933 B/op [Average]
[info]   (min, avg, max) = (1225.429, 1260.223, 1312.370), stdev = 32.704
[info]   CI (99.9%): [1134.290, 1386.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   525.759 ±(99.9%) 693.029 MB/sec [Average]
[info]   (min, avg, max) = (328.472, 525.759, 658.169), stdev = 179.977
[info]   CI (99.9%): [≈ 0, 1218.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1250.428 ±(99.9%) 1675.578 B/op [Average]
[info]   (min, avg, max) = (769.812, 1250.428, 1622.341), stdev = 435.142
[info]   CI (99.9%): [≈ 0, 2926.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.049), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 330789.139 ops/s
[info] # Warmup Iteration   2: 576659.925 ops/s
[info] # Warmup Iteration   3: 691397.726 ops/s
[info] Iteration   1: 692131.004 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 688262.177 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 692091.081 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 692283.421 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 688877.444 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   690729.025 ±(99.9%) 7641.025 ops/s [Average]
[info]   (min, avg, max) = (688262.177, 690729.025, 692283.421), stdev = 1984.350
[info]   CI (99.9%): [683088.000, 698370.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67724.842 ops/s
[info] # Warmup Iteration   2: 419806.126 ops/s
[info] # Warmup Iteration   3: 554534.345 ops/s
[info] Iteration   1: 614470.576 ops/s
[info]                  ·gc.alloc.rate:                   1523.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              3902.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4181.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 603662.368 ops/s
[info]                  ·gc.alloc.rate:                   1482.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              3864.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3429.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.636 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 601839.040 ops/s
[info]                  ·gc.alloc.rate:                   1486.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              3888.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3449.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 622731.900 ops/s
[info]                  ·gc.alloc.rate:                   1543.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              3900.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4188.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 626460.948 ops/s
[info]                  ·gc.alloc.rate:                   1573.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              3952.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1668.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4191.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   613832.966 ±(99.9%) 42460.173 ops/s [Average]
[info]   (min, avg, max) = (601839.040, 613832.966, 626460.948), stdev = 11026.772
[info]   CI (99.9%): [571372.793, 656293.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1521.881 ±(99.9%) 148.290 MB/sec [Average]
[info]   (min, avg, max) = (1482.084, 1521.881, 1573.405), stdev = 38.510
[info]   CI (99.9%): [1373.592, 1670.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3901.636 ±(99.9%) 125.071 B/op [Average]
[info]   (min, avg, max) = (3864.006, 3901.636, 3952.801), stdev = 32.480
[info]   CI (99.9%): [3776.566, 4026.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1518.516 ±(99.9%) 709.419 MB/sec [Average]
[info]   (min, avg, max) = (1315.355, 1518.516, 1668.445), stdev = 184.234
[info]   CI (99.9%): [809.097, 2227.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3887.979 ±(99.9%) 1577.347 B/op [Average]
[info]   (min, avg, max) = (3429.318, 3887.979, 4191.566), stdev = 409.632
[info]   CI (99.9%): [2310.633, 5465.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.312 ±(99.9%) 2.331 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.312, 1.395), stdev = 0.605
[info]   CI (99.9%): [≈ 0, 2.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.812 ±(99.9%) 6.080 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.812, 3.636), stdev = 1.579
[info]   CI (99.9%): [≈ 0, 6.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 12.000), stdev = 2.345
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:00:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1670.864 ops/s
[info] # Warmup Iteration   2: 7048.276 ops/s
[info] # Warmup Iteration   3: 6226.579 ops/s
[info] Iteration   1: 11912.677 ops/s
[info]                  ·gc.alloc.rate:                   1588.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              209853.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1603.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211827.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.587 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 473.924 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 12225.162 ops/s
[info]                  ·gc.alloc.rate:                   1615.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              207331.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1600.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205481.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.954 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 250.858 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 12670.485 ops/s
[info]                  ·gc.alloc.rate:                   1666.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              206976.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199736.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.127 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 512.599 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 12259.531 ops/s
[info]                  ·gc.alloc.rate:                   1659.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              213006.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1599.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205362.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.017 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 12479.346 ops/s
[info]                  ·gc.alloc.rate:                   1665.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              209973.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     203271.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.719 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   12309.440 ±(99.9%) 1099.688 ops/s [Average]
[info]   (min, avg, max) = (11912.677, 12309.440, 12670.485), stdev = 285.585
[info]   CI (99.9%): [11209.753, 13409.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1638.982 ±(99.9%) 135.999 MB/sec [Average]
[info]   (min, avg, max) = (1588.455, 1638.982, 1666.361), stdev = 35.319
[info]   CI (99.9%): [1502.983, 1774.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   209428.133 ±(99.9%) 9370.382 B/op [Average]
[info]   (min, avg, max) = (206976.885, 209428.133, 213006.236), stdev = 2433.459
[info]   CI (99.9%): [200057.751, 218798.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1604.890 ±(99.9%) 20.415 MB/sec [Average]
[info]   (min, avg, max) = (1599.758, 1604.890, 1612.435), stdev = 5.302
[info]   CI (99.9%): [1584.475, 1625.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   205135.854 ±(99.9%) 16957.521 B/op [Average]
[info]   (min, avg, max) = (199736.642, 205135.854, 211827.313), stdev = 4403.814
[info]   CI (99.9%): [188178.333, 222093.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.050 ±(99.9%) 6.935 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.050, 4.127), stdev = 1.801
[info]   CI (99.9%): [≈ 0, 8.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   262.223 ±(99.9%) 884.118 B/op [Average]
[info]   (min, avg, max) = (8.017, 262.223, 512.599), stdev = 229.603
[info]   CI (99.9%): [≈ 0, 1146.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.800, 28.000), stdev = 9.602
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:00:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1219.495 ops/s
[info] # Warmup Iteration   2: 4600.918 ops/s
[info] # Warmup Iteration   3: 10485.875 ops/s
[info] Iteration   1: 11862.579 ops/s
[info]                  ·gc.alloc.rate:               1399.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          185736.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1290.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 171242.077 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 11760.566 ops/s
[info]                  ·gc.alloc.rate:                   1375.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              184021.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173158.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.571 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 11718.460 ops/s
[info]                  ·gc.alloc.rate:                   1374.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              184587.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218732.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106.235 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 11589.752 ops/s
[info]                  ·gc.alloc.rate:                   1351.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              183504.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178290.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.827 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11598.906 ops/s
[info]                  ·gc.alloc.rate:                   1365.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              185349.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179236.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.825 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   11706.052 ±(99.9%) 441.702 ops/s [Average]
[info]   (min, avg, max) = (11589.752, 11706.052, 11862.579), stdev = 114.709
[info]   CI (99.9%): [11264.351, 12147.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1373.397 ±(99.9%) 68.066 MB/sec [Average]
[info]   (min, avg, max) = (1351.385, 1373.397, 1399.927), stdev = 17.676
[info]   CI (99.9%): [1305.331, 1441.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   184639.941 ±(99.9%) 3540.546 B/op [Average]
[info]   (min, avg, max) = (183504.349, 184639.941, 185736.858), stdev = 919.469
[info]   CI (99.9%): [181099.396, 188180.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1369.466 ±(99.9%) 559.926 MB/sec [Average]
[info]   (min, avg, max) = (1290.677, 1369.466, 1628.606), stdev = 145.411
[info]   CI (99.9%): [809.540, 1929.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   184132.076 ±(99.9%) 75601.312 B/op [Average]
[info]   (min, avg, max) = (171242.077, 184132.076, 218732.900), stdev = 19633.421
[info]   CI (99.9%): [108530.765, 259733.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.175 ±(99.9%) 1.327 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.175, 0.791), stdev = 0.345
[info]   CI (99.9%): [≈ 0, 1.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   23.492 ±(99.9%) 178.273 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 23.492, 106.235), stdev = 46.297
[info]   CI (99.9%): [≈ 0, 201.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103509.444 ops/s
[info] # Warmup Iteration   2: 208265.244 ops/s
[info] # Warmup Iteration   3: 326744.501 ops/s
[info] Iteration   1: 345232.952 ops/s
[info]                  ·gc.alloc.rate:                   2308.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              10523.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2265.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10328.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.213 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 343658.266 ops/s
[info]                  ·gc.alloc.rate:                   2295.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              10509.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2264.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10366.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.814 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.304 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 332846.998 ops/s
[info]                  ·gc.alloc.rate:               2250.054 MB/sec
[info]                  ·gc.alloc.rate.norm:          10638.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2279.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10779.512 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 346690.902 ops/s
[info]                  ·gc.alloc.rate:                   2334.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              10597.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8990.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 348468.711 ops/s
[info]                  ·gc.alloc.rate:               2360.487 MB/sec
[info]                  ·gc.alloc.rate.norm:          10660.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2335.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10545.573 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   343379.566 ±(99.9%) 23683.186 ops/s [Average]
[info]   (min, avg, max) = (332846.998, 343379.566, 348468.711), stdev = 6150.448
[info]   CI (99.9%): [319696.380, 367062.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2309.843 ±(99.9%) 160.540 MB/sec [Average]
[info]   (min, avg, max) = (2250.054, 2309.843, 2360.487), stdev = 41.692
[info]   CI (99.9%): [2149.302, 2470.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10585.840 ±(99.9%) 260.505 B/op [Average]
[info]   (min, avg, max) = (10509.149, 10585.840, 10660.615), stdev = 67.652
[info]   CI (99.9%): [10325.335, 10846.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2225.137 ±(99.9%) 537.927 MB/sec [Average]
[info]   (min, avg, max) = (1980.599, 2225.137, 2335.015), stdev = 139.698
[info]   CI (99.9%): [1687.209, 2763.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10202.163 ±(99.9%) 2696.605 B/op [Average]
[info]   (min, avg, max) = (8990.775, 10202.163, 10779.512), stdev = 700.300
[info]   CI (99.9%): [7505.558, 12898.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.688 ±(99.9%) 3.567 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.688, 1.814), stdev = 0.926
[info]   CI (99.9%): [≈ 0, 4.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.141 ±(99.9%) 16.301 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.141, 8.304), stdev = 4.233
[info]   CI (99.9%): [≈ 0, 19.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.400, 18.000), stdev = 4.450
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 672.649 ops/s
[info] # Warmup Iteration   2: 3758.610 ops/s
[info] # Warmup Iteration   3: 6673.267 ops/s
[info] Iteration   1: 9734.375 ops/s
[info]                  ·gc.alloc.rate:                   1679.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              271469.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1607.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     259936.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 632.492 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 10122.090 ops/s
[info]                  ·gc.alloc.rate:                   1745.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              271443.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1600.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     248886.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.237 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 10135.565 ops/s
[info]                  ·gc.alloc.rate:                   1753.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              272194.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250532.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.465 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 10187.442 ops/s
[info]                  ·gc.alloc.rate:               1755.746 MB/sec
[info]                  ·gc.alloc.rate.norm:          271131.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1633.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252265.364 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 10191.670 ops/s
[info]                  ·gc.alloc.rate:                   1790.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              276384.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     306374.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.214 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   10074.228 ±(99.9%) 741.094 ops/s [Average]
[info]   (min, avg, max) = (9734.375, 10074.228, 10191.670), stdev = 192.460
[info]   CI (99.9%): [9333.134, 10815.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1744.902 ±(99.9%) 156.219 MB/sec [Average]
[info]   (min, avg, max) = (1679.132, 1744.902, 1790.378), stdev = 40.570
[info]   CI (99.9%): [1588.684, 1901.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   272524.666 ±(99.9%) 8443.029 B/op [Average]
[info]   (min, avg, max) = (271131.500, 272524.666, 276384.455), stdev = 2192.628
[info]   CI (99.9%): [264081.638, 280967.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1688.132 ±(99.9%) 640.005 MB/sec [Average]
[info]   (min, avg, max) = (1600.833, 1688.132, 1984.651), stdev = 166.207
[info]   CI (99.9%): [1048.126, 2328.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   263599.123 ±(99.9%) 93508.179 B/op [Average]
[info]   (min, avg, max) = (248886.619, 263599.123, 306374.693), stdev = 24283.777
[info]   CI (99.9%): [170090.944, 357107.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.799 ±(99.9%) 6.701 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.799, 3.912), stdev = 1.740
[info]   CI (99.9%): [≈ 0, 7.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   129.082 ±(99.9%) 1083.665 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 129.082, 632.492), stdev = 281.424
[info]   CI (99.9%): [≈ 0, 1212.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 11.000), stdev = 1.517
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 00:59:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3122.738 ops/s
[info] # Warmup Iteration   2: 14933.772 ops/s
[info] # Warmup Iteration   3: 22643.231 ops/s
[info] Iteration   1: 27580.787 ops/s
[info]                  ·gc.alloc.rate:                   1368.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              78080.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1551.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88531.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 184.273 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         41.000 ms
[info] Iteration   2: 28718.743 ops/s
[info]                  ·gc.alloc.rate:                   1413.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              77470.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1246.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68301.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.931 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 105.816 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 26199.159 ops/s
[info]                  ·gc.alloc.rate:                   1747.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              104948.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1874.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112568.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 267.701 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 25442.980 ops/s
[info]                  ·gc.alloc.rate:                   1621.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              100239.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1451.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89747.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.842 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.075 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         43.000 ms
[info] Iteration   5: 26436.439 ops/s
[info]                  ·gc.alloc.rate:                   1391.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              82818.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1426.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84948.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.677 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 397.512 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         44.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   26875.622 ±(99.9%) 4945.229 ops/s [Average]
[info]   (min, avg, max) = (25442.980, 26875.622, 28718.743), stdev = 1284.260
[info]   CI (99.9%): [21930.392, 31820.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1508.429 ±(99.9%) 645.541 MB/sec [Average]
[info]   (min, avg, max) = (1368.286, 1508.429, 1747.858), stdev = 167.645
[info]   CI (99.9%): [862.888, 2153.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   88711.296 ±(99.9%) 49858.883 B/op [Average]
[info]   (min, avg, max) = (77470.976, 88711.296, 104948.027), stdev = 12948.194
[info]   CI (99.9%): [38852.413, 138570.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1510.197 ±(99.9%) 891.913 MB/sec [Average]
[info]   (min, avg, max) = (1246.385, 1510.197, 1874.781), stdev = 231.627
[info]   CI (99.9%): [618.284, 2402.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   88819.526 ±(99.9%) 60913.226 B/op [Average]
[info]   (min, avg, max) = (68301.271, 88819.526, 112568.953), stdev = 15818.971
[info]   CI (99.9%): [27906.300, 149732.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.428 ±(99.9%) 8.735 MB/sec [Average]
[info]   (min, avg, max) = (0.842, 3.428, 6.677), stdev = 2.269
[info]   CI (99.9%): [≈ 0, 12.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   201.475 ±(99.9%) 525.804 B/op [Average]
[info]   (min, avg, max) = (52.075, 201.475, 397.512), stdev = 136.550
[info]   CI (99.9%): [≈ 0, 727.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   174.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (19.000, 34.800, 44.000), stdev = 11.189
[info]   CI (99.9%): [174.000, 174.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 00:59:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2787.677 ops/s
[info] # Warmup Iteration   2: 16347.607 ops/s
[info] # Warmup Iteration   3: 23990.984 ops/s
[info] Iteration   1: 29190.574 ops/s
[info]                  ·gc.alloc.rate:                   1158.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              62476.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1221.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65868.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.824 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   2: 28860.543 ops/s
[info]                  ·gc.alloc.rate:                   1099.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              59953.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          913.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49804.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.163 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226.984 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 25541.118 ops/s
[info]                  ·gc.alloc.rate:                   1414.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              87121.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1531.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94328.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      15.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 952.615 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   4: 28912.387 ops/s
[info]                  ·gc.alloc.rate:                   1278.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              69593.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1212.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65993.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.662 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 308.175 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 31053.394 ops/s
[info]                  ·gc.alloc.rate:                   1181.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              59861.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1208.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61258.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.275 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   28711.603 ±(99.9%) 7659.751 ops/s [Average]
[info]   (min, avg, max) = (25541.118, 28711.603, 31053.394), stdev = 1989.213
[info]   CI (99.9%): [21051.853, 36371.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1226.494 ±(99.9%) 474.876 MB/sec [Average]
[info]   (min, avg, max) = (1099.463, 1226.494, 1414.509), stdev = 123.324
[info]   CI (99.9%): [751.619, 1701.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   67801.311 ±(99.9%) 44300.693 B/op [Average]
[info]   (min, avg, max) = (59861.977, 67801.311, 87121.083), stdev = 11504.749
[info]   CI (99.9%): [23500.617, 112102.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1217.542 ±(99.9%) 841.995 MB/sec [Average]
[info]   (min, avg, max) = (913.334, 1217.542, 1531.533), stdev = 218.663
[info]   CI (99.9%): [375.547, 2059.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67450.771 ±(99.9%) 63178.538 B/op [Average]
[info]   (min, avg, max) = (49804.181, 67450.771, 94328.739), stdev = 16407.266
[info]   CI (99.9%): [4272.232, 130629.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   5.086 ±(99.9%) 24.299 MB/sec [Average]
[info]   (min, avg, max) = (0.034, 5.086, 15.467), stdev = 6.310
[info]   CI (99.9%): [≈ 0, 29.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   298.975 ±(99.9%) 1500.110 B/op [Average]
[info]   (min, avg, max) = (1.824, 298.975, 952.615), stdev = 389.574
[info]   CI (99.9%): [≈ 0, 1799.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   112.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 22.400, 37.000), stdev = 14.117
[info]   CI (99.9%): [112.000, 112.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 00:59:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 294976.128 ops/s
[info] # Warmup Iteration   2: 702107.782 ops/s
[info] # Warmup Iteration   3: 771201.872 ops/s
[info] Iteration   1: 792025.826 ops/s
[info]                  ·gc.alloc.rate:                   1460.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              2902.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2623.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.180 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 789006.116 ops/s
[info]                  ·gc.alloc.rate:                   1464.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              2920.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2625.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.907 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 790055.740 ops/s
[info]                  ·gc.alloc.rate:                   1463.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              2916.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3260.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 790542.762 ops/s
[info]                  ·gc.alloc.rate:               1478.738 MB/sec
[info]                  ·gc.alloc.rate.norm:          2943.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2613.954 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 786087.665 ops/s
[info]                  ·gc.alloc.rate:                   1470.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              2943.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2643.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   789543.622 ±(99.9%) 8535.592 ops/s [Average]
[info]   (min, avg, max) = (786087.665, 789543.622, 792025.826), stdev = 2216.666
[info]   CI (99.9%): [781008.030, 798079.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1467.641 ±(99.9%) 27.358 MB/sec [Average]
[info]   (min, avg, max) = (1460.512, 1467.641, 1478.738), stdev = 7.105
[info]   CI (99.9%): [1440.283, 1494.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2925.294 ±(99.9%) 69.722 B/op [Average]
[info]   (min, avg, max) = (2902.291, 2925.294, 2943.991), stdev = 18.107
[info]   CI (99.9%): [2855.573, 2995.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1381.472 ±(99.9%) 549.793 MB/sec [Average]
[info]   (min, avg, max) = (1312.963, 1381.472, 1636.827), stdev = 142.780
[info]   CI (99.9%): [831.679, 1931.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2753.464 ±(99.9%) 1092.418 B/op [Average]
[info]   (min, avg, max) = (2613.954, 2753.464, 3260.601), stdev = 283.697
[info]   CI (99.9%): [1661.046, 3845.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.821 ±(99.9%) 4.536 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.821, 2.607), stdev = 1.178
[info]   CI (99.9%): [≈ 0, 5.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.634 ±(99.9%) 9.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.634, 5.180), stdev = 2.342
[info]   CI (99.9%): [≈ 0, 10.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 14.000), stdev = 3.782
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 00:59:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 273547.114 ops/s
[info] # Warmup Iteration   2: 808926.677 ops/s
[info] # Warmup Iteration   3: 918181.125 ops/s
[info] Iteration   1: 917114.321 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 917695.870 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 916208.804 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 917404.825 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 916969.073 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   917078.579 ±(99.9%) 2158.820 ops/s [Average]
[info]   (min, avg, max) = (916208.804, 917078.579, 917695.870), stdev = 560.639
[info]   CI (99.9%): [914919.759, 919237.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 00:59:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6262.025 ops/s
[info] # Warmup Iteration   2: 19452.250 ops/s
[info] # Warmup Iteration   3: 22350.216 ops/s
[info] Iteration   1: 28960.806 ops/s
[info]                  ·gc.alloc.rate:                   1261.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              68555.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1184.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64366.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.298 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.511 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         34.000 ms
[info] Iteration   2: 30189.430 ops/s
[info]                  ·gc.alloc.rate:                   1541.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              80312.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1492.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77758.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.258 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.756 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   3: 29413.433 ops/s
[info]                  ·gc.alloc.rate:                   1571.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              84107.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1484.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79453.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.537 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 349.777 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         46.000 ms
[info] Iteration   4: 32301.738 ops/s
[info]                  ·gc.alloc.rate:                   1347.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              65660.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1196.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58292.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 418.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 32297.870 ops/s
[info]                  ·gc.alloc.rate:                   1353.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              65935.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1491.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72665.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.556 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   30632.656 ±(99.9%) 6099.598 ops/s [Average]
[info]   (min, avg, max) = (28960.806, 30632.656, 32301.738), stdev = 1584.046
[info]   CI (99.9%): [24533.057, 36732.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1415.127 ±(99.9%) 518.332 MB/sec [Average]
[info]   (min, avg, max) = (1261.535, 1415.127, 1571.958), stdev = 134.609
[info]   CI (99.9%): [896.795, 1933.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   72914.115 ±(99.9%) 33366.914 B/op [Average]
[info]   (min, avg, max) = (65660.209, 72914.115, 84107.586), stdev = 8665.282
[info]   CI (99.9%): [39547.201, 106281.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1369.889 ±(99.9%) 631.072 MB/sec [Average]
[info]   (min, avg, max) = (1184.443, 1369.889, 1492.249), stdev = 163.887
[info]   CI (99.9%): [738.818, 2000.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   70507.086 ±(99.9%) 34665.994 B/op [Average]
[info]   (min, avg, max) = (58292.088, 70507.086, 79453.238), stdev = 9002.649
[info]   CI (99.9%): [35841.092, 105173.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.999 ±(99.9%) 13.456 MB/sec [Average]
[info]   (min, avg, max) = (0.319, 3.999, 8.583), stdev = 3.495
[info]   CI (99.9%): [≈ 0, 17.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   204.758 ±(99.9%) 671.464 B/op [Average]
[info]   (min, avg, max) = (15.556, 204.758, 418.192), stdev = 174.377
[info]   CI (99.9%): [≈ 0, 876.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   156.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (19.000, 31.200, 46.000), stdev = 11.563
[info]   CI (99.9%): [156.000, 156.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 00:58:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3197.192 ops/s
[info] # Warmup Iteration   2: 21109.456 ops/s
[info] # Warmup Iteration   3: 26653.359 ops/s
[info] Iteration   1: 44527.270 ops/s
[info]                  ·gc.alloc.rate:                   2512.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              88801.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2438.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86176.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 453.512 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         50.000 ms
[info] Iteration   2: 47119.742 ops/s
[info]                  ·gc.alloc.rate:                   2593.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              86572.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2757.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92059.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      13.618 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 454.639 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 47033.776 ops/s
[info]                  ·gc.alloc.rate:                   2357.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              78891.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2185.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73143.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.652 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.214 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 43342.827 ops/s
[info]                  ·gc.alloc.rate:                   1824.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              66259.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1890.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68648.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.907 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 359.731 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 46593.956 ops/s
[info]                  ·gc.alloc.rate:                   1949.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              65849.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1918.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64803.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.406 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   45723.514 ±(99.9%) 6535.490 ops/s [Average]
[info]   (min, avg, max) = (43342.827, 45723.514, 47119.742), stdev = 1697.246
[info]   CI (99.9%): [39188.024, 52259.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   2247.517 ±(99.9%) 1318.901 MB/sec [Average]
[info]   (min, avg, max) = (1824.856, 2247.517, 2593.180), stdev = 342.514
[info]   CI (99.9%): [928.616, 3566.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   77275.145 ±(99.9%) 41908.023 B/op [Average]
[info]   (min, avg, max) = (65849.969, 77275.145, 88801.848), stdev = 10883.381
[info]   CI (99.9%): [35367.122, 119183.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2238.139 ±(99.9%) 1408.801 MB/sec [Average]
[info]   (min, avg, max) = (1890.649, 2238.139, 2757.526), stdev = 365.861
[info]   CI (99.9%): [829.339, 3646.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   76966.380 ±(99.9%) 44920.747 B/op [Average]
[info]   (min, avg, max) = (64803.306, 76966.380, 92059.397), stdev = 11665.775
[info]   CI (99.9%): [32045.633, 121887.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   8.010 ±(99.9%) 22.844 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 8.010, 13.618), stdev = 5.932
[info]   CI (99.9%): [≈ 0, 30.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   278.301 ±(99.9%) 792.566 B/op [Average]
[info]   (min, avg, max) = (1.406, 278.301, 454.639), stdev = 205.827
[info]   CI (99.9%): [≈ 0, 1070.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.304
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   112.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 22.400, 50.000), stdev = 16.802
[info]   CI (99.9%): [112.000, 112.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 00:58:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1408.410 ops/s
[info] # Warmup Iteration   2: 27206.750 ops/s
[info] # Warmup Iteration   3: 42950.194 ops/s
[info] Iteration   1: 39950.838 ops/s
[info]                  ·gc.alloc.rate:                   1639.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              64536.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1609.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63362.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.820 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 35452.504 ops/s
[info]                  ·gc.alloc.rate:                        1550.487 MB/sec
[info]                  ·gc.alloc.rate.norm:                   68826.833 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.017 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.736 B/op
[info]                  ·gc.churn.Metaspace:                   0.049 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              2.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1600.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          71045.632 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  11.279 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             500.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           10.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      456.881 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              81.000 ms
[info] Iteration   3: 41018.294 ops/s
[info]                  ·gc.alloc.rate:                   1425.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              54687.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1259.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48334.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.598 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 40701.836 ops/s
[info]                  ·gc.alloc.rate:                   1422.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              55003.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1583.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61224.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.608 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 178.174 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 41633.405 ops/s
[info]                  ·gc.alloc.rate:               1438.988 MB/sec
[info]                  ·gc.alloc.rate.norm:          54395.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1266.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47882.310 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   39751.375 ±(99.9%) 9543.574 ops/s [Average]
[info]   (min, avg, max) = (35452.504, 39751.375, 41633.405), stdev = 2478.436
[info]   CI (99.9%): [30207.801, 49294.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1495.323 ±(99.9%) 370.535 MB/sec [Average]
[info]   (min, avg, max) = (1422.494, 1495.323, 1639.045), stdev = 96.227
[info]   CI (99.9%): [1124.788, 1865.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   59489.975 ±(99.9%) 25959.170 B/op [Average]
[info]   (min, avg, max) = (54395.578, 59489.975, 68826.833), stdev = 6741.514
[info]   CI (99.9%): [33530.805, 85449.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.029 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.147 ±(99.9%) 1.268 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.147, 0.736), stdev = 0.329
[info]   CI (99.9%): [≈ 0, 1.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.084 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.049), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.431 ±(99.9%) 3.709 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.431, 2.154), stdev = 0.963
[info]   CI (99.9%): [≈ 0, 4.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1463.952 ±(99.9%) 706.159 MB/sec [Average]
[info]   (min, avg, max) = (1259.987, 1463.952, 1609.234), stdev = 183.387
[info]   CI (99.9%): [757.793, 2170.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   58369.938 ±(99.9%) 38720.579 B/op [Average]
[info]   (min, avg, max) = (47882.310, 58369.938, 71045.632), stdev = 10055.611
[info]   CI (99.9%): [19649.359, 97090.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   2.256 ±(99.9%) 19.423 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.256, 11.279), stdev = 5.044
[info]   CI (99.9%): [≈ 0, 21.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   100.133 ±(99.9%) 862.177 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 100.133, 500.666), stdev = 223.905
[info]   CI (99.9%): [≈ 0, 962.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.993 ±(99.9%) 17.476 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.993, 10.292), stdev = 4.538
[info]   CI (99.9%): [≈ 0, 20.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   127.494 ±(99.9%) 768.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 127.494, 456.881), stdev = 199.509
[info]   CI (99.9%): [≈ 0, 895.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   134.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 26.800, 81.000), stdev = 31.164
[info]   CI (99.9%): [134.000, 134.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 00:58:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 258035.154 ops/s
[info] # Warmup Iteration   2: 515956.957 ops/s
[info] # Warmup Iteration   3: 549710.448 ops/s
[info] Iteration   1: 533992.915 ops/s
[info]                  ·gc.alloc.rate:                   1436.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              4232.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4788.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.628 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 412476.536 ops/s
[info]                  ·gc.alloc.rate:                   1191.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              4547.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3713.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.654 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 450327.230 ops/s
[info]                  ·gc.alloc.rate:                   1207.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              4221.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4537.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 450904.364 ops/s
[info]                  ·gc.alloc.rate:                   1199.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              4185.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3412.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 457507.500 ops/s
[info]                  ·gc.alloc.rate:                   1225.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              4215.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4507.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   461041.709 ±(99.9%) 171240.163 ops/s [Average]
[info]   (min, avg, max) = (412476.536, 461041.709, 533992.915), stdev = 44470.526
[info]   CI (99.9%): [289801.546, 632281.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1252.081 ±(99.9%) 398.855 MB/sec [Average]
[info]   (min, avg, max) = (1191.965, 1252.081, 1436.021), stdev = 103.581
[info]   CI (99.9%): [853.226, 1650.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4280.504 ±(99.9%) 578.573 B/op [Average]
[info]   (min, avg, max) = (4185.223, 4280.504, 4547.433), stdev = 150.253
[info]   CI (99.9%): [3701.931, 4859.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1236.843 ±(99.9%) 1047.841 MB/sec [Average]
[info]   (min, avg, max) = (973.382, 1236.843, 1624.650), stdev = 272.121
[info]   CI (99.9%): [189.002, 2284.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4191.868 ±(99.9%) 2287.853 B/op [Average]
[info]   (min, avg, max) = (3412.145, 4191.868, 4788.700), stdev = 594.148
[info]   CI (99.9%): [1904.014, 6479.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.802 ±(99.9%) 4.823 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.802, 2.927), stdev = 1.253
[info]   CI (99.9%): [≈ 0, 5.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.543 ±(99.9%) 14.346 B/op [Average]
[info]   (min, avg, max) = (0.143, 2.543, 8.628), stdev = 3.726
[info]   CI (99.9%): [≈ 0, 16.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 14.000), stdev = 4.025
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 00:58:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 692.509 ops/s
[info] # Warmup Iteration   2: 10424.879 ops/s
[info] # Warmup Iteration   3: 22395.481 ops/s
[info] Iteration   1: 22764.979 ops/s
[info]                  ·gc.alloc.rate:                   2118.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              146466.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2263.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156487.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.549 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107.057 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 18626.825 ops/s
[info]                  ·gc.alloc.rate:                   2070.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              174920.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     165306.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 325.673 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 21308.856 ops/s
[info]                  ·gc.alloc.rate:               2056.374 MB/sec
[info]                  ·gc.alloc.rate.norm:          151876.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1964.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145087.535 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 20758.537 ops/s
[info]                  ·gc.alloc.rate:                   2177.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              165092.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2313.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175385.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.809 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 212.945 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 20701.795 ops/s
[info]                  ·gc.alloc.rate:                   2087.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              158668.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151171.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.531 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268.465 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   20832.198 ±(99.9%) 5727.290 ops/s [Average]
[info]   (min, avg, max) = (18626.825, 20832.198, 22764.979), stdev = 1487.359
[info]   CI (99.9%): [15104.908, 26559.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2101.988 ±(99.9%) 185.543 MB/sec [Average]
[info]   (min, avg, max) = (2056.374, 2101.988, 2177.516), stdev = 48.185
[info]   CI (99.9%): [1916.444, 2287.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   159404.674 ±(99.9%) 42953.179 B/op [Average]
[info]   (min, avg, max) = (146466.261, 159404.674, 174920.721), stdev = 11154.804
[info]   CI (99.9%): [116451.496, 202357.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2097.268 ±(99.9%) 676.861 MB/sec [Average]
[info]   (min, avg, max) = (1956.473, 2097.268, 2313.283), stdev = 175.779
[info]   CI (99.9%): [1420.407, 2774.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   158687.702 ±(99.9%) 45923.439 B/op [Average]
[info]   (min, avg, max) = (145087.535, 158687.702, 175385.496), stdev = 11926.171
[info]   CI (99.9%): [112764.263, 204611.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.349 ±(99.9%) 6.099 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.349, 3.854), stdev = 1.584
[info]   CI (99.9%): [≈ 0, 8.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   182.828 ±(99.9%) 501.370 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 182.828, 325.673), stdev = 130.204
[info]   CI (99.9%): [≈ 0, 684.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.000, 14.000), stdev = 2.345
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 00:58:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17422.290 ops/s
[info] # Warmup Iteration   2: 62127.581 ops/s
[info] # Warmup Iteration   3: 63188.563 ops/s
[info] Iteration   1: 70493.028 ops/s
[info]                  ·gc.alloc.rate:                   1881.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              42003.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43620.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.322 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.496 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 73097.679 ops/s
[info]                  ·gc.alloc.rate:                   1934.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              41654.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41923.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.241 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 72260.751 ops/s
[info]                  ·gc.alloc.rate:                   1892.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              41209.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35581.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.360 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 73158.281 ops/s
[info]                  ·gc.alloc.rate:                   1940.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              41736.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42599.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.896 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 71513.359 ops/s
[info]                  ·gc.alloc.rate:                   1926.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              42408.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44004.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.374 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   72104.620 ±(99.9%) 4334.140 ops/s [Average]
[info]   (min, avg, max) = (70493.028, 72104.620, 73158.281), stdev = 1125.562
[info]   CI (99.9%): [67770.479, 76438.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1915.097 ±(99.9%) 102.420 MB/sec [Average]
[info]   (min, avg, max) = (1881.311, 1915.097, 1940.202), stdev = 26.598
[info]   CI (99.9%): [1812.677, 2017.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   41802.572 ±(99.9%) 1705.243 B/op [Average]
[info]   (min, avg, max) = (41209.911, 41802.572, 42408.220), stdev = 442.846
[info]   CI (99.9%): [40097.329, 43507.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1902.925 ±(99.9%) 585.035 MB/sec [Average]
[info]   (min, avg, max) = (1633.732, 1902.925, 1999.493), stdev = 151.932
[info]   CI (99.9%): [1317.890, 2487.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   41545.932 ±(99.9%) 13223.674 B/op [Average]
[info]   (min, avg, max) = (35581.712, 41545.932, 44004.654), stdev = 3434.146
[info]   CI (99.9%): [28322.257, 54769.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.919 ±(99.9%) 7.327 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.919, 4.322), stdev = 1.903
[info]   CI (99.9%): [≈ 0, 8.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   20.474 ±(99.9%) 163.655 B/op [Average]
[info]   (min, avg, max) = (0.896, 20.474, 96.496), stdev = 42.501
[info]   CI (99.9%): [≈ 0, 184.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 14.000), stdev = 2.702
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 00:57:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31939.662 ops/s
[info] # Warmup Iteration   2: 166850.841 ops/s
[info] # Warmup Iteration   3: 190112.253 ops/s
[info] Iteration   1: 199543.621 ops/s
[info]                  ·gc.alloc.rate:                   1561.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              12313.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12893.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.804 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.003 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 189591.098 ops/s
[info]                  ·gc.alloc.rate:                        1482.651 MB/sec
[info]                  ·gc.alloc.rate.norm:                   12305.402 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.027 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.221 B/op
[info]                  ·gc.churn.Metaspace:                   0.074 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1630.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          13535.518 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.686 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             22.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      9.677 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              42.000 ms
[info] Iteration   3: 200771.358 ops/s
[info]                  ·gc.alloc.rate:                   1554.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              12182.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10172.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 202982.087 ops/s
[info]                  ·gc.alloc.rate:                   1590.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              12329.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12667.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.646 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 205859.194 ops/s
[info]                  ·gc.alloc.rate:                   1625.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              12429.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12602.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.477 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   199749.472 ±(99.9%) 23741.468 ops/s [Average]
[info]   (min, avg, max) = (189591.098, 199749.472, 205859.194), stdev = 6165.584
[info]   CI (99.9%): [176008.003, 223490.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1562.838 ±(99.9%) 203.912 MB/sec [Average]
[info]   (min, avg, max) = (1482.651, 1562.838, 1625.798), stdev = 52.955
[info]   CI (99.9%): [1358.926, 1766.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   12312.302 ±(99.9%) 338.656 B/op [Average]
[info]   (min, avg, max) = (12182.780, 12312.302, 12429.800), stdev = 87.948
[info]   CI (99.9%): [11973.646, 12650.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.046 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.027), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.044 ±(99.9%) 0.380 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.221), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.015 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.074), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.123 ±(99.9%) 1.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.123, 0.613), stdev = 0.274
[info]   CI (99.9%): [≈ 0, 1.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1569.106 ±(99.9%) 584.476 MB/sec [Average]
[info]   (min, avg, max) = (1297.853, 1569.106, 1648.417), stdev = 151.787
[info]   CI (99.9%): [984.630, 2153.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   12374.262 ±(99.9%) 4948.601 B/op [Average]
[info]   (min, avg, max) = (10172.035, 12374.262, 13535.518), stdev = 1285.136
[info]   CI (99.9%): [7425.661, 17322.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.537 ±(99.9%) 4.625 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.537, 2.686), stdev = 1.201
[info]   CI (99.9%): [≈ 0, 5.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   4.458 ±(99.9%) 38.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.458, 22.290), stdev = 9.968
[info]   CI (99.9%): [≈ 0, 42.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.027 ±(99.9%) 6.258 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.027, 3.804), stdev = 1.625
[info]   CI (99.9%): [≈ 0, 7.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.193 ±(99.9%) 49.420 B/op [Average]
[info]   (min, avg, max) = (0.163, 8.193, 30.003), stdev = 12.834
[info]   CI (99.9%): [≈ 0, 57.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.095
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 16.000, 42.000), stdev = 15.764
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 00:57:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 561066.687 ops/s
[info] # Warmup Iteration   2: 753698.744 ops/s
[info] # Warmup Iteration   3: 865723.673 ops/s
[info] Iteration   1: 842475.606 ops/s
[info]                  ·gc.alloc.rate:                   936.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              1748.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1848.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 830590.381 ops/s
[info]                  ·gc.alloc.rate:                   984.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              1864.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1876.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 880740.130 ops/s
[info]                  ·gc.alloc.rate:                   967.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              1728.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1180.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.477 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 865510.113 ops/s
[info]                  ·gc.alloc.rate:                   955.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              1738.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1792.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.855 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 860835.327 ops/s
[info]                  ·gc.alloc.rate:                   947.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              1732.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1797.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   856030.312 ±(99.9%) 75908.735 ops/s [Average]
[info]   (min, avg, max) = (830590.381, 856030.312, 880740.130), stdev = 19713.257
[info]   CI (99.9%): [780121.577, 931939.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   958.160 ±(99.9%) 71.091 MB/sec [Average]
[info]   (min, avg, max) = (936.043, 958.160, 984.083), stdev = 18.462
[info]   CI (99.9%): [887.069, 1029.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1762.472 ±(99.9%) 221.984 B/op [Average]
[info]   (min, avg, max) = (1728.515, 1762.472, 1864.689), stdev = 57.649
[info]   CI (99.9%): [1540.488, 1984.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   921.942 ±(99.9%) 562.226 MB/sec [Average]
[info]   (min, avg, max) = (660.805, 921.942, 990.554), stdev = 146.008
[info]   CI (99.9%): [359.717, 1484.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1699.242 ±(99.9%) 1124.161 B/op [Average]
[info]   (min, avg, max) = (1180.811, 1699.242, 1876.952), stdev = 291.941
[info]   CI (99.9%): [575.081, 2823.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.834 ±(99.9%) 5.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.834, 3.065), stdev = 1.319
[info]   CI (99.9%): [≈ 0, 5.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.497 ±(99.9%) 9.079 B/op [Average]
[info]   (min, avg, max) = (0.039, 1.497, 5.477), stdev = 2.358
[info]   CI (99.9%): [≈ 0, 10.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 3.114
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 00:57:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 521203.220 ops/s
[info] # Warmup Iteration   2: 856182.026 ops/s
[info] # Warmup Iteration   3: 872889.162 ops/s
[info] Iteration   1: 874641.747 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 877310.357 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 876283.361 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 878029.957 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 878796.267 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   877012.338 ±(99.9%) 6226.229 ops/s [Average]
[info]   (min, avg, max) = (874641.747, 877012.338, 878796.267), stdev = 1616.932
[info]   CI (99.9%): [870786.108, 883238.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 00:57:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16822.865 ops/s
[info] # Warmup Iteration   2: 62789.052 ops/s
[info] # Warmup Iteration   3: 76907.460 ops/s
[info] Iteration   1: 89275.631 ops/s
[info]                  ·gc.alloc.rate:                   1858.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              32766.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28671.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.703 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 86545.708 ops/s
[info]                  ·gc.alloc.rate:                   1809.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              32910.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35750.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.057 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 89122.520 ops/s
[info]                  ·gc.alloc.rate:                   1854.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              32740.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29178.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.103 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 90038.114 ops/s
[info]                  ·gc.alloc.rate:                   1885.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              32955.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34945.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 89699.366 ops/s
[info]                  ·gc.alloc.rate:                   1892.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              33202.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29430.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   88936.268 ±(99.9%) 5329.012 ops/s [Average]
[info]   (min, avg, max) = (86545.708, 88936.268, 90038.114), stdev = 1383.927
[info]   CI (99.9%): [83607.256, 94265.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1860.067 ±(99.9%) 125.357 MB/sec [Average]
[info]   (min, avg, max) = (1809.846, 1860.067, 1892.307), stdev = 32.555
[info]   CI (99.9%): [1734.710, 1985.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32915.329 ±(99.9%) 711.582 B/op [Average]
[info]   (min, avg, max) = (32740.939, 32915.329, 33202.414), stdev = 184.796
[info]   CI (99.9%): [32203.747, 33626.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1784.258 ±(99.9%) 702.041 MB/sec [Average]
[info]   (min, avg, max) = (1626.388, 1784.258, 1999.172), stdev = 182.318
[info]   CI (99.9%): [1082.216, 2486.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31595.211 ±(99.9%) 13277.498 B/op [Average]
[info]   (min, avg, max) = (28671.404, 31595.211, 35750.075), stdev = 3448.124
[info]   CI (99.9%): [18317.713, 44872.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.428 ±(99.9%) 2.790 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.428, 1.703), stdev = 0.725
[info]   CI (99.9%): [≈ 0, 3.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.583 ±(99.9%) 49.168 B/op [Average]
[info]   (min, avg, max) = (0.364, 7.583, 30.025), stdev = 12.769
[info]   CI (99.9%): [≈ 0, 56.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 1.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 00:57:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1823.033 ops/s
[info] # Warmup Iteration   2: 9507.601 ops/s
[info] # Warmup Iteration   3: 16491.581 ops/s
[info] Iteration   1: 18894.113 ops/s
[info]                  ·gc.alloc.rate:                   1644.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              136995.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1568.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130676.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.468 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 18170.796 ops/s
[info]                  ·gc.alloc.rate:                   1924.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              166663.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1888.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163589.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.350 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 376.783 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   3: 17811.463 ops/s
[info]                  ·gc.alloc.rate:                   1552.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              137196.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1569.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138642.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 676.857 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 17975.267 ops/s
[info]                  ·gc.alloc.rate:                   1582.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              138509.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1561.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     136685.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.823 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 17325.010 ops/s
[info]                  ·gc.alloc.rate:                   1896.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              172223.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1902.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172795.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.778 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 252.342 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   18035.330 ±(99.9%) 2207.110 ops/s [Average]
[info]   (min, avg, max) = (17325.010, 18035.330, 18894.113), stdev = 573.180
[info]   CI (99.9%): [15828.220, 20242.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1719.978 ±(99.9%) 682.036 MB/sec [Average]
[info]   (min, avg, max) = (1552.675, 1719.978, 1924.300), stdev = 177.122
[info]   CI (99.9%): [1037.942, 2402.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   150317.536 ±(99.9%) 67691.116 B/op [Average]
[info]   (min, avg, max) = (136995.967, 150317.536, 172223.278), stdev = 17579.168
[info]   CI (99.9%): [82626.420, 218008.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1698.078 ±(99.9%) 694.900 MB/sec [Average]
[info]   (min, avg, max) = (1561.260, 1698.078, 1902.517), stdev = 180.463
[info]   CI (99.9%): [1003.178, 2392.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   148478.121 ±(99.9%) 71325.165 B/op [Average]
[info]   (min, avg, max) = (130676.641, 148478.121, 172795.982), stdev = 18522.919
[info]   CI (99.9%): [77152.957, 219803.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.970 ±(99.9%) 12.360 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.970, 7.660), stdev = 3.210
[info]   CI (99.9%): [≈ 0, 15.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   262.255 ±(99.9%) 1088.966 B/op [Average]
[info]   (min, avg, max) = (1.823, 262.255, 676.857), stdev = 282.801
[info]   CI (99.9%): [≈ 0, 1351.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   94.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 18.800, 33.000), stdev = 12.133
[info]   CI (99.9%): [94.000, 94.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 00:56:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1961.869 ops/s
[info] # Warmup Iteration   2: 8897.482 ops/s
[info] # Warmup Iteration   3: 16126.378 ops/s
[info] Iteration   1: 17509.589 ops/s
[info]                  ·gc.alloc.rate:                   1414.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              127170.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116881.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.572 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 17062.663 ops/s
[info]                  ·gc.alloc.rate:                        1367.506 MB/sec
[info]                  ·gc.alloc.rate.norm:                   126130.163 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.014 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 1.285 B/op
[info]                  ·gc.churn.Metaspace:                   0.038 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              3.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1376.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          126988.483 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  0.955 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             88.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           5.399 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      497.947 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              49.000 ms
[info] Iteration   3: 17893.114 ops/s
[info]                  ·gc.alloc.rate:                   1430.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              125819.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1287.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113224.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.662 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 18482.642 ops/s
[info]                  ·gc.alloc.rate:                   1481.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              126114.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109985.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.545 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 17504.229 ops/s
[info]                  ·gc.alloc.rate:               1640.977 MB/sec
[info]                  ·gc.alloc.rate.norm:          147536.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1629.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146532.312 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   17690.448 ±(99.9%) 2046.778 ops/s [Average]
[info]   (min, avg, max) = (17062.663, 17690.448, 18482.642), stdev = 531.542
[info]   CI (99.9%): [15643.670, 19737.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1466.964 ±(99.9%) 405.801 MB/sec [Average]
[info]   (min, avg, max) = (1367.506, 1466.964, 1640.977), stdev = 105.385
[info]   CI (99.9%): [1061.164, 1872.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   130554.106 ±(99.9%) 36608.608 B/op [Average]
[info]   (min, avg, max) = (125819.375, 130554.106, 147536.250), stdev = 9507.139
[info]   CI (99.9%): [93945.497, 167162.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.024 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.257 ±(99.9%) 2.212 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.257, 1.285), stdev = 0.574
[info]   CI (99.9%): [≈ 0, 2.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.008 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.038), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.710 ±(99.9%) 6.111 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.710, 3.549), stdev = 1.587
[info]   CI (99.9%): [≈ 0, 6.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1377.175 ±(99.9%) 561.743 MB/sec [Average]
[info]   (min, avg, max) = (1287.267, 1377.175, 1629.811), stdev = 145.883
[info]   CI (99.9%): [815.432, 1938.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   122722.264 ±(99.9%) 56843.716 B/op [Average]
[info]   (min, avg, max) = (109985.333, 122722.264, 146532.312), stdev = 14762.133
[info]   CI (99.9%): [65878.548, 179565.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.191 ±(99.9%) 1.645 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.191, 0.955), stdev = 0.427
[info]   CI (99.9%): [≈ 0, 1.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   17.624 ±(99.9%) 151.744 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.624, 88.118), stdev = 39.407
[info]   CI (99.9%): [≈ 0, 169.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.102 ±(99.9%) 9.249 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.102, 5.399), stdev = 2.402
[info]   CI (99.9%): [≈ 0, 10.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   101.545 ±(99.9%) 853.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 101.545, 497.947), stdev = 221.600
[info]   CI (99.9%): [≈ 0, 954.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   91.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 18.200, 49.000), stdev = 18.144
[info]   CI (99.9%): [91.000, 91.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 00:56:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 230544.129 ops/s
[info] # Warmup Iteration   2: 719514.350 ops/s
[info] # Warmup Iteration   3: 767115.629 ops/s
[info] Iteration   1: 791466.788 ops/s
[info]                  ·gc.alloc.rate:                   2121.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              4218.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1966.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3909.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.194 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 797967.735 ops/s
[info]                  ·gc.alloc.rate:                   2147.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              4235.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4523.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 796781.916 ops/s
[info]                  ·gc.alloc.rate:                   2152.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              4251.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3915.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 798998.297 ops/s
[info]                  ·gc.alloc.rate:                   2158.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              4252.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3939.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 799401.141 ops/s
[info]                  ·gc.alloc.rate:                   2160.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              4253.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3966.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   796923.176 ±(99.9%) 12377.539 ops/s [Average]
[info]   (min, avg, max) = (791466.788, 796923.176, 799401.141), stdev = 3214.408
[info]   CI (99.9%): [784545.636, 809300.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2148.169 ±(99.9%) 60.909 MB/sec [Average]
[info]   (min, avg, max) = (2121.575, 2148.169, 2160.825), stdev = 15.818
[info]   CI (99.9%): [2087.260, 2209.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4242.210 ±(99.9%) 59.140 B/op [Average]
[info]   (min, avg, max) = (4218.378, 4242.210, 4253.915), stdev = 15.358
[info]   CI (99.9%): [4183.071, 4301.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2051.376 ±(99.9%) 526.293 MB/sec [Average]
[info]   (min, avg, max) = (1966.062, 2051.376, 2293.677), stdev = 136.677
[info]   CI (99.9%): [1525.083, 2577.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4050.894 ±(99.9%) 1021.581 B/op [Average]
[info]   (min, avg, max) = (3909.167, 4050.894, 4523.790), stdev = 265.301
[info]   CI (99.9%): [3029.312, 5072.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.254 ±(99.9%) 1.829 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.254, 1.103), stdev = 0.475
[info]   CI (99.9%): [≈ 0, 2.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.504 ±(99.9%) 3.639 B/op [Average]
[info]   (min, avg, max) = (0.041, 0.504, 2.194), stdev = 0.945
[info]   CI (99.9%): [≈ 0, 4.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 10.000), stdev = 0.894
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 00:56:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1081.778 ops/s
[info] # Warmup Iteration   2: 8171.930 ops/s
[info] # Warmup Iteration   3: 13801.249 ops/s
[info] Iteration   1: 14245.004 ops/s
[info]                  ·gc.alloc.rate:                   1929.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              213167.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178282.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.600 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 13587.907 ops/s
[info]                  ·gc.alloc.rate:                   1848.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              214049.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226094.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.864 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 13795.353 ops/s
[info]                  ·gc.alloc.rate:               1999.993 MB/sec
[info]                  ·gc.alloc.rate.norm:          228133.337 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1972.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 225020.549 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 14349.205 ops/s
[info]                  ·gc.alloc.rate:                   1977.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              216842.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217247.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.149 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 454.849 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 14109.790 ops/s
[info]                  ·gc.alloc.rate:                   1909.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              213006.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185425.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.322 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   14017.452 ±(99.9%) 1224.062 ops/s [Average]
[info]   (min, avg, max) = (13587.907, 14017.452, 14349.205), stdev = 317.885
[info]   CI (99.9%): [12793.389, 15241.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1933.016 ±(99.9%) 229.868 MB/sec [Average]
[info]   (min, avg, max) = (1848.115, 1933.016, 1999.993), stdev = 59.696
[info]   CI (99.9%): [1703.149, 2162.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   217039.746 ±(99.9%) 24604.597 B/op [Average]
[info]   (min, avg, max) = (213006.256, 217039.746, 228133.337), stdev = 6389.736
[info]   CI (99.9%): [192435.149, 241644.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1836.491 ±(99.9%) 701.783 MB/sec [Average]
[info]   (min, avg, max) = (1613.746, 1836.491, 1981.475), stdev = 182.251
[info]   CI (99.9%): [1134.708, 2538.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   206414.240 ±(99.9%) 87866.964 B/op [Average]
[info]   (min, avg, max) = (178282.942, 206414.240, 226094.619), stdev = 22818.772
[info]   CI (99.9%): [118547.276, 294281.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.942 ±(99.9%) 6.948 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.942, 4.149), stdev = 1.804
[info]   CI (99.9%): [≈ 0, 7.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   103.927 ±(99.9%) 761.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 103.927, 454.849), stdev = 197.648
[info]   CI (99.9%): [≈ 0, 864.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 12.000), stdev = 1.789
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 00:56:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7548.763 ops/s
[info] # Warmup Iteration   2: 24981.348 ops/s
[info] # Warmup Iteration   3: 34345.801 ops/s
[info] Iteration   1: 46968.342 ops/s
[info]                  ·gc.alloc.rate:                   1950.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              65337.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1907.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63885.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.846 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.305 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 40983.601 ops/s
[info]                  ·gc.alloc.rate:               1723.445 MB/sec
[info]                  ·gc.alloc.rate.norm:          66152.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1585.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60859.311 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     29.000 ms
[info] Iteration   3: 44584.706 ops/s
[info]                  ·gc.alloc.rate:                   2021.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              71339.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1846.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65161.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 266.791 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   4: 42755.960 ops/s
[info]                  ·gc.alloc.rate:                   1626.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              59889.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1814.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66795.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.601 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 279.799 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         46.000 ms
[info] Iteration   5: 46243.219 ops/s
[info]                  ·gc.alloc.rate:                   1639.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              55777.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1496.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50920.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.859 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.287 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   44307.166 ±(99.9%) 9502.496 ops/s [Average]
[info]   (min, avg, max) = (40983.601, 44307.166, 46968.342), stdev = 2467.768
[info]   CI (99.9%): [34804.670, 53809.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1792.439 ±(99.9%) 703.236 MB/sec [Average]
[info]   (min, avg, max) = (1626.968, 1792.439, 2021.956), stdev = 182.628
[info]   CI (99.9%): [1089.203, 2495.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   63699.320 ±(99.9%) 23131.255 B/op [Average]
[info]   (min, avg, max) = (55777.666, 63699.320, 71339.417), stdev = 6007.113
[info]   CI (99.9%): [40568.065, 86830.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1730.142 ±(99.9%) 688.197 MB/sec [Average]
[info]   (min, avg, max) = (1496.314, 1730.142, 1907.424), stdev = 178.723
[info]   CI (99.9%): [1041.945, 2418.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   61524.379 ±(99.9%) 24314.331 B/op [Average]
[info]   (min, avg, max) = (50920.017, 61524.379, 66795.777), stdev = 6314.355
[info]   CI (99.9%): [37210.048, 85838.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   4.173 ±(99.9%) 12.791 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 4.173, 7.601), stdev = 3.322
[info]   CI (99.9%): [≈ 0, 16.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   147.837 ±(99.9%) 466.607 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 147.837, 279.799), stdev = 121.176
[info]   CI (99.9%): [≈ 0, 614.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   157.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (25.000, 31.400, 46.000), stdev = 8.503
[info]   CI (99.9%): [157.000, 157.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 00:55:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6031.416 ops/s
[info] # Warmup Iteration   2: 19455.792 ops/s
[info] # Warmup Iteration   3: 33623.692 ops/s
[info] Iteration   1: 53330.439 ops/s
[info]                  ·gc.alloc.rate:                   1711.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              50476.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47584.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 167.423 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 47379.045 ops/s
[info]                  ·gc.alloc.rate:                   1664.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              55259.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1601.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53182.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.982 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.224 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 49457.774 ops/s
[info]                  ·gc.alloc.rate:                   1607.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              51125.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1570.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49942.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.520 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   4: 48790.761 ops/s
[info]                  ·gc.alloc.rate:                   1459.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              47073.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1540.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49700.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.237 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 201.197 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   5: 55718.584 ops/s
[info]                  ·gc.alloc.rate:                   1524.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              43054.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1537.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43419.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.354 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   50935.320 ±(99.9%) 13345.353 ops/s [Average]
[info]   (min, avg, max) = (47379.045, 50935.320, 55718.584), stdev = 3465.746
[info]   CI (99.9%): [37589.968, 64280.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1593.307 ±(99.9%) 393.854 MB/sec [Average]
[info]   (min, avg, max) = (1459.349, 1593.307, 1711.151), stdev = 102.283
[info]   CI (99.9%): [1199.453, 1987.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   49397.785 ±(99.9%) 17660.861 B/op [Average]
[info]   (min, avg, max) = (43054.609, 49397.785, 55259.010), stdev = 4586.469
[info]   CI (99.9%): [31736.924, 67058.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1572.626 ±(99.9%) 132.931 MB/sec [Average]
[info]   (min, avg, max) = (1537.175, 1572.626, 1613.132), stdev = 34.522
[info]   CI (99.9%): [1439.695, 1705.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   48765.929 ±(99.9%) 13849.239 B/op [Average]
[info]   (min, avg, max) = (43419.393, 48765.929, 53182.224), stdev = 3596.603
[info]   CI (99.9%): [34916.690, 62615.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   4.200 ±(99.9%) 7.772 MB/sec [Average]
[info]   (min, avg, max) = (1.054, 4.200, 6.237), stdev = 2.018
[info]   CI (99.9%): [≈ 0, 11.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   129.744 ±(99.9%) 243.743 B/op [Average]
[info]   (min, avg, max) = (33.520, 129.744, 201.197), stdev = 63.299
[info]   CI (99.9%): [≈ 0, 373.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   138.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (22.000, 27.600, 36.000), stdev = 6.427
[info]   CI (99.9%): [138.000, 138.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 00:55:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 485972.125 ops/s
[info] # Warmup Iteration   2: 955308.925 ops/s
[info] # Warmup Iteration   3: 1040764.520 ops/s
[info] Iteration   1: 1031718.254 ops/s
[info]                  ·gc.alloc.rate:                   972.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              1482.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1503.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 955652.767 ops/s
[info]                  ·gc.alloc.rate:               921.695 MB/sec
[info]                  ·gc.alloc.rate.norm:          1517.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1083.891 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1045333.319 ops/s
[info]                  ·gc.alloc.rate:                   981.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              1477.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1488.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.307 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.978 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1014055.174 ops/s
[info]                  ·gc.alloc.rate:                   955.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              1481.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1527.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.195 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1047035.689 ops/s
[info]                  ·gc.alloc.rate:                   974.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1474.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1018759.040 ±(99.9%) 145080.776 ops/s [Average]
[info]   (min, avg, max) = (955652.767, 1018759.040, 1047035.689), stdev = 37677.017
[info]   CI (99.9%): [873678.264, 1163839.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   960.950 ±(99.9%) 92.532 MB/sec [Average]
[info]   (min, avg, max) = (921.695, 960.950, 981.818), stdev = 24.030
[info]   CI (99.9%): [868.419, 1053.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1484.861 ±(99.9%) 76.414 B/op [Average]
[info]   (min, avg, max) = (1464.198, 1484.861, 1517.785), stdev = 19.845
[info]   CI (99.9%): [1408.447, 1561.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   919.691 ±(99.9%) 562.960 MB/sec [Average]
[info]   (min, avg, max) = (658.207, 919.691, 988.777), stdev = 146.199
[info]   CI (99.9%): [356.731, 1482.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1415.622 ±(99.9%) 717.967 B/op [Average]
[info]   (min, avg, max) = (1083.891, 1415.622, 1527.047), stdev = 186.454
[info]   CI (99.9%): [697.655, 2133.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.826 ±(99.9%) 5.485 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.826, 3.307), stdev = 1.424
[info]   CI (99.9%): [≈ 0, 6.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.251 ±(99.9%) 8.254 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.251, 4.978), stdev = 2.144
[info]   CI (99.9%): [≈ 0, 9.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.775
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 00:55:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 737001.675 ops/s
[info] # Warmup Iteration   2: 1444302.911 ops/s
[info] # Warmup Iteration   3: 1056660.221 ops/s
[info] Iteration   1: 1059347.662 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1056855.546 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1058467.316 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1060086.372 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1064187.424 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1059788.864 ±(99.9%) 10542.144 ops/s [Average]
[info]   (min, avg, max) = (1056855.546, 1059788.864, 1064187.424), stdev = 2737.761
[info]   CI (99.9%): [1049246.720, 1070331.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 00:55:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1057.211 ops/s
[info] # Warmup Iteration   2: 1923.199 ops/s
[info] # Warmup Iteration   3: 2672.436 ops/s
[info] Iteration   1: 2548.676 ops/s
[info]                  ·gc.alloc.rate:                   1110.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              685161.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     597277.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 417.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   2: 2047.832 ops/s
[info]                  ·gc.alloc.rate:               1082.934 MB/sec
[info]                  ·gc.alloc.rate.norm:          838227.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:      938.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 726685.173 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     66.000 ms
[info] Iteration   3: 2653.624 ops/s
[info]                  ·gc.alloc.rate:                   988.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              585776.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          818.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     485173.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      17.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10128.763 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         50.000 ms
[info] Iteration   4: 3399.894 ops/s
[info]                  ·gc.alloc.rate:                   505.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              233834.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          536.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     248192.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.836 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2238.408 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   5: 3916.611 ops/s
[info]                  ·gc.alloc.rate:                   517.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              207845.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          544.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218787.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.879 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   2913.328 ±(99.9%) 2851.053 ops/s [Average]
[info]   (min, avg, max) = (2047.832, 2913.328, 3916.611), stdev = 740.409
[info]   CI (99.9%): [62.275, 5764.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   840.746 ±(99.9%) 1171.464 MB/sec [Average]
[info]   (min, avg, max) = (505.179, 840.746, 1110.234), stdev = 304.226
[info]   CI (99.9%): [≈ 0, 2012.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   510169.193 ±(99.9%) 1074945.413 B/op [Average]
[info]   (min, avg, max) = (207845.991, 510169.193, 838227.623), stdev = 279159.910
[info]   CI (99.9%): [≈ 0, 1585114.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   761.155 ±(99.9%) 805.626 MB/sec [Average]
[info]   (min, avg, max) = (536.198, 761.155, 967.827), stdev = 209.218
[info]   CI (99.9%): [≈ 0, 1566.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   455223.354 ±(99.9%) 846991.153 B/op [Average]
[info]   (min, avg, max) = (218787.871, 455223.354, 726685.173), stdev = 219960.913
[info]   CI (99.9%): [≈ 0, 1302214.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   4.529 ±(99.9%) 28.112 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 4.529, 17.085), stdev = 7.301
[info]   CI (99.9%): [≈ 0, 32.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2560.650 ±(99.9%) 16672.896 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2560.650, 10128.763), stdev = 4329.898
[info]   CI (99.9%): [≈ 0, 19233.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   192.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (22.000, 38.400, 66.000), stdev = 18.995
[info]   CI (99.9%): [192.000, 192.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 00:55:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12699.808 ops/s
[info] # Warmup Iteration   2: 81146.361 ops/s
[info] # Warmup Iteration   3: 124799.656 ops/s
[info] Iteration   1: 128829.057 ops/s
[info]                  ·gc.alloc.rate:                   2000.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              24431.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23935.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.245 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 131738.500 ops/s
[info]                  ·gc.alloc.rate:                   2051.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              24498.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23262.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.228 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 130480.464 ops/s
[info]                  ·gc.alloc.rate:                   2024.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              24426.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1958.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23626.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.758 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 134167.489 ops/s
[info]                  ·gc.alloc.rate:                   2113.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              24787.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2310.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27103.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.488 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 131399.616 ops/s
[info]                  ·gc.alloc.rate:                   2079.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              24895.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23969.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.499 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   131323.025 ±(99.9%) 7506.101 ops/s [Average]
[info]   (min, avg, max) = (128829.057, 131323.025, 134167.489), stdev = 1949.311
[info]   CI (99.9%): [123816.924, 138829.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   2053.681 ±(99.9%) 171.084 MB/sec [Average]
[info]   (min, avg, max) = (2000.035, 2053.681, 2113.058), stdev = 44.430
[info]   CI (99.9%): [1882.597, 2224.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24607.884 ±(99.9%) 842.047 B/op [Average]
[info]   (min, avg, max) = (24426.085, 24607.884, 24895.928), stdev = 218.677
[info]   CI (99.9%): [23765.837, 25449.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2035.630 ±(99.9%) 597.122 MB/sec [Average]
[info]   (min, avg, max) = (1947.639, 2035.630, 2310.535), stdev = 155.071
[info]   CI (99.9%): [1438.508, 2632.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24379.612 ±(99.9%) 5965.701 B/op [Average]
[info]   (min, avg, max) = (23262.957, 24379.612, 27103.861), stdev = 1549.274
[info]   CI (99.9%): [18413.912, 30345.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.136 ±(99.9%) 8.538 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.136, 5.096), stdev = 2.217
[info]   CI (99.9%): [≈ 0, 9.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.844 ±(99.9%) 104.353 B/op [Average]
[info]   (min, avg, max) = (0.488, 13.844, 62.245), stdev = 27.100
[info]   CI (99.9%): [≈ 0, 118.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.600, 17.000), stdev = 3.435
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:54:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.565 ops/s
[info] # Warmup Iteration   2: 325584.341 ops/s
[info] # Warmup Iteration   3: 384596.881 ops/s
[info] Iteration   1: 394248.118 ops/s
[info]                  ·gc.alloc.rate:                   809.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              3232.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2595.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.220 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 393627.648 ops/s
[info]                  ·gc.alloc.rate:               812.756 MB/sec
[info]                  ·gc.alloc.rate.norm:          3249.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:      976.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3906.018 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 397122.985 ops/s
[info]                  ·gc.alloc.rate:                   817.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              3240.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2587.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 395451.755 ops/s
[info]                  ·gc.alloc.rate:                   816.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              3250.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3899.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.818 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.173 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 396129.750 ops/s
[info]                  ·gc.alloc.rate:                   814.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              3235.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2585.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   395316.051 ±(99.9%) 5424.051 ops/s [Average]
[info]   (min, avg, max) = (393627.648, 395316.051, 397122.985), stdev = 1408.609
[info]   CI (99.9%): [389892.000, 400740.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   814.236 ±(99.9%) 12.229 MB/sec [Average]
[info]   (min, avg, max) = (809.703, 814.236, 817.646), stdev = 3.176
[info]   CI (99.9%): [802.007, 826.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3241.527 ±(99.9%) 31.338 B/op [Average]
[info]   (min, avg, max) = (3232.330, 3241.527, 3250.037), stdev = 8.138
[info]   CI (99.9%): [3210.189, 3272.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   782.167 ±(99.9%) 689.977 MB/sec [Average]
[info]   (min, avg, max) = (650.173, 782.167, 979.983), stdev = 179.185
[info]   CI (99.9%): [92.190, 1472.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3114.901 ±(99.9%) 2770.245 B/op [Average]
[info]   (min, avg, max) = (2585.803, 3114.901, 3906.018), stdev = 719.424
[info]   CI (99.9%): [344.656, 5885.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.004 ±(99.9%) 8.212 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.004, 4.818), stdev = 2.133
[info]   CI (99.9%): [≈ 0, 9.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   3.994 ±(99.9%) 32.680 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.994, 19.173), stdev = 8.487
[info]   CI (99.9%): [≈ 0, 36.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 12.000), stdev = 3.606
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:54:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35442.223 ops/s
[info] # Warmup Iteration   2: 162767.562 ops/s
[info] # Warmup Iteration   3: 254489.077 ops/s
[info] Iteration   1: 278570.157 ops/s
[info]                  ·gc.alloc.rate:                   571.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              3226.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3643.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 277649.531 ops/s
[info]                  ·gc.alloc.rate:                   574.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              3258.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3655.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 283975.969 ops/s
[info]                  ·gc.alloc.rate:               595.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          3300.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3577.548 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 285067.162 ops/s
[info]                  ·gc.alloc.rate:                   585.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              3231.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1789.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 282024.124 ops/s
[info]                  ·gc.alloc.rate:                   586.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              3272.527 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3624.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   281457.388 ±(99.9%) 12556.109 ops/s [Average]
[info]   (min, avg, max) = (277649.531, 281457.388, 285067.162), stdev = 3260.782
[info]   CI (99.9%): [268901.279, 294013.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   582.630 ±(99.9%) 37.557 MB/sec [Average]
[info]   (min, avg, max) = (571.122, 582.630, 595.488), stdev = 9.754
[info]   CI (99.9%): [545.073, 620.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3257.801 ±(99.9%) 117.597 B/op [Average]
[info]   (min, avg, max) = (3226.241, 3257.801, 3300.580), stdev = 30.540
[info]   CI (99.9%): [3140.204, 3375.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   581.767 ±(99.9%) 554.760 MB/sec [Average]
[info]   (min, avg, max) = (324.071, 581.767, 649.511), stdev = 144.069
[info]   CI (99.9%): [27.007, 1136.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3257.954 ±(99.9%) 3163.618 B/op [Average]
[info]   (min, avg, max) = (1789.216, 3257.954, 3655.220), stdev = 821.582
[info]   CI (99.9%): [94.336, 6421.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.140 ±(99.9%) 0.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.140, 0.236), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:54:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 150573.914 ops/s
[info] # Warmup Iteration   2: 417166.408 ops/s
[info] # Warmup Iteration   3: 493852.582 ops/s
[info] Iteration   1: 480803.749 ops/s
[info]                  ·gc.alloc.rate:               625.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          2047.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2147.859 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 475334.997 ops/s
[info]                  ·gc.alloc.rate:                   616.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              2042.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2174.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 482319.175 ops/s
[info]                  ·gc.alloc.rate:                   630.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              2058.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2145.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 475758.449 ops/s
[info]                  ·gc.alloc.rate:               643.114 MB/sec
[info]                  ·gc.alloc.rate.norm:          2127.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2177.298 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 488907.466 ops/s
[info]                  ·gc.alloc.rate:                   665.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              2140.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2120.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.449 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   480624.767 ±(99.9%) 21367.507 ops/s [Average]
[info]   (min, avg, max) = (475334.997, 480624.767, 488907.466), stdev = 5549.074
[info]   CI (99.9%): [459257.261, 501992.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   636.322 ±(99.9%) 71.905 MB/sec [Average]
[info]   (min, avg, max) = (616.979, 636.322, 665.095), stdev = 18.674
[info]   CI (99.9%): [564.417, 708.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   2083.374 ±(99.9%) 180.542 B/op [Average]
[info]   (min, avg, max) = (2042.788, 2083.374, 2140.632), stdev = 46.886
[info]   CI (99.9%): [1902.832, 2263.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.539 ±(99.9%) 4.198 MB/sec [Average]
[info]   (min, avg, max) = (656.153, 657.539, 658.944), stdev = 1.090
[info]   CI (99.9%): [653.341, 661.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2153.240 ±(99.9%) 89.939 B/op [Average]
[info]   (min, avg, max) = (2120.835, 2153.240, 2177.298), stdev = 23.357
[info]   CI (99.9%): [2063.301, 2243.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.600 ±(99.9%) 5.029 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.936), stdev = 1.306
[info]   CI (99.9%): [≈ 0, 5.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.931 ±(99.9%) 16.184 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.931, 9.449), stdev = 4.203
[info]   CI (99.9%): [≈ 0, 18.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:54:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6374.550 ops/s
[info] # Warmup Iteration   2: 72498.937 ops/s
[info] # Warmup Iteration   3: 93301.959 ops/s
[info] Iteration   1: 105832.102 ops/s
[info]                  ·gc.alloc.rate:                   3657.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              54399.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3613.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53738.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.490 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.029 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 104323.768 ops/s
[info]                  ·gc.alloc.rate:                   3623.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              54653.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3329.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50214.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.942 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 107275.719 ops/s
[info]                  ·gc.alloc.rate:                   3748.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              54997.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3703.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54328.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.611 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 107684.613 ops/s
[info]                  ·gc.alloc.rate:                   3768.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              55078.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3726.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54468.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.826 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 108217.300 ops/s
[info]                  ·gc.alloc.rate:                   3772.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              54853.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3397.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49403.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.605 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   106666.700 ±(99.9%) 6087.579 ops/s [Average]
[info]   (min, avg, max) = (104323.768, 106666.700, 108217.300), stdev = 1580.925
[info]   CI (99.9%): [100579.122, 112754.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3714.135 ±(99.9%) 265.111 MB/sec [Average]
[info]   (min, avg, max) = (3623.387, 3714.135, 3772.576), stdev = 68.848
[info]   CI (99.9%): [3449.024, 3979.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   54796.406 ±(99.9%) 1056.650 B/op [Average]
[info]   (min, avg, max) = (54399.392, 54796.406, 55078.228), stdev = 274.409
[info]   CI (99.9%): [53739.757, 55853.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3553.964 ±(99.9%) 695.609 MB/sec [Average]
[info]   (min, avg, max) = (3329.078, 3553.964, 3726.618), stdev = 180.648
[info]   CI (99.9%): [2858.355, 4249.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   52430.750 ±(99.9%) 9342.132 B/op [Average]
[info]   (min, avg, max) = (49403.279, 52430.750, 54468.509), stdev = 2426.122
[info]   CI (99.9%): [43088.618, 61772.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.552 ±(99.9%) 4.173 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.552, 2.490), stdev = 1.084
[info]   CI (99.9%): [≈ 0, 4.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.203 ±(99.9%) 62.080 B/op [Average]
[info]   (min, avg, max) = (0.605, 8.203, 37.029), stdev = 16.122
[info]   CI (99.9%): [≈ 0, 70.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   53.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 11.000), stdev = 0.548
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.600, 15.000), stdev = 0.548
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:54:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53417.587 ops/s
[info] # Warmup Iteration   2: 161835.180 ops/s
[info] # Warmup Iteration   3: 195238.345 ops/s
[info] Iteration   1: 215782.843 ops/s
[info]                  ·gc.alloc.rate:                   1851.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              13504.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11942.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.600 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 218264.065 ops/s
[info]                  ·gc.alloc.rate:                   1882.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              13574.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14074.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.801 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 212850.909 ops/s
[info]                  ·gc.alloc.rate:                   1826.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              13507.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12070.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 213391.536 ops/s
[info]                  ·gc.alloc.rate:                   1852.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              13658.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14574.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 215657.349 ops/s
[info]                  ·gc.alloc.rate:                   1870.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              13646.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12129.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   215189.340 ±(99.9%) 8331.456 ops/s [Average]
[info]   (min, avg, max) = (212850.909, 215189.340, 218264.065), stdev = 2163.653
[info]   CI (99.9%): [206857.884, 223520.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1856.709 ±(99.9%) 81.506 MB/sec [Average]
[info]   (min, avg, max) = (1826.768, 1856.709, 1882.523), stdev = 21.167
[info]   CI (99.9%): [1775.203, 1938.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   13578.116 ±(99.9%) 282.371 B/op [Average]
[info]   (min, avg, max) = (13504.238, 13578.116, 13658.014), stdev = 73.331
[info]   CI (99.9%): [13295.746, 13860.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1772.157 ±(99.9%) 677.885 MB/sec [Average]
[info]   (min, avg, max) = (1632.391, 1772.157, 1976.870), stdev = 176.044
[info]   CI (99.9%): [1094.272, 2450.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12958.193 ±(99.9%) 4857.657 B/op [Average]
[info]   (min, avg, max) = (11942.358, 12958.193, 14574.747), stdev = 1261.518
[info]   CI (99.9%): [8100.536, 17815.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.941 ±(99.9%) 7.308 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.941, 4.332), stdev = 1.898
[info]   CI (99.9%): [≈ 0, 8.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.864 ±(99.9%) 53.304 B/op [Average]
[info]   (min, avg, max) = (0.304, 6.864, 31.600), stdev = 13.843
[info]   CI (99.9%): [≈ 0, 60.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 14.000), stdev = 3.050
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:53:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.854 ops/s
[info] # Warmup Iteration   2: 688270.234 ops/s
[info] # Warmup Iteration   3: 891457.577 ops/s
[info] Iteration   1: 889893.031 ops/s
[info]                  ·gc.alloc.rate:                   715.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1147.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 899209.205 ops/s
[info]                  ·gc.alloc.rate:                   722.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              1265.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1137.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 876855.120 ops/s
[info]                  ·gc.alloc.rate:                   730.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              1310.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1168.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 911823.497 ops/s
[info]                  ·gc.alloc.rate:                   744.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              1284.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1689.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 905987.549 ops/s
[info]                  ·gc.alloc.rate:                   728.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              1265.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1132.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   896753.680 ±(99.9%) 53126.835 ops/s [Average]
[info]   (min, avg, max) = (876855.120, 896753.680, 911823.497), stdev = 13796.870
[info]   CI (99.9%): [843626.846, 949880.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   728.330 ±(99.9%) 41.372 MB/sec [Average]
[info]   (min, avg, max) = (715.198, 728.330, 744.330), stdev = 10.744
[info]   CI (99.9%): [686.958, 769.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1278.200 ±(99.9%) 76.284 B/op [Average]
[info]   (min, avg, max) = (1264.897, 1278.200, 1310.421), stdev = 19.811
[info]   CI (99.9%): [1201.915, 1354.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   716.233 ±(99.9%) 565.353 MB/sec [Average]
[info]   (min, avg, max) = (648.811, 716.233, 978.863), stdev = 146.820
[info]   CI (99.9%): [150.879, 1281.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1255.133 ±(99.9%) 935.639 B/op [Average]
[info]   (min, avg, max) = (1132.924, 1255.133, 1689.124), stdev = 242.983
[info]   CI (99.9%): [319.494, 2190.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.940 ±(99.9%) 7.933 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.940, 4.625), stdev = 2.060
[info]   CI (99.9%): [≈ 0, 8.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.633 ±(99.9%) 13.778 B/op [Average]
[info]   (min, avg, max) = (0.001, 1.633, 8.033), stdev = 3.578
[info]   CI (99.9%): [≈ 0, 15.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.191
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:53:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 157067.296 ops/s
[info] # Warmup Iteration   2: 506500.071 ops/s
[info] # Warmup Iteration   3: 562333.590 ops/s
[info] Iteration   1: 603378.268 ops/s
[info]                  ·gc.alloc.rate:                   480.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              1253.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 596736.583 ops/s
[info]                  ·gc.alloc.rate:               487.188 MB/sec
[info]                  ·gc.alloc.rate.norm:          1284.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1698.999 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 601971.685 ops/s
[info]                  ·gc.alloc.rate:               481.329 MB/sec
[info]                  ·gc.alloc.rate.norm:          1258.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 842.957 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 602132.578 ops/s
[info]                  ·gc.alloc.rate:                   487.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              1274.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1690.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 603518.037 ops/s
[info]                  ·gc.alloc.rate:                   484.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   601547.430 ±(99.9%) 10702.764 ops/s [Average]
[info]   (min, avg, max) = (596736.583, 601547.430, 603518.037), stdev = 2779.474
[info]   CI (99.9%): [590844.666, 612250.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   484.260 ±(99.9%) 12.633 MB/sec [Average]
[info]   (min, avg, max) = (480.422, 484.260, 487.556), stdev = 3.281
[info]   CI (99.9%): [471.627, 496.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1267.002 ±(99.9%) 49.121 B/op [Average]
[info]   (min, avg, max) = (1253.139, 1267.002, 1284.996), stdev = 12.757
[info]   CI (99.9%): [1217.881, 1316.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   451.998 ±(99.9%) 680.280 MB/sec [Average]
[info]   (min, avg, max) = (321.755, 451.998, 646.888), stdev = 176.667
[info]   CI (99.9%): [≈ 0, 1132.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1183.761 ±(99.9%) 1796.578 B/op [Average]
[info]   (min, avg, max) = (839.268, 1183.761, 1698.999), stdev = 466.566
[info]   CI (99.9%): [≈ 0, 2980.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.115 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.054), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:53:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 406340.273 ops/s
[info] # Warmup Iteration   2: 707259.735 ops/s
[info] # Warmup Iteration   3: 767726.780 ops/s
[info] Iteration   1: 762271.056 ops/s
[info]                  ·gc.alloc.rate:                   615.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              1271.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1354.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 754238.708 ops/s
[info]                  ·gc.alloc.rate:                   612.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              1277.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1371.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 753003.412 ops/s
[info]                  ·gc.alloc.rate:                   612.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              1280.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1374.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 763051.241 ops/s
[info]                  ·gc.alloc.rate:                   615.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              1269.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1358.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 767007.912 ops/s
[info]                  ·gc.alloc.rate:               612.352 MB/sec
[info]                  ·gc.alloc.rate.norm:          1256.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 675.928 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   759914.466 ±(99.9%) 23238.783 ops/s [Average]
[info]   (min, avg, max) = (753003.412, 759914.466, 767007.912), stdev = 6035.038
[info]   CI (99.9%): [736675.683, 783153.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   613.760 ±(99.9%) 6.801 MB/sec [Average]
[info]   (min, avg, max) = (612.303, 613.760, 615.790), stdev = 1.766
[info]   CI (99.9%): [606.960, 620.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1271.219 ±(99.9%) 36.184 B/op [Average]
[info]   (min, avg, max) = (1256.479, 1271.219, 1280.808), stdev = 9.397
[info]   CI (99.9%): [1235.035, 1307.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   591.811 ±(99.9%) 564.832 MB/sec [Average]
[info]   (min, avg, max) = (329.417, 591.811, 658.490), stdev = 146.685
[info]   CI (99.9%): [26.979, 1156.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1227.033 ±(99.9%) 1186.747 B/op [Average]
[info]   (min, avg, max) = (675.928, 1227.033, 1374.938), stdev = 308.194
[info]   CI (99.9%): [40.286, 2413.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.022 ±(99.9%) 0.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.055), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.045, 0.113), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:53:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 476798.510 ops/s
[info] # Warmup Iteration   2: 737696.824 ops/s
[info] # Warmup Iteration   3: 832780.582 ops/s
[info] Iteration   1: 830058.106 ops/s
[info]                  ·gc.alloc.rate:      0.050 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.095 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 830343.488 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 834362.231 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 828979.464 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 830019.720 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   830752.602 ±(99.9%) 8021.976 ops/s [Average]
[info]   (min, avg, max) = (828979.464, 830752.602, 834362.231), stdev = 2083.282
[info]   CI (99.9%): [822730.625, 838774.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.010 ±(99.9%) 0.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.010, 0.050), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.019 ±(99.9%) 0.163 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.019, 0.095), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:52:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3252.366 ops/s
[info] # Warmup Iteration   2: 10477.484 ops/s
[info] # Warmup Iteration   3: 17107.016 ops/s
[info] Iteration   1: 35174.354 ops/s
[info]                  ·gc.alloc.rate:                   1606.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              71872.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1606.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71862.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.657 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 35963.020 ops/s
[info]                  ·gc.alloc.rate:                   1795.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              78558.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1607.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70327.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.555 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 30002.571 ops/s
[info]                  ·gc.alloc.rate:                   1625.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              85262.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85141.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.932 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 258.739 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 33201.980 ops/s
[info]                  ·gc.alloc.rate:                   1547.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              73361.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77219.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.009 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 35172.167 ops/s
[info]                  ·gc.alloc.rate:                   1585.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              70955.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58843.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.863 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   33902.818 ±(99.9%) 9268.697 ops/s [Average]
[info]   (min, avg, max) = (30002.571, 33902.818, 35963.020), stdev = 2407.051
[info]   CI (99.9%): [24634.121, 43171.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1632.090 ±(99.9%) 368.354 MB/sec [Average]
[info]   (min, avg, max) = (1547.712, 1632.090, 1795.266), stdev = 95.660
[info]   CI (99.9%): [1263.736, 2000.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   76002.301 ±(99.9%) 22926.073 B/op [Average]
[info]   (min, avg, max) = (70955.146, 76002.301, 85262.820), stdev = 5953.828
[info]   CI (99.9%): [53076.228, 98928.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1556.104 ±(99.9%) 520.279 MB/sec [Average]
[info]   (min, avg, max) = (1315.061, 1556.104, 1629.088), stdev = 135.115
[info]   CI (99.9%): [1035.824, 2076.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   72678.996 ±(99.9%) 37211.399 B/op [Average]
[info]   (min, avg, max) = (58843.786, 72678.996, 85141.981), stdev = 9663.682
[info]   CI (99.9%): [35467.597, 109890.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.269 ±(99.9%) 8.089 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.269, 4.932), stdev = 2.101
[info]   CI (99.9%): [≈ 0, 9.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   64.965 ±(99.9%) 425.821 B/op [Average]
[info]   (min, avg, max) = (1.863, 64.965, 258.739), stdev = 110.584
[info]   CI (99.9%): [≈ 0, 490.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 1.949
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:52:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 543.653 ops/s
[info] # Warmup Iteration   2: 2051.347 ops/s
[info] # Warmup Iteration   3: 5350.265 ops/s
[info] Iteration   1: 5938.716 ops/s
[info]                  ·gc.alloc.rate:                   1306.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              346251.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     345818.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 666.997 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 8836.243 ops/s
[info]                  ·gc.alloc.rate:                   1247.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              222189.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231355.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.101 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 196.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 8945.013 ops/s
[info]                  ·gc.alloc.rate:                   1255.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              220968.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171695.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.237 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.680 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 8683.237 ops/s
[info]                  ·gc.alloc.rate:                   1233.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              223509.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236155.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.804 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 327.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 8779.915 ops/s
[info]                  ·gc.alloc.rate:                   1233.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              221131.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233096.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 594.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   8236.625 ±(99.9%) 4959.851 ops/s [Average]
[info]   (min, avg, max) = (5938.716, 8236.625, 8945.013), stdev = 1288.058
[info]   CI (99.9%): [3276.774, 13196.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1255.406 ±(99.9%) 116.553 MB/sec [Average]
[info]   (min, avg, max) = (1233.216, 1255.406, 1306.753), stdev = 30.268
[info]   CI (99.9%): [1138.853, 1371.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   246810.309 ±(99.9%) 214091.166 B/op [Average]
[info]   (min, avg, max) = (220968.726, 246810.309, 346251.877), stdev = 55598.796
[info]   CI (99.9%): [32719.142, 460901.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1236.668 ±(99.9%) 561.526 MB/sec [Average]
[info]   (min, avg, max) = (975.840, 1236.668, 1305.117), stdev = 145.826
[info]   CI (99.9%): [675.142, 1798.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   243624.513 ±(99.9%) 243036.437 B/op [Average]
[info]   (min, avg, max) = (171695.970, 243624.513, 345818.246), stdev = 63115.791
[info]   CI (99.9%): [588.076, 486660.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.795 ±(99.9%) 4.612 MB/sec [Average]
[info]   (min, avg, max) = (0.237, 1.795, 3.314), stdev = 1.198
[info]   CI (99.9%): [≈ 0, 6.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   365.157 ±(99.9%) 1015.485 B/op [Average]
[info]   (min, avg, max) = (41.680, 365.157, 666.997), stdev = 263.718
[info]   CI (99.9%): [≈ 0, 1380.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 15.600, 26.000), stdev = 6.427
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:52:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 491.465 ops/s
[info] # Warmup Iteration   2: 3325.263 ops/s
[info] # Warmup Iteration   3: 6517.967 ops/s
[info] Iteration   1: 9253.952 ops/s
[info]                  ·gc.alloc.rate:                   1205.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              205032.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219321.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.465 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.156 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 8916.856 ops/s
[info]                  ·gc.alloc.rate:                   1166.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              205793.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227667.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.674 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 8815.704 ops/s
[info]                  ·gc.alloc.rate:                   1143.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              204048.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173454.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.433 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 9121.342 ops/s
[info]                  ·gc.alloc.rate:                   1188.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              205130.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225047.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.672 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 9311.546 ops/s
[info]                  ·gc.alloc.rate:                   1204.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              203555.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166355.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   9083.880 ±(99.9%) 821.314 ops/s [Average]
[info]   (min, avg, max) = (8815.704, 9083.880, 9311.546), stdev = 213.293
[info]   CI (99.9%): [8262.565, 9905.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1181.603 ±(99.9%) 102.977 MB/sec [Average]
[info]   (min, avg, max) = (1143.216, 1181.603, 1205.551), stdev = 26.743
[info]   CI (99.9%): [1078.627, 1284.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   204712.161 ±(99.9%) 3457.912 B/op [Average]
[info]   (min, avg, max) = (203555.525, 204712.161, 205793.655), stdev = 898.009
[info]   CI (99.9%): [201254.249, 208170.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1167.980 ±(99.9%) 668.293 MB/sec [Average]
[info]   (min, avg, max) = (971.808, 1167.980, 1304.310), stdev = 173.554
[info]   CI (99.9%): [499.687, 1836.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   202369.514 ±(99.9%) 115113.570 B/op [Average]
[info]   (min, avg, max) = (166355.744, 202369.514, 227667.611), stdev = 29894.628
[info]   CI (99.9%): [87255.944, 317483.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.276 ±(99.9%) 1.403 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.276, 0.833), stdev = 0.364
[info]   CI (99.9%): [≈ 0, 1.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   47.491 ±(99.9%) 241.331 B/op [Average]
[info]   (min, avg, max) = (3.519, 47.491, 143.672), stdev = 62.673
[info]   CI (99.9%): [≈ 0, 288.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.483
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:52:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42349.605 ops/s
[info] # Warmup Iteration   2: 105369.665 ops/s
[info] # Warmup Iteration   3: 163519.449 ops/s
[info] Iteration   1: 192111.397 ops/s
[info]                  ·gc.alloc.rate:                   1959.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              16053.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15777.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.915 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 195484.158 ops/s
[info]                  ·gc.alloc.rate:                   1942.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              15640.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1930.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15542.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.152 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 195059.337 ops/s
[info]                  ·gc.alloc.rate:                   1951.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              15749.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1924.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15527.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.336 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 198155.596 ops/s
[info]                  ·gc.alloc.rate:                   1972.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              15668.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15443.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 197506.153 ops/s
[info]                  ·gc.alloc.rate:                   1985.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              15821.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15707.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   195663.328 ±(99.9%) 9157.032 ops/s [Average]
[info]   (min, avg, max) = (192111.397, 195663.328, 198155.596), stdev = 2378.052
[info]   CI (99.9%): [186506.296, 204820.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1962.522 ±(99.9%) 65.370 MB/sec [Average]
[info]   (min, avg, max) = (1942.682, 1962.522, 1985.519), stdev = 16.976
[info]   CI (99.9%): [1897.152, 2027.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   15786.916 ±(99.9%) 636.116 B/op [Average]
[info]   (min, avg, max) = (15640.874, 15786.916, 16053.879), stdev = 165.197
[info]   CI (99.9%): [15150.800, 16423.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1939.303 ±(99.9%) 75.138 MB/sec [Average]
[info]   (min, avg, max) = (1924.459, 1939.303, 1971.153), stdev = 19.513
[info]   CI (99.9%): [1864.165, 2014.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   15599.781 ±(99.9%) 530.065 B/op [Average]
[info]   (min, avg, max) = (15443.966, 15599.781, 15777.293), stdev = 137.656
[info]   CI (99.9%): [15069.716, 16129.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.140 ±(99.9%) 7.016 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.140, 4.242), stdev = 1.822
[info]   CI (99.9%): [≈ 0, 8.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9.213 ±(99.9%) 56.509 B/op [Average]
[info]   (min, avg, max) = (0.331, 9.213, 34.152), stdev = 14.675
[info]   CI (99.9%): [≈ 0, 65.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.600, 25.000), stdev = 7.436
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:52:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 432.403 ops/s
[info] # Warmup Iteration   2: 1910.619 ops/s
[info] # Warmup Iteration   3: 5846.122 ops/s
[info] Iteration   1: 8024.766 ops/s
[info]                  ·gc.alloc.rate:                   1281.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              251326.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189961.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.165 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8830.932 ops/s
[info]                  ·gc.alloc.rate:                   1395.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              248695.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1613.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287518.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.549 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 8611.661 ops/s
[info]                  ·gc.alloc.rate:                   1350.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              246734.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     237399.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.609 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8938.135 ops/s
[info]                  ·gc.alloc.rate:                   1390.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              244890.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230592.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.665 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 8918.770 ops/s
[info]                  ·gc.alloc.rate:                   1393.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              245861.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     232990.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.674 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   8664.853 ±(99.9%) 1465.370 ops/s [Average]
[info]   (min, avg, max) = (8024.766, 8664.853, 8938.135), stdev = 380.552
[info]   CI (99.9%): [7199.482, 10130.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1362.227 ±(99.9%) 188.308 MB/sec [Average]
[info]   (min, avg, max) = (1281.460, 1362.227, 1395.565), stdev = 48.903
[info]   CI (99.9%): [1173.918, 1550.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   247501.800 ±(99.9%) 9845.396 B/op [Average]
[info]   (min, avg, max) = (244890.555, 247501.800, 251326.515), stdev = 2556.818
[info]   CI (99.9%): [237656.404, 257347.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1302.177 ±(99.9%) 879.270 MB/sec [Average]
[info]   (min, avg, max) = (968.572, 1302.177, 1613.423), stdev = 228.344
[info]   CI (99.9%): [422.908, 2181.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   235692.627 ±(99.9%) 133577.630 B/op [Average]
[info]   (min, avg, max) = (189961.314, 235692.627, 287518.518), stdev = 34689.686
[info]   CI (99.9%): [102114.997, 369270.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.332 ±(99.9%) 23.455 B/op [Average]
[info]   (min, avg, max) = (3.665, 8.332, 18.549), stdev = 6.091
[info]   CI (99.9%): [≈ 0, 31.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:51:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4056.010 ops/s
[info] # Warmup Iteration   2: 11108.597 ops/s
[info] # Warmup Iteration   3: 12796.925 ops/s
[info] Iteration   1: 23216.987 ops/s
[info]                  ·gc.alloc.rate:                   1247.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              84540.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1239.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84013.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.243 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 22828.331 ops/s
[info]                  ·gc.alloc.rate:                   1223.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              84336.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1234.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85100.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   3: 22659.693 ops/s
[info]                  ·gc.alloc.rate:                   1210.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              84029.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1243.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86332.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 190.364 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   4: 21876.220 ops/s
[info]                  ·gc.alloc.rate:                   1615.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              116173.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1564.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112501.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 457.420 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   5: 20571.692 ops/s
[info]                  ·gc.alloc.rate:                   1469.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              112394.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1532.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117190.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.554 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 577.620 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   22230.585 ±(99.9%) 4034.881 ops/s [Average]
[info]   (min, avg, max) = (20571.692, 22230.585, 23216.987), stdev = 1047.846
[info]   CI (99.9%): [18195.704, 26265.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1353.249 ±(99.9%) 696.742 MB/sec [Average]
[info]   (min, avg, max) = (1210.169, 1353.249, 1615.554), stdev = 180.942
[info]   CI (99.9%): [656.507, 2049.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   96294.897 ±(99.9%) 63446.650 B/op [Average]
[info]   (min, avg, max) = (84029.004, 96294.897, 116173.584), stdev = 16476.894
[info]   CI (99.9%): [32848.246, 159741.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1362.875 ±(99.9%) 654.146 MB/sec [Average]
[info]   (min, avg, max) = (1234.412, 1362.875, 1564.488), stdev = 169.880
[info]   CI (99.9%): [708.729, 2017.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   97027.734 ±(99.9%) 63037.911 B/op [Average]
[info]   (min, avg, max) = (84013.421, 97027.734, 117190.790), stdev = 16370.745
[info]   CI (99.9%): [33989.823, 160065.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   3.548 ±(99.9%) 12.657 MB/sec [Average]
[info]   (min, avg, max) = (0.031, 3.548, 7.554), stdev = 3.287
[info]   CI (99.9%): [≈ 0, 16.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   259.756 ±(99.9%) 956.540 B/op [Average]
[info]   (min, avg, max) = (2.133, 259.756, 577.620), stdev = 248.410
[info]   CI (99.9%): [≈ 0, 1216.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   130.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (22.000, 26.000, 32.000), stdev = 3.937
[info]   CI (99.9%): [130.000, 130.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:51:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2636.897 ops/s
[info] # Warmup Iteration   2: 13430.700 ops/s
[info] # Warmup Iteration   3: 15058.861 ops/s
[info] Iteration   1: 24500.640 ops/s
[info]                  ·gc.alloc.rate:                   1024.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              65810.403 B/op
[info]                  ·gc.churn.PS_Eden_Space:          900.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57854.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84.814 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 21492.801 ops/s
[info]                  ·gc.alloc.rate:               1499.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          109779.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1506.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 110291.698 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     44.000 ms
[info] Iteration   3: 23926.092 ops/s
[info]                  ·gc.alloc.rate:                   976.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              64202.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          889.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58497.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 309.318 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 22249.357 ops/s
[info]                  ·gc.alloc.rate:                   1206.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              85318.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1181.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83592.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 442.138 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   5: 23579.052 ops/s
[info]                  ·gc.alloc.rate:                   1325.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              88496.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1468.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98041.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      13.317 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 888.812 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   23149.589 ±(99.9%) 4781.663 ops/s [Average]
[info]   (min, avg, max) = (21492.801, 23149.589, 24500.640), stdev = 1241.783
[info]   CI (99.9%): [18367.926, 27931.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1206.548 ±(99.9%) 831.247 MB/sec [Average]
[info]   (min, avg, max) = (976.297, 1206.548, 1499.828), stdev = 215.872
[info]   CI (99.9%): [375.301, 2037.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   82721.625 ±(99.9%) 72068.339 B/op [Average]
[info]   (min, avg, max) = (64202.903, 82721.625, 109779.169), stdev = 18715.919
[info]   CI (99.9%): [10653.286, 154789.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1189.545 ±(99.9%) 1142.644 MB/sec [Average]
[info]   (min, avg, max) = (889.541, 1189.545, 1506.830), stdev = 296.741
[info]   CI (99.9%): [46.901, 2332.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   81655.524 ±(99.9%) 90203.685 B/op [Average]
[info]   (min, avg, max) = (57854.830, 81655.524, 110291.698), stdev = 23425.611
[info]   CI (99.9%): [≈ 0, 171859.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   5.118 ±(99.9%) 20.128 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 5.118, 13.317), stdev = 5.227
[info]   CI (99.9%): [≈ 0, 25.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   345.016 ±(99.9%) 1352.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 345.016, 888.812), stdev = 351.127
[info]   CI (99.9%): [≈ 0, 1697.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   154.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (21.000, 30.800, 44.000), stdev = 9.149
[info]   CI (99.9%): [154.000, 154.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:51:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 165543.029 ops/s
[info] # Warmup Iteration   2: 378728.517 ops/s
[info] # Warmup Iteration   3: 527935.887 ops/s
[info] Iteration   1: 520873.006 ops/s
[info]                  ·gc.alloc.rate:                   1206.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              3645.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2987.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 521472.104 ops/s
[info]                  ·gc.alloc.rate:                   1219.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              3680.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3985.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.596 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 524552.037 ops/s
[info]                  ·gc.alloc.rate:                   1242.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              3725.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2954.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.811 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 536939.283 ops/s
[info]                  ·gc.alloc.rate:                   1255.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              3679.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3836.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 538911.627 ops/s
[info]                  ·gc.alloc.rate:                   1249.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              3649.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3828.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   528549.611 ±(99.9%) 33500.599 ops/s [Average]
[info]   (min, avg, max) = (520873.006, 528549.611, 538911.627), stdev = 8699.999
[info]   CI (99.9%): [495049.012, 562050.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1234.680 ±(99.9%) 80.330 MB/sec [Average]
[info]   (min, avg, max) = (1206.583, 1234.680, 1255.523), stdev = 20.861
[info]   CI (99.9%): [1154.349, 1315.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3675.815 ±(99.9%) 123.160 B/op [Average]
[info]   (min, avg, max) = (3645.298, 3675.815, 3725.135), stdev = 31.984
[info]   CI (99.9%): [3552.655, 3798.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1182.939 ±(99.9%) 689.461 MB/sec [Average]
[info]   (min, avg, max) = (984.987, 1182.939, 1320.441), stdev = 179.051
[info]   CI (99.9%): [493.479, 1872.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3518.344 ±(99.9%) 1940.673 B/op [Average]
[info]   (min, avg, max) = (2954.135, 3518.344, 3985.032), stdev = 503.987
[info]   CI (99.9%): [1577.671, 5459.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 5.279 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.833, 3.180), stdev = 1.371
[info]   CI (99.9%): [≈ 0, 6.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.510 ±(99.9%) 15.933 B/op [Average]
[info]   (min, avg, max) = (0.024, 2.510, 9.596), stdev = 4.138
[info]   CI (99.9%): [≈ 0, 18.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 13.000), stdev = 4.183
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:51:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 267591.356 ops/s
[info] # Warmup Iteration   2: 572491.787 ops/s
[info] # Warmup Iteration   3: 614942.696 ops/s
[info] Iteration   1: 617723.846 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 618225.300 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 618421.914 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 614834.340 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 613046.848 ops/s
[info]                  ·gc.alloc.rate:      0.830 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.132 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   616450.450 ±(99.9%) 9204.291 ops/s [Average]
[info]   (min, avg, max) = (613046.848, 616450.450, 618421.914), stdev = 2390.325
[info]   CI (99.9%): [607246.158, 625654.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.166 ±(99.9%) 1.429 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.166, 0.830), stdev = 0.371
[info]   CI (99.9%): [≈ 0, 1.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.427 ±(99.9%) 3.669 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.427, 2.132), stdev = 0.953
[info]   CI (99.9%): [≈ 0, 4.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:51:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3498.536 ops/s
[info] # Warmup Iteration   2: 15112.255 ops/s
[info] # Warmup Iteration   3: 15890.430 ops/s
[info] Iteration   1: 20227.335 ops/s
[info]                  ·gc.alloc.rate:                   1137.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              88496.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1167.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90806.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.289 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 722.659 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   2: 25202.400 ops/s
[info]                  ·gc.alloc.rate:                   1122.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              70117.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          867.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54142.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.300 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 24755.335 ops/s
[info]                  ·gc.alloc.rate:                   1377.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              87561.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1476.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93833.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 495.667 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   4: 24080.553 ops/s
[info]                  ·gc.alloc.rate:                   1485.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              97041.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1481.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96785.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      21.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1378.157 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   5: 24491.782 ops/s
[info]                  ·gc.alloc.rate:                   1242.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              79864.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1161.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74650.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      15.917 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1022.794 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   23751.481 ±(99.9%) 7746.599 ops/s [Average]
[info]   (min, avg, max) = (20227.335, 23751.481, 25202.400), stdev = 2011.767
[info]   CI (99.9%): [16004.882, 31498.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1273.320 ±(99.9%) 602.471 MB/sec [Average]
[info]   (min, avg, max) = (1122.845, 1273.320, 1485.430), stdev = 156.460
[info]   CI (99.9%): [670.849, 1875.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   84616.444 ±(99.9%) 39026.850 B/op [Average]
[info]   (min, avg, max) = (70117.978, 84616.444, 97041.040), stdev = 10135.149
[info]   CI (99.9%): [45589.593, 123643.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1230.819 ±(99.9%) 989.982 MB/sec [Average]
[info]   (min, avg, max) = (867.023, 1230.819, 1481.520), stdev = 257.095
[info]   CI (99.9%): [240.838, 2220.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82043.704 ±(99.9%) 68510.657 B/op [Average]
[info]   (min, avg, max) = (54142.730, 82043.704, 96785.602), stdev = 17792.000
[info]   CI (99.9%): [13533.046, 150554.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   10.825 ±(99.9%) 31.025 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 10.825, 21.096), stdev = 8.057
[info]   CI (99.9%): [≈ 0, 41.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   724.115 ±(99.9%) 2011.600 B/op [Average]
[info]   (min, avg, max) = (1.300, 724.115, 1378.157), stdev = 522.406
[info]   CI (99.9%): [≈ 0, 2735.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   124.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 24.800, 35.000), stdev = 9.176
[info]   CI (99.9%): [124.000, 124.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:50:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 598.397 ops/s
[info] # Warmup Iteration   2: 6397.201 ops/s
[info] # Warmup Iteration   3: 7836.589 ops/s
[info] Iteration   1: 12039.224 ops/s
[info]                  ·gc.alloc.rate:                   1221.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              159726.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1239.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162062.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.490 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.996 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 13181.953 ops/s
[info]                  ·gc.alloc.rate:                   1293.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              154380.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1247.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148967.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.456 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   3: 13228.462 ops/s
[info]                  ·gc.alloc.rate:                   1290.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              153573.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1255.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149388.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.626 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   4: 13237.007 ops/s
[info]                  ·gc.alloc.rate:                   1315.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              156355.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1259.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149762.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1099.482 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 13209.973 ops/s
[info]                  ·gc.alloc.rate:                   1287.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              153415.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1244.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148243.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.440 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   12979.324 ±(99.9%) 2025.267 ops/s [Average]
[info]   (min, avg, max) = (12039.224, 12979.324, 13237.007), stdev = 525.956
[info]   CI (99.9%): [10954.056, 15004.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1281.715 ±(99.9%) 135.459 MB/sec [Average]
[info]   (min, avg, max) = (1221.810, 1281.715, 1315.067), stdev = 35.178
[info]   CI (99.9%): [1146.256, 1417.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   155490.186 ±(99.9%) 10169.914 B/op [Average]
[info]   (min, avg, max) = (153415.874, 155490.186, 159726.255), stdev = 2641.094
[info]   CI (99.9%): [145320.272, 165660.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1249.414 ±(99.9%) 31.439 MB/sec [Average]
[info]   (min, avg, max) = (1239.685, 1249.414, 1259.618), stdev = 8.165
[info]   CI (99.9%): [1217.975, 1280.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   151685.022 ±(99.9%) 22444.689 B/op [Average]
[info]   (min, avg, max) = (148243.394, 151685.022, 162062.946), stdev = 5828.814
[info]   CI (99.9%): [129240.333, 174129.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.039 ±(99.9%) 15.533 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.039, 9.247), stdev = 4.034
[info]   CI (99.9%): [≈ 0, 17.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   243.600 ±(99.9%) 1844.627 B/op [Average]
[info]   (min, avg, max) = (7.440, 243.600, 1099.482), stdev = 479.044
[info]   CI (99.9%): [≈ 0, 2088.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   114.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 22.800, 31.000), stdev = 10.281
[info]   CI (99.9%): [114.000, 114.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:50:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1157.461 ops/s
[info] # Warmup Iteration   2: 8953.252 ops/s
[info] # Warmup Iteration   3: 13659.243 ops/s
[info] Iteration   1: 13507.969 ops/s
[info]                  ·gc.alloc.rate:                   1215.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              141563.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151701.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.360 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 13284.253 ops/s
[info]                  ·gc.alloc.rate:                        1188.803 MB/sec
[info]                  ·gc.alloc.rate.norm:                   140841.884 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.021 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 2.489 B/op
[info]                  ·gc.churn.Metaspace:                   0.057 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              6.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1055.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          125040.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           5.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      646.496 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              46.000 ms
[info] Iteration   3: 13411.810 ops/s
[info]                  ·gc.alloc.rate:                   1311.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              153902.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151650.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.886 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 13859.981 ops/s
[info]                  ·gc.alloc.rate:                   1237.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              140568.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146852.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 152.470 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 13856.619 ops/s
[info]                  ·gc.alloc.rate:                   1235.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              140354.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110728.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.364 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13584.126 ±(99.9%) 1011.050 ops/s [Average]
[info]   (min, avg, max) = (13284.253, 13584.126, 13859.981), stdev = 262.567
[info]   CI (99.9%): [12573.076, 14595.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1238.051 ±(99.9%) 176.217 MB/sec [Average]
[info]   (min, avg, max) = (1188.803, 1238.051, 1311.901), stdev = 45.763
[info]   CI (99.9%): [1061.834, 1414.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   143446.428 ±(99.9%) 22576.458 B/op [Average]
[info]   (min, avg, max) = (140354.952, 143446.428, 153902.733), stdev = 5863.035
[info]   CI (99.9%): [120869.970, 166022.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.498 ±(99.9%) 4.287 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.498, 2.489), stdev = 1.113
[info]   CI (99.9%): [≈ 0, 4.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.011 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.057), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   1.348 ±(99.9%) 11.610 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.348, 6.742), stdev = 3.015
[info]   CI (99.9%): [≈ 0, 12.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1183.846 ±(99.9%) 603.146 MB/sec [Average]
[info]   (min, avg, max) = (974.928, 1183.846, 1302.924), stdev = 156.635
[info]   CI (99.9%): [580.701, 1786.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   137194.513 ±(99.9%) 71024.504 B/op [Average]
[info]   (min, avg, max) = (110728.839, 137194.513, 151701.281), stdev = 18444.838
[info]   CI (99.9%): [66170.009, 208219.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.383 ±(99.9%) 9.034 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.383, 5.457), stdev = 2.346
[info]   CI (99.9%): [≈ 0, 10.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   162.515 ±(99.9%) 1070.621 B/op [Average]
[info]   (min, avg, max) = (2.364, 162.515, 646.496), stdev = 278.037
[info]   CI (99.9%): [≈ 0, 1233.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   83.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 16.600, 46.000), stdev = 17.601
[info]   CI (99.9%): [83.000, 83.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:50:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100396.976 ops/s
[info] # Warmup Iteration   2: 238764.750 ops/s
[info] # Warmup Iteration   3: 318861.370 ops/s
[info] Iteration   1: 324013.532 ops/s
[info]                  ·gc.alloc.rate:                   1927.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              9360.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9480.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.376 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 319398.278 ops/s
[info]                  ·gc.alloc.rate:                   1894.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              9334.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1947.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9598.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 321113.028 ops/s
[info]                  ·gc.alloc.rate:               1916.012 MB/sec
[info]                  ·gc.alloc.rate.norm:          9390.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1635.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8016.996 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 314257.838 ops/s
[info]                  ·gc.alloc.rate:                   1884.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              9439.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9925.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.313 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 316935.965 ops/s
[info]                  ·gc.alloc.rate:                   1893.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              9402.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9937.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   319143.728 ±(99.9%) 14459.676 ops/s [Average]
[info]   (min, avg, max) = (314257.838, 319143.728, 324013.532), stdev = 3755.132
[info]   CI (99.9%): [304684.053, 333603.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1903.315 ±(99.9%) 68.111 MB/sec [Average]
[info]   (min, avg, max) = (1884.966, 1903.315, 1927.453), stdev = 17.688
[info]   CI (99.9%): [1835.204, 1971.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9385.475 ±(99.9%) 154.689 B/op [Average]
[info]   (min, avg, max) = (9334.069, 9385.475, 9439.287), stdev = 40.172
[info]   CI (99.9%): [9230.786, 9540.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1903.848 ±(99.9%) 583.444 MB/sec [Average]
[info]   (min, avg, max) = (1635.698, 1903.848, 2001.626), stdev = 151.519
[info]   CI (99.9%): [1320.403, 2487.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9391.578 ±(99.9%) 3057.880 B/op [Average]
[info]   (min, avg, max) = (8016.996, 9391.578, 9937.447), stdev = 794.122
[info]   CI (99.9%): [6333.697, 12449.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.840 ±(99.9%) 6.783 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.840, 3.990), stdev = 1.762
[info]   CI (99.9%): [≈ 0, 7.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.082 ±(99.9%) 32.935 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.082, 19.376), stdev = 8.553
[info]   CI (99.9%): [≈ 0, 37.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 12.000), stdev = 2.191
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:50:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 372.813 ops/s
[info] # Warmup Iteration   2: 6197.801 ops/s
[info] # Warmup Iteration   3: 10431.758 ops/s
[info] Iteration   1: 13499.351 ops/s
[info]                  ·gc.alloc.rate:                   1576.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              183822.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151993.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.780 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 207.554 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 13628.664 ops/s
[info]                  ·gc.alloc.rate:                   1591.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              183759.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188237.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.330 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 13620.439 ops/s
[info]                  ·gc.alloc.rate:                   1585.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              183247.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188501.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86.592 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 13278.397 ops/s
[info]                  ·gc.alloc.rate:               1538.546 MB/sec
[info]                  ·gc.alloc.rate.norm:          182357.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 155379.683 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 12980.582 ops/s
[info]                  ·gc.alloc.rate:                   1528.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              185363.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200176.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.763 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   13401.487 ±(99.9%) 1057.068 ops/s [Average]
[info]   (min, avg, max) = (12980.582, 13401.487, 13628.664), stdev = 274.517
[info]   CI (99.9%): [12344.418, 14458.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1564.364 ±(99.9%) 110.410 MB/sec [Average]
[info]   (min, avg, max) = (1528.899, 1564.364, 1591.653), stdev = 28.673
[info]   CI (99.9%): [1453.954, 1674.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   183710.262 ±(99.9%) 4214.015 B/op [Average]
[info]   (min, avg, max) = (182357.876, 183710.262, 185363.347), stdev = 1094.366
[info]   CI (99.9%): [179496.247, 187924.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1505.525 ±(99.9%) 697.408 MB/sec [Average]
[info]   (min, avg, max) = (1303.765, 1505.525, 1651.083), stdev = 181.115
[info]   CI (99.9%): [808.117, 2202.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   176857.885 ±(99.9%) 83666.442 B/op [Average]
[info]   (min, avg, max) = (151993.425, 176857.885, 200176.817), stdev = 21727.909
[info]   CI (99.9%): [93191.443, 260524.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.689 ±(99.9%) 2.641 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.689, 1.780), stdev = 0.686
[info]   CI (99.9%): [≈ 0, 3.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   80.248 ±(99.9%) 307.102 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 80.248, 207.554), stdev = 79.753
[info]   CI (99.9%): [≈ 0, 387.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 14.000), stdev = 3.240
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:49:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6292.368 ops/s
[info] # Warmup Iteration   2: 25809.452 ops/s
[info] # Warmup Iteration   3: 29827.301 ops/s
[info] Iteration   1: 35115.373 ops/s
[info]                  ·gc.alloc.rate:                   1414.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              63395.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1249.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56010.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.866 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 33205.379 ops/s
[info]                  ·gc.alloc.rate:                   1752.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              83044.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1892.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89673.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.259 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 154.378 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         43.000 ms
[info] Iteration   3: 32803.474 ops/s
[info]                  ·gc.alloc.rate:                   1712.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              82125.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1448.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69483.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 330.738 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         47.000 ms
[info] Iteration   4: 32178.768 ops/s
[info]                  ·gc.alloc.rate:                   1440.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              70430.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81796.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.224 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 451.161 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         66.000 ms
[info] Iteration   5: 34223.838 ops/s
[info]                  ·gc.alloc.rate:                   1343.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              61785.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1100.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50606.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 579.598 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   33505.367 ±(99.9%) 4495.053 ops/s [Average]
[info]   (min, avg, max) = (32178.768, 33505.367, 35115.373), stdev = 1167.351
[info]   CI (99.9%): [29010.314, 38000.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1532.720 ±(99.9%) 718.203 MB/sec [Average]
[info]   (min, avg, max) = (1343.608, 1532.720, 1752.972), stdev = 186.515
[info]   CI (99.9%): [814.517, 2250.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   72156.054 ±(99.9%) 38756.686 B/op [Average]
[info]   (min, avg, max) = (61785.332, 72156.054, 83044.260), stdev = 10064.988
[info]   CI (99.9%): [33399.368, 110912.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1472.883 ±(99.9%) 1225.659 MB/sec [Average]
[info]   (min, avg, max) = (1100.501, 1472.883, 1892.900), stdev = 318.300
[info]   CI (99.9%): [247.223, 2698.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   69513.758 ±(99.9%) 63771.826 B/op [Average]
[info]   (min, avg, max) = (50606.122, 69513.758, 89673.156), stdev = 16561.341
[info]   CI (99.9%): [5741.932, 133285.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   6.405 ±(99.9%) 18.963 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 6.405, 12.604), stdev = 4.925
[info]   CI (99.9%): [≈ 0, 25.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   303.548 ±(99.9%) 886.477 B/op [Average]
[info]   (min, avg, max) = (1.866, 303.548, 579.598), stdev = 230.215
[info]   CI (99.9%): [≈ 0, 1190.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   205.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (24.000, 41.000, 66.000), stdev = 17.393
[info]   CI (99.9%): [205.000, 205.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:49:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23337.447 ops/s
[info] # Warmup Iteration   2: 76226.074 ops/s
[info] # Warmup Iteration   3: 117517.201 ops/s
[info] Iteration   1: 129913.347 ops/s
[info]                  ·gc.alloc.rate:                   2434.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              29494.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2279.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27620.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.513 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 131796.578 ops/s
[info]                  ·gc.alloc.rate:                   2464.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              29428.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27536.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.989 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 129440.613 ops/s
[info]                  ·gc.alloc.rate:                   2441.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              29682.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2331.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28351.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 127883.497 ops/s
[info]                  ·gc.alloc.rate:                   2425.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              29856.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28935.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.025 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 128938.527 ops/s
[info]                  ·gc.alloc.rate:                   2444.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              29829.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2364.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28857.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.508 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   129594.512 ±(99.9%) 5557.589 ops/s [Average]
[info]   (min, avg, max) = (127883.497, 129594.512, 131796.578), stdev = 1443.288
[info]   CI (99.9%): [124036.924, 135152.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2442.054 ±(99.9%) 54.956 MB/sec [Average]
[info]   (min, avg, max) = (2425.958, 2442.054, 2464.290), stdev = 14.272
[info]   CI (99.9%): [2387.097, 2497.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   29658.080 ±(99.9%) 743.557 B/op [Average]
[info]   (min, avg, max) = (29428.057, 29658.080, 29856.446), stdev = 193.099
[info]   CI (99.9%): [28914.524, 30401.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2326.670 ±(99.9%) 131.661 MB/sec [Average]
[info]   (min, avg, max) = (2279.970, 2326.670, 2364.589), stdev = 34.192
[info]   CI (99.9%): [2195.009, 2458.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   28260.449 ±(99.9%) 2550.071 B/op [Average]
[info]   (min, avg, max) = (27536.327, 28260.449, 28935.818), stdev = 662.245
[info]   CI (99.9%): [25710.379, 30810.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.096, 0.167), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.159 ±(99.9%) 2.290 B/op [Average]
[info]   (min, avg, max) = (0.508, 1.159, 1.989), stdev = 0.595
[info]   CI (99.9%): [≈ 0, 3.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.400, 11.000), stdev = 0.548
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:49:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 346338.470 ops/s
[info] # Warmup Iteration   2: 790568.974 ops/s
[info] # Warmup Iteration   3: 850092.751 ops/s
[info] Iteration   1: 863243.207 ops/s
[info]                  ·gc.alloc.rate:                   1221.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              2226.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2402.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 835008.204 ops/s
[info]                  ·gc.alloc.rate:                   1192.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              2248.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1865.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.121 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 860493.209 ops/s
[info]                  ·gc.alloc.rate:                   1217.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              2227.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2400.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.409 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 858094.330 ops/s
[info]                  ·gc.alloc.rate:                   1230.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              2255.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2399.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 863234.912 ops/s
[info]                  ·gc.alloc.rate:                   1206.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              2198.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1794.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   856014.772 ±(99.9%) 45967.946 ops/s [Average]
[info]   (min, avg, max) = (835008.204, 856014.772, 863243.207), stdev = 11937.730
[info]   CI (99.9%): [810046.827, 901982.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1213.597 ±(99.9%) 55.369 MB/sec [Average]
[info]   (min, avg, max) = (1192.968, 1213.597, 1230.043), stdev = 14.379
[info]   CI (99.9%): [1158.228, 1268.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2231.326 ±(99.9%) 85.911 B/op [Average]
[info]   (min, avg, max) = (2198.819, 2231.326, 2255.999), stdev = 22.311
[info]   CI (99.9%): [2145.415, 2317.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1182.566 ±(99.9%) 686.890 MB/sec [Average]
[info]   (min, avg, max) = (984.348, 1182.566, 1317.606), stdev = 178.383
[info]   CI (99.9%): [495.676, 1869.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2172.547 ±(99.9%) 1207.366 B/op [Average]
[info]   (min, avg, max) = (1794.561, 2172.547, 2402.319), stdev = 313.549
[info]   CI (99.9%): [965.181, 3379.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.825 ±(99.9%) 5.358 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.825, 3.248), stdev = 1.391
[info]   CI (99.9%): [≈ 0, 6.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.545 ±(99.9%) 10.103 B/op [Average]
[info]   (min, avg, max) = (0.038, 1.545, 6.121), stdev = 2.624
[info]   CI (99.9%): [≈ 0, 11.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 14.000), stdev = 4.147
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:49:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 512045.409 ops/s
[info] # Warmup Iteration   2: 841038.535 ops/s
[info] # Warmup Iteration   3: 941670.905 ops/s
[info] Iteration   1: 944147.389 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 945883.433 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 946429.789 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 949200.670 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 946759.089 ops/s
[info]                  ·gc.alloc.rate:      0.366 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.608 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   946484.074 ±(99.9%) 7016.032 ops/s [Average]
[info]   (min, avg, max) = (944147.389, 946484.074, 949200.670), stdev = 1822.041
[info]   CI (99.9%): [939468.042, 953500.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.073 ±(99.9%) 0.629 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.073, 0.366), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.122 ±(99.9%) 1.046 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.122, 0.608), stdev = 0.272
[info]   CI (99.9%): [≈ 0, 1.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:49:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13531.525 ops/s
[info] # Warmup Iteration   2: 79817.876 ops/s
[info] # Warmup Iteration   3: 104399.488 ops/s
[info] Iteration   1: 123731.753 ops/s
[info]                  ·gc.alloc.rate:                   2788.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              35462.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2926.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37227.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.215 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.176 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 124872.426 ops/s
[info]                  ·gc.alloc.rate:                   2787.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              35137.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2614.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32953.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.885 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.759 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 123098.534 ops/s
[info]                  ·gc.alloc.rate:                   2769.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              35410.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2634.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33683.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.798 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 124898.075 ops/s
[info]                  ·gc.alloc.rate:                   2813.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              35446.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2667.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33600.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.525 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 128640.972 ops/s
[info]                  ·gc.alloc.rate:                   2929.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              35835.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3028.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37049.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   125048.352 ±(99.9%) 8280.155 ops/s [Average]
[info]   (min, avg, max) = (123098.534, 125048.352, 128640.972), stdev = 2150.330
[info]   CI (99.9%): [116768.197, 133328.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2817.631 ±(99.9%) 247.352 MB/sec [Average]
[info]   (min, avg, max) = (2769.465, 2817.631, 2929.037), stdev = 64.237
[info]   CI (99.9%): [2570.279, 3064.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   35458.485 ±(99.9%) 957.585 B/op [Average]
[info]   (min, avg, max) = (35137.448, 35458.485, 35835.128), stdev = 248.682
[info]   CI (99.9%): [34500.900, 36416.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2774.270 ±(99.9%) 731.407 MB/sec [Average]
[info]   (min, avg, max) = (2614.642, 2774.270, 3028.320), stdev = 189.944
[info]   CI (99.9%): [2042.863, 3505.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34903.111 ±(99.9%) 7937.105 B/op [Average]
[info]   (min, avg, max) = (32953.758, 34903.111, 37227.626), stdev = 2061.241
[info]   CI (99.9%): [26966.006, 42840.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.849 ±(99.9%) 4.245 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.849, 2.215), stdev = 1.103
[info]   CI (99.9%): [≈ 0, 5.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   10.754 ±(99.9%) 53.819 B/op [Average]
[info]   (min, avg, max) = (0.509, 10.754, 28.176), stdev = 13.977
[info]   CI (99.9%): [≈ 0, 64.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 15.000, 25.000), stdev = 5.701
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:48:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2485.649 ops/s
[info] # Warmup Iteration   2: 7297.951 ops/s
[info] # Warmup Iteration   3: 13349.401 ops/s
[info] Iteration   1: 19162.966 ops/s
[info]                  ·gc.alloc.rate:                   965.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              79321.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          926.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76047.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.228 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 19172.491 ops/s
[info]                  ·gc.alloc.rate:                   1301.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              106797.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1240.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101789.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.900 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   3: 19216.565 ops/s
[info]                  ·gc.alloc.rate:                   983.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              80545.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          930.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76188.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.502 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 368.592 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 19346.552 ops/s
[info]                  ·gc.alloc.rate:                   983.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              80038.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          933.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75920.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.961 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 403.569 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 18419.908 ops/s
[info]                  ·gc.alloc.rate:                   1283.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              109630.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1237.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105751.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.883 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 502.685 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   19063.696 ±(99.9%) 1414.202 ops/s [Average]
[info]   (min, avg, max) = (18419.908, 19063.696, 19346.552), stdev = 367.264
[info]   CI (99.9%): [17649.495, 20477.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   1103.695 ±(99.9%) 664.321 MB/sec [Average]
[info]   (min, avg, max) = (965.928, 1103.695, 1301.656), stdev = 172.522
[info]   CI (99.9%): [439.374, 1768.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   91266.637 ±(99.9%) 59720.864 B/op [Average]
[info]   (min, avg, max) = (79321.563, 91266.637, 109630.465), stdev = 15509.319
[info]   CI (99.9%): [31545.773, 150987.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1053.664 ±(99.9%) 652.124 MB/sec [Average]
[info]   (min, avg, max) = (926.055, 1053.664, 1240.621), stdev = 169.355
[info]   CI (99.9%): [401.540, 1705.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   87139.332 ±(99.9%) 58710.506 B/op [Average]
[info]   (min, avg, max) = (75920.154, 87139.332, 105751.192), stdev = 15246.932
[info]   CI (99.9%): [28428.826, 145849.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.082 ±(99.9%) 10.893 MB/sec [Average]
[info]   (min, avg, max) = (0.027, 3.082, 5.883), stdev = 2.829
[info]   CI (99.9%): [≈ 0, 13.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   255.995 ±(99.9%) 910.755 B/op [Average]
[info]   (min, avg, max) = (2.228, 255.995, 502.685), stdev = 236.520
[info]   CI (99.9%): [≈ 0, 1166.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 19.200, 30.000), stdev = 7.530
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:48:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2839.630 ops/s
[info] # Warmup Iteration   2: 7965.582 ops/s
[info] # Warmup Iteration   3: 16784.657 ops/s
[info] Iteration   1: 18725.152 ops/s
[info]                  ·gc.alloc.rate:                   782.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              65775.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81068.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.750 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 18703.529 ops/s
[info]                  ·gc.alloc.rate:                   781.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              65785.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54034.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.752 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 19040.937 ops/s
[info]                  ·gc.alloc.rate:                   806.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              66649.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          962.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79505.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 18959.543 ops/s
[info]                  ·gc.alloc.rate:                   1053.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              87452.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80317.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 17962.831 ops/s
[info]                  ·gc.alloc.rate:                   1168.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              102344.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84716.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 633.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   18678.398 ±(99.9%) 1639.728 ops/s [Average]
[info]   (min, avg, max) = (17962.831, 18678.398, 19040.937), stdev = 425.832
[info]   CI (99.9%): [17038.671, 20318.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   918.798 ±(99.9%) 695.565 MB/sec [Average]
[info]   (min, avg, max) = (781.836, 918.798, 1168.662), stdev = 180.636
[info]   CI (99.9%): [223.233, 1614.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   77601.303 ±(99.9%) 64106.455 B/op [Average]
[info]   (min, avg, max) = (65775.077, 77601.303, 102344.161), stdev = 16648.243
[info]   CI (99.9%): [13494.848, 141707.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   900.934 ±(99.9%) 557.046 MB/sec [Average]
[info]   (min, avg, max) = (642.182, 900.934, 967.958), stdev = 144.663
[info]   CI (99.9%): [343.889, 1457.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   75928.536 ±(99.9%) 47748.003 B/op [Average]
[info]   (min, avg, max) = (54034.707, 75928.536, 84716.023), stdev = 12400.005
[info]   CI (99.9%): [28180.533, 123676.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.479 ±(99.9%) 12.376 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.479, 7.228), stdev = 3.214
[info]   CI (99.9%): [≈ 0, 13.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   129.371 ±(99.9%) 1084.159 B/op [Average]
[info]   (min, avg, max) = (1.750, 129.371, 633.018), stdev = 281.553
[info]   CI (99.9%): [≈ 0, 1213.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 8.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:48:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52086.089 ops/s
[info] # Warmup Iteration   2: 76729.498 ops/s
[info] # Warmup Iteration   3: 143391.749 ops/s
[info] Iteration   1: 158356.235 ops/s
[info]                  ·gc.alloc.rate:                   400.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              3984.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3237.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.207 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 158048.673 ops/s
[info]                  ·gc.alloc.rate:               405.887 MB/sec
[info]                  ·gc.alloc.rate.norm:          4040.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3243.880 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 154222.116 ops/s
[info]                  ·gc.alloc.rate:                   392.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              4010.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3303.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 154047.632 ops/s
[info]                  ·gc.alloc.rate:                   401.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              4103.403 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6615.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.425 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 156088.548 ops/s
[info]                  ·gc.alloc.rate:               404.447 MB/sec
[info]                  ·gc.alloc.rate.norm:          4076.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3264.374 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   156152.641 ±(99.9%) 7847.396 ops/s [Average]
[info]   (min, avg, max) = (154047.632, 156152.641, 158356.235), stdev = 2037.944
[info]   CI (99.9%): [148305.245, 164000.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   401.203 ±(99.9%) 19.273 MB/sec [Average]
[info]   (min, avg, max) = (392.992, 401.203, 405.887), stdev = 5.005
[info]   CI (99.9%): [381.930, 420.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4043.087 ±(99.9%) 184.721 B/op [Average]
[info]   (min, avg, max) = (3984.847, 4043.087, 4103.403), stdev = 47.971
[info]   CI (99.9%): [3858.367, 4227.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   389.384 ±(99.9%) 555.954 MB/sec [Average]
[info]   (min, avg, max) = (323.740, 389.384, 647.651), stdev = 144.379
[info]   CI (99.9%): [≈ 0, 945.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3932.999 ±(99.9%) 5775.038 B/op [Average]
[info]   (min, avg, max) = (3237.490, 3932.999, 6615.450), stdev = 1499.759
[info]   CI (99.9%): [≈ 0, 9708.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.137 ±(99.9%) 1.051 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.137, 0.625), stdev = 0.273
[info]   CI (99.9%): [≈ 0, 1.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.369 ±(99.9%) 10.436 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.369, 6.207), stdev = 2.710
[info]   CI (99.9%): [≈ 0, 11.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 4.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:48:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1504.996 ops/s
[info] # Warmup Iteration   2: 5834.168 ops/s
[info] # Warmup Iteration   3: 13113.161 ops/s
[info] Iteration   1: 16952.118 ops/s
[info]                  ·gc.alloc.rate:               1162.407 MB/sec
[info]                  ·gc.alloc.rate.norm:          107913.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1291.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119854.927 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 17008.551 ops/s
[info]                  ·gc.alloc.rate:               1155.284 MB/sec
[info]                  ·gc.alloc.rate.norm:          106899.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:      969.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89713.283 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 16716.947 ops/s
[info]                  ·gc.alloc.rate:                   1236.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              116352.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122041.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.563 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 147.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 17708.384 ops/s
[info]                  ·gc.alloc.rate:                   1209.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              107396.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115460.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.911 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 258.491 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 17370.072 ops/s
[info]                  ·gc.alloc.rate:               1319.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          119565.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1300.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 117846.350 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   17151.215 ±(99.9%) 1499.919 ops/s [Average]
[info]   (min, avg, max) = (16716.947, 17151.215, 17708.384), stdev = 389.524
[info]   CI (99.9%): [15651.295, 18651.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1216.609 ±(99.9%) 256.637 MB/sec [Average]
[info]   (min, avg, max) = (1155.284, 1216.609, 1319.678), stdev = 66.648
[info]   CI (99.9%): [959.972, 1473.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   111625.336 ±(99.9%) 22730.735 B/op [Average]
[info]   (min, avg, max) = (106899.327, 111625.336, 119565.566), stdev = 5903.100
[info]   CI (99.9%): [88894.601, 134356.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1231.646 ±(99.9%) 564.371 MB/sec [Average]
[info]   (min, avg, max) = (969.551, 1231.646, 1300.703), stdev = 146.565
[info]   CI (99.9%): [667.275, 1796.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   112983.348 ±(99.9%) 50959.119 B/op [Average]
[info]   (min, avg, max) = (89713.283, 112983.348, 122041.202), stdev = 13233.921
[info]   CI (99.9%): [62024.229, 163942.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.895 ±(99.9%) 5.062 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.895, 2.911), stdev = 1.315
[info]   CI (99.9%): [≈ 0, 5.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   81.120 ±(99.9%) 453.805 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 81.120, 258.491), stdev = 117.852
[info]   CI (99.9%): [≈ 0, 534.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 11.000), stdev = 1.517
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:48:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17025.299 ops/s
[info] # Warmup Iteration   2: 40870.434 ops/s
[info] # Warmup Iteration   3: 59454.468 ops/s
[info] Iteration   1: 56154.939 ops/s
[info]                  ·gc.alloc.rate:                   1737.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              48687.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45405.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.804 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.668 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 62490.710 ops/s
[info]                  ·gc.alloc.rate:                   1789.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              45065.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1612.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40618.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.767 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 62568.689 ops/s
[info]                  ·gc.alloc.rate:                   1795.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              45173.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48945.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.204 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 63167.807 ops/s
[info]                  ·gc.alloc.rate:                   1807.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              45035.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40662.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.037 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 62830.941 ops/s
[info]                  ·gc.alloc.rate:               1818.102 MB/sec
[info]                  ·gc.alloc.rate.norm:          45540.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41205.856 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   61442.617 ±(99.9%) 11427.691 ops/s [Average]
[info]   (min, avg, max) = (56154.939, 61442.617, 63167.807), stdev = 2967.735
[info]   CI (99.9%): [50014.926, 72870.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1789.622 ±(99.9%) 120.518 MB/sec [Average]
[info]   (min, avg, max) = (1737.204, 1789.622, 1818.102), stdev = 31.298
[info]   CI (99.9%): [1669.104, 1910.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   45900.472 ±(99.9%) 6048.365 B/op [Average]
[info]   (min, avg, max) = (45035.519, 45900.472, 48687.167), stdev = 1570.741
[info]   CI (99.9%): [39852.107, 51948.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1691.163 ±(99.9%) 550.175 MB/sec [Average]
[info]   (min, avg, max) = (1612.840, 1691.163, 1945.815), stdev = 142.879
[info]   CI (99.9%): [1140.988, 2241.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   43367.540 ±(99.9%) 14255.125 B/op [Average]
[info]   (min, avg, max) = (40618.290, 43367.540, 48945.947), stdev = 3702.011
[info]   CI (99.9%): [29112.415, 57622.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.479 ±(99.9%) 9.539 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.479, 5.804), stdev = 2.477
[info]   CI (99.9%): [≈ 0, 11.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   40.535 ±(99.9%) 268.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40.535, 162.668), stdev = 69.610
[info]   CI (99.9%): [≈ 0, 308.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.800, 19.000), stdev = 5.167
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:47:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27544.897 ops/s
[info] # Warmup Iteration   2: 74113.797 ops/s
[info] # Warmup Iteration   3: 92161.786 ops/s
[info] Iteration   1: 99486.179 ops/s
[info]                  ·gc.alloc.rate:                   1904.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              30124.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30868.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73.684 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 101803.986 ops/s
[info]                  ·gc.alloc.rate:                   1933.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              29896.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1940.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30005.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.575 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 98944.000 ops/s
[info]                  ·gc.alloc.rate:                   1884.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              29976.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25902.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 99924.379 ops/s
[info]                  ·gc.alloc.rate:                   1929.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              30392.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31088.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.328 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 93217.058 ops/s
[info]                  ·gc.alloc.rate:                        1793.089 MB/sec
[info]                  ·gc.alloc.rate.norm:                   30272.482 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.010 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.177 B/op
[info]                  ·gc.churn.Metaspace:                   0.029 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1783.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          30105.942 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.965 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             50.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      3.163 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              46.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   98675.121 ±(99.9%) 12458.336 ops/s [Average]
[info]   (min, avg, max) = (93217.058, 98675.121, 101803.986), stdev = 3235.390
[info]   CI (99.9%): [86216.785, 111133.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1889.066 ±(99.9%) 220.456 MB/sec [Average]
[info]   (min, avg, max) = (1793.089, 1889.066, 1933.868), stdev = 57.252
[info]   CI (99.9%): [1668.610, 2109.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   30132.271 ±(99.9%) 787.444 B/op [Average]
[info]   (min, avg, max) = (29896.022, 30132.271, 30392.117), stdev = 204.497
[info]   CI (99.9%): [29344.827, 30919.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.002 ±(99.9%) 0.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.035 ±(99.9%) 0.305 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.177), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.006 ±(99.9%) 0.050 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.098 ±(99.9%) 0.846 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.098, 0.491), stdev = 0.220
[info]   CI (99.9%): [≈ 0, 0.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1855.544 ±(99.9%) 568.759 MB/sec [Average]
[info]   (min, avg, max) = (1628.423, 1855.544, 1973.803), stdev = 147.705
[info]   CI (99.9%): [1286.785, 2424.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   29594.287 ±(99.9%) 8149.024 B/op [Average]
[info]   (min, avg, max) = (25902.866, 29594.287, 31088.893), stdev = 2116.276
[info]   CI (99.9%): [21445.263, 37743.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.593 ±(99.9%) 5.106 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.593, 2.965), stdev = 1.326
[info]   CI (99.9%): [≈ 0, 5.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   10.013 ±(99.9%) 86.212 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.013, 50.063), stdev = 22.389
[info]   CI (99.9%): [≈ 0, 96.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.011 ±(99.9%) 7.857 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.011, 4.658), stdev = 2.040
[info]   CI (99.9%): [≈ 0, 8.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.016 ±(99.9%) 124.232 B/op [Average]
[info]   (min, avg, max) = (0.328, 16.016, 73.684), stdev = 32.263
[info]   CI (99.9%): [≈ 0, 140.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   87.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 17.400, 46.000), stdev = 16.349
[info]   CI (99.9%): [87.000, 87.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:47:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 170920.671 ops/s
[info] # Warmup Iteration   2: 303436.752 ops/s
[info] # Warmup Iteration   3: 338389.768 ops/s
[info] Iteration   1: 347841.531 ops/s
[info]                  ·gc.alloc.rate:               686.220 MB/sec
[info]                  ·gc.alloc.rate.norm:          3104.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2974.919 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 350766.335 ops/s
[info]                  ·gc.alloc.rate:                   696.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              3123.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2953.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 348106.863 ops/s
[info]                  ·gc.alloc.rate:               686.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          3103.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2978.652 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 334225.931 ops/s
[info]                  ·gc.alloc.rate:                   657.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              3095.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3105.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 333826.917 ops/s
[info]                  ·gc.alloc.rate:                   660.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              3114.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3112.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.440 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.217 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   342953.515 ±(99.9%) 31692.189 ops/s [Average]
[info]   (min, avg, max) = (333826.917, 342953.515, 350766.335), stdev = 8230.361
[info]   CI (99.9%): [311261.326, 374645.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   677.381 ±(99.9%) 66.618 MB/sec [Average]
[info]   (min, avg, max) = (657.419, 677.381, 696.261), stdev = 17.301
[info]   CI (99.9%): [610.763, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3108.456 ±(99.9%) 41.856 B/op [Average]
[info]   (min, avg, max) = (3095.740, 3108.456, 3123.972), stdev = 10.870
[info]   CI (99.9%): [3066.599, 3150.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   658.843 ±(99.9%) 4.149 MB/sec [Average]
[info]   (min, avg, max) = (657.480, 658.843, 660.217), stdev = 1.078
[info]   CI (99.9%): [654.694, 662.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3024.949 ±(99.9%) 298.134 B/op [Average]
[info]   (min, avg, max) = (2953.087, 3024.949, 3112.471), stdev = 77.424
[info]   CI (99.9%): [2726.816, 3323.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.696 ±(99.9%) 5.906 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.696, 3.440), stdev = 1.534
[info]   CI (99.9%): [≈ 0, 6.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.282 ±(99.9%) 27.845 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.282, 16.217), stdev = 7.231
[info]   CI (99.9%): [≈ 0, 31.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 8.000), stdev = 1.225
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:47:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 192649.897 ops/s
[info] # Warmup Iteration   2: 339190.169 ops/s
[info] # Warmup Iteration   3: 390685.856 ops/s
[info] Iteration   1: 391126.864 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 390460.228 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 390449.557 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 390001.759 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 390610.983 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   390529.878 ±(99.9%) 1556.040 ops/s [Average]
[info]   (min, avg, max) = (390001.759, 390529.878, 391126.864), stdev = 404.099
[info]   CI (99.9%): [388973.838, 392085.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:47:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20474.203 ops/s
[info] # Warmup Iteration   2: 55361.524 ops/s
[info] # Warmup Iteration   3: 59434.636 ops/s
[info] Iteration   1: 67497.980 ops/s
[info]                  ·gc.alloc.rate:                   1952.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              45528.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45357.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.482 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.495 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 88274.861 ops/s
[info]                  ·gc.alloc.rate:                   1833.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              32677.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1944.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34658.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.580 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.161 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 89751.591 ops/s
[info]                  ·gc.alloc.rate:                   1879.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              32952.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34050.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.951 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.670 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 90573.207 ops/s
[info]                  ·gc.alloc.rate:                   1875.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              32574.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28284.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.362 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 89447.305 ops/s
[info]                  ·gc.alloc.rate:                   1889.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              33239.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34706.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.733 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   85108.989 ±(99.9%) 38041.692 ops/s [Average]
[info]   (min, avg, max) = (67497.980, 85108.989, 90573.207), stdev = 9879.307
[info]   CI (99.9%): [47067.297, 123150.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1886.005 ±(99.9%) 165.038 MB/sec [Average]
[info]   (min, avg, max) = (1833.734, 1886.005, 1952.660), stdev = 42.860
[info]   CI (99.9%): [1720.967, 2051.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   35394.594 ±(99.9%) 21836.630 B/op [Average]
[info]   (min, avg, max) = (32574.371, 35394.594, 45528.450), stdev = 5670.903
[info]   CI (99.9%): [13557.964, 57231.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1886.570 ±(99.9%) 557.968 MB/sec [Average]
[info]   (min, avg, max) = (1628.316, 1886.570, 1972.539), stdev = 144.902
[info]   CI (99.9%): [1328.602, 2444.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   35411.472 ±(99.9%) 23785.478 B/op [Average]
[info]   (min, avg, max) = (28284.986, 35411.472, 45357.261), stdev = 6177.013
[info]   CI (99.9%): [11625.994, 59196.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.415 ±(99.9%) 7.068 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.415, 4.482), stdev = 1.836
[info]   CI (99.9%): [≈ 0, 8.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   30.084 ±(99.9%) 166.355 B/op [Average]
[info]   (min, avg, max) = (0.362, 30.084, 104.495), stdev = 43.202
[info]   CI (99.9%): [≈ 0, 196.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.800, 20.000), stdev = 5.263
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:46:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26532.659 ops/s
[info] # Warmup Iteration   2: 108616.153 ops/s
[info] # Warmup Iteration   3: 164553.209 ops/s
[info] Iteration   1: 194197.749 ops/s
[info]                  ·gc.alloc.rate:                   2493.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              20198.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2284.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18504.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.025 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 194401.216 ops/s
[info]                  ·gc.alloc.rate:                   2483.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              20105.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18641.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.359 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 192493.774 ops/s
[info]                  ·gc.alloc.rate:                   2510.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              20529.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2661.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21764.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.511 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 191299.951 ops/s
[info]                  ·gc.alloc.rate:                   2483.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              20435.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2350.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19337.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 192401.282 ops/s
[info]                  ·gc.alloc.rate:                   2498.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              20432.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2364.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19336.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   192958.794 ±(99.9%) 5055.359 ops/s [Average]
[info]   (min, avg, max) = (191299.951, 192958.794, 194401.216), stdev = 1312.861
[info]   CI (99.9%): [187903.435, 198014.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   2493.945 ±(99.9%) 43.798 MB/sec [Average]
[info]   (min, avg, max) = (2483.464, 2493.945, 2510.916), stdev = 11.374
[info]   CI (99.9%): [2450.146, 2537.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20340.546 ±(99.9%) 689.825 B/op [Average]
[info]   (min, avg, max) = (20105.974, 20340.546, 20529.802), stdev = 179.145
[info]   CI (99.9%): [19650.721, 21030.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2392.659 ±(99.9%) 593.494 MB/sec [Average]
[info]   (min, avg, max) = (2284.181, 2392.659, 2661.987), stdev = 154.128
[info]   CI (99.9%): [1799.165, 2986.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19517.014 ±(99.9%) 5061.155 B/op [Average]
[info]   (min, avg, max) = (18504.663, 19517.014, 21764.995), stdev = 1314.366
[info]   CI (99.9%): [14455.859, 24578.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.133 ±(99.9%) 0.490 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.133, 0.291), stdev = 0.127
[info]   CI (99.9%): [≈ 0, 0.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.081 ±(99.9%) 3.957 B/op [Average]
[info]   (min, avg, max) = (0.170, 1.081, 2.359), stdev = 1.028
[info]   CI (99.9%): [≈ 0, 5.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 13.000), stdev = 1.673
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:46:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.655 ops/s
[info] # Warmup Iteration   2: 663323.328 ops/s
[info] # Warmup Iteration   3: 764837.753 ops/s
[info] Iteration   1: 789425.496 ops/s
[info]                  ·gc.alloc.rate:                   444.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              886.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     648.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 768026.741 ops/s
[info]                  ·gc.alloc.rate:                   441.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              905.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1332.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 780344.080 ops/s
[info]                  ·gc.alloc.rate:                   440.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              889.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     655.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 793789.730 ops/s
[info]                  ·gc.alloc.rate:               451.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          895.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 644.551 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 786328.809 ops/s
[info]                  ·gc.alloc.rate:                   458.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              916.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1302.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   783582.971 ±(99.9%) 38426.426 ops/s [Average]
[info]   (min, avg, max) = (768026.741, 783582.971, 793789.730), stdev = 9979.221
[info]   CI (99.9%): [745156.545, 822009.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   447.408 ±(99.9%) 27.970 MB/sec [Average]
[info]   (min, avg, max) = (440.953, 447.408, 458.005), stdev = 7.264
[info]   CI (99.9%): [419.438, 475.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   898.621 ±(99.9%) 47.746 B/op [Average]
[info]   (min, avg, max) = (886.534, 898.621, 916.687), stdev = 12.400
[info]   CI (99.9%): [850.875, 946.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   455.269 ±(99.9%) 686.308 MB/sec [Average]
[info]   (min, avg, max) = (325.092, 455.269, 650.838), stdev = 178.232
[info]   CI (99.9%): [≈ 0, 1141.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   916.657 ±(99.9%) 1409.622 B/op [Average]
[info]   (min, avg, max) = (644.551, 916.657, 1332.328), stdev = 366.074
[info]   CI (99.9%): [≈ 0, 2326.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.034), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.070), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:46:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89362.335 ops/s
[info] # Warmup Iteration   2: 323314.939 ops/s
[info] # Warmup Iteration   3: 409405.899 ops/s
[info] Iteration   1: 417654.562 ops/s
[info]                  ·gc.alloc.rate:                   370.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              1397.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1222.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.435 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 414164.074 ops/s
[info]                  ·gc.alloc.rate:               371.317 MB/sec
[info]                  ·gc.alloc.rate.norm:          1411.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1232.836 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 391383.342 ops/s
[info]                  ·gc.alloc.rate:                   351.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              1411.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1304.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 393511.887 ops/s
[info]                  ·gc.alloc.rate:               351.773 MB/sec
[info]                  ·gc.alloc.rate.norm:          1406.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1297.459 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 410866.651 ops/s
[info]                  ·gc.alloc.rate:               367.295 MB/sec
[info]                  ·gc.alloc.rate.norm:          1406.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1242.694 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   405516.103 ±(99.9%) 46947.628 ops/s [Average]
[info]   (min, avg, max) = (391383.342, 405516.103, 417654.562), stdev = 12192.150
[info]   CI (99.9%): [358568.475, 452463.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   362.490 ±(99.9%) 39.289 MB/sec [Average]
[info]   (min, avg, max) = (351.124, 362.490, 371.317), stdev = 10.203
[info]   CI (99.9%): [323.200, 401.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1406.922 ±(99.9%) 21.606 B/op [Average]
[info]   (min, avg, max) = (1397.774, 1406.922, 1411.932), stdev = 5.611
[info]   CI (99.9%): [1385.316, 1428.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   324.409 ±(99.9%) 0.041 MB/sec [Average]
[info]   (min, avg, max) = (324.390, 324.409, 324.417), stdev = 0.011
[info]   CI (99.9%): [324.368, 324.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1259.972 ±(99.9%) 146.950 B/op [Average]
[info]   (min, avg, max) = (1222.441, 1259.972, 1304.432), stdev = 38.162
[info]   CI (99.9%): [1113.023, 1406.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.294 ±(99.9%) 2.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.294, 1.442), stdev = 0.642
[info]   CI (99.9%): [≈ 0, 2.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.110 ±(99.9%) 9.311 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.110, 5.435), stdev = 2.418
[info]   CI (99.9%): [≈ 0, 10.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:46:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 327962.701 ops/s
[info] # Warmup Iteration   2: 941182.774 ops/s
[info] # Warmup Iteration   3: 1073054.990 ops/s
[info] Iteration   1: 1084754.027 ops/s
[info]                  ·gc.alloc.rate:               381.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          553.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 475.524 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1072327.148 ops/s
[info]                  ·gc.alloc.rate:               379.609 MB/sec
[info]                  ·gc.alloc.rate.norm:          557.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 481.030 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1063611.869 ops/s
[info]                  ·gc.alloc.rate:                   375.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              555.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     485.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1065148.525 ops/s
[info]                  ·gc.alloc.rate:                   375.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              555.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     484.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1064412.172 ops/s
[info]                  ·gc.alloc.rate:               374.936 MB/sec
[info]                  ·gc.alloc.rate.norm:          554.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 485.578 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1070050.748 ±(99.9%) 34368.636 ops/s [Average]
[info]   (min, avg, max) = (1063611.869, 1070050.748, 1084754.027), stdev = 8925.426
[info]   CI (99.9%): [1035682.112, 1104419.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   377.522 ±(99.9%) 11.198 MB/sec [Average]
[info]   (min, avg, max) = (374.936, 377.522, 381.568), stdev = 2.908
[info]   CI (99.9%): [366.324, 388.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   555.273 ±(99.9%) 5.146 B/op [Average]
[info]   (min, avg, max) = (553.621, 555.273, 557.128), stdev = 1.336
[info]   CI (99.9%): [550.127, 560.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   328.008 ±(99.9%) 1.033 MB/sec [Average]
[info]   (min, avg, max) = (327.741, 328.008, 328.389), stdev = 0.268
[info]   CI (99.9%): [326.975, 329.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   482.472 ±(99.9%) 16.587 B/op [Average]
[info]   (min, avg, max) = (475.524, 482.472, 485.578), stdev = 4.308
[info]   CI (99.9%): [465.885, 499.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.106 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:46:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5371.556 ops/s
[info] # Warmup Iteration   2: 77081.896 ops/s
[info] # Warmup Iteration   3: 113046.754 ops/s
[info] Iteration   1: 122198.775 ops/s
[info]                  ·gc.alloc.rate:                   3867.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              49814.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3962.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51034.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.288 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 121919.971 ops/s
[info]                  ·gc.alloc.rate:                   3895.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              50287.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3679.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47493.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.075 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 122845.386 ops/s
[info]                  ·gc.alloc.rate:                   3938.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              50462.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3713.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47577.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.533 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 120712.462 ops/s
[info]                  ·gc.alloc.rate:                   3869.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              50438.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3732.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48654.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 121864.164 ops/s
[info]                  ·gc.alloc.rate:               3921.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          50600.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:      4076.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52599.723 B/op
[info]                  ·gc.count:                    12.000 counts
[info]                  ·gc.time:                     17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   121908.152 ±(99.9%) 2979.351 ops/s [Average]
[info]   (min, avg, max) = (120712.462, 121908.152, 122845.386), stdev = 773.728
[info]   CI (99.9%): [118928.800, 124887.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3898.583 ±(99.9%) 122.043 MB/sec [Average]
[info]   (min, avg, max) = (3867.516, 3898.583, 3938.877), stdev = 31.694
[info]   CI (99.9%): [3776.540, 4020.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50320.643 ±(99.9%) 1170.589 B/op [Average]
[info]   (min, avg, max) = (49814.243, 50320.643, 50600.143), stdev = 303.998
[info]   CI (99.9%): [49150.054, 51491.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3832.842 ±(99.9%) 678.853 MB/sec [Average]
[info]   (min, avg, max) = (3679.067, 3832.842, 4076.959), stdev = 176.296
[info]   CI (99.9%): [3153.989, 4511.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49472.117 ±(99.9%) 8695.136 B/op [Average]
[info]   (min, avg, max) = (47493.687, 49472.117, 52599.723), stdev = 2258.099
[info]   CI (99.9%): [40776.981, 58167.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.375 ±(99.9%) 2.920 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.375, 1.730), stdev = 0.758
[info]   CI (99.9%): [≈ 0, 3.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.834 ±(99.9%) 37.603 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.834, 22.288), stdev = 9.765
[info]   CI (99.9%): [≈ 0, 42.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   57.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.400, 12.000), stdev = 0.548
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 15.800, 17.000), stdev = 1.095
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:45:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69605.942 ops/s
[info] # Warmup Iteration   2: 249489.493 ops/s
[info] # Warmup Iteration   3: 295892.062 ops/s
[info] Iteration   1: 305228.897 ops/s
[info]                  ·gc.alloc.rate:                   1802.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              9292.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10115.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.322 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.287 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 308372.495 ops/s
[info]                  ·gc.alloc.rate:                   1808.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              9232.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8295.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 309184.408 ops/s
[info]                  ·gc.alloc.rate:                   1821.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              9273.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8309.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 306125.865 ops/s
[info]                  ·gc.alloc.rate:                   1824.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              9379.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10161.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 308574.167 ops/s
[info]                  ·gc.alloc.rate:                   1832.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              9344.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8478.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   307497.167 ±(99.9%) 6613.258 ops/s [Average]
[info]   (min, avg, max) = (305228.897, 307497.167, 309184.408), stdev = 1717.442
[info]   CI (99.9%): [300883.909, 314110.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1817.868 ±(99.9%) 46.766 MB/sec [Average]
[info]   (min, avg, max) = (1802.158, 1817.868, 1832.249), stdev = 12.145
[info]   CI (99.9%): [1771.101, 1864.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   9304.462 ±(99.9%) 224.239 B/op [Average]
[info]   (min, avg, max) = (9232.052, 9304.462, 9379.334), stdev = 58.234
[info]   CI (99.9%): [9080.223, 9528.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1771.702 ±(99.9%) 696.220 MB/sec [Average]
[info]   (min, avg, max) = (1625.438, 1771.702, 1976.452), stdev = 180.806
[info]   CI (99.9%): [1075.482, 2467.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9072.306 ±(99.9%) 3759.447 B/op [Average]
[info]   (min, avg, max) = (8295.669, 9072.306, 10161.629), stdev = 976.316
[info]   CI (99.9%): [5312.859, 12831.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.894 ±(99.9%) 7.380 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.894, 4.322), stdev = 1.917
[info]   CI (99.9%): [≈ 0, 8.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.607 ±(99.9%) 38.060 B/op [Average]
[info]   (min, avg, max) = (0.106, 4.607, 22.287), stdev = 9.884
[info]   CI (99.9%): [≈ 0, 42.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 15.000), stdev = 3.715
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:45:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.777 ops/s
[info] # Warmup Iteration   2: 1636478.675 ops/s
[info] # Warmup Iteration   3: 1721100.204 ops/s
[info] Iteration   1: 1965497.334 ops/s
[info]                  ·gc.alloc.rate:                   686.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     519.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1927241.588 ops/s
[info]                  ·gc.alloc.rate:               696.101 MB/sec
[info]                  ·gc.alloc.rate.norm:          568.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 530.408 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1985338.652 ops/s
[info]                  ·gc.alloc.rate:                   700.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     515.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2014717.432 ops/s
[info]                  ·gc.alloc.rate:                   704.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2005731.349 ops/s
[info]                  ·gc.alloc.rate:                   704.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     512.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.264 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1979705.271 ±(99.9%) 134624.573 ops/s [Average]
[info]   (min, avg, max) = (1927241.588, 1979705.271, 2014717.432), stdev = 34961.574
[info]   CI (99.9%): [1845080.698, 2114329.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   698.365 ±(99.9%) 29.595 MB/sec [Average]
[info]   (min, avg, max) = (686.229, 698.365, 704.781), stdev = 7.686
[info]   CI (99.9%): [668.770, 727.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   555.263 ±(99.9%) 29.536 B/op [Average]
[info]   (min, avg, max) = (549.498, 555.263, 568.457), stdev = 7.670
[info]   CI (99.9%): [525.727, 584.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   650.587 ±(99.9%) 6.357 MB/sec [Average]
[info]   (min, avg, max) = (648.824, 650.587, 652.956), stdev = 1.651
[info]   CI (99.9%): [644.229, 656.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   517.312 ±(99.9%) 31.973 B/op [Average]
[info]   (min, avg, max) = (508.931, 517.312, 530.408), stdev = 8.303
[info]   CI (99.9%): [485.339, 549.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.853 ±(99.9%) 7.120 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.853, 4.161), stdev = 1.849
[info]   CI (99.9%): [≈ 0, 7.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.669 ±(99.9%) 5.586 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.669, 3.264), stdev = 1.451
[info]   CI (99.9%): [≈ 0, 6.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:45:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 344050.822 ops/s
[info] # Warmup Iteration   2: 1796381.412 ops/s
[info] # Warmup Iteration   3: 1791593.680 ops/s
[info] Iteration   1: 1897124.494 ops/s
[info]                  ·gc.alloc.rate:                   665.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     538.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1890154.965 ops/s
[info]                  ·gc.alloc.rate:                   661.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1893346.532 ops/s
[info]                  ·gc.alloc.rate:                   670.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              557.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1870677.747 ops/s
[info]                  ·gc.alloc.rate:               661.951 MB/sec
[info]                  ·gc.alloc.rate.norm:          556.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 548.682 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 1872239.252 ops/s
[info]                  ·gc.alloc.rate:                   666.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              559.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     549.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1884708.598 ±(99.9%) 47582.362 ops/s [Average]
[info]   (min, avg, max) = (1870677.747, 1884708.598, 1897124.494), stdev = 12356.988
[info]   CI (99.9%): [1837126.236, 1932290.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   665.024 ±(99.9%) 14.208 MB/sec [Average]
[info]   (min, avg, max) = (661.246, 665.024, 670.446), stdev = 3.690
[info]   CI (99.9%): [650.816, 679.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   555.261 ±(99.9%) 15.375 B/op [Average]
[info]   (min, avg, max) = (550.419, 555.261, 559.970), stdev = 3.993
[info]   CI (99.9%): [539.886, 570.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   651.337 ±(99.9%) 6.756 MB/sec [Average]
[info]   (min, avg, max) = (648.967, 651.337, 653.519), stdev = 1.755
[info]   CI (99.9%): [644.581, 658.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   543.845 ±(99.9%) 18.903 B/op [Average]
[info]   (min, avg, max) = (538.260, 543.845, 549.361), stdev = 4.909
[info]   CI (99.9%): [524.941, 562.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.796 ±(99.9%) 6.739 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.796, 3.927), stdev = 1.750
[info]   CI (99.9%): [≈ 0, 7.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.669 ±(99.9%) 5.665 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.669, 3.301), stdev = 1.471
[info]   CI (99.9%): [≈ 0, 6.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:45:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1222331.173 ops/s
[info] # Warmup Iteration   2: 1989050.957 ops/s
[info] # Warmup Iteration   3: 2252933.448 ops/s
[info] Iteration   1: 2219739.525 ops/s
[info]                  ·gc.alloc.rate:                   773.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.568 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2251349.570 ops/s
[info]                  ·gc.alloc.rate:                   788.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2185050.882 ops/s
[info]                  ·gc.alloc.rate:                   771.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              555.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     712.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2254750.451 ops/s
[info]                  ·gc.alloc.rate:                   787.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.320 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2284534.463 ops/s
[info]                  ·gc.alloc.rate:                   791.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              545.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     452.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.559 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   2239084.978 ±(99.9%) 146063.471 ops/s [Average]
[info]   (min, avg, max) = (2185050.882, 2239084.978, 2284534.463), stdev = 37932.220
[info]   CI (99.9%): [2093021.507, 2385148.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   782.494 ±(99.9%) 36.130 MB/sec [Average]
[info]   (min, avg, max) = (771.111, 782.494, 791.743), stdev = 9.383
[info]   CI (99.9%): [746.364, 818.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   550.002 ±(99.9%) 14.169 B/op [Average]
[info]   (min, avg, max) = (545.446, 550.002, 555.428), stdev = 3.680
[info]   CI (99.9%): [535.833, 564.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   724.309 ±(99.9%) 569.541 MB/sec [Average]
[info]   (min, avg, max) = (656.824, 724.309, 988.888), stdev = 147.908
[info]   CI (99.9%): [154.768, 1293.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   510.329 ±(99.9%) 435.140 B/op [Average]
[info]   (min, avg, max) = (452.498, 510.329, 712.291), stdev = 113.004
[info]   CI (99.9%): [75.189, 945.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.844 ±(99.9%) 5.494 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.844, 3.323), stdev = 1.427
[info]   CI (99.9%): [≈ 0, 6.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.588 ±(99.9%) 3.834 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.588, 2.320), stdev = 0.996
[info]   CI (99.9%): [≈ 0, 4.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 11.000), stdev = 2.864
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:45:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1289102.796 ops/s
[info] # Warmup Iteration   2: 2117559.480 ops/s
[info] # Warmup Iteration   3: 2373790.216 ops/s
[info] Iteration   1: 2372801.933 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2369840.163 ops/s
[info]                  ·gc.alloc.rate:      0.422 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.280 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2321653.857 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2250296.051 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2256957.537 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2314309.908 ±(99.9%) 227366.814 ops/s [Average]
[info]   (min, avg, max) = (2250296.051, 2314309.908, 2372801.933), stdev = 59046.440
[info]   CI (99.9%): [2086943.094, 2541676.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.085 ±(99.9%) 0.726 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.085, 0.422), stdev = 0.189
[info]   CI (99.9%): [≈ 0, 0.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.056 ±(99.9%) 0.482 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.056, 0.280), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:44:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4409.185 ops/s
[info] # Warmup Iteration   2: 24765.286 ops/s
[info] # Warmup Iteration   3: 44356.868 ops/s
[info] Iteration   1: 43969.009 ops/s
[info]                  ·gc.alloc.rate:                   1933.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              69205.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69579.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 167.767 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 43508.252 ops/s
[info]                  ·gc.alloc.rate:                   2049.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              74131.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69906.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.882 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 212.710 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 47328.860 ops/s
[info]                  ·gc.alloc.rate:                   1868.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              62137.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1934.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64330.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.908 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.199 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 47974.735 ops/s
[info]                  ·gc.alloc.rate:                   1886.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              61889.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1948.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63920.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.097 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 48531.963 ops/s
[info]                  ·gc.alloc.rate:                   1898.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              61550.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53262.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   46262.564 ±(99.9%) 9043.956 ops/s [Average]
[info]   (min, avg, max) = (43508.252, 46262.564, 48531.963), stdev = 2348.687
[info]   CI (99.9%): [37218.608, 55306.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1927.441 ±(99.9%) 278.989 MB/sec [Average]
[info]   (min, avg, max) = (1868.642, 1927.441, 2049.945), stdev = 72.452
[info]   CI (99.9%): [1648.452, 2206.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   65783.030 ±(99.9%) 21763.764 B/op [Average]
[info]   (min, avg, max) = (61550.525, 65783.030, 74131.736), stdev = 5651.980
[info]   CI (99.9%): [44019.266, 87546.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1880.606 ±(99.9%) 512.634 MB/sec [Average]
[info]   (min, avg, max) = (1642.739, 1880.606, 1948.727), stdev = 133.129
[info]   CI (99.9%): [1367.972, 2393.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64199.774 ±(99.9%) 25918.428 B/op [Average]
[info]   (min, avg, max) = (53262.683, 64199.774, 69906.673), stdev = 6730.933
[info]   CI (99.9%): [38281.346, 90118.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.333 ±(99.9%) 10.580 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 2.333, 5.882), stdev = 2.748
[info]   CI (99.9%): [≈ 0, 12.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   83.360 ±(99.9%) 383.037 B/op [Average]
[info]   (min, avg, max) = (2.025, 83.360, 212.710), stdev = 99.474
[info]   CI (99.9%): [≈ 0, 466.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.400, 28.000), stdev = 8.562
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:44:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3926.065 ops/s
[info] # Warmup Iteration   2: 10112.432 ops/s
[info] # Warmup Iteration   3: 14645.238 ops/s
[info] Iteration   1: 17388.517 ops/s
[info]                  ·gc.alloc.rate:                   1958.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              177267.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1842.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166773.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 519.732 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 17472.053 ops/s
[info]                  ·gc.alloc.rate:                   2299.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              207073.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2159.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194474.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.705 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 153.509 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 18165.187 ops/s
[info]                  ·gc.alloc.rate:                   2054.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              177996.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2203.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190923.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.267 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 196.419 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 18442.811 ops/s
[info]                  ·gc.alloc.rate:                   2075.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              177084.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1932.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     164900.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.658 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 16772.978 ops/s
[info]                  ·gc.alloc.rate:               2260.196 MB/sec
[info]                  ·gc.alloc.rate.norm:          212079.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2294.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 215328.107 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   17648.309 ±(99.9%) 2556.520 ops/s [Average]
[info]   (min, avg, max) = (16772.978, 17648.309, 18442.811), stdev = 663.920
[info]   CI (99.9%): [15091.789, 20204.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   2129.564 ±(99.9%) 557.342 MB/sec [Average]
[info]   (min, avg, max) = (1958.523, 2129.564, 2299.489), stdev = 144.740
[info]   CI (99.9%): [1572.222, 2686.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   190300.307 ±(99.9%) 68114.318 B/op [Average]
[info]   (min, avg, max) = (177084.292, 190300.307, 212079.938), stdev = 17689.072
[info]   CI (99.9%): [122185.989, 258414.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2086.600 ±(99.9%) 734.851 MB/sec [Average]
[info]   (min, avg, max) = (1842.587, 2086.600, 2294.813), stdev = 190.839
[info]   CI (99.9%): [1351.749, 2821.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   186479.876 ±(99.9%) 80998.047 B/op [Average]
[info]   (min, avg, max) = (164900.470, 186479.876, 215328.107), stdev = 21034.936
[info]   CI (99.9%): [105481.829, 267477.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.968 ±(99.9%) 8.963 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.968, 5.742), stdev = 2.328
[info]   CI (99.9%): [≈ 0, 10.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   176.064 ±(99.9%) 810.897 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 176.064, 519.732), stdev = 210.587
[info]   CI (99.9%): [≈ 0, 986.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 15.400, 24.000), stdev = 6.348
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:44:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31408.935 ops/s
[info] # Warmup Iteration   2: 84407.199 ops/s
[info] # Warmup Iteration   3: 84988.780 ops/s
[info] Iteration   1: 104649.367 ops/s
[info]                  ·gc.alloc.rate:                   1153.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              17341.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19480.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.214 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.296 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 105335.484 ops/s
[info]                  ·gc.alloc.rate:                   1151.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              17198.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14511.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 108969.632 ops/s
[info]                  ·gc.alloc.rate:               1206.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          17427.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1298.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18760.650 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 106347.814 ops/s
[info]                  ·gc.alloc.rate:                   1161.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              17195.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14481.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.723 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.494 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 107118.512 ops/s
[info]                  ·gc.alloc.rate:                   1187.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              17451.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19208.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.612 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   106484.162 ±(99.9%) 6467.616 ops/s [Average]
[info]   (min, avg, max) = (104649.367, 106484.162, 108969.632), stdev = 1679.619
[info]   CI (99.9%): [100016.545, 112951.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1172.121 ±(99.9%) 93.264 MB/sec [Average]
[info]   (min, avg, max) = (1151.065, 1172.121, 1206.678), stdev = 24.220
[info]   CI (99.9%): [1078.857, 1265.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   17323.148 ±(99.9%) 469.849 B/op [Average]
[info]   (min, avg, max) = (17195.703, 17323.148, 17451.780), stdev = 122.018
[info]   CI (99.9%): [16853.299, 17792.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1170.293 ±(99.9%) 687.141 MB/sec [Average]
[info]   (min, avg, max) = (971.226, 1170.293, 1307.322), stdev = 178.448
[info]   CI (99.9%): [483.152, 1857.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   17288.666 ±(99.9%) 9863.840 B/op [Average]
[info]   (min, avg, max) = (14481.814, 17288.666, 19480.968), stdev = 2561.608
[info]   CI (99.9%): [7424.826, 27152.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.800 ±(99.9%) 4.162 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.214), stdev = 1.081
[info]   CI (99.9%): [≈ 0, 4.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.943 ±(99.9%) 62.266 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.943, 33.296), stdev = 16.170
[info]   CI (99.9%): [≈ 0, 74.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 8.000), stdev = 1.140
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:44:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 78459.687 ops/s
[info] # Warmup Iteration   2: 219063.298 ops/s
[info] # Warmup Iteration   3: 271706.677 ops/s
[info] Iteration   1: 269103.023 ops/s
[info]                  ·gc.alloc.rate:                   896.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              5243.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3786.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 258068.718 ops/s
[info]                  ·gc.alloc.rate:                   891.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              5436.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5937.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 277600.313 ops/s
[info]                  ·gc.alloc.rate:                   933.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              5291.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5531.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.886 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 277208.956 ops/s
[info]                  ·gc.alloc.rate:                   925.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              5254.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5518.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.743 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.573 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 279765.366 ops/s
[info]                  ·gc.alloc.rate:                   936.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              5270.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5445.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.468 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   272349.275 ±(99.9%) 34476.747 ops/s [Average]
[info]   (min, avg, max) = (258068.718, 272349.275, 279765.366), stdev = 8953.502
[info]   CI (99.9%): [237872.529, 306826.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   916.810 ±(99.9%) 81.949 MB/sec [Average]
[info]   (min, avg, max) = (891.500, 916.810, 936.810), stdev = 21.282
[info]   CI (99.9%): [834.861, 998.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5299.243 ±(99.9%) 304.161 B/op [Average]
[info]   (min, avg, max) = (5243.506, 5299.243, 5436.875), stdev = 78.990
[info]   CI (99.9%): [4995.082, 5603.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   907.395 ±(99.9%) 559.607 MB/sec [Average]
[info]   (min, avg, max) = (647.477, 907.395, 976.000), stdev = 145.328
[info]   CI (99.9%): [347.788, 1467.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5243.767 ±(99.9%) 3223.089 B/op [Average]
[info]   (min, avg, max) = (3786.837, 5243.767, 5937.620), stdev = 837.026
[info]   CI (99.9%): [2020.679, 8466.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.103 ±(99.9%) 5.563 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.103, 2.743), stdev = 1.445
[info]   CI (99.9%): [≈ 0, 6.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.260 ±(99.9%) 31.548 B/op [Average]
[info]   (min, avg, max) = (0.127, 6.260, 15.573), stdev = 8.193
[info]   CI (99.9%): [≈ 0, 37.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 13.000), stdev = 3.834
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:44:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1308.240 ops/s
[info] # Warmup Iteration   2: 10411.954 ops/s
[info] # Warmup Iteration   3: 13209.429 ops/s
[info] Iteration   1: 16120.959 ops/s
[info]                  ·gc.alloc.rate:                   2080.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              203068.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2253.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219951.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      14.929 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1457.452 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 16776.772 ops/s
[info]                  ·gc.alloc.rate:                   2134.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              200212.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190979.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.906 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 16682.702 ops/s
[info]                  ·gc.alloc.rate:                   2099.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              198036.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1830.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172720.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.891 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 16672.569 ops/s
[info]                  ·gc.alloc.rate:                   2121.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              200261.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2221.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209683.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.860 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 16324.874 ops/s
[info]                  ·gc.alloc.rate:                   2323.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              224006.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2287.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220479.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.007 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   16515.575 ±(99.9%) 1076.961 ops/s [Average]
[info]   (min, avg, max) = (16120.959, 16515.575, 16776.772), stdev = 279.683
[info]   CI (99.9%): [15438.614, 17592.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2151.737 ±(99.9%) 378.752 MB/sec [Average]
[info]   (min, avg, max) = (2080.072, 2151.737, 2323.726), stdev = 98.361
[info]   CI (99.9%): [1772.985, 2530.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   205116.872 ±(99.9%) 41238.784 B/op [Average]
[info]   (min, avg, max) = (198036.103, 205116.872, 224006.365), stdev = 10709.581
[info]   CI (99.9%): [163878.089, 246355.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2125.617 ±(99.9%) 736.739 MB/sec [Average]
[info]   (min, avg, max) = (1830.849, 2125.617, 2287.136), stdev = 191.329
[info]   CI (99.9%): [1388.879, 2862.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   202762.937 ±(99.9%) 79350.877 B/op [Average]
[info]   (min, avg, max) = (172720.313, 202762.937, 220479.047), stdev = 20607.171
[info]   CI (99.9%): [123412.059, 282113.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3.027 ±(99.9%) 25.619 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 3.027, 14.929), stdev = 6.653
[info]   CI (99.9%): [≈ 0, 28.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   295.423 ±(99.9%) 2501.368 B/op [Average]
[info]   (min, avg, max) = (2.007, 295.423, 1457.452), stdev = 649.597
[info]   CI (99.9%): [≈ 0, 2796.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.800, 25.000), stdev = 6.419
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:43:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12078.994 ops/s
[info] # Warmup Iteration   2: 32811.656 ops/s
[info] # Warmup Iteration   3: 41052.166 ops/s
[info] Iteration   1: 39112.552 ops/s
[info]                  ·gc.alloc.rate:                   3239.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              130333.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2941.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118372.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.188 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.040 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 41350.120 ops/s
[info]                  ·gc.alloc.rate:                   3332.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              126794.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3309.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125921.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129.829 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 43598.175 ops/s
[info]                  ·gc.alloc.rate:                   3417.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              123383.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3339.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120539.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.757 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 43474.081 ops/s
[info]                  ·gc.alloc.rate:                   3400.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              123095.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3370.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122007.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.768 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 43886.659 ops/s
[info]                  ·gc.alloc.rate:                   3474.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              124610.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121504.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.747 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   42284.318 ±(99.9%) 7854.295 ops/s [Average]
[info]   (min, avg, max) = (39112.552, 42284.318, 43886.659), stdev = 2039.735
[info]   CI (99.9%): [34430.023, 50138.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   3372.899 ±(99.9%) 348.304 MB/sec [Average]
[info]   (min, avg, max) = (3239.025, 3372.899, 3474.744), stdev = 90.453
[info]   CI (99.9%): [3024.595, 3721.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   125643.686 ±(99.9%) 11550.375 B/op [Average]
[info]   (min, avg, max) = (123095.964, 125643.686, 130333.852), stdev = 2999.596
[info]   CI (99.9%): [114093.311, 137194.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   3269.767 ±(99.9%) 715.471 MB/sec [Average]
[info]   (min, avg, max) = (2941.774, 3269.767, 3388.133), stdev = 185.806
[info]   CI (99.9%): [2554.296, 3985.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   121669.189 ±(99.9%) 10610.290 B/op [Average]
[info]   (min, avg, max) = (118372.913, 121669.189, 125921.917), stdev = 2755.459
[info]   CI (99.9%): [111058.899, 132279.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.166 ±(99.9%) 5.983 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.166, 3.412), stdev = 1.554
[info]   CI (99.9%): [≈ 0, 7.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   45.228 ±(99.9%) 231.099 B/op [Average]
[info]   (min, avg, max) = (0.747, 45.228, 129.829), stdev = 60.016
[info]   CI (99.9%): [≈ 0, 276.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 16.000), stdev = 1.225
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:43:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27849.628 ops/s
[info] # Warmup Iteration   2: 98519.827 ops/s
[info] # Warmup Iteration   3: 134445.774 ops/s
[info] Iteration   1: 145067.170 ops/s
[info]                  ·gc.alloc.rate:                   2004.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              21750.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21226.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.420 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 140984.280 ops/s
[info]                  ·gc.alloc.rate:                   1944.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              21704.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22086.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.930 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 146303.397 ops/s
[info]                  ·gc.alloc.rate:               2034.719 MB/sec
[info]                  ·gc.alloc.rate.norm:          21888.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1996.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21476.582 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 146000.973 ops/s
[info]                  ·gc.alloc.rate:                   2044.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              22039.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21683.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 144193.358 ops/s
[info]                  ·gc.alloc.rate:                   2009.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              21932.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18388.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.454 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   144509.836 ±(99.9%) 8231.888 ops/s [Average]
[info]   (min, avg, max) = (140984.280, 144509.836, 146303.397), stdev = 2137.795
[info]   CI (99.9%): [136277.948, 152741.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2007.579 ±(99.9%) 150.296 MB/sec [Average]
[info]   (min, avg, max) = (1944.476, 2007.579, 2044.503), stdev = 39.032
[info]   CI (99.9%): [1857.283, 2157.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   21863.353 ±(99.9%) 524.724 B/op [Average]
[info]   (min, avg, max) = (21704.869, 21863.353, 22039.578), stdev = 136.269
[info]   CI (99.9%): [21338.629, 22388.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1925.521 ±(99.9%) 524.347 MB/sec [Average]
[info]   (min, avg, max) = (1684.716, 1925.521, 2011.440), stdev = 136.171
[info]   CI (99.9%): [1401.174, 2449.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20972.133 ±(99.9%) 5693.101 B/op [Average]
[info]   (min, avg, max) = (18388.034, 20972.133, 22086.243), stdev = 1478.480
[info]   CI (99.9%): [15279.032, 26665.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.129 ±(99.9%) 0.806 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.129, 0.500), stdev = 0.209
[info]   CI (99.9%): [≈ 0, 0.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.406 ±(99.9%) 8.743 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.406, 5.420), stdev = 2.271
[info]   CI (99.9%): [≈ 0, 10.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 10.000), stdev = 1.095
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:43:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131546.134 ops/s
[info] # Warmup Iteration   2: 228844.176 ops/s
[info] # Warmup Iteration   3: 251251.393 ops/s
[info] Iteration   1: 252155.591 ops/s
[info]                  ·gc.alloc.rate:                   817.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              5105.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4106.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.341 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 246152.254 ops/s
[info]                  ·gc.alloc.rate:                   840.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              5373.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6320.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 248187.387 ops/s
[info]                  ·gc.alloc.rate:                   826.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              5240.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4182.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 249673.806 ops/s
[info]                  ·gc.alloc.rate:                   837.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              5276.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6239.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.934 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.801 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 251737.600 ops/s
[info]                  ·gc.alloc.rate:                   824.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              5152.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4106.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.651 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   249581.328 ±(99.9%) 9624.012 ops/s [Average]
[info]   (min, avg, max) = (246152.254, 249581.328, 252155.591), stdev = 2499.325
[info]   CI (99.9%): [239957.315, 259205.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   829.259 ±(99.9%) 36.111 MB/sec [Average]
[info]   (min, avg, max) = (817.920, 829.259, 840.633), stdev = 9.378
[info]   CI (99.9%): [793.148, 865.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5229.777 ±(99.9%) 405.282 B/op [Average]
[info]   (min, avg, max) = (5105.411, 5229.777, 5373.429), stdev = 105.250
[info]   CI (99.9%): [4824.495, 5635.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   790.585 ±(99.9%) 698.735 MB/sec [Average]
[info]   (min, avg, max) = (656.860, 790.585, 989.893), stdev = 181.459
[info]   CI (99.9%): [91.850, 1489.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4991.075 ±(99.9%) 4534.835 B/op [Average]
[info]   (min, avg, max) = (4106.087, 4991.075, 6320.700), stdev = 1177.682
[info]   CI (99.9%): [456.239, 9525.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.829 ±(99.9%) 6.687 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.829, 3.934), stdev = 1.737
[info]   CI (99.9%): [≈ 0, 7.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.222 ±(99.9%) 42.155 B/op [Average]
[info]   (min, avg, max) = (0.049, 5.222, 24.801), stdev = 10.947
[info]   CI (99.9%): [≈ 0, 47.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 10.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:43:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138048.170 ops/s
[info] # Warmup Iteration   2: 260368.796 ops/s
[info] # Warmup Iteration   3: 280559.778 ops/s
[info] Iteration   1: 280547.399 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 280086.974 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 280101.995 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 280624.023 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 280714.311 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   280414.941 ±(99.9%) 1149.372 ops/s [Average]
[info]   (min, avg, max) = (280086.974, 280414.941, 280714.311), stdev = 298.488
[info]   CI (99.9%): [279265.569, 281564.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:42:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9360.871 ops/s
[info] # Warmup Iteration   2: 47027.624 ops/s
[info] # Warmup Iteration   3: 55091.098 ops/s
[info] Iteration   1: 56462.667 ops/s
[info]                  ·gc.alloc.rate:                   3769.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              105061.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3611.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100666.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.203 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.409 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 59828.725 ops/s
[info]                  ·gc.alloc.rate:                   3883.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              102144.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4000.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105236.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.928 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 60498.018 ops/s
[info]                  ·gc.alloc.rate:                   3973.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              103355.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3708.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96456.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.166 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 59931.246 ops/s
[info]                  ·gc.alloc.rate:                   3905.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              102561.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3728.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97930.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.547 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 60557.584 ops/s
[info]                  ·gc.alloc.rate:                   3992.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              103754.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4078.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105991.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.541 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   59455.648 ±(99.9%) 6564.223 ops/s [Average]
[info]   (min, avg, max) = (56462.667, 59455.648, 60557.584), stdev = 1704.708
[info]   CI (99.9%): [52891.425, 66019.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3904.637 ±(99.9%) 339.829 MB/sec [Average]
[info]   (min, avg, max) = (3769.314, 3904.637, 3992.215), stdev = 88.253
[info]   CI (99.9%): [3564.808, 4244.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   103375.728 ±(99.9%) 4375.922 B/op [Average]
[info]   (min, avg, max) = (102144.570, 103375.728, 105061.936), stdev = 1136.413
[info]   CI (99.9%): [98999.807, 107751.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3825.500 ±(99.9%) 778.302 MB/sec [Average]
[info]   (min, avg, max) = (3611.629, 3825.500, 4078.274), stdev = 202.123
[info]   CI (99.9%): [3047.198, 4603.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   101256.163 ±(99.9%) 16417.701 B/op [Average]
[info]   (min, avg, max) = (96456.237, 101256.163, 105991.617), stdev = 4263.625
[info]   CI (99.9%): [84838.462, 117673.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.503 ±(99.9%) 3.669 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.503, 2.203), stdev = 0.953
[info]   CI (99.9%): [≈ 0, 4.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   13.918 ±(99.9%) 102.460 B/op [Average]
[info]   (min, avg, max) = (0.541, 13.918, 61.409), stdev = 26.608
[info]   CI (99.9%): [≈ 0, 116.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   57.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.400, 12.000), stdev = 0.548
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 15.800, 18.000), stdev = 1.483
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:42:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1686.347 ops/s
[info] # Warmup Iteration   2: 19340.458 ops/s
[info] # Warmup Iteration   3: 24639.829 ops/s
[info] Iteration   1: 37544.899 ops/s
[info]                  ·gc.alloc.rate:                   1686.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              70700.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1505.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63108.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 446.854 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 37768.265 ops/s
[info]                  ·gc.alloc.rate:                   1832.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              76338.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1817.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75697.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.867 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 36581.881 ops/s
[info]                  ·gc.alloc.rate:                   2036.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              87617.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2176.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93631.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      10.539 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 453.311 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 35317.281 ops/s
[info]                  ·gc.alloc.rate:                   1848.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              82387.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1891.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84306.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      9.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 441.782 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 38431.889 ops/s
[info]                  ·gc.alloc.rate:                   1643.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              67317.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1586.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64980.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.410 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   37128.843 ±(99.9%) 4661.035 ops/s [Average]
[info]   (min, avg, max) = (35317.281, 37128.843, 38431.889), stdev = 1210.456
[info]   CI (99.9%): [32467.808, 41789.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1809.767 ±(99.9%) 597.658 MB/sec [Average]
[info]   (min, avg, max) = (1643.890, 1809.767, 2036.998), stdev = 155.210
[info]   CI (99.9%): [1212.109, 2407.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   76872.420 ±(99.9%) 31959.408 B/op [Average]
[info]   (min, avg, max) = (67317.766, 76872.420, 87617.723), stdev = 8299.757
[info]   CI (99.9%): [44913.012, 108831.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1795.624 ±(99.9%) 1023.892 MB/sec [Average]
[info]   (min, avg, max) = (1505.486, 1795.624, 2176.812), stdev = 265.901
[info]   CI (99.9%): [771.732, 2819.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   76344.769 ±(99.9%) 49723.909 B/op [Average]
[info]   (min, avg, max) = (63108.353, 76344.769, 93631.557), stdev = 12913.141
[info]   CI (99.9%): [26620.860, 126068.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   6.243 ±(99.9%) 21.791 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 6.243, 10.660), stdev = 5.659
[info]   CI (99.9%): [≈ 0, 28.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   269.245 ±(99.9%) 939.054 B/op [Average]
[info]   (min, avg, max) = (0.867, 269.245, 453.311), stdev = 243.869
[info]   CI (99.9%): [≈ 0, 1208.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 15.800, 20.000), stdev = 4.919
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:42:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2593.810 ops/s
[info] # Warmup Iteration   2: 29767.139 ops/s
[info] # Warmup Iteration   3: 41855.769 ops/s
[info] Iteration   1: 39197.943 ops/s
[info]                  ·gc.alloc.rate:                   1538.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              61778.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65235.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.672 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 36506.106 ops/s
[info]                  ·gc.alloc.rate:                   1376.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              59350.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55827.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.273 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 227.321 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 38082.610 ops/s
[info]                  ·gc.alloc.rate:                   1191.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              49223.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53379.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.667 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 151.536 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 39638.867 ops/s
[info]                  ·gc.alloc.rate:                   1245.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              49411.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51202.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.653 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 39137.186 ops/s
[info]                  ·gc.alloc.rate:                        1218.943 MB/sec
[info]                  ·gc.alloc.rate.norm:                   49013.836 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.015 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.622 B/op
[info]                  ·gc.churn.Metaspace:                   0.043 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              1.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1037.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          41715.824 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.694 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             108.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      15.906 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              44.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   38512.542 ±(99.9%) 4847.527 ops/s [Average]
[info]   (min, avg, max) = (36506.106, 38512.542, 39638.867), stdev = 1258.887
[info]   CI (99.9%): [33665.015, 43360.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1314.095 ±(99.9%) 555.668 MB/sec [Average]
[info]   (min, avg, max) = (1191.125, 1314.095, 1538.681), stdev = 144.305
[info]   CI (99.9%): [758.427, 1869.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   53755.458 ±(99.9%) 24167.681 B/op [Average]
[info]   (min, avg, max) = (49013.836, 53755.458, 61778.314), stdev = 6276.270
[info]   CI (99.9%): [29587.777, 77923.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.027 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.124 ±(99.9%) 1.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.124, 0.622), stdev = 0.278
[info]   CI (99.9%): [≈ 0, 1.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.009 ±(99.9%) 0.074 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.043), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.346 ±(99.9%) 2.979 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.346, 1.730), stdev = 0.774
[info]   CI (99.9%): [≈ 0, 3.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1307.818 ±(99.9%) 803.806 MB/sec [Average]
[info]   (min, avg, max) = (1037.446, 1307.818, 1624.777), stdev = 208.746
[info]   CI (99.9%): [504.012, 2111.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   53472.276 ±(99.9%) 32633.154 B/op [Average]
[info]   (min, avg, max) = (41715.824, 53472.276, 65235.100), stdev = 8474.726
[info]   CI (99.9%): [20839.122, 86105.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.539 ±(99.9%) 4.640 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.539, 2.694), stdev = 1.205
[info]   CI (99.9%): [≈ 0, 5.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   21.667 ±(99.9%) 186.563 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.667, 108.337), stdev = 48.450
[info]   CI (99.9%): [≈ 0, 208.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.884 ±(99.9%) 9.366 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.884, 5.273), stdev = 2.432
[info]   CI (99.9%): [≈ 0, 11.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   79.617 ±(99.9%) 400.179 B/op [Average]
[info]   (min, avg, max) = (1.653, 79.617, 227.321), stdev = 103.925
[info]   CI (99.9%): [≈ 0, 479.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   95.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 19.000, 44.000), stdev = 15.890
[info]   CI (99.9%): [95.000, 95.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:42:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 305604.795 ops/s
[info] # Warmup Iteration   2: 594648.878 ops/s
[info] # Warmup Iteration   3: 645124.945 ops/s
[info] Iteration   1: 664619.044 ops/s
[info]                  ·gc.alloc.rate:                   1769.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              4189.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3885.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.539 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 665461.407 ops/s
[info]                  ·gc.alloc.rate:                   1785.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              4219.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1958.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4626.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 646690.625 ops/s
[info]                  ·gc.alloc.rate:                   1728.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              4206.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3988.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 647806.277 ops/s
[info]                  ·gc.alloc.rate:                   1751.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              4255.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4016.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 667369.226 ops/s
[info]                  ·gc.alloc.rate:                   1803.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              4252.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3926.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   658389.316 ±(99.9%) 39378.498 ops/s [Average]
[info]   (min, avg, max) = (646690.625, 658389.316, 667369.226), stdev = 10226.471
[info]   CI (99.9%): [619010.817, 697767.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1767.642 ±(99.9%) 112.294 MB/sec [Average]
[info]   (min, avg, max) = (1728.416, 1767.642, 1803.397), stdev = 29.162
[info]   CI (99.9%): [1655.348, 1879.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4224.615 ±(99.9%) 110.958 B/op [Average]
[info]   (min, avg, max) = (4189.359, 4224.615, 4255.581), stdev = 28.816
[info]   CI (99.9%): [4113.657, 4335.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1711.265 ±(99.9%) 532.831 MB/sec [Average]
[info]   (min, avg, max) = (1639.049, 1711.265, 1958.064), stdev = 138.374
[info]   CI (99.9%): [1178.435, 2244.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4088.834 ±(99.9%) 1174.921 B/op [Average]
[info]   (min, avg, max) = (3885.274, 4088.834, 4626.862), stdev = 305.123
[info]   CI (99.9%): [2913.913, 5263.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.831 ±(99.9%) 6.883 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.831, 4.028), stdev = 1.788
[info]   CI (99.9%): [≈ 0, 7.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.967 ±(99.9%) 16.299 B/op [Average]
[info]   (min, avg, max) = (0.049, 1.967, 9.539), stdev = 4.233
[info]   CI (99.9%): [≈ 0, 18.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 11.000), stdev = 1.924
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:42:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 765.561 ops/s
[info] # Warmup Iteration   2: 15107.070 ops/s
[info] # Warmup Iteration   3: 28305.528 ops/s
[info] Iteration   1: 37092.772 ops/s
[info]                  ·gc.alloc.rate:                   2180.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              92527.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1919.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81429.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.548 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 34991.481 ops/s
[info]                  ·gc.alloc.rate:                   2243.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              100899.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2251.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101229.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.363 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 33691.308 ops/s
[info]                  ·gc.alloc.rate:                   2421.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              113102.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2281.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106593.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.587 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307.685 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 33691.954 ops/s
[info]                  ·gc.alloc.rate:                   2104.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              98304.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107368.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 144.374 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 35572.138 ops/s
[info]                  ·gc.alloc.rate:                   2082.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              92080.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87801.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.526 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   35007.930 ±(99.9%) 5489.854 ops/s [Average]
[info]   (min, avg, max) = (33691.308, 35007.930, 37092.772), stdev = 1425.698
[info]   CI (99.9%): [29518.076, 40497.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2206.497 ±(99.9%) 523.903 MB/sec [Average]
[info]   (min, avg, max) = (2082.160, 2206.497, 2421.201), stdev = 136.056
[info]   CI (99.9%): [1682.594, 2730.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   99382.983 ±(99.9%) 32899.415 B/op [Average]
[info]   (min, avg, max) = (92080.909, 99382.983, 113102.056), stdev = 8543.874
[info]   CI (99.9%): [66483.568, 132282.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2147.236 ±(99.9%) 694.204 MB/sec [Average]
[info]   (min, avg, max) = (1919.204, 2147.236, 2298.440), stdev = 180.283
[info]   CI (99.9%): [1453.032, 2841.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   96884.499 ±(99.9%) 44923.759 B/op [Average]
[info]   (min, avg, max) = (81429.350, 96884.499, 107368.731), stdev = 11666.557
[info]   CI (99.9%): [51960.740, 141808.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.429 ±(99.9%) 10.197 MB/sec [Average]
[info]   (min, avg, max) = (0.125, 2.429, 6.587), stdev = 2.648
[info]   CI (99.9%): [≈ 0, 12.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   111.499 ±(99.9%) 478.126 B/op [Average]
[info]   (min, avg, max) = (5.526, 111.499, 307.685), stdev = 124.168
[info]   CI (99.9%): [≈ 0, 589.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.000, 17.000), stdev = 2.915
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:41:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15590.431 ops/s
[info] # Warmup Iteration   2: 80728.383 ops/s
[info] # Warmup Iteration   3: 81329.178 ops/s
[info] Iteration   1: 94525.521 ops/s
[info]                  ·gc.alloc.rate:                   2099.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              34950.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1920.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31977.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.761 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.962 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 91300.749 ops/s
[info]                  ·gc.alloc.rate:                        2025.348 MB/sec
[info]                  ·gc.alloc.rate.norm:                   34911.100 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.019 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.332 B/op
[info]                  ·gc.churn.Metaspace:                   0.054 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2130.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          36722.100 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  7.907 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             136.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      68.963 B/op
[info]                  ·gc.count:                             8.000 counts
[info]                  ·gc.time:                              50.000 ms
[info] Iteration   3: 97718.749 ops/s
[info]                  ·gc.alloc.rate:                   2167.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              34912.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1928.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31061.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.006 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 95840.415 ops/s
[info]                  ·gc.alloc.rate:                   2153.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              35360.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37494.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.026 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 98227.099 ops/s
[info]                  ·gc.alloc.rate:                   2211.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              35432.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31797.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.334 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   95522.506 ±(99.9%) 10729.519 ops/s [Average]
[info]   (min, avg, max) = (91300.749, 95522.506, 98227.099), stdev = 2786.422
[info]   CI (99.9%): [84792.988, 106252.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2131.462 ±(99.9%) 275.987 MB/sec [Average]
[info]   (min, avg, max) = (2025.348, 2131.462, 2211.830), stdev = 71.673
[info]   CI (99.9%): [1855.475, 2407.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   35113.364 ±(99.9%) 1002.014 B/op [Average]
[info]   (min, avg, max) = (34911.100, 35113.364, 35432.932), stdev = 260.220
[info]   CI (99.9%): [34111.350, 36115.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.033 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.019), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.Compressed_Class_Space.norm":
[info]   0.066 ±(99.9%) 0.571 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.332), stdev = 0.148
[info]   CI (99.9%): [≈ 0, 0.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.Metaspace":
[info]   0.011 ±(99.9%) 0.094 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.054), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.Metaspace.norm":
[info]   0.188 ±(99.9%) 1.617 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.188, 0.939), stdev = 0.420
[info]   CI (99.9%): [≈ 0, 1.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2049.547 ±(99.9%) 598.380 MB/sec [Average]
[info]   (min, avg, max) = (1920.611, 2049.547, 2283.250), stdev = 155.397
[info]   CI (99.9%): [1451.167, 2647.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   33810.543 ±(99.9%) 11715.083 B/op [Average]
[info]   (min, avg, max) = (31061.368, 33810.543, 37494.854), stdev = 3042.370
[info]   CI (99.9%): [22095.461, 45525.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Old_Gen":
[info]   1.581 ±(99.9%) 13.617 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.581, 7.907), stdev = 3.536
[info]   CI (99.9%): [≈ 0, 15.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Old_Gen.norm":
[info]   27.259 ±(99.9%) 234.710 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 27.259, 136.296), stdev = 60.953
[info]   CI (99.9%): [≈ 0, 261.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.394 ±(99.9%) 7.185 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 1.394, 4.001), stdev = 1.866
[info]   CI (99.9%): [≈ 0, 8.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   23.658 ±(99.9%) 122.885 B/op [Average]
[info]   (min, avg, max) = (1.006, 23.658, 68.963), stdev = 31.913
[info]   CI (99.9%): [≈ 0, 146.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 8.000), stdev = 0.894
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 19.200, 50.000), stdev = 17.908
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:41:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43674.510 ops/s
[info] # Warmup Iteration   2: 215019.394 ops/s
[info] # Warmup Iteration   3: 218042.301 ops/s
[info] Iteration   1: 236458.328 ops/s
[info]                  ·gc.alloc.rate:                   1635.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              10881.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10857.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.429 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 230975.448 ops/s
[info]                  ·gc.alloc.rate:                   1599.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              10896.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11039.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.993 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 242623.517 ops/s
[info]                  ·gc.alloc.rate:                   1664.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              10795.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10526.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 240329.667 ops/s
[info]                  ·gc.alloc.rate:                   1633.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              10696.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8561.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 233861.486 ops/s
[info]                  ·gc.alloc.rate:                        1595.350 MB/sec
[info]                  ·gc.alloc.rate.norm:                   10736.210 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.015 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.099 B/op
[info]                  ·gc.churn.Metaspace:                   0.041 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1648.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          11093.635 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  3.068 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             20.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      1.261 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              44.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   236849.689 ±(99.9%) 18167.183 ops/s [Average]
[info]   (min, avg, max) = (230975.448, 236849.689, 242623.517), stdev = 4717.960
[info]   CI (99.9%): [218682.507, 255016.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1625.583 ±(99.9%) 109.599 MB/sec [Average]
[info]   (min, avg, max) = (1595.350, 1625.583, 1664.212), stdev = 28.462
[info]   CI (99.9%): [1515.984, 1735.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10801.248 ±(99.9%) 337.728 B/op [Average]
[info]   (min, avg, max) = (10696.504, 10801.248, 10896.904), stdev = 87.707
[info]   CI (99.9%): [10463.520, 11138.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.020 ±(99.9%) 0.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.099), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.008 ±(99.9%) 0.071 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.055 ±(99.9%) 0.478 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.055, 0.277), stdev = 0.124
[info]   CI (99.9%): [≈ 0, 0.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1566.165 ±(99.9%) 558.462 MB/sec [Average]
[info]   (min, avg, max) = (1307.477, 1566.165, 1648.462), stdev = 145.031
[info]   CI (99.9%): [1007.704, 2124.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10415.646 ±(99.9%) 4081.522 B/op [Average]
[info]   (min, avg, max) = (8561.451, 10415.646, 11093.635), stdev = 1059.958
[info]   CI (99.9%): [6334.124, 14497.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.614 ±(99.9%) 5.284 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.614, 3.068), stdev = 1.372
[info]   CI (99.9%): [≈ 0, 5.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   4.130 ±(99.9%) 35.557 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.130, 20.648), stdev = 9.234
[info]   CI (99.9%): [≈ 0, 39.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.990 ±(99.9%) 7.719 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.990, 4.573), stdev = 2.005
[info]   CI (99.9%): [≈ 0, 8.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.591 ±(99.9%) 51.350 B/op [Average]
[info]   (min, avg, max) = (0.135, 6.591, 30.429), stdev = 13.335
[info]   CI (99.9%): [≈ 0, 57.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   80.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 16.000, 44.000), stdev = 16.355
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:41:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 466525.466 ops/s
[info] # Warmup Iteration   2: 930979.034 ops/s
[info] # Warmup Iteration   3: 1070715.234 ops/s
[info] Iteration   1: 1042206.832 ops/s
[info]                  ·gc.alloc.rate:                   897.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              1354.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1490.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1087286.680 ops/s
[info]                  ·gc.alloc.rate:                   933.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              1351.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1430.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1036966.581 ops/s
[info]                  ·gc.alloc.rate:                   898.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              1362.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1000.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.582 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1049897.157 ops/s
[info]                  ·gc.alloc.rate:                   897.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              1345.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1478.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.716 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1051995.758 ops/s
[info]                  ·gc.alloc.rate:                   899.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1467.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1053670.602 ±(99.9%) 75983.826 ops/s [Average]
[info]   (min, avg, max) = (1036966.581, 1053670.602, 1087286.680), stdev = 19732.758
[info]   CI (99.9%): [977686.775, 1129654.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   905.079 ±(99.9%) 61.600 MB/sec [Average]
[info]   (min, avg, max) = (897.067, 905.079, 933.666), stdev = 15.997
[info]   CI (99.9%): [843.480, 966.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1351.680 ±(99.9%) 28.817 B/op [Average]
[info]   (min, avg, max) = (1344.806, 1351.680, 1362.954), stdev = 7.484
[info]   CI (99.9%): [1322.863, 1380.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.752 ±(99.9%) 562.274 MB/sec [Average]
[info]   (min, avg, max) = (659.589, 920.752, 988.582), stdev = 146.021
[info]   CI (99.9%): [358.478, 1483.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1373.851 ±(99.9%) 807.198 B/op [Average]
[info]   (min, avg, max) = (1000.984, 1373.851, 1490.378), stdev = 209.627
[info]   CI (99.9%): [566.654, 2181.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.860 ±(99.9%) 4.996 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.860, 3.019), stdev = 1.298
[info]   CI (99.9%): [≈ 0, 5.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.300 ±(99.9%) 7.581 B/op [Average]
[info]   (min, avg, max) = (0.060, 1.300, 4.582), stdev = 1.969
[info]   CI (99.9%): [≈ 0, 8.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 3.808
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:41:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 714383.809 ops/s
[info] # Warmup Iteration   2: 1142890.851 ops/s
[info] # Warmup Iteration   3: 1179663.569 ops/s
[info] Iteration   1: 1179737.677 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1167730.155 ops/s
[info]                  ·gc.alloc.rate:      18.727 MB/sec
[info]                  ·gc.alloc.rate.norm: 25.233 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1183085.290 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1183110.474 ops/s
[info]                  ·gc.alloc.rate:      0.073 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.097 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1182712.961 ops/s
[info]                  ·gc.alloc.rate:      0.064 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.086 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1179275.312 ±(99.9%) 25436.576 ops/s [Average]
[info]   (min, avg, max) = (1167730.155, 1179275.312, 1183110.474), stdev = 6605.798
[info]   CI (99.9%): [1153838.735, 1204711.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   3.773 ±(99.9%) 32.190 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 3.773, 18.727), stdev = 8.360
[info]   CI (99.9%): [≈ 0, 35.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   5.083 ±(99.9%) 43.374 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 5.083, 25.233), stdev = 11.264
[info]   CI (99.9%): [≈ 0, 48.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:41:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23679.320 ops/s
[info] # Warmup Iteration   2: 144097.063 ops/s
[info] # Warmup Iteration   3: 205525.408 ops/s
[info] Iteration   1: 224679.843 ops/s
[info]                  ·gc.alloc.rate:                   2383.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              16696.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2288.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16033.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.775 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 224512.554 ops/s
[info]                  ·gc.alloc.rate:                   2373.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              16637.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16080.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.584 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 229881.070 ops/s
[info]                  ·gc.alloc.rate:                   2454.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              16800.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2648.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18128.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 231193.112 ops/s
[info]                  ·gc.alloc.rate:                   2456.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              16721.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2343.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15951.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 233302.852 ops/s
[info]                  ·gc.alloc.rate:                   2456.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              16572.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15917.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   228713.886 ±(99.9%) 15220.055 ops/s [Average]
[info]   (min, avg, max) = (224512.554, 228713.886, 233302.852), stdev = 3952.600
[info]   CI (99.9%): [213493.831, 243933.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2425.003 ±(99.9%) 163.752 MB/sec [Average]
[info]   (min, avg, max) = (2373.676, 2425.003, 2456.826), stdev = 42.526
[info]   CI (99.9%): [2261.250, 2588.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   16685.857 ±(99.9%) 331.854 B/op [Average]
[info]   (min, avg, max) = (16572.878, 16685.857, 16800.799), stdev = 86.181
[info]   CI (99.9%): [16354.003, 17017.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2386.940 ±(99.9%) 575.480 MB/sec [Average]
[info]   (min, avg, max) = (2288.903, 2386.940, 2648.638), stdev = 149.450
[info]   CI (99.9%): [1811.459, 2962.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   16422.445 ±(99.9%) 3681.485 B/op [Average]
[info]   (min, avg, max) = (15917.406, 16422.445, 18128.791), stdev = 956.070
[info]   CI (99.9%): [12740.961, 20103.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.602 ±(99.9%) 4.781 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.602, 2.823), stdev = 1.242
[info]   CI (99.9%): [≈ 0, 5.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.213 ±(99.9%) 33.503 B/op [Average]
[info]   (min, avg, max) = (0.140, 4.213, 19.775), stdev = 8.701
[info]   CI (99.9%): [≈ 0, 37.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 15.000), stdev = 1.924
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:40:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2538.683 ops/s
[info] # Warmup Iteration   2: 39896.067 ops/s
[info] # Warmup Iteration   3: 57796.236 ops/s
[info] Iteration   1: 54077.906 ops/s
[info]                  ·gc.alloc.rate:                   2044.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              59465.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1930.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56142.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.400 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 49646.984 ops/s
[info]                  ·gc.alloc.rate:                   1399.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              44366.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1287.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40821.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 252.964 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 50665.743 ops/s
[info]                  ·gc.alloc.rate:                   1391.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              43218.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1276.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39648.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.293 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 52299.867 ops/s
[info]                  ·gc.alloc.rate:                   1423.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              42831.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1280.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38529.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.759 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 51047.894 ops/s
[info]                  ·gc.alloc.rate:               1392.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          42928.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1616.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49825.588 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   51547.679 ±(99.9%) 6559.692 ops/s [Average]
[info]   (min, avg, max) = (49646.984, 51547.679, 54077.906), stdev = 1703.531
[info]   CI (99.9%): [44987.986, 58107.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1530.288 ±(99.9%) 1107.531 MB/sec [Average]
[info]   (min, avg, max) = (1391.284, 1530.288, 2044.272), stdev = 287.622
[info]   CI (99.9%): [422.757, 2637.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   46562.077 ±(99.9%) 27875.541 B/op [Average]
[info]   (min, avg, max) = (42831.299, 46562.077, 59465.632), stdev = 7239.190
[info]   CI (99.9%): [18686.535, 74437.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1478.229 ±(99.9%) 1121.235 MB/sec [Average]
[info]   (min, avg, max) = (1276.348, 1478.229, 1930.022), stdev = 291.181
[info]   CI (99.9%): [356.995, 2599.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   44993.423 ±(99.9%) 29539.869 B/op [Average]
[info]   (min, avg, max) = (38529.510, 44993.423, 56142.212), stdev = 7671.410
[info]   CI (99.9%): [15453.554, 74533.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2.244 ±(99.9%) 13.336 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.244, 7.981), stdev = 3.463
[info]   CI (99.9%): [≈ 0, 15.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   69.483 ±(99.9%) 421.199 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 69.483, 252.964), stdev = 109.384
[info]   CI (99.9%): [≈ 0, 490.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.600, 27.000), stdev = 8.961
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:40:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 303710.080 ops/s
[info] # Warmup Iteration   2: 734872.648 ops/s
[info] # Warmup Iteration   3: 755345.352 ops/s
[info] Iteration   1: 777197.698 ops/s
[info]                  ·gc.alloc.rate:                   1612.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              3264.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3341.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.281 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 792715.925 ops/s
[info]                  ·gc.alloc.rate:                   1609.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              3194.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2608.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.488 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 785770.806 ops/s
[info]                  ·gc.alloc.rate:                   1578.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              3160.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3284.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 804847.063 ops/s
[info]                  ·gc.alloc.rate:                   1605.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              3138.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3226.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 805807.975 ops/s
[info]                  ·gc.alloc.rate:                   1619.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              3162.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3243.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   793267.893 ±(99.9%) 47399.416 ops/s [Average]
[info]   (min, avg, max) = (777197.698, 793267.893, 805807.975), stdev = 12309.478
[info]   CI (99.9%): [745868.477, 840667.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1604.724 ±(99.9%) 60.433 MB/sec [Average]
[info]   (min, avg, max) = (1578.231, 1604.724, 1619.252), stdev = 15.694
[info]   CI (99.9%): [1544.292, 1665.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3184.153 ±(99.9%) 188.996 B/op [Average]
[info]   (min, avg, max) = (3138.709, 3184.153, 3264.452), stdev = 49.082
[info]   CI (99.9%): [2995.157, 3373.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1582.989 ±(99.9%) 580.301 MB/sec [Average]
[info]   (min, avg, max) = (1313.714, 1582.989, 1660.766), stdev = 150.702
[info]   CI (99.9%): [1002.687, 2163.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3140.983 ±(99.9%) 1159.570 B/op [Average]
[info]   (min, avg, max) = (2608.132, 3140.983, 3341.403), stdev = 301.137
[info]   CI (99.9%): [1981.413, 4300.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 5.103 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.795, 3.102), stdev = 1.325
[info]   CI (99.9%): [≈ 0, 5.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.603 ±(99.9%) 10.339 B/op [Average]
[info]   (min, avg, max) = (0.081, 1.603, 6.281), stdev = 2.685
[info]   CI (99.9%): [≈ 0, 11.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 15.000), stdev = 3.834
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:40:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1440.260 ops/s
[info] # Warmup Iteration   2: 23143.008 ops/s
[info] # Warmup Iteration   3: 42533.014 ops/s
[info] Iteration   1: 37726.821 ops/s
[info]                  ·gc.alloc.rate:                   2607.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              108791.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2579.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107628.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.263 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         33.000 ms
[info] Iteration   2: 46443.388 ops/s
[info]                  ·gc.alloc.rate:                   2864.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              97055.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2921.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98984.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.670 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 192.137 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 46419.470 ops/s
[info]                  ·gc.alloc.rate:                   2653.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              89966.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2603.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88264.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.850 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 164.444 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 45867.085 ops/s
[info]                  ·gc.alloc.rate:                   2499.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              85771.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78708.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.857 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 43976.993 ops/s
[info]                  ·gc.alloc.rate:                   2407.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              86174.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2652.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94934.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.960 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   44086.751 ±(99.9%) 14229.895 ops/s [Average]
[info]   (min, avg, max) = (37726.821, 44086.751, 46443.388), stdev = 3695.459
[info]   CI (99.9%): [29856.856, 58316.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2606.620 ±(99.9%) 665.439 MB/sec [Average]
[info]   (min, avg, max) = (2407.974, 2606.620, 2864.212), stdev = 172.812
[info]   CI (99.9%): [1941.181, 3272.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   93551.934 ±(99.9%) 37150.146 B/op [Average]
[info]   (min, avg, max) = (85771.781, 93551.934, 108791.235), stdev = 9647.775
[info]   CI (99.9%): [56401.788, 130702.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2610.176 ±(99.9%) 860.084 MB/sec [Average]
[info]   (min, avg, max) = (2293.807, 2610.176, 2921.133), stdev = 223.361
[info]   CI (99.9%): [1750.092, 3470.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   93704.030 ±(99.9%) 42081.517 B/op [Average]
[info]   (min, avg, max) = (78708.915, 93704.030, 107628.199), stdev = 10928.436
[info]   CI (99.9%): [51622.513, 135785.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.304 ±(99.9%) 10.498 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 2.304, 5.670), stdev = 2.726
[info]   CI (99.9%): [≈ 0, 12.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   79.332 ±(99.9%) 352.452 B/op [Average]
[info]   (min, avg, max) = (2.857, 79.332, 192.137), stdev = 91.531
[info]   CI (99.9%): [≈ 0, 431.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 0.707
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   96.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 19.200, 33.000), stdev = 9.445
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:40:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 134679.725 ops/s
[info] # Warmup Iteration   2: 350431.980 ops/s
[info] # Warmup Iteration   3: 372236.175 ops/s
[info] Iteration   1: 401437.039 ops/s
[info]                  ·gc.alloc.rate:               1055.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          4137.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3839.158 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 400021.981 ops/s
[info]                  ·gc.alloc.rate:                   1046.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              4119.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3826.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 415135.003 ops/s
[info]                  ·gc.alloc.rate:                   1074.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              4073.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3683.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 415036.357 ops/s
[info]                  ·gc.alloc.rate:                   1072.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              4068.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3694.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 406870.538 ops/s
[info]                  ·gc.alloc.rate:                   1064.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              4118.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3789.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   407700.183 ±(99.9%) 27765.124 ops/s [Average]
[info]   (min, avg, max) = (400021.981, 407700.183, 415135.003), stdev = 7210.514
[info]   CI (99.9%): [379935.060, 435465.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1062.908 ±(99.9%) 45.197 MB/sec [Average]
[info]   (min, avg, max) = (1046.941, 1062.908, 1074.573), stdev = 11.737
[info]   CI (99.9%): [1017.712, 1108.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   4103.521 ±(99.9%) 118.199 B/op [Average]
[info]   (min, avg, max) = (4068.500, 4103.521, 4137.878), stdev = 30.696
[info]   CI (99.9%): [3985.322, 4221.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   975.475 ±(99.9%) 14.317 MB/sec [Average]
[info]   (min, avg, max) = (971.674, 975.475, 979.588), stdev = 3.718
[info]   CI (99.9%): [961.158, 989.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3766.620 ±(99.9%) 282.222 B/op [Average]
[info]   (min, avg, max) = (3683.534, 3766.620, 3839.158), stdev = 73.292
[info]   CI (99.9%): [3484.398, 4048.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.138 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.064, 0.082), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:39:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 938178.260 ops/s
[info] # Warmup Iteration   2: 1437347.083 ops/s
[info] # Warmup Iteration   3: 1619073.008 ops/s
[info] Iteration   1: 1586785.101 ops/s
[info]                  ·gc.alloc.rate:                   970.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              962.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     979.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1598911.538 ops/s
[info]                  ·gc.alloc.rate:               964.915 MB/sec
[info]                  ·gc.alloc.rate.norm:          949.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:      988.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 973.086 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 1586391.535 ops/s
[info]                  ·gc.alloc.rate:                   956.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              948.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     980.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.452 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1626454.547 ops/s
[info]                  ·gc.alloc.rate:                   1019.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              986.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     950.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.665 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1650179.725 ops/s
[info]                  ·gc.alloc.rate:               996.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          950.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 935.826 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1609744.489 ±(99.9%) 107267.930 ops/s [Average]
[info]   (min, avg, max) = (1586391.535, 1609744.489, 1650179.725), stdev = 27857.141
[info]   CI (99.9%): [1502476.559, 1717012.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   981.462 ±(99.9%) 99.666 MB/sec [Average]
[info]   (min, avg, max) = (956.365, 981.462, 1019.259), stdev = 25.883
[info]   CI (99.9%): [881.796, 1081.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   959.521 ±(99.9%) 61.493 B/op [Average]
[info]   (min, avg, max) = (948.842, 959.521, 986.306), stdev = 15.970
[info]   CI (99.9%): [898.028, 1021.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   985.509 ±(99.9%) 12.977 MB/sec [Average]
[info]   (min, avg, max) = (981.233, 985.509, 988.628), stdev = 3.370
[info]   CI (99.9%): [972.532, 998.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   963.795 ±(99.9%) 75.567 B/op [Average]
[info]   (min, avg, max) = (935.826, 963.795, 980.091), stdev = 19.624
[info]   CI (99.9%): [888.228, 1039.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.839 ±(99.9%) 5.793 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.839, 3.479), stdev = 1.504
[info]   CI (99.9%): [≈ 0, 6.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.829 ±(99.9%) 5.749 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.829, 3.452), stdev = 1.493
[info]   CI (99.9%): [≈ 0, 6.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.793
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:39:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 626542.714 ops/s
[info] # Warmup Iteration   2: 1508979.671 ops/s
[info] # Warmup Iteration   3: 1705616.650 ops/s
[info] Iteration   1: 1703842.319 ops/s
[info]                  ·gc.alloc.rate:      0.064 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.059 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1681315.738 ops/s
[info]                  ·gc.alloc.rate:      0.110 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.103 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1704875.629 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1704011.467 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1661316.442 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   1691072.319 ±(99.9%) 74607.877 ops/s [Average]
[info]   (min, avg, max) = (1661316.442, 1691072.319, 1704875.629), stdev = 19375.429
[info]   CI (99.9%): [1616464.442, 1765680.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.035 ±(99.9%) 0.194 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.035, 0.110), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.033 ±(99.9%) 0.181 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.033, 0.103), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:39:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41005.187 ops/s
[info] # Warmup Iteration   2: 323634.069 ops/s
[info] # Warmup Iteration   3: 322670.023 ops/s
[info] Iteration   1: 359621.660 ops/s
[info]                  ·gc.alloc.rate:                   2268.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              9929.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10081.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.256 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 363131.010 ops/s
[info]                  ·gc.alloc.rate:                   2277.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              9870.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8602.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 360251.096 ops/s
[info]                  ·gc.alloc.rate:                   2278.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              9953.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2333.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10196.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 366471.657 ops/s
[info]                  ·gc.alloc.rate:                   2318.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              9957.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10099.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.358 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 363678.367 ops/s
[info]                  ·gc.alloc.rate:                   2314.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              10018.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8766.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   362630.758 ±(99.9%) 10688.174 ops/s [Average]
[info]   (min, avg, max) = (359621.660, 362630.758, 366471.657), stdev = 2775.685
[info]   CI (99.9%): [351942.584, 373318.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2291.744 ±(99.9%) 89.797 MB/sec [Average]
[info]   (min, avg, max) = (2268.908, 2291.744, 2318.862), stdev = 23.320
[info]   CI (99.9%): [2201.947, 2381.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9945.868 ±(99.9%) 204.816 B/op [Average]
[info]   (min, avg, max) = (9870.710, 9945.868, 10018.015), stdev = 53.190
[info]   CI (99.9%): [9741.051, 10150.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2200.018 ±(99.9%) 689.893 MB/sec [Average]
[info]   (min, avg, max) = (1984.782, 2200.018, 2351.881), stdev = 179.163
[info]   CI (99.9%): [1510.125, 2889.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9549.116 ±(99.9%) 3052.269 B/op [Average]
[info]   (min, avg, max) = (8602.103, 9549.116, 10196.328), stdev = 792.665
[info]   CI (99.9%): [6496.846, 12601.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.369 ±(99.9%) 2.776 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.369, 1.658), stdev = 0.721
[info]   CI (99.9%): [≈ 0, 3.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.613 ±(99.9%) 12.155 B/op [Average]
[info]   (min, avg, max) = (0.090, 1.613, 7.256), stdev = 3.157
[info]   CI (99.9%): [≈ 0, 13.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 11.000), stdev = 0.837
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:39:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11696.298 ops/s
[info] # Warmup Iteration   2: 36839.167 ops/s
[info] # Warmup Iteration   3: 72938.766 ops/s
[info] Iteration   1: 77901.915 ops/s
[info]                  ·gc.alloc.rate:                   1993.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              40243.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2249.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45414.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.930 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 160.078 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 85469.512 ops/s
[info]                  ·gc.alloc.rate:                   1906.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              35109.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1601.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29489.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 140.111 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 86495.287 ops/s
[info]                  ·gc.alloc.rate:                   1767.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              32165.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1921.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34956.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.758 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 87276.526 ops/s
[info]                  ·gc.alloc.rate:                   1771.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              31934.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1617.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29161.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.502 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 88899.940 ops/s
[info]                  ·gc.alloc.rate:                   1788.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              31669.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28970.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.106 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   85208.636 ±(99.9%) 16451.490 ops/s [Average]
[info]   (min, avg, max) = (77901.915, 85208.636, 88899.940), stdev = 4272.400
[info]   CI (99.9%): [68757.146, 101660.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1845.711 ±(99.9%) 387.169 MB/sec [Average]
[info]   (min, avg, max) = (1767.734, 1845.711, 1993.700), stdev = 100.547
[info]   CI (99.9%): [1458.542, 2232.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34224.785 ±(99.9%) 14019.371 B/op [Average]
[info]   (min, avg, max) = (31669.666, 34224.785, 40243.622), stdev = 3640.786
[info]   CI (99.9%): [20205.415, 48244.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1805.305 ±(99.9%) 1082.852 MB/sec [Average]
[info]   (min, avg, max) = (1601.496, 1805.305, 2249.868), stdev = 281.213
[info]   CI (99.9%): [722.453, 2888.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   33598.411 ±(99.9%) 27191.069 B/op [Average]
[info]   (min, avg, max) = (28970.195, 33598.411, 45414.473), stdev = 7061.434
[info]   CI (99.9%): [6407.343, 60789.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3.145 ±(99.9%) 16.261 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 3.145, 7.930), stdev = 4.223
[info]   CI (99.9%): [≈ 0, 19.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   60.711 ±(99.9%) 315.372 B/op [Average]
[info]   (min, avg, max) = (0.758, 60.711, 160.078), stdev = 81.901
[info]   CI (99.9%): [≈ 0, 376.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 12.800, 32.000), stdev = 10.826
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:39:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12633.073 ops/s
[info] # Warmup Iteration   2: 70276.249 ops/s
[info] # Warmup Iteration   3: 91592.267 ops/s
[info] Iteration   1: 91985.116 ops/s
[info]                  ·gc.alloc.rate:                   1186.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              20293.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16492.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.650 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.229 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 90907.246 ops/s
[info]                  ·gc.alloc.rate:                   1183.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              20488.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1289.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22327.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.484 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 95035.395 ops/s
[info]                  ·gc.alloc.rate:                   1237.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              20489.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21445.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.866 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.346 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 94746.300 ops/s
[info]                  ·gc.alloc.rate:                   1215.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              20189.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16167.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.934 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 94868.237 ops/s
[info]                  ·gc.alloc.rate:                   1227.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              20371.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21484.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.907 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   93508.459 ±(99.9%) 7406.778 ops/s [Average]
[info]   (min, avg, max) = (90907.246, 93508.459, 95035.395), stdev = 1923.517
[info]   CI (99.9%): [86101.681, 100915.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1210.035 ±(99.9%) 93.573 MB/sec [Average]
[info]   (min, avg, max) = (1183.574, 1210.035, 1237.187), stdev = 24.301
[info]   CI (99.9%): [1116.462, 1303.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20366.473 ±(99.9%) 497.409 B/op [Average]
[info]   (min, avg, max) = (20189.511, 20366.473, 20489.377), stdev = 129.176
[info]   CI (99.9%): [19869.063, 20863.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1163.390 ±(99.9%) 684.921 MB/sec [Average]
[info]   (min, avg, max) = (963.925, 1163.390, 1295.055), stdev = 177.872
[info]   CI (99.9%): [478.469, 1848.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   19583.466 ±(99.9%) 11525.396 B/op [Average]
[info]   (min, avg, max) = (16167.008, 19583.466, 22327.304), stdev = 2993.109
[info]   CI (99.9%): [8058.070, 31108.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.461 ±(99.9%) 4.210 MB/sec [Average]
[info]   (min, avg, max) = (0.416, 1.461, 3.247), stdev = 1.093
[info]   CI (99.9%): [≈ 0, 5.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24.580 ±(99.9%) 69.898 B/op [Average]
[info]   (min, avg, max) = (6.907, 24.580, 53.934), stdev = 18.152
[info]   CI (99.9%): [≈ 0, 94.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.200, 14.000), stdev = 3.194
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:38:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40819.190 ops/s
[info] # Warmup Iteration   2: 86596.851 ops/s
[info] # Warmup Iteration   3: 95639.291 ops/s
[info] Iteration   1: 97142.441 ops/s
[info]                  ·gc.alloc.rate:                   1210.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              19609.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1284.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20808.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.510 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.872 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 98383.683 ops/s
[info]                  ·gc.alloc.rate:                   1213.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              19399.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          959.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15345.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.988 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 97718.892 ops/s
[info]                  ·gc.alloc.rate:                   1211.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              19507.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1279.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20605.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.347 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 97900.793 ops/s
[info]                  ·gc.alloc.rate:                   1209.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              19438.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1286.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20668.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.669 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 98919.778 ops/s
[info]                  ·gc.alloc.rate:                   1214.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              19324.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15447.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   98013.118 ±(99.9%) 2594.985 ops/s [Average]
[info]   (min, avg, max) = (97142.441, 98013.118, 98919.778), stdev = 673.909
[info]   CI (99.9%): [95418.133, 100608.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1211.779 ±(99.9%) 7.974 MB/sec [Average]
[info]   (min, avg, max) = (1209.722, 1211.779, 1214.744), stdev = 2.071
[info]   CI (99.9%): [1203.805, 1219.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   19455.643 ±(99.9%) 417.284 B/op [Average]
[info]   (min, avg, max) = (19324.280, 19455.643, 19609.159), stdev = 108.367
[info]   CI (99.9%): [19038.359, 19872.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1156.094 ±(99.9%) 670.977 MB/sec [Average]
[info]   (min, avg, max) = (959.522, 1156.094, 1286.307), stdev = 174.251
[info]   CI (99.9%): [485.117, 1827.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   18575.002 ±(99.9%) 11177.329 B/op [Average]
[info]   (min, avg, max) = (15345.482, 18575.002, 20808.120), stdev = 2902.717
[info]   CI (99.9%): [7397.673, 29752.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.906 ±(99.9%) 5.744 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.906, 3.510), stdev = 1.492
[info]   CI (99.9%): [≈ 0, 6.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14.641 ±(99.9%) 93.081 B/op [Average]
[info]   (min, avg, max) = (0.331, 14.641, 56.872), stdev = 24.173
[info]   CI (99.9%): [≈ 0, 107.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 16.000), stdev = 4.970
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:38:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5098.951 ops/s
[info] # Warmup Iteration   2: 26147.382 ops/s
[info] # Warmup Iteration   3: 57976.847 ops/s
[info] Iteration   1: 54581.665 ops/s
[info]                  ·gc.alloc.rate:                   2476.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              71393.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2263.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65240.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.713 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.379 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 46084.783 ops/s
[info]                  ·gc.alloc.rate:                        1796.104 MB/sec
[info]                  ·gc.alloc.rate.norm:                   61337.013 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.017 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.580 B/op
[info]                  ·gc.churn.Metaspace:                   0.047 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              1.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1942.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          66350.451 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  0.250 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             8.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           1.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      68.098 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              120.000 ms
[info] Iteration   3: 52413.558 ops/s
[info]                  ·gc.alloc.rate:                   2041.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              61288.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59308.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.875 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 52709.647 ops/s
[info]                  ·gc.alloc.rate:                   2066.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              61714.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1994.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59553.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.865 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 52375.514 ops/s
[info]                  ·gc.alloc.rate:                   2068.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              62154.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60412.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.626 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   51633.033 ±(99.9%) 12447.337 ops/s [Average]
[info]   (min, avg, max) = (46084.783, 51633.033, 54581.665), stdev = 3232.534
[info]   CI (99.9%): [39185.697, 64080.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2089.864 ±(99.9%) 941.791 MB/sec [Average]
[info]   (min, avg, max) = (1796.104, 2089.864, 2476.679), stdev = 244.580
[info]   CI (99.9%): [1148.073, 3031.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63577.661 ±(99.9%) 16876.977 B/op [Average]
[info]   (min, avg, max) = (61288.950, 63577.661, 71393.263), stdev = 4382.897
[info]   CI (99.9%): [46700.684, 80454.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.029 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.116 ±(99.9%) 0.999 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.580), stdev = 0.259
[info]   CI (99.9%): [≈ 0, 1.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.Metaspace":
[info]   0.009 ±(99.9%) 0.082 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.047), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.Metaspace.norm":
[info]   0.324 ±(99.9%) 2.787 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.324, 1.618), stdev = 0.724
[info]   CI (99.9%): [≈ 0, 3.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2037.282 ±(99.9%) 495.969 MB/sec [Average]
[info]   (min, avg, max) = (1942.910, 2037.282, 2263.242), stdev = 128.802
[info]   CI (99.9%): [1541.313, 2533.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   62173.299 ±(99.9%) 12918.893 B/op [Average]
[info]   (min, avg, max) = (59308.824, 62173.299, 66350.451), stdev = 3354.996
[info]   CI (99.9%): [49254.405, 75092.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen":
[info]   0.050 ±(99.9%) 0.431 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.250), stdev = 0.112
[info]   CI (99.9%): [≈ 0, 0.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   1.709 ±(99.9%) 14.719 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.709, 8.547), stdev = 3.822
[info]   CI (99.9%): [≈ 0, 16.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.771 ±(99.9%) 3.827 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.771, 1.994), stdev = 0.994
[info]   CI (99.9%): [≈ 0, 4.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   24.369 ±(99.9%) 123.489 B/op [Average]
[info]   (min, avg, max) = (0.626, 24.369, 68.098), stdev = 32.070
[info]   CI (99.9%): [≈ 0, 147.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   163.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 32.600, 120.000), stdev = 48.993
[info]   CI (99.9%): [163.000, 163.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:38:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45238.489 ops/s
[info] # Warmup Iteration   2: 135203.891 ops/s
[info] # Warmup Iteration   3: 144233.870 ops/s
[info] Iteration   1: 155279.016 ops/s
[info]                  ·gc.alloc.rate:                   1461.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              14813.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13233.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.753 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 151871.013 ops/s
[info]                  ·gc.alloc.rate:                   1440.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              14922.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1618.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16768.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 156186.248 ops/s
[info]                  ·gc.alloc.rate:                   1459.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              14705.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13032.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 157159.847 ops/s
[info]                  ·gc.alloc.rate:                   1478.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              14805.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13015.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.417 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 156019.329 ops/s
[info]                  ·gc.alloc.rate:               1481.820 MB/sec
[info]                  ·gc.alloc.rate.norm:          14943.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16526.989 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   155303.091 ±(99.9%) 7825.491 ops/s [Average]
[info]   (min, avg, max) = (151871.013, 155303.091, 157159.847), stdev = 2032.255
[info]   CI (99.9%): [147477.600, 163128.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1464.249 ±(99.9%) 64.310 MB/sec [Average]
[info]   (min, avg, max) = (1440.294, 1464.249, 1481.820), stdev = 16.701
[info]   CI (99.9%): [1399.939, 1528.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   14837.920 ±(99.9%) 373.154 B/op [Average]
[info]   (min, avg, max) = (14705.003, 14837.920, 14943.404), stdev = 96.907
[info]   CI (99.9%): [14464.765, 15211.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1431.184 ±(99.9%) 694.993 MB/sec [Average]
[info]   (min, avg, max) = (1293.274, 1431.184, 1638.851), stdev = 180.488
[info]   CI (99.9%): [736.191, 2126.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14515.458 ±(99.9%) 7510.241 B/op [Average]
[info]   (min, avg, max) = (13015.471, 14515.458, 16768.766), stdev = 1950.386
[info]   CI (99.9%): [7005.217, 22025.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.187 ±(99.9%) 7.953 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.187, 4.810), stdev = 2.065
[info]   CI (99.9%): [≈ 0, 9.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   12.072 ±(99.9%) 80.595 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.072, 48.753), stdev = 20.930
[info]   CI (99.9%): [≈ 0, 92.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 16.000), stdev = 4.336
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:38:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96287.254 ops/s
[info] # Warmup Iteration   2: 329873.920 ops/s
[info] # Warmup Iteration   3: 363190.603 ops/s
[info] Iteration   1: 369106.843 ops/s
[info]                  ·gc.alloc.rate:               475.605 MB/sec
[info]                  ·gc.alloc.rate.norm:          2027.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:      318.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1357.759 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 368678.733 ops/s
[info]                  ·gc.alloc.rate:               538.691 MB/sec
[info]                  ·gc.alloc.rate.norm:          2299.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:      637.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2721.528 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 379526.513 ops/s
[info]                  ·gc.alloc.rate:                   478.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              1983.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1324.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 377983.306 ops/s
[info]                  ·gc.alloc.rate:               489.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          2038.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:      640.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2665.457 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 376286.264 ops/s
[info]                  ·gc.alloc.rate:               475.352 MB/sec
[info]                  ·gc.alloc.rate.norm:          1988.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1341.574 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   374316.332 ±(99.9%) 19577.278 ops/s [Average]
[info]   (min, avg, max) = (368678.733, 374316.332, 379526.513), stdev = 5084.157
[info]   CI (99.9%): [354739.054, 393893.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   491.531 ±(99.9%) 103.950 MB/sec [Average]
[info]   (min, avg, max) = (475.352, 491.531, 538.691), stdev = 26.996
[info]   CI (99.9%): [387.581, 595.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2067.632 ±(99.9%) 507.266 B/op [Average]
[info]   (min, avg, max) = (1983.988, 2067.632, 2299.374), stdev = 131.735
[info]   CI (99.9%): [1560.367, 2574.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   447.263 ±(99.9%) 673.541 MB/sec [Average]
[info]   (min, avg, max) = (318.422, 447.263, 640.148), stdev = 174.916
[info]   CI (99.9%): [≈ 0, 1120.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1882.181 ±(99.9%) 2853.253 B/op [Average]
[info]   (min, avg, max) = (1324.587, 1882.181, 2721.528), stdev = 740.981
[info]   CI (99.9%): [≈ 0, 4735.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.086), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:38:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 498312.041 ops/s
[info] # Warmup Iteration   2: 1026530.299 ops/s
[info] # Warmup Iteration   3: 1031403.847 ops/s
[info] Iteration   1: 1001908.937 ops/s
[info]                  ·gc.alloc.rate:                   1286.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              2020.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2052.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1020052.295 ops/s
[info]                  ·gc.alloc.rate:                   1303.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              2010.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2024.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.510 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1046223.031 ops/s
[info]                  ·gc.alloc.rate:                   1343.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              2020.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1982.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1019091.278 ops/s
[info]                  ·gc.alloc.rate:                   1315.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              2030.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2043.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1013949.463 ops/s
[info]                  ·gc.alloc.rate:                   1306.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              2026.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2065.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   1020245.001 ±(99.9%) 62449.066 ops/s [Average]
[info]   (min, avg, max) = (1001908.937, 1020245.001, 1046223.031), stdev = 16217.824
[info]   CI (99.9%): [957795.934, 1082694.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1310.704 ±(99.9%) 80.787 MB/sec [Average]
[info]   (min, avg, max) = (1286.005, 1310.704, 1343.161), stdev = 20.980
[info]   CI (99.9%): [1229.918, 1391.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2021.634 ±(99.9%) 28.516 B/op [Average]
[info]   (min, avg, max) = (2010.745, 2021.634, 2030.138), stdev = 7.405
[info]   CI (99.9%): [1993.118, 2050.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1318.311 ±(99.9%) 36.672 MB/sec [Average]
[info]   (min, avg, max) = (1306.672, 1318.311, 1331.011), stdev = 9.524
[info]   CI (99.9%): [1281.639, 1354.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2033.728 ±(99.9%) 124.642 B/op [Average]
[info]   (min, avg, max) = (1982.170, 2033.728, 2065.374), stdev = 32.369
[info]   CI (99.9%): [1909.086, 2158.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.225 ±(99.9%) 1.623 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.225, 0.978), stdev = 0.421
[info]   CI (99.9%): [≈ 0, 1.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.347 ±(99.9%) 2.504 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.347, 1.510), stdev = 0.650
[info]   CI (99.9%): [≈ 0, 2.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:37:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 545821.046 ops/s
[info] # Warmup Iteration   2: 1117153.312 ops/s
[info] # Warmup Iteration   3: 1122657.879 ops/s
[info] Iteration   1: 1125948.129 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1118129.965 ops/s
[info]                  ·gc.alloc.rate:      10.199 MB/sec
[info]                  ·gc.alloc.rate.norm: 14.356 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1124103.410 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1124829.081 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1126095.144 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   1123821.146 ±(99.9%) 12651.617 ops/s [Average]
[info]   (min, avg, max) = (1118129.965, 1123821.146, 1126095.144), stdev = 3285.585
[info]   CI (99.9%): [1111169.529, 1136472.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.040 ±(99.9%) 17.563 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.040, 10.199), stdev = 4.561
[info]   CI (99.9%): [≈ 0, 19.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.872 ±(99.9%) 24.721 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 2.872, 14.356), stdev = 6.420
[info]   CI (99.9%): [≈ 0, 27.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:37:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50068.706 ops/s
[info] # Warmup Iteration   2: 163960.602 ops/s
[info] # Warmup Iteration   3: 180383.469 ops/s
[info] Iteration   1: 311521.650 ops/s
[info]                  ·gc.alloc.rate:                   955.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              4824.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4893.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.292 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 310333.239 ops/s
[info]                  ·gc.alloc.rate:                   960.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              4870.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4878.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.161 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 310513.080 ops/s
[info]                  ·gc.alloc.rate:                   948.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              4807.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4841.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.110 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 311468.394 ops/s
[info]                  ·gc.alloc.rate:                   954.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              4821.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          956.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4833.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 316515.963 ops/s
[info]                  ·gc.alloc.rate:                   961.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              4782.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4781.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   312070.465 ±(99.9%) 9792.594 ops/s [Average]
[info]   (min, avg, max) = (310333.239, 312070.465, 316515.963), stdev = 2543.106
[info]   CI (99.9%): [302277.871, 321863.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   956.010 ±(99.9%) 20.513 MB/sec [Average]
[info]   (min, avg, max) = (948.518, 956.010, 961.799), stdev = 5.327
[info]   CI (99.9%): [935.497, 976.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4821.361 ±(99.9%) 124.248 B/op [Average]
[info]   (min, avg, max) = (4782.261, 4821.361, 4870.700), stdev = 32.267
[info]   CI (99.9%): [4697.113, 4945.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   960.834 ±(99.9%) 20.464 MB/sec [Average]
[info]   (min, avg, max) = (955.260, 960.834, 968.692), stdev = 5.314
[info]   CI (99.9%): [940.370, 981.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4845.762 ±(99.9%) 167.926 B/op [Average]
[info]   (min, avg, max) = (4781.552, 4845.762, 4893.220), stdev = 43.610
[info]   CI (99.9%): [4677.836, 5013.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.237 ±(99.9%) 8.554 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 1.237, 5.205), stdev = 2.221
[info]   CI (99.9%): [≈ 0, 9.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.248 ±(99.9%) 43.208 B/op [Average]
[info]   (min, avg, max) = (0.414, 6.248, 26.292), stdev = 11.221
[info]   CI (99.9%): [≈ 0, 49.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 14.000), stdev = 4.159
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:37:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13644.475 ops/s
[info] # Warmup Iteration   2: 82783.605 ops/s
[info] # Warmup Iteration   3: 123668.688 ops/s
[info] Iteration   1: 126685.459 ops/s
[info]                  ·gc.alloc.rate:                   1956.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              24304.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1950.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24232.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 101.381 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 136304.854 ops/s
[info]                  ·gc.alloc.rate:                   1695.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              19577.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1611.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18606.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.446 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 137368.065 ops/s
[info]                  ·gc.alloc.rate:                   1719.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              19696.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1611.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18462.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.908 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 138536.238 ops/s
[info]                  ·gc.alloc.rate:                   1732.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              19679.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22181.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 135017.079 ops/s
[info]                  ·gc.alloc.rate:                   1693.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              19735.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19183.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.485 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   134782.339 ±(99.9%) 18133.871 ops/s [Average]
[info]   (min, avg, max) = (126685.459, 134782.339, 138536.238), stdev = 4709.309
[info]   CI (99.9%): [116648.468, 152916.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1759.304 ±(99.9%) 429.150 MB/sec [Average]
[info]   (min, avg, max) = (1693.139, 1759.304, 1956.515), stdev = 111.449
[info]   CI (99.9%): [1330.154, 2188.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20598.630 ±(99.9%) 7980.515 B/op [Average]
[info]   (min, avg, max) = (19577.435, 20598.630, 24304.589), stdev = 2072.514
[info]   CI (99.9%): [12618.115, 28579.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1754.367 ±(99.9%) 695.322 MB/sec [Average]
[info]   (min, avg, max) = (1611.376, 1754.367, 1952.425), stdev = 180.573
[info]   CI (99.9%): [1059.045, 2449.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20533.312 ±(99.9%) 9859.159 B/op [Average]
[info]   (min, avg, max) = (18462.484, 20533.312, 24232.668), stdev = 2560.392
[info]   CI (99.9%): [10674.153, 30392.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2.015 ±(99.9%) 13.501 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.015, 8.161), stdev = 3.506
[info]   CI (99.9%): [≈ 0, 15.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   24.691 ±(99.9%) 167.976 B/op [Average]
[info]   (min, avg, max) = (0.236, 24.691, 101.381), stdev = 43.623
[info]   CI (99.9%): [≈ 0, 192.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.400, 26.000), stdev = 8.204
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:37:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35024.299 ops/s
[info] # Warmup Iteration   2: 135291.389 ops/s
[info] # Warmup Iteration   3: 184473.568 ops/s
[info] Iteration   1: 217754.333 ops/s
[info]                  ·gc.alloc.rate:                   792.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          962.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6957.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.820 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 218037.339 ops/s
[info]                  ·gc.alloc.rate:               796.070 MB/sec
[info]                  ·gc.alloc.rate.norm:          5746.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4644.972 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 217806.962 ops/s
[info]                  ·gc.alloc.rate:                   805.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              5819.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6989.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 211898.935 ops/s
[info]                  ·gc.alloc.rate:                   776.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              5764.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4804.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.659 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.314 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 212283.700 ops/s
[info]                  ·gc.alloc.rate:                   771.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              5718.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4800.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.692 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.541 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   215556.254 ±(99.9%) 12197.885 ops/s [Average]
[info]   (min, avg, max) = (211898.935, 215556.254, 218037.339), stdev = 3167.752
[info]   CI (99.9%): [203358.369, 227754.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   788.390 ±(99.9%) 54.056 MB/sec [Average]
[info]   (min, avg, max) = (771.601, 788.390, 805.336), stdev = 14.038
[info]   CI (99.9%): [734.335, 842.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   5755.383 ±(99.9%) 152.972 B/op [Average]
[info]   (min, avg, max) = (5718.897, 5755.383, 5819.301), stdev = 39.726
[info]   CI (99.9%): [5602.410, 5908.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   773.613 ±(99.9%) 672.383 MB/sec [Average]
[info]   (min, avg, max) = (643.517, 773.613, 967.229), stdev = 174.616
[info]   CI (99.9%): [101.230, 1445.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5639.183 ±(99.9%) 4695.777 B/op [Average]
[info]   (min, avg, max) = (4644.972, 5639.183, 6989.127), stdev = 1219.478
[info]   CI (99.9%): [943.406, 10334.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.042 ±(99.9%) 3.599 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.042, 1.820), stdev = 0.935
[info]   CI (99.9%): [≈ 0, 4.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.662 ±(99.9%) 26.432 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.662, 13.153), stdev = 6.864
[info]   CI (99.9%): [≈ 0, 34.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:36:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123725.116 ops/s
[info] # Warmup Iteration   2: 387131.616 ops/s
[info] # Warmup Iteration   3: 545333.047 ops/s
[info] Iteration   1: 550633.413 ops/s
[info]                  ·gc.alloc.rate:               1097.085 MB/sec
[info]                  ·gc.alloc.rate.norm:          3135.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:      975.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2787.495 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 544680.865 ops/s
[info]                  ·gc.alloc.rate:                   1185.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              3423.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3761.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 568496.640 ops/s
[info]                  ·gc.alloc.rate:                   1131.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              3132.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2692.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.305 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 573343.741 ops/s
[info]                  ·gc.alloc.rate:                   1145.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              3144.482 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3551.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 560893.267 ops/s
[info]                  ·gc.alloc.rate:               1109.655 MB/sec
[info]                  ·gc.alloc.rate.norm:          3112.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:      973.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2730.905 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   559609.585 ±(99.9%) 46074.889 ops/s [Average]
[info]   (min, avg, max) = (544680.865, 559609.585, 573343.741), stdev = 11965.502
[info]   CI (99.9%): [513534.696, 605684.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1133.768 ±(99.9%) 132.208 MB/sec [Average]
[info]   (min, avg, max) = (1097.085, 1133.768, 1185.191), stdev = 34.334
[info]   CI (99.9%): [1001.561, 1265.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3189.697 ±(99.9%) 504.457 B/op [Average]
[info]   (min, avg, max) = (3112.701, 3189.697, 3423.120), stdev = 131.006
[info]   CI (99.9%): [2685.240, 3694.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1103.440 ±(99.9%) 683.849 MB/sec [Average]
[info]   (min, avg, max) = (972.582, 1103.440, 1302.255), stdev = 177.593
[info]   CI (99.9%): [419.592, 1787.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3104.653 ±(99.9%) 1963.940 B/op [Average]
[info]   (min, avg, max) = (2692.539, 3104.653, 3761.228), stdev = 510.029
[info]   CI (99.9%): [1140.713, 5068.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.037 ±(99.9%) 6.952 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.037, 4.207), stdev = 1.805
[info]   CI (99.9%): [≈ 0, 7.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.971 ±(99.9%) 20.100 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.971, 12.152), stdev = 5.220
[info]   CI (99.9%): [≈ 0, 23.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 15.000), stdev = 4.796
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:36:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3431.396 ops/s
[info] # Warmup Iteration   2: 60640.525 ops/s
[info] # Warmup Iteration   3: 90157.633 ops/s
[info] Iteration   1: 96978.603 ops/s
[info]                  ·gc.alloc.rate:                   3080.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              49975.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2956.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47979.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.455 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.604 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 99956.802 ops/s
[info]                  ·gc.alloc.rate:                   3169.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              49888.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2981.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46916.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.639 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 101295.949 ops/s
[info]                  ·gc.alloc.rate:                   3246.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              50438.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3350.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52057.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.970 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 101882.001 ops/s
[info]                  ·gc.alloc.rate:                   3259.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              50352.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3039.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46950.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.965 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 97685.696 ops/s
[info]                  ·gc.alloc.rate:                   3094.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              49851.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3052.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49177.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.671 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   99559.810 ±(99.9%) 8334.505 ops/s [Average]
[info]   (min, avg, max) = (96978.603, 99559.810, 101882.001), stdev = 2164.445
[info]   CI (99.9%): [91225.305, 107894.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3169.987 ±(99.9%) 320.309 MB/sec [Average]
[info]   (min, avg, max) = (3080.038, 3169.987, 3259.496), stdev = 83.183
[info]   CI (99.9%): [2849.678, 3490.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50101.182 ±(99.9%) 1054.607 B/op [Average]
[info]   (min, avg, max) = (49851.361, 50101.182, 50438.306), stdev = 273.878
[info]   CI (99.9%): [49046.575, 51155.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3076.059 ±(99.9%) 610.166 MB/sec [Average]
[info]   (min, avg, max) = (2956.996, 3076.059, 3350.524), stdev = 158.458
[info]   CI (99.9%): [2465.894, 3686.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48616.412 ±(99.9%) 8218.950 B/op [Average]
[info]   (min, avg, max) = (46916.880, 48616.412, 52057.221), stdev = 2134.435
[info]   CI (99.9%): [40397.462, 56835.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.345 ±(99.9%) 2.390 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.345, 1.455), stdev = 0.621
[info]   CI (99.9%): [≈ 0, 2.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.570 ±(99.9%) 38.844 B/op [Average]
[info]   (min, avg, max) = (0.671, 5.570, 23.604), stdev = 10.088
[info]   CI (99.9%): [≈ 0, 44.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.600, 15.000), stdev = 1.342
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:36:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53074.389 ops/s
[info] # Warmup Iteration   2: 172931.023 ops/s
[info] # Warmup Iteration   3: 220470.091 ops/s
[info] Iteration   1: 232998.122 ops/s
[info]                  ·gc.alloc.rate:                   1475.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              9970.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8790.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.477 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 237202.190 ops/s
[info]                  ·gc.alloc.rate:                   1527.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              10130.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10781.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.149 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 239105.626 ops/s
[info]                  ·gc.alloc.rate:                   1505.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              9912.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8528.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.129 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.429 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 232889.004 ops/s
[info]                  ·gc.alloc.rate:                   1483.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              10022.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10975.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.422 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 238886.899 ops/s
[info]                  ·gc.alloc.rate:                   1520.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              10015.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8613.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   236216.368 ±(99.9%) 11849.704 ops/s [Average]
[info]   (min, avg, max) = (232889.004, 236216.368, 239105.626), stdev = 3077.331
[info]   CI (99.9%): [224366.664, 248066.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1502.530 ±(99.9%) 86.776 MB/sec [Average]
[info]   (min, avg, max) = (1475.972, 1502.530, 1527.379), stdev = 22.535
[info]   CI (99.9%): [1415.754, 1589.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10010.389 ±(99.9%) 309.633 B/op [Average]
[info]   (min, avg, max) = (9912.557, 10010.389, 10130.877), stdev = 80.411
[info]   CI (99.9%): [9700.756, 10320.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1430.796 ±(99.9%) 682.220 MB/sec [Average]
[info]   (min, avg, max) = (1295.660, 1430.796, 1625.541), stdev = 177.170
[info]   CI (99.9%): [748.576, 2113.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9537.887 ±(99.9%) 4734.895 B/op [Average]
[info]   (min, avg, max) = (8528.502, 9537.887, 10975.658), stdev = 1229.637
[info]   CI (99.9%): [4802.991, 14272.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.094 ±(99.9%) 4.712 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.094, 3.031), stdev = 1.224
[info]   CI (99.9%): [≈ 0, 5.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.323 ±(99.9%) 31.811 B/op [Average]
[info]   (min, avg, max) = (0.137, 7.323, 20.477), stdev = 8.261
[info]   CI (99.9%): [≈ 0, 39.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.600, 19.000), stdev = 5.128
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:36:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 157103.674 ops/s
[info] # Warmup Iteration   2: 654741.533 ops/s
[info] # Warmup Iteration   3: 762491.233 ops/s
[info] Iteration   1: 774055.294 ops/s
[info]                  ·gc.alloc.rate:                   591.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              1202.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1305.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 776565.939 ops/s
[info]                  ·gc.alloc.rate:               596.213 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1303.497 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 772803.436 ops/s
[info]                  ·gc.alloc.rate:                   593.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1313.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 757030.583 ops/s
[info]                  ·gc.alloc.rate:               576.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          1197.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 671.647 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 740920.648 ops/s
[info]                  ·gc.alloc.rate:                   566.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              1204.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1376.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   764275.180 ±(99.9%) 58314.150 ops/s [Average]
[info]   (min, avg, max) = (740920.648, 764275.180, 776565.939), stdev = 15143.999
[info]   CI (99.9%): [705961.031, 822589.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   584.840 ±(99.9%) 49.009 MB/sec [Average]
[info]   (min, avg, max) = (566.879, 584.840, 596.213), stdev = 12.728
[info]   CI (99.9%): [535.830, 633.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1204.208 ±(99.9%) 17.387 B/op [Average]
[info]   (min, avg, max) = (1197.715, 1204.208, 1208.833), stdev = 4.515
[info]   CI (99.9%): [1186.821, 1221.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   580.403 ±(99.9%) 553.990 MB/sec [Average]
[info]   (min, avg, max) = (323.073, 580.403, 648.163), stdev = 143.870
[info]   CI (99.9%): [26.412, 1134.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1194.317 ±(99.9%) 1131.082 B/op [Average]
[info]   (min, avg, max) = (671.647, 1194.317, 1376.858), stdev = 293.738
[info]   CI (99.9%): [63.236, 2325.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.162 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.085), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 4.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:36:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 446286.011 ops/s
[info] # Warmup Iteration   2: 1204892.470 ops/s
[info] # Warmup Iteration   3: 1331587.766 ops/s
[info] Iteration   1: 1331499.847 ops/s
[info]                  ·gc.alloc.rate:                   1021.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              1207.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1167.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1317617.887 ops/s
[info]                  ·gc.alloc.rate:                   1012.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              1209.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1181.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1413894.851 ops/s
[info]                  ·gc.alloc.rate:                   1075.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              1197.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1101.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.406 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1402244.416 ops/s
[info]                  ·gc.alloc.rate:                   1073.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              1204.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1104.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1366253.023 ops/s
[info]                  ·gc.alloc.rate:                   1046.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              1205.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1130.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1366302.005 ±(99.9%) 162667.167 ops/s [Average]
[info]   (min, avg, max) = (1317617.887, 1366302.005, 1413894.851), stdev = 42244.147
[info]   CI (99.9%): [1203634.838, 1528969.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1045.898 ±(99.9%) 112.143 MB/sec [Average]
[info]   (min, avg, max) = (1012.364, 1045.898, 1075.997), stdev = 29.123
[info]   CI (99.9%): [933.755, 1158.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1204.803 ±(99.9%) 16.770 B/op [Average]
[info]   (min, avg, max) = (1197.703, 1204.803, 1209.204), stdev = 4.355
[info]   CI (99.9%): [1188.033, 1221.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   986.271 ±(99.9%) 12.843 MB/sec [Average]
[info]   (min, avg, max) = (981.562, 986.271, 989.237), stdev = 3.335
[info]   CI (99.9%): [973.428, 999.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1136.921 ±(99.9%) 139.735 B/op [Average]
[info]   (min, avg, max) = (1101.129, 1136.921, 1181.211), stdev = 36.289
[info]   CI (99.9%): [997.186, 1276.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.823 ±(99.9%) 6.749 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.823, 3.958), stdev = 1.753
[info]   CI (99.9%): [≈ 0, 7.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.918 ±(99.9%) 7.509 B/op [Average]
[info]   (min, avg, max) = (0.023, 0.918, 4.406), stdev = 1.950
[info]   CI (99.9%): [≈ 0, 8.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.507
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:35:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 863667.507 ops/s
[info] # Warmup Iteration   2: 1287974.646 ops/s
[info] # Warmup Iteration   3: 1421262.305 ops/s
[info] Iteration   1: 1437429.107 ops/s
[info]                  ·gc.alloc.rate:      0.159 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.174 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1438054.908 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1441005.259 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1441902.704 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1442393.530 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1440157.101 ±(99.9%) 8744.711 ops/s [Average]
[info]   (min, avg, max) = (1437429.107, 1440157.101, 1442393.530), stdev = 2270.974
[info]   CI (99.9%): [1431412.391, 1448901.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.032 ±(99.9%) 0.274 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.032, 0.159), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.035 ±(99.9%) 0.300 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.035, 0.174), stdev = 0.078
[info]   CI (99.9%): [≈ 0, 0.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:35:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64248.023 ops/s
[info] # Warmup Iteration   2: 514599.962 ops/s
[info] # Warmup Iteration   3: 550108.436 ops/s
[info] Iteration   1: 601922.809 ops/s
[info]                  ·gc.alloc.rate:                   1466.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              3832.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3427.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 598850.517 ops/s
[info]                  ·gc.alloc.rate:                   1473.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              3872.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4319.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.550 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.703 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 620679.170 ops/s
[info]                  ·gc.alloc.rate:                   1509.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              3826.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3332.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 625001.562 ops/s
[info]                  ·gc.alloc.rate:               1533.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          3859.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4155.072 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 623517.736 ops/s
[info]                  ·gc.alloc.rate:               1536.038 MB/sec
[info]                  ·gc.alloc.rate.norm:          3877.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1328.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3351.950 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   613994.359 ±(99.9%) 48386.456 ops/s [Average]
[info]   (min, avg, max) = (598850.517, 613994.359, 625001.562), stdev = 12565.809
[info]   CI (99.9%): [565607.903, 662380.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1503.613 ±(99.9%) 125.630 MB/sec [Average]
[info]   (min, avg, max) = (1466.200, 1503.613, 1536.038), stdev = 32.626
[info]   CI (99.9%): [1377.983, 1629.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   3853.613 ±(99.9%) 88.179 B/op [Average]
[info]   (min, avg, max) = (3826.621, 3853.613, 3877.018), stdev = 22.900
[info]   CI (99.9%): [3765.434, 3941.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1449.557 ±(99.9%) 694.600 MB/sec [Average]
[info]   (min, avg, max) = (1311.288, 1449.557, 1650.630), stdev = 180.386
[info]   CI (99.9%): [754.957, 2144.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3717.317 ±(99.9%) 1845.599 B/op [Average]
[info]   (min, avg, max) = (3332.717, 3717.317, 4319.025), stdev = 479.296
[info]   CI (99.9%): [1871.718, 5562.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.527 ±(99.9%) 4.357 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.527, 2.550), stdev = 1.132
[info]   CI (99.9%): [≈ 0, 4.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.383 ±(99.9%) 11.454 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.383, 6.703), stdev = 2.975
[info]   CI (99.9%): [≈ 0, 12.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 10.000), stdev = 2.345
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:35:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 183.600 ops/s
[info] # Warmup Iteration   2: 382.542 ops/s
[info] # Warmup Iteration   3: 710.668 ops/s
[info] Iteration   1: 913.168 ops/s
[info]                  ·gc.alloc.rate:                   1952.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              3363950.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3317813.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.405 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4144.315 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 903.676 ops/s
[info]                  ·gc.alloc.rate:                   1943.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              3383938.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1926.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3355675.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.447 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4261.690 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 937.337 ops/s
[info]                  ·gc.alloc.rate:                   1996.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              3352051.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1926.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3234040.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.487 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2496.034 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 921.550 ops/s
[info]                  ·gc.alloc.rate:                   1976.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              3373912.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1936.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3306653.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.540 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 924.354 ops/s
[info]                  ·gc.alloc.rate:                   2001.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              3406445.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3338439.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.425 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   920.017 ±(99.9%) 48.520 ops/s [Average]
[info]   (min, avg, max) = (903.676, 920.017, 937.337), stdev = 12.601
[info]   CI (99.9%): [871.497, 968.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1973.911 ±(99.9%) 99.365 MB/sec [Average]
[info]   (min, avg, max) = (1943.226, 1973.911, 2001.027), stdev = 25.805
[info]   CI (99.9%): [1874.546, 2073.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3376059.607 ±(99.9%) 79687.312 B/op [Average]
[info]   (min, avg, max) = (3352051.045, 3376059.607, 3406445.760), stdev = 20694.542
[info]   CI (99.9%): [3296372.295, 3455746.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1935.382 ±(99.9%) 58.077 MB/sec [Average]
[info]   (min, avg, max) = (1925.597, 1935.382, 1961.078), stdev = 15.082
[info]   CI (99.9%): [1877.305, 1993.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3310524.568 ±(99.9%) 179949.902 B/op [Average]
[info]   (min, avg, max) = (3234040.904, 3310524.568, 3355675.186), stdev = 46732.418
[info]   CI (99.9%): [3130574.667, 3490474.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.276 ±(99.9%) 4.654 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.276, 2.447), stdev = 1.209
[info]   CI (99.9%): [≈ 0, 5.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2194.601 ±(99.9%) 8051.597 B/op [Average]
[info]   (min, avg, max) = (35.425, 2194.601, 4261.690), stdev = 2090.974
[info]   CI (99.9%): [≈ 0, 10246.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.800, 24.000), stdev = 7.259
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:35:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69.359 ops/s
[info] # Warmup Iteration   2: 250.473 ops/s
[info] # Warmup Iteration   3: 642.388 ops/s
[info] Iteration   1: 939.712 ops/s
[info]                  ·gc.alloc.rate:                   2003.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              3353543.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1912.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3200945.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.719 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 944.339 ops/s
[info]                  ·gc.alloc.rate:                   2005.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              3341517.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1898.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3164036.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.675 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 960.823 ops/s
[info]                  ·gc.alloc.rate:                   2038.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              3337841.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2250.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3685291.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.766 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 975.720 ops/s
[info]                  ·gc.alloc.rate:                   2096.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              3381118.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3166140.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.148 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 907.584 ops/s
[info]                  ·gc.alloc.rate:                   2018.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              3499917.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3447135.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.460 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 796.916 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   945.636 ±(99.9%) 98.558 ops/s [Average]
[info]   (min, avg, max) = (907.584, 945.636, 975.720), stdev = 25.595
[info]   CI (99.9%): [847.078, 1044.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2032.378 ±(99.9%) 147.589 MB/sec [Average]
[info]   (min, avg, max) = (2003.346, 2032.378, 2096.304), stdev = 38.329
[info]   CI (99.9%): [1884.788, 2179.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3382787.663 ±(99.9%) 260458.125 B/op [Average]
[info]   (min, avg, max) = (3337841.091, 3382787.663, 3499917.410), stdev = 67640.148
[info]   CI (99.9%): [3122329.537, 3643245.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2002.529 ±(99.9%) 551.526 MB/sec [Average]
[info]   (min, avg, max) = (1898.959, 2002.529, 2250.324), stdev = 143.229
[info]   CI (99.9%): [1451.003, 2554.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3332710.114 ±(99.9%) 884318.475 B/op [Average]
[info]   (min, avg, max) = (3164036.470, 3332710.114, 3685291.821), stdev = 229654.700
[info]   CI (99.9%): [2448391.638, 4217028.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.723 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.125, 0.460), stdev = 0.188
[info]   CI (99.9%): [≈ 0, 0.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   213.045 ±(99.9%) 1259.683 B/op [Average]
[info]   (min, avg, max) = (34.675, 213.045, 796.916), stdev = 327.136
[info]   CI (99.9%): [≈ 0, 1472.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 10.000), stdev = 0.707
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:35:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14581.234 ops/s
[info] # Warmup Iteration   2: 23573.034 ops/s
[info] # Warmup Iteration   3: 45650.999 ops/s
[info] Iteration   1: 44285.859 ops/s
[info]                  ·gc.alloc.rate:                   1114.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              39616.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1200.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42658.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.629 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.907 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         38.000 ms
[info] Iteration   2: 33521.082 ops/s
[info]                  ·gc.alloc.rate:                   599.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              28131.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          595.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27944.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.217 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.141 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 40156.891 ops/s
[info]                  ·gc.alloc.rate:                   716.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              28057.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          596.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23379.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 184.894 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 38888.018 ops/s
[info]                  ·gc.alloc.rate:                   708.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              28679.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          899.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36395.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.579 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 38291.093 ops/s
[info]                  ·gc.alloc.rate:                   689.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              28327.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          600.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24696.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 259.365 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   39028.588 ±(99.9%) 14889.630 ops/s [Average]
[info]   (min, avg, max) = (33521.082, 39028.588, 44285.859), stdev = 3866.790
[info]   CI (99.9%): [24138.958, 53918.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   765.607 ±(99.9%) 772.858 MB/sec [Average]
[info]   (min, avg, max) = (599.183, 765.607, 1114.776), stdev = 200.709
[info]   CI (99.9%): [≈ 0, 1538.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   30562.493 ±(99.9%) 19511.540 B/op [Average]
[info]   (min, avg, max) = (28057.158, 30562.493, 39616.524), stdev = 5067.085
[info]   CI (99.9%): [11050.953, 50074.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   778.509 ±(99.9%) 1038.125 MB/sec [Average]
[info]   (min, avg, max) = (595.203, 778.509, 1200.387), stdev = 269.598
[info]   CI (99.9%): [≈ 0, 1816.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   31014.954 ±(99.9%) 31764.522 B/op [Average]
[info]   (min, avg, max) = (23379.141, 31014.954, 42658.914), stdev = 8249.146
[info]   CI (99.9%): [≈ 0, 62779.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   3.342 ±(99.9%) 8.263 MB/sec [Average]
[info]   (min, avg, max) = (1.217, 3.342, 6.310), stdev = 2.146
[info]   CI (99.9%): [≈ 0, 11.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   134.777 ±(99.9%) 335.571 B/op [Average]
[info]   (min, avg, max) = (57.141, 134.777, 259.365), stdev = 87.147
[info]   CI (99.9%): [≈ 0, 470.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   104.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 20.800, 38.000), stdev = 10.545
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:34:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81.736 ops/s
[info] # Warmup Iteration   2: 306.683 ops/s
[info] # Warmup Iteration   3: 721.181 ops/s
[info] Iteration   1: 912.280 ops/s
[info]                  ·gc.alloc.rate:                   2009.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              3466563.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3335229.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.562 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 889.806 ops/s
[info]                  ·gc.alloc.rate:                   2010.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              3555227.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3459947.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1765.279 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 927.984 ops/s
[info]                  ·gc.alloc.rate:                   2035.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              3451792.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3351718.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1763.617 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 901.601 ops/s
[info]                  ·gc.alloc.rate:                   1968.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              3435157.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3482272.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.328 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 864.243 ops/s
[info]                  ·gc.alloc.rate:                   1993.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              3625862.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3649455.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 377.947 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   899.183 ±(99.9%) 92.647 ops/s [Average]
[info]   (min, avg, max) = (864.243, 899.183, 927.984), stdev = 24.060
[info]   CI (99.9%): [806.536, 991.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2003.713 ±(99.9%) 96.041 MB/sec [Average]
[info]   (min, avg, max) = (1968.133, 2003.713, 2035.878), stdev = 24.941
[info]   CI (99.9%): [1907.672, 2099.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3506920.913 ±(99.9%) 312225.243 B/op [Average]
[info]   (min, avg, max) = (3435157.916, 3506920.913, 3625862.625), stdev = 81083.904
[info]   CI (99.9%): [3194695.671, 3819146.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1973.894 ±(99.9%) 112.948 MB/sec [Average]
[info]   (min, avg, max) = (1933.682, 1973.894, 2006.769), stdev = 29.332
[info]   CI (99.9%): [1860.946, 2086.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3455724.726 ±(99.9%) 485512.002 B/op [Average]
[info]   (min, avg, max) = (3335229.687, 3455724.726, 3649455.686), stdev = 126085.925
[info]   CI (99.9%): [2970212.724, 3941236.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.470 ±(99.9%) 1.949 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.470, 1.040), stdev = 0.506
[info]   CI (99.9%): [≈ 0, 2.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   817.347 ±(99.9%) 3363.010 B/op [Average]
[info]   (min, avg, max) = (36.328, 817.347, 1765.279), stdev = 873.363
[info]   CI (99.9%): [≈ 0, 4180.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 12.000), stdev = 1.581
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:34:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3494.623 ops/s
[info] # Warmup Iteration   2: 9839.802 ops/s
[info] # Warmup Iteration   3: 10988.343 ops/s
[info] Iteration   1: 16255.721 ops/s
[info]                  ·gc.alloc.rate:                   1227.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              118576.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1238.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119614.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 219.316 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 16940.930 ops/s
[info]                  ·gc.alloc.rate:                   1265.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              117546.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          935.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86917.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.297 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.600 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 17147.862 ops/s
[info]                  ·gc.alloc.rate:                   1304.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              119699.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1569.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144060.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 401.156 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 17483.730 ops/s
[info]                  ·gc.alloc.rate:                   1310.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              117962.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1251.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112670.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 509.181 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 17000.496 ops/s
[info]                  ·gc.alloc.rate:               1581.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          146387.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1551.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143559.452 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   16965.748 ±(99.9%) 1730.041 ops/s [Average]
[info]   (min, avg, max) = (16255.721, 16965.748, 17483.730), stdev = 449.286
[info]   CI (99.9%): [15235.706, 18695.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1337.976 ±(99.9%) 540.713 MB/sec [Average]
[info]   (min, avg, max) = (1227.521, 1337.976, 1581.986), stdev = 140.422
[info]   CI (99.9%): [797.263, 1878.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   124034.250 ±(99.9%) 48218.513 B/op [Average]
[info]   (min, avg, max) = (117546.178, 124034.250, 146387.596), stdev = 12522.195
[info]   CI (99.9%): [75815.738, 172252.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1309.396 ±(99.9%) 1008.471 MB/sec [Average]
[info]   (min, avg, max) = (935.792, 1309.396, 1569.807), stdev = 261.897
[info]   CI (99.9%): [300.924, 2317.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   121364.475 ±(99.9%) 91790.832 B/op [Average]
[info]   (min, avg, max) = (86917.197, 121364.475, 144060.016), stdev = 23837.788
[info]   CI (99.9%): [29573.643, 213155.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.519 ±(99.9%) 9.553 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.519, 5.657), stdev = 2.481
[info]   CI (99.9%): [≈ 0, 12.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   231.450 ±(99.9%) 863.621 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 231.450, 509.181), stdev = 224.280
[info]   CI (99.9%): [≈ 0, 1095.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   99.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 19.800, 30.000), stdev = 8.927
[info]   CI (99.9%): [99.000, 99.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:34:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4012.927 ops/s
[info] # Warmup Iteration   2: 8093.523 ops/s
[info] # Warmup Iteration   3: 12252.772 ops/s
[info] Iteration   1: 18744.524 ops/s
[info]                  ·gc.alloc.rate:                   1068.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              89687.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          914.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76759.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.884 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 326.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 18837.411 ops/s
[info]                  ·gc.alloc.rate:                   1086.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              90745.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1229.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102686.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.380 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 17061.734 ops/s
[info]                  ·gc.alloc.rate:                   1583.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              145726.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1544.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     142089.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.559 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 327.423 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         35.000 ms
[info] Iteration   4: 19580.781 ops/s
[info]                  ·gc.alloc.rate:                   1111.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              89335.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:          904.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72680.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.938 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 637.886 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 18322.071 ops/s
[info]                  ·gc.alloc.rate:               1354.082 MB/sec
[info]                  ·gc.alloc.rate.norm:          116307.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1520.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 130607.079 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     30.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   18509.304 ±(99.9%) 3571.751 ops/s [Average]
[info]   (min, avg, max) = (17061.734, 18509.304, 19580.781), stdev = 927.572
[info]   CI (99.9%): [14937.553, 22081.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1240.842 ±(99.9%) 862.897 MB/sec [Average]
[info]   (min, avg, max) = (1068.267, 1240.842, 1583.898), stdev = 224.092
[info]   CI (99.9%): [377.945, 2103.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   106360.649 ±(99.9%) 95499.162 B/op [Average]
[info]   (min, avg, max) = (89335.614, 106360.649, 145726.825), stdev = 24800.829
[info]   CI (99.9%): [10861.487, 201859.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1222.566 ±(99.9%) 1200.197 MB/sec [Average]
[info]   (min, avg, max) = (904.501, 1222.566, 1544.362), stdev = 311.687
[info]   CI (99.9%): [22.369, 2422.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   104964.693 ±(99.9%) 119908.454 B/op [Average]
[info]   (min, avg, max) = (72680.210, 104964.693, 142089.337), stdev = 31139.845
[info]   CI (99.9%): [≈ 0, 224873.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3.080 ±(99.9%) 12.677 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 3.080, 7.938), stdev = 3.292
[info]   CI (99.9%): [≈ 0, 15.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   258.552 ±(99.9%) 1029.971 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 258.552, 637.886), stdev = 267.480
[info]   CI (99.9%): [≈ 0, 1288.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   124.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 24.800, 35.000), stdev = 7.727
[info]   CI (99.9%): [124.000, 124.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:34:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117451.192 ops/s
[info] # Warmup Iteration   2: 247638.430 ops/s
[info] # Warmup Iteration   3: 322340.163 ops/s
[info] Iteration   1: 324960.262 ops/s
[info]                  ·gc.alloc.rate:                   1178.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              5706.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4752.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 327019.915 ops/s
[info]                  ·gc.alloc.rate:                   1225.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              5898.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6303.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.158 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 329005.820 ops/s
[info]                  ·gc.alloc.rate:                   1193.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              5707.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4649.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 324796.935 ops/s
[info]                  ·gc.alloc.rate:                   1180.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              5719.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1290.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6252.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 327285.629 ops/s
[info]                  ·gc.alloc.rate:               1182.577 MB/sec
[info]                  ·gc.alloc.rate.norm:          5682.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1291.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6206.361 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   326613.712 ±(99.9%) 6772.437 ops/s [Average]
[info]   (min, avg, max) = (324796.935, 326613.712, 329005.820), stdev = 1758.780
[info]   CI (99.9%): [319841.276, 333386.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1192.077 ±(99.9%) 75.748 MB/sec [Average]
[info]   (min, avg, max) = (1178.573, 1192.077, 1225.764), stdev = 19.672
[info]   CI (99.9%): [1116.329, 1267.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5742.527 ±(99.9%) 338.800 B/op [Average]
[info]   (min, avg, max) = (5682.210, 5742.527, 5898.091), stdev = 87.985
[info]   CI (99.9%): [5403.726, 6081.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1169.125 ±(99.9%) 676.766 MB/sec [Average]
[info]   (min, avg, max) = (972.070, 1169.125, 1309.936), stdev = 175.754
[info]   CI (99.9%): [492.359, 1845.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5632.775 ±(99.9%) 3281.316 B/op [Average]
[info]   (min, avg, max) = (4649.460, 5632.775, 6303.107), stdev = 852.147
[info]   CI (99.9%): [2351.460, 8914.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.200 ±(99.9%) 8.359 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.200, 5.021), stdev = 2.171
[info]   CI (99.9%): [≈ 0, 9.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.769 ±(99.9%) 40.225 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.769, 24.158), stdev = 10.446
[info]   CI (99.9%): [≈ 0, 45.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 17.000), stdev = 6.107
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:33:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 189693.468 ops/s
[info] # Warmup Iteration   2: 378744.865 ops/s
[info] # Warmup Iteration   3: 411245.615 ops/s
[info] Iteration   1: 409285.512 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 409995.885 ops/s
[info]                  ·gc.alloc.rate:      0.076 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.290 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 408650.479 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 408066.175 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 409665.080 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   409132.626 ±(99.9%) 2996.262 ops/s [Average]
[info]   (min, avg, max) = (408066.175, 409132.626, 409995.885), stdev = 778.120
[info]   CI (99.9%): [406136.364, 412128.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.015 ±(99.9%) 0.130 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.015, 0.076), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.059 ±(99.9%) 0.498 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.059, 0.290), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:33:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4212.073 ops/s
[info] # Warmup Iteration   2: 11778.721 ops/s
[info] # Warmup Iteration   3: 10948.348 ops/s
[info] Iteration   1: 10919.702 ops/s
[info]                  ·gc.alloc.rate:                   1361.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              196089.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1441.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207631.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      13.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1980.563 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         76.000 ms
[info] Iteration   2: 16679.602 ops/s
[info]                  ·gc.alloc.rate:                   1125.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              106175.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1126.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106284.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.894 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 556.004 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 18641.069 ops/s
[info]                  ·gc.alloc.rate:                   1149.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              97032.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1138.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96117.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.758 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 18819.815 ops/s
[info]                  ·gc.alloc.rate:                   1157.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              96791.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1161.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97097.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.629 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 554.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 17624.150 ops/s
[info]                  ·gc.alloc.rate:                   1482.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              132399.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1468.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131138.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.718 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   16536.868 ±(99.9%) 12535.993 ops/s [Average]
[info]   (min, avg, max) = (10919.702, 16536.868, 18819.815), stdev = 3255.558
[info]   CI (99.9%): [4000.875, 29072.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1255.200 ±(99.9%) 610.490 MB/sec [Average]
[info]   (min, avg, max) = (1125.539, 1255.200, 1482.630), stdev = 158.542
[info]   CI (99.9%): [644.710, 1865.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   125697.840 ±(99.9%) 161524.297 B/op [Average]
[info]   (min, avg, max) = (96791.060, 125697.840, 196089.705), stdev = 41947.347
[info]   CI (99.9%): [≈ 0, 287222.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1267.194 ±(99.9%) 662.514 MB/sec [Average]
[info]   (min, avg, max) = (1126.691, 1267.194, 1468.511), stdev = 172.053
[info]   CI (99.9%): [604.680, 1929.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   127654.030 ±(99.9%) 180544.236 B/op [Average]
[info]   (min, avg, max) = (96117.592, 127654.030, 207631.682), stdev = 46886.765
[info]   CI (99.9%): [≈ 0, 308198.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   5.267 ±(99.9%) 21.868 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 5.267, 13.748), stdev = 5.679
[info]   CI (99.9%): [≈ 0, 27.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   619.285 ±(99.9%) 3117.332 B/op [Average]
[info]   (min, avg, max) = (1.758, 619.285, 1980.563), stdev = 809.561
[info]   CI (99.9%): [≈ 0, 3736.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   147.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 29.400, 76.000), stdev = 26.255
[info]   CI (99.9%): [147.000, 147.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:33:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 317413.547 ops/s
[info] # Warmup Iteration   2: 1177632.661 ops/s
[info] # Warmup Iteration   3: 1345468.432 ops/s
[info] Iteration   1: 1389952.829 ops/s
[info]                  ·gc.alloc.rate:      56.673 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.167 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1392924.012 ops/s
[info]                  ·gc.alloc.rate:      56.643 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1394784.411 ops/s
[info]                  ·gc.alloc.rate:      56.725 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1400941.245 ops/s
[info]                  ·gc.alloc.rate:      56.990 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1395241.778 ops/s
[info]                  ·gc.alloc.rate:                   60.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              68.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1394768.855 ±(99.9%) 15512.869 ops/s [Average]
[info]   (min, avg, max) = (1389952.829, 1394768.855, 1400941.245), stdev = 4028.643
[info]   CI (99.9%): [1379255.986, 1410281.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   57.586 ±(99.9%) 7.151 MB/sec [Average]
[info]   (min, avg, max) = (56.643, 57.586, 60.899), stdev = 1.857
[info]   CI (99.9%): [50.435, 64.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   64.966 ±(99.9%) 7.964 B/op [Average]
[info]   (min, avg, max) = (64.000, 64.966, 68.664), stdev = 2.068
[info]   CI (99.9%): [57.003, 72.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.185 ±(99.9%) 440.719 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.185, 255.926), stdev = 114.453
[info]   CI (99.9%): [≈ 0, 491.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   57.711 ±(99.9%) 496.908 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57.711, 288.555), stdev = 129.046
[info]   CI (99.9%): [≈ 0, 554.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.023), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:33:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3229.471 ops/s
[info] # Warmup Iteration   2: 80195.992 ops/s
[info] # Warmup Iteration   3: 111825.886 ops/s
[info] Iteration   1: 121986.935 ops/s
[info]                  ·gc.alloc.rate:                   4482.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              57805.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4302.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55488.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.188 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   2: 111997.671 ops/s
[info]                  ·gc.alloc.rate:                   3963.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              55692.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3973.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55822.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.370 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.295 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   3: 117656.086 ops/s
[info]                  ·gc.alloc.rate:                   4167.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              55742.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3988.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53346.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.124 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 118435.899 ops/s
[info]                  ·gc.alloc.rate:                   4234.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              56265.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4024.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53472.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.553 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 116529.622 ops/s
[info]                  ·gc.alloc.rate:                   4171.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              56328.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4059.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54820.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.281 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   117321.243 ±(99.9%) 13895.750 ops/s [Average]
[info]   (min, avg, max) = (111997.671, 117321.243, 121986.935), stdev = 3608.682
[info]   CI (99.9%): [103425.493, 131216.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4203.895 ±(99.9%) 716.534 MB/sec [Average]
[info]   (min, avg, max) = (3963.811, 4203.895, 4482.423), stdev = 186.082
[info]   CI (99.9%): [3487.361, 4920.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   56367.019 ±(99.9%) 3293.241 B/op [Average]
[info]   (min, avg, max) = (55692.760, 56367.019, 57805.591), stdev = 855.244
[info]   CI (99.9%): [53073.778, 59660.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4069.601 ±(99.9%) 518.140 MB/sec [Average]
[info]   (min, avg, max) = (3973.032, 4069.601, 4302.719), stdev = 134.559
[info]   CI (99.9%): [3551.461, 4587.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   54590.062 ±(99.9%) 4378.582 B/op [Average]
[info]   (min, avg, max) = (53346.649, 54590.062, 55822.326), stdev = 1137.104
[info]   CI (99.9%): [50211.480, 58968.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.305 ±(99.9%) 5.254 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.305, 3.039), stdev = 1.364
[info]   CI (99.9%): [≈ 0, 6.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   17.488 ±(99.9%) 69.816 B/op [Average]
[info]   (min, avg, max) = (0.281, 17.488, 39.188), stdev = 18.131
[info]   CI (99.9%): [≈ 0, 87.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   61.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (12.000, 12.200, 13.000), stdev = 0.447
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   109.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (17.000, 21.800, 28.000), stdev = 4.868
[info]   CI (99.9%): [109.000, 109.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:33:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 282206.411 ops/s
[info] # Warmup Iteration   2: 1617416.386 ops/s
[info] # Warmup Iteration   3: 2164353.336 ops/s
[info] Iteration   1: 2205517.880 ops/s
[info]                  ·gc.alloc.rate:                   608.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              433.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          639.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     456.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2106992.541 ops/s
[info]                  ·gc.alloc.rate:               586.278 MB/sec
[info]                  ·gc.alloc.rate.norm:          437.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:      640.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 478.699 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 2224988.983 ops/s
[info]                  ·gc.alloc.rate:                   610.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              431.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2212354.244 ops/s
[info]                  ·gc.alloc.rate:               619.965 MB/sec
[info]                  ·gc.alloc.rate.norm:          441.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 458.253 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2191557.658 ops/s
[info]                  ·gc.alloc.rate:                   605.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     464.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   2188282.261 ±(99.9%) 181048.429 ops/s [Average]
[info]   (min, avg, max) = (2106992.541, 2188282.261, 2224988.983), stdev = 47017.702
[info]   CI (99.9%): [2007233.832, 2369330.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   606.150 ±(99.9%) 47.517 MB/sec [Average]
[info]   (min, avg, max) = (586.278, 606.150, 619.965), stdev = 12.340
[info]   CI (99.9%): [558.633, 653.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   435.930 ±(99.9%) 13.923 B/op [Average]
[info]   (min, avg, max) = (431.806, 435.930, 441.057), stdev = 3.616
[info]   CI (99.9%): [422.007, 449.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   578.679 ±(99.9%) 553.767 MB/sec [Average]
[info]   (min, avg, max) = (321.478, 578.679, 647.331), stdev = 143.812
[info]   CI (99.9%): [24.912, 1132.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   417.085 ±(99.9%) 409.798 B/op [Average]
[info]   (min, avg, max) = (227.356, 417.085, 478.699), stdev = 106.423
[info]   CI (99.9%): [7.287, 826.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.045), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:32:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 683636.544 ops/s
[info] # Warmup Iteration   2: 1654692.356 ops/s
[info] # Warmup Iteration   3: 1892286.635 ops/s
[info] Iteration   1: 1899267.590 ops/s
[info]                  ·gc.alloc.rate:                   518.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     271.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1894806.448 ops/s
[info]                  ·gc.alloc.rate:                   531.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              441.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     545.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1930376.638 ops/s
[info]                  ·gc.alloc.rate:               531.466 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 267.758 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1910875.130 ops/s
[info]                  ·gc.alloc.rate:                   534.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1949131.110 ops/s
[info]                  ·gc.alloc.rate:               533.623 MB/sec
[info]                  ·gc.alloc.rate.norm:          430.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 265.725 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   1916891.383 ±(99.9%) 87295.674 ops/s [Average]
[info]   (min, avg, max) = (1894806.448, 1916891.383, 1949131.110), stdev = 22670.409
[info]   CI (99.9%): [1829595.709, 2004187.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   529.992 ±(99.9%) 24.653 MB/sec [Average]
[info]   (min, avg, max) = (518.854, 529.992, 534.791), stdev = 6.402
[info]   CI (99.9%): [505.339, 554.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   435.073 ±(99.9%) 20.541 B/op [Average]
[info]   (min, avg, max) = (429.768, 435.073, 441.186), stdev = 5.334
[info]   CI (99.9%): [414.532, 455.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.888 ±(99.9%) 692.894 MB/sec [Average]
[info]   (min, avg, max) = (327.888, 459.888, 657.746), stdev = 179.942
[info]   CI (99.9%): [≈ 0, 1152.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   378.321 ±(99.9%) 579.882 B/op [Average]
[info]   (min, avg, max) = (265.725, 378.321, 545.029), stdev = 150.593
[info]   CI (99.9%): [≈ 0, 958.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.082 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.049), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 8.000), stdev = 2.490
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:32:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 501535.716 ops/s
[info] # Warmup Iteration   2: 1730676.495 ops/s
[info] # Warmup Iteration   3: 1896839.494 ops/s
[info] Iteration   1: 1901872.978 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1895332.725 ops/s
[info]                  ·gc.alloc.rate:      6.669 MB/sec
[info]                  ·gc.alloc.rate.norm: 5.536 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1959312.593 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1960692.548 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1960663.807 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1935574.930 ±(99.9%) 130284.417 ops/s [Average]
[info]   (min, avg, max) = (1895332.725, 1935574.930, 1960692.548), stdev = 33834.449
[info]   CI (99.9%): [1805290.514, 2065859.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.334 ±(99.9%) 11.483 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.334, 6.669), stdev = 2.982
[info]   CI (99.9%): [≈ 0, 12.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.107 ±(99.9%) 9.534 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.107, 5.536), stdev = 2.476
[info]   CI (99.9%): [≈ 0, 10.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:32:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5852.342 ops/s
[info] # Warmup Iteration   2: 35988.505 ops/s
[info] # Warmup Iteration   3: 55632.826 ops/s
[info] Iteration   1: 52537.827 ops/s
[info]                  ·gc.alloc.rate:                   2365.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              70839.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68947.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.199 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.843 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 58176.055 ops/s
[info]                  ·gc.alloc.rate:                   2162.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              58509.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53579.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.765 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.752 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 57298.983 ops/s
[info]                  ·gc.alloc.rate:                   2005.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              55079.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54573.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.146 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 56645.062 ops/s
[info]                  ·gc.alloc.rate:                   1984.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              55143.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55536.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.892 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 56921.389 ops/s
[info]                  ·gc.alloc.rate:                   2004.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              55420.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55643.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.151 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   56315.863 ±(99.9%) 8430.938 ops/s [Average]
[info]   (min, avg, max) = (52537.827, 56315.863, 58176.055), stdev = 2189.488
[info]   CI (99.9%): [47884.925, 64746.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2104.701 ±(99.9%) 626.551 MB/sec [Average]
[info]   (min, avg, max) = (1984.690, 2104.701, 2365.903), stdev = 162.713
[info]   CI (99.9%): [1478.150, 2731.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   58998.342 ±(99.9%) 26078.219 B/op [Average]
[info]   (min, avg, max) = (55079.372, 58998.342, 70839.074), stdev = 6772.431
[info]   CI (99.9%): [32920.123, 85076.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2056.375 ±(99.9%) 532.324 MB/sec [Average]
[info]   (min, avg, max) = (1980.674, 2056.375, 2302.718), stdev = 138.243
[info]   CI (99.9%): [1524.051, 2588.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   57656.063 ±(99.9%) 24516.913 B/op [Average]
[info]   (min, avg, max) = (53579.507, 57656.063, 68947.190), stdev = 6366.964
[info]   CI (99.9%): [33139.150, 82172.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.859 ±(99.9%) 3.995 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.859, 2.199), stdev = 1.038
[info]   CI (99.9%): [≈ 0, 4.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   24.557 ±(99.9%) 116.103 B/op [Average]
[info]   (min, avg, max) = (1.151, 24.557, 65.843), stdev = 30.152
[info]   CI (99.9%): [≈ 0, 140.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 19.000), stdev = 4.472
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:32:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51652.405 ops/s
[info] # Warmup Iteration   2: 552719.673 ops/s
[info] # Warmup Iteration   3: 1054921.572 ops/s
[info] Iteration   1: 1184381.778 ops/s
[info]                  ·gc.alloc.rate:                   3397.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              4514.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3235.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4299.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.553 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1195555.698 ops/s
[info]                  ·gc.alloc.rate:                   3453.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              4545.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3287.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4326.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1180868.761 ops/s
[info]                  ·gc.alloc.rate:                   3434.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3341.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4452.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1234102.145 ops/s
[info]                  ·gc.alloc.rate:                   3584.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              4570.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3374.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4302.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 1228826.444 ops/s
[info]                  ·gc.alloc.rate:                   3578.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              4582.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3731.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4778.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   1204746.965 ±(99.9%) 96476.436 ops/s [Average]
[info]   (min, avg, max) = (1180868.761, 1204746.965, 1234102.145), stdev = 25054.624
[info]   CI (99.9%): [1108270.530, 1301223.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   3489.663 ±(99.9%) 331.896 MB/sec [Average]
[info]   (min, avg, max) = (3397.353, 3489.663, 3584.213), stdev = 86.192
[info]   CI (99.9%): [3157.767, 3821.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4558.005 ±(99.9%) 108.616 B/op [Average]
[info]   (min, avg, max) = (4514.453, 4558.005, 4582.797), stdev = 28.207
[info]   CI (99.9%): [4449.388, 4666.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3393.997 ±(99.9%) 754.297 MB/sec [Average]
[info]   (min, avg, max) = (3235.505, 3393.997, 3731.502), stdev = 195.889
[info]   CI (99.9%): [2639.700, 4148.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4432.014 ±(99.9%) 784.243 B/op [Average]
[info]   (min, avg, max) = (4299.387, 4432.014, 4778.641), stdev = 203.665
[info]   CI (99.9%): [3647.771, 5216.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.129 ±(99.9%) 0.627 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.129, 0.416), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.171 ±(99.9%) 0.835 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.171, 0.553), stdev = 0.217
[info]   CI (99.9%): [≈ 0, 1.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   51.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.600, 15.000), stdev = 0.894
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:32:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.554 ops/s
[info] # Warmup Iteration   2: 4184511.309 ops/s
[info] # Warmup Iteration   3: 4982942.567 ops/s
[info] Iteration   1: 5266852.362 ops/s
[info]                  ·gc.alloc.rate:                   325.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              97.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5271273.331 ops/s
[info]                  ·gc.alloc.rate:               327.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          97.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97.260 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4959411.296 ops/s
[info]                  ·gc.alloc.rate:                   311.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5006150.000 ops/s
[info]                  ·gc.alloc.rate:                   311.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5254306.727 ops/s
[info]                  ·gc.alloc.rate:               332.771 MB/sec
[info]                  ·gc.alloc.rate.norm:          99.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97.568 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   5151598.743 ±(99.9%) 597302.042 ops/s [Average]
[info]   (min, avg, max) = (4959411.296, 5151598.743, 5271273.331), stdev = 155117.444
[info]   CI (99.9%): [4554296.701, 5748900.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   321.779 ±(99.9%) 37.524 MB/sec [Average]
[info]   (min, avg, max) = (311.178, 321.779, 332.771), stdev = 9.745
[info]   CI (99.9%): [284.255, 359.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   98.291 ±(99.9%) 3.527 B/op [Average]
[info]   (min, avg, max) = (97.317, 98.291, 99.639), stdev = 0.916
[info]   CI (99.9%): [94.765, 101.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   325.801 ±(99.9%) 0.182 MB/sec [Average]
[info]   (min, avg, max) = (325.737, 325.801, 325.854), stdev = 0.047
[info]   CI (99.9%): [325.619, 325.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   99.590 ±(99.9%) 11.680 B/op [Average]
[info]   (min, avg, max) = (97.260, 99.590, 103.370), stdev = 3.033
[info]   CI (99.9%): [87.910, 111.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.161 ±(99.9%) 1.335 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.161, 0.781), stdev = 0.347
[info]   CI (99.9%): [≈ 0, 1.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.399 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.233), stdev = 0.104
[info]   CI (99.9%): [≈ 0, 0.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:31:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26858.780 ops/s
[info] # Warmup Iteration   2: 595440.626 ops/s
[info] # Warmup Iteration   3: 1021899.599 ops/s
[info] Iteration   1: 1098886.445 ops/s
[info]                  ·gc.alloc.rate:                   1280.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              1833.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1852.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1091674.277 ops/s
[info]                  ·gc.alloc.rate:                   1234.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              1779.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1880.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1090708.773 ops/s
[info]                  ·gc.alloc.rate:                   1216.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              1754.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1421.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.352 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1096040.284 ops/s
[info]                  ·gc.alloc.rate:                   1232.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              1769.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1892.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.359 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1081974.267 ops/s
[info]                  ·gc.alloc.rate:               1215.620 MB/sec
[info]                  ·gc.alloc.rate.norm:          1768.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1324.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1925.887 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   1091856.809 ±(99.9%) 24801.046 ops/s [Average]
[info]   (min, avg, max) = (1081974.267, 1091856.809, 1098886.445), stdev = 6440.753
[info]   CI (99.9%): [1067055.763, 1116657.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1235.730 ±(99.9%) 101.412 MB/sec [Average]
[info]   (min, avg, max) = (1215.620, 1235.730, 1280.256), stdev = 26.336
[info]   CI (99.9%): [1134.318, 1337.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1780.981 ±(99.9%) 117.881 B/op [Average]
[info]   (min, avg, max) = (1754.911, 1780.981, 1833.497), stdev = 30.613
[info]   CI (99.9%): [1663.101, 1898.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1245.022 ±(99.9%) 561.380 MB/sec [Average]
[info]   (min, avg, max) = (985.076, 1245.022, 1324.080), stdev = 145.788
[info]   CI (99.9%): [683.642, 1806.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1794.483 ±(99.9%) 809.982 B/op [Average]
[info]   (min, avg, max) = (1421.123, 1794.483, 1925.887), stdev = 210.350
[info]   CI (99.9%): [984.501, 2604.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.250 ±(99.9%) 1.529 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.250, 0.937), stdev = 0.397
[info]   CI (99.9%): [≈ 0, 1.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.360 ±(99.9%) 2.205 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.360, 1.352), stdev = 0.573
[info]   CI (99.9%): [≈ 0, 2.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 9.000), stdev = 1.643
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:31:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2845971.037 ops/s
[info] # Warmup Iteration   2: 8937644.865 ops/s
[info] # Warmup Iteration   3: 10140461.169 ops/s
[info] Iteration   1: 10456296.233 ops/s
[info]                  ·gc.alloc.rate:               486.725 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49.430 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 10484500.928 ops/s
[info]                  ·gc.alloc.rate:                   500.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 10511858.169 ops/s
[info]                  ·gc.alloc.rate:               490.736 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49.270 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 10461668.358 ops/s
[info]                  ·gc.alloc.rate:                   499.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 10473427.545 ops/s
[info]                  ·gc.alloc.rate:               488.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49.552 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   10477550.247 ±(99.9%) 84939.428 ops/s [Average]
[info]   (min, avg, max) = (10456296.233, 10477550.247, 10511858.169), stdev = 22058.500
[info]   CI (99.9%): [10392610.819, 10562489.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   493.228 ±(99.9%) 24.006 MB/sec [Average]
[info]   (min, avg, max) = (486.725, 493.228, 500.658), stdev = 6.234
[info]   CI (99.9%): [469.222, 517.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   74.085 ±(99.9%) 3.629 B/op [Average]
[info]   (min, avg, max) = (73.261, 74.085, 75.147), stdev = 0.942
[info]   CI (99.9%): [70.456, 77.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   460.737 ±(99.9%) 694.103 MB/sec [Average]
[info]   (min, avg, max) = (328.397, 460.737, 658.795), stdev = 180.256
[info]   CI (99.9%): [≈ 0, 1154.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   69.214 ±(99.9%) 104.383 B/op [Average]
[info]   (min, avg, max) = (49.270, 69.214, 99.114), stdev = 27.108
[info]   CI (99.9%): [≈ 0, 173.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 7.000), stdev = 1.949
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:31:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 701.579 ops/s
[info] # Warmup Iteration   2: 219366.986 ops/s
[info] # Warmup Iteration   3: 748497.191 ops/s
[info] Iteration   1: 782996.138 ops/s
[info]                  ·gc.alloc.rate:                   2879.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              5788.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2951.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5932.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.894 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.816 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 773744.937 ops/s
[info]                  ·gc.alloc.rate:                   2843.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              5783.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2634.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5358.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.169 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 756526.544 ops/s
[info]                  ·gc.alloc.rate:                   2808.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              5843.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2664.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5542.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 755037.869 ops/s
[info]                  ·gc.alloc.rate:                   2811.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              5860.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2688.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5603.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 773711.289 ops/s
[info]                  ·gc.alloc.rate:               2872.616 MB/sec
[info]                  ·gc.alloc.rate.norm:          5842.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2704.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5500.906 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   768403.355 ±(99.9%) 46740.173 ops/s [Average]
[info]   (min, avg, max) = (755037.869, 768403.355, 782996.138), stdev = 12138.274
[info]   CI (99.9%): [721663.182, 815143.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2843.179 ±(99.9%) 127.133 MB/sec [Average]
[info]   (min, avg, max) = (2808.966, 2843.179, 2879.592), stdev = 33.016
[info]   CI (99.9%): [2716.046, 2970.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   5823.685 ±(99.9%) 136.906 B/op [Average]
[info]   (min, avg, max) = (5783.061, 5823.685, 5860.529), stdev = 35.554
[info]   CI (99.9%): [5686.779, 5960.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2728.670 ±(99.9%) 490.695 MB/sec [Average]
[info]   (min, avg, max) = (2634.639, 2728.670, 2951.706), stdev = 127.432
[info]   CI (99.9%): [2237.976, 3219.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   5587.839 ±(99.9%) 819.898 B/op [Average]
[info]   (min, avg, max) = (5358.996, 5587.839, 5932.986), stdev = 212.925
[info]   CI (99.9%): [4767.941, 6407.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.616 ±(99.9%) 4.904 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.616, 2.894), stdev = 1.273
[info]   CI (99.9%): [≈ 0, 5.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.240 ±(99.9%) 9.853 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.240, 5.816), stdev = 2.559
[info]   CI (99.9%): [≈ 0, 11.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.800, 17.000), stdev = 2.387
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:31:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 341.852 ops/s
[info] # Warmup Iteration   2: 2977.157 ops/s
[info] # Warmup Iteration   3: 4433.109 ops/s
[info] Iteration   1: 5289.317 ops/s
[info]                  ·gc.alloc.rate:                   2346.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              698332.542 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2286.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     680454.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.860 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 255.769 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 5292.465 ops/s
[info]                  ·gc.alloc.rate:                   2342.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              696553.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2306.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     685912.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.535 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.083 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 5363.270 ops/s
[info]                  ·gc.alloc.rate:                   2389.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              700886.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2328.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     682893.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.473 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138.654 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 5285.796 ops/s
[info]                  ·gc.alloc.rate:                   2373.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              706854.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     698620.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80.572 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 5283.327 ops/s
[info]                  ·gc.alloc.rate:                   2361.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              703315.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     602177.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.014 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   5302.835 ±(99.9%) 130.774 ops/s [Average]
[info]   (min, avg, max) = (5283.327, 5302.835, 5363.270), stdev = 33.962
[info]   CI (99.9%): [5172.061, 5433.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   2362.972 ±(99.9%) 74.420 MB/sec [Average]
[info]   (min, avg, max) = (2342.784, 2362.972, 2389.558), stdev = 19.327
[info]   CI (99.9%): [2288.551, 2437.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   701188.469 ±(99.9%) 15683.713 B/op [Average]
[info]   (min, avg, max) = (696553.419, 701188.469, 706854.240), stdev = 4073.010
[info]   CI (99.9%): [685504.756, 716872.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2258.078 ±(99.9%) 515.461 MB/sec [Average]
[info]   (min, avg, max) = (2021.970, 2258.078, 2346.336), stdev = 133.863
[info]   CI (99.9%): [1742.617, 2773.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   670011.703 ±(99.9%) 148485.194 B/op [Average]
[info]   (min, avg, max) = (602177.114, 670011.703, 698620.949), stdev = 38561.133
[info]   CI (99.9%): [521526.510, 818496.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.469 ±(99.9%) 0.990 MB/sec [Average]
[info]   (min, avg, max) = (0.208, 0.469, 0.860), stdev = 0.257
[info]   CI (99.9%): [≈ 0, 1.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   139.218 ±(99.9%) 294.385 B/op [Average]
[info]   (min, avg, max) = (62.014, 139.218, 255.769), stdev = 76.451
[info]   CI (99.9%): [≈ 0, 433.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 14.000), stdev = 2.000
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:30:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 511.727 ops/s
[info] # Warmup Iteration   2: 4675.448 ops/s
[info] # Warmup Iteration   3: 7157.851 ops/s
[info] Iteration   1: 7749.131 ops/s
[info]                  ·gc.alloc.rate:                   3137.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              637128.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2950.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     599302.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.145 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 7556.820 ops/s
[info]                  ·gc.alloc.rate:                   3108.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              647194.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2982.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     621057.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.671 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 7734.369 ops/s
[info]                  ·gc.alloc.rate:                   3186.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              648314.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3015.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     613679.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.179 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 7653.888 ops/s
[info]                  ·gc.alloc.rate:                   3155.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              648796.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3038.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     624762.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.281 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 7556.755 ops/s
[info]                  ·gc.alloc.rate:                   3117.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              649259.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     635555.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.336 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   7650.193 ±(99.9%) 356.768 ops/s [Average]
[info]   (min, avg, max) = (7556.755, 7650.193, 7749.131), stdev = 92.652
[info]   CI (99.9%): [7293.425, 8006.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3140.800 ±(99.9%) 120.014 MB/sec [Average]
[info]   (min, avg, max) = (3108.092, 3140.800, 3186.103), stdev = 31.167
[info]   CI (99.9%): [3020.787, 3260.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   646138.740 ±(99.9%) 19619.167 B/op [Average]
[info]   (min, avg, max) = (637128.396, 646138.740, 649259.047), stdev = 5095.035
[info]   CI (99.9%): [626519.573, 665757.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3007.866 ±(99.9%) 158.679 MB/sec [Average]
[info]   (min, avg, max) = (2950.913, 3007.866, 3051.678), stdev = 41.208
[info]   CI (99.9%): [2849.187, 3166.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   618871.381 ±(99.9%) 51938.561 B/op [Average]
[info]   (min, avg, max) = (599302.242, 618871.381, 635555.260), stdev = 13488.279
[info]   CI (99.9%): [566932.820, 670809.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.150 ±(99.9%) 0.897 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.150, 0.562), stdev = 0.233
[info]   CI (99.9%): [≈ 0, 1.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   30.522 ±(99.9%) 181.959 B/op [Average]
[info]   (min, avg, max) = (4.281, 30.522, 114.145), stdev = 47.254
[info]   CI (99.9%): [≈ 0, 212.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   45.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.000, 9.000), stdev = 0.001
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.000, 14.000), stdev = 0.001
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:30:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26887.089 ops/s
[info] # Warmup Iteration   2: 48161.481 ops/s
[info] # Warmup Iteration   3: 55025.519 ops/s
[info] Iteration   1: 56813.474 ops/s
[info]                  ·gc.alloc.rate:                   950.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              26334.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18149.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.577 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 54777.296 ops/s
[info]                  ·gc.alloc.rate:                   917.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              26354.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28289.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 55893.693 ops/s
[info]                  ·gc.alloc.rate:                   933.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              26279.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27704.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.802 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 55823.378 ops/s
[info]                  ·gc.alloc.rate:                   925.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              26087.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27626.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.302 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 56163.418 ops/s
[info]                  ·gc.alloc.rate:                   939.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              26294.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27348.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.582 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   55894.252 ±(99.9%) 2836.198 ops/s [Average]
[info]   (min, avg, max) = (54777.296, 55894.252, 56813.474), stdev = 736.552
[info]   CI (99.9%): [53058.054, 58730.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   933.252 ±(99.9%) 49.172 MB/sec [Average]
[info]   (min, avg, max) = (917.490, 933.252, 950.818), stdev = 12.770
[info]   CI (99.9%): [884.080, 982.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26270.270 ±(99.9%) 409.980 B/op [Average]
[info]   (min, avg, max) = (26087.514, 26270.270, 26354.332), stdev = 106.470
[info]   CI (99.9%): [25860.291, 26680.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   916.183 ±(99.9%) 561.745 MB/sec [Average]
[info]   (min, avg, max) = (655.284, 916.183, 984.850), stdev = 145.883
[info]   CI (99.9%): [354.438, 1477.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25823.607 ±(99.9%) 16571.572 B/op [Average]
[info]   (min, avg, max) = (18149.531, 25823.607, 28289.196), stdev = 4303.585
[info]   CI (99.9%): [9252.035, 42395.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 5.510 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.841, 3.332), stdev = 1.431
[info]   CI (99.9%): [≈ 0, 6.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   23.692 ±(99.9%) 155.126 B/op [Average]
[info]   (min, avg, max) = (0.577, 23.692, 93.802), stdev = 40.286
[info]   CI (99.9%): [≈ 0, 178.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:30:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1058.526 ops/s
[info] # Warmup Iteration   2: 3354.677 ops/s
[info] # Warmup Iteration   3: 4914.675 ops/s
[info] Iteration   1: 5255.607 ops/s
[info]                  ·gc.alloc.rate:                   965.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              288898.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     289620.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.166 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 5323.635 ops/s
[info]                  ·gc.alloc.rate:                   947.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              279925.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          968.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286118.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.461 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5350.538 ops/s
[info]                  ·gc.alloc.rate:                   962.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              283121.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285948.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.245 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 5386.440 ops/s
[info]                  ·gc.alloc.rate:                   963.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              281465.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285400.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.307 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5308.046 ops/s
[info]                  ·gc.alloc.rate:                   945.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              280141.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     291622.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   5324.853 ±(99.9%) 187.970 ops/s [Average]
[info]   (min, avg, max) = (5255.607, 5324.853, 5386.440), stdev = 48.815
[info]   CI (99.9%): [5136.883, 5512.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   956.631 ±(99.9%) 37.262 MB/sec [Average]
[info]   (min, avg, max) = (945.070, 956.631, 965.019), stdev = 9.677
[info]   CI (99.9%): [919.369, 993.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   282710.714 ±(99.9%) 14196.176 B/op [Average]
[info]   (min, avg, max) = (279925.410, 282710.714, 288898.820), stdev = 3686.702
[info]   CI (99.9%): [268514.538, 296906.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   973.665 ±(99.9%) 26.171 MB/sec [Average]
[info]   (min, avg, max) = (967.428, 973.665, 983.799), stdev = 6.796
[info]   CI (99.9%): [947.494, 999.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   287741.912 ±(99.9%) 10531.185 B/op [Average]
[info]   (min, avg, max) = (285400.279, 287741.912, 291622.238), stdev = 2734.915
[info]   CI (99.9%): [277210.727, 298273.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.133 ±(99.9%) 0.448 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.133, 0.333), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   39.242 ±(99.9%) 130.614 B/op [Average]
[info]   (min, avg, max) = (12.245, 39.242, 97.307), stdev = 33.920
[info]   CI (99.9%): [≈ 0, 169.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:30:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 774.725 ops/s
[info] # Warmup Iteration   2: 4087.764 ops/s
[info] # Warmup Iteration   3: 5024.677 ops/s
[info] Iteration   1: 5309.963 ops/s
[info]                  ·gc.alloc.rate:               569.214 MB/sec
[info]                  ·gc.alloc.rate.norm:          168676.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94966.119 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 5292.480 ops/s
[info]                  ·gc.alloc.rate:                   573.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              170361.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190740.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.379 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5257.313 ops/s
[info]                  ·gc.alloc.rate:                   578.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              173180.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192508.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.231 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5129.698 ops/s
[info]                  ·gc.alloc.rate:               548.326 MB/sec
[info]                  ·gc.alloc.rate.norm:          168174.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98808.516 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 5296.961 ops/s
[info]                  ·gc.alloc.rate:               579.776 MB/sec
[info]                  ·gc.alloc.rate.norm:          172227.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 191783.719 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   5257.283 ±(99.9%) 284.701 ops/s [Average]
[info]   (min, avg, max) = (5129.698, 5257.283, 5309.963), stdev = 73.936
[info]   CI (99.9%): [4972.582, 5541.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   569.769 ±(99.9%) 48.974 MB/sec [Average]
[info]   (min, avg, max) = (548.326, 569.769, 579.776), stdev = 12.718
[info]   CI (99.9%): [520.795, 618.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   170524.191 ±(99.9%) 8375.002 B/op [Average]
[info]   (min, avg, max) = (168174.026, 170524.191, 173180.719), stdev = 2174.961
[info]   CI (99.9%): [162149.189, 178899.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   514.575 ±(99.9%) 679.358 MB/sec [Average]
[info]   (min, avg, max) = (320.471, 514.575, 645.608), stdev = 176.427
[info]   CI (99.9%): [≈ 0, 1193.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   153761.335 ±(99.9%) 200003.249 B/op [Average]
[info]   (min, avg, max) = (94966.119, 153761.335, 192508.106), stdev = 51940.209
[info]   CI (99.9%): [≈ 0, 353764.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.722 ±(99.9%) 21.336 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.722, 12.379), stdev = 5.541
[info]   CI (99.9%): [≈ 0, 25.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 4.000), stdev = 1.304
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:30:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2974.810 ops/s
[info] # Warmup Iteration   2: 5985.604 ops/s
[info] # Warmup Iteration   3: 6910.861 ops/s
[info] Iteration   1: 6918.657 ops/s
[info]                  ·gc.alloc.rate:                   229.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              52206.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58186.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.884 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 6963.986 ops/s
[info]                  ·gc.alloc.rate:      224.610 MB/sec
[info]                  ·gc.alloc.rate.norm: 50752.062 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6922.881 ops/s
[info]                  ·gc.alloc.rate:               229.132 MB/sec
[info]                  ·gc.alloc.rate.norm:          52085.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74498.107 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 6931.962 ops/s
[info]                  ·gc.alloc.rate:                   231.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              52624.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74401.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.411 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6959.898 ops/s
[info]                  ·gc.alloc.rate:      224.506 MB/sec
[info]                  ·gc.alloc.rate.norm: 50752.062 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6939.477 ±(99.9%) 81.300 ops/s [Average]
[info]   (min, avg, max) = (6918.657, 6939.477, 6963.986), stdev = 21.113
[info]   CI (99.9%): [6858.177, 7020.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   227.924 ±(99.9%) 12.477 MB/sec [Average]
[info]   (min, avg, max) = (224.506, 227.924, 231.831), stdev = 3.240
[info]   CI (99.9%): [215.447, 240.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   51684.308 ±(99.9%) 3366.157 B/op [Average]
[info]   (min, avg, max) = (50752.062, 51684.308, 52624.677), stdev = 874.180
[info]   CI (99.9%): [48318.151, 55050.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   182.265 ±(99.9%) 650.583 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 182.265, 327.765), stdev = 168.954
[info]   CI (99.9%): [≈ 0, 832.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   41417.279 ±(99.9%) 147815.277 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41417.279, 74498.107), stdev = 38387.158
[info]   CI (99.9%): [≈ 0, 189232.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.459 ±(99.9%) 18.288 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.459, 10.884), stdev = 4.749
[info]   CI (99.9%): [≈ 0, 20.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 2.408
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:29:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3466.332 ops/s
[info] # Warmup Iteration   2: 6198.344 ops/s
[info] # Warmup Iteration   3: 6938.591 ops/s
[info] Iteration   1: 6965.882 ops/s
[info]                  ·gc.alloc.rate:      177.354 MB/sec
[info]                  ·gc.alloc.rate.norm: 40071.359 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6955.128 ops/s
[info]                  ·gc.alloc.rate:               184.223 MB/sec
[info]                  ·gc.alloc.rate.norm:          41684.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57877.416 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 7032.408 ops/s
[info]                  ·gc.alloc.rate:      175.435 MB/sec
[info]                  ·gc.alloc.rate.norm: 39248.083 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6984.249 ops/s
[info]                  ·gc.alloc.rate:               182.897 MB/sec
[info]                  ·gc.alloc.rate.norm:          41211.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73697.512 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 6979.123 ops/s
[info]                  ·gc.alloc.rate:                   180.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              40651.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73760.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.096 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6983.358 ±(99.9%) 114.342 ops/s [Average]
[info]   (min, avg, max) = (6955.128, 6983.358, 7032.408), stdev = 29.694
[info]   CI (99.9%): [6869.016, 7097.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   180.041 ±(99.9%) 14.167 MB/sec [Average]
[info]   (min, avg, max) = (175.435, 180.041, 184.223), stdev = 3.679
[info]   CI (99.9%): [165.873, 194.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   40573.286 ±(99.9%) 3681.165 B/op [Average]
[info]   (min, avg, max) = (39248.083, 40573.286, 41684.410), stdev = 955.987
[info]   CI (99.9%): [36892.121, 44254.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   182.000 ±(99.9%) 649.504 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 182.000, 327.138), stdev = 168.674
[info]   CI (99.9%): [≈ 0, 831.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   41067.158 ±(99.9%) 146491.901 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41067.158, 73760.862), stdev = 38043.482
[info]   CI (99.9%): [≈ 0, 187559.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.005 ±(99.9%) 0.047 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.027), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   1.219 ±(99.9%) 10.498 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.219, 6.096), stdev = 2.726
[info]   CI (99.9%): [≈ 0, 11.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 2.408
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:29:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 843.136 ops/s
[info] # Warmup Iteration   2: 3649.082 ops/s
[info] # Warmup Iteration   3: 7523.586 ops/s
[info] Iteration   1: 8874.476 ops/s
[info]                  ·gc.alloc.rate:                   1860.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              329849.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1588.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281663.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.389 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 423.516 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   2: 9011.305 ops/s
[info]                  ·gc.alloc.rate:                   1892.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              330407.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1918.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     335002.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 349.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   3: 9130.022 ops/s
[info]                  ·gc.alloc.rate:                   1909.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              329167.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1911.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     329431.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.304 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 741.931 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 8984.255 ops/s
[info]                  ·gc.alloc.rate:                   1903.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              333434.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1909.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     334489.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.751 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 9013.032 ops/s
[info]                  ·gc.alloc.rate:                   1929.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              336986.389 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1935.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338010.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.241 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.141 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   9002.618 ±(99.9%) 350.670 ops/s [Average]
[info]   (min, avg, max) = (8874.476, 9002.618, 9130.022), stdev = 91.068
[info]   CI (99.9%): [8651.949, 9353.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1899.025 ±(99.9%) 98.661 MB/sec [Average]
[info]   (min, avg, max) = (1860.309, 1899.025, 1929.830), stdev = 25.622
[info]   CI (99.9%): [1800.364, 1997.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   331968.851 ±(99.9%) 12492.732 B/op [Average]
[info]   (min, avg, max) = (329167.587, 331968.851, 336986.389), stdev = 3244.323
[info]   CI (99.9%): [319476.119, 344461.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1852.620 ±(99.9%) 569.842 MB/sec [Average]
[info]   (min, avg, max) = (1588.550, 1852.620, 1935.693), stdev = 147.986
[info]   CI (99.9%): [1282.777, 2422.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   323719.417 ±(99.9%) 91302.249 B/op [Average]
[info]   (min, avg, max) = (281663.791, 323719.417, 338010.189), stdev = 23710.904
[info]   CI (99.9%): [232417.168, 415021.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.806 ±(99.9%) 6.667 MB/sec [Average]
[info]   (min, avg, max) = (0.096, 1.806, 4.304), stdev = 1.731
[info]   CI (99.9%): [≈ 0, 8.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   314.672 ±(99.9%) 1152.955 B/op [Average]
[info]   (min, avg, max) = (16.751, 314.672, 741.931), stdev = 299.419
[info]   CI (99.9%): [≈ 0, 1467.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   88.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 17.600, 29.000), stdev = 10.502
[info]   CI (99.9%): [88.000, 88.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:29:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.837 ops/s
[info] # Warmup Iteration   2: 14207.644 ops/s
[info] # Warmup Iteration   3: 17805.610 ops/s
[info] Iteration   1: 18478.567 ops/s
[info]                  ·gc.alloc.rate:                   465.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              39622.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27517.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.773 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 18311.758 ops/s
[info]                  ·gc.alloc.rate:               470.179 MB/sec
[info]                  ·gc.alloc.rate.norm:          40404.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55537.770 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 18494.767 ops/s
[info]                  ·gc.alloc.rate:                   466.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              39693.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27549.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 17536.349 ops/s
[info]                  ·gc.alloc.rate:               533.272 MB/sec
[info]                  ·gc.alloc.rate.norm:          47856.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58137.979 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 17535.628 ops/s
[info]                  ·gc.alloc.rate:                   507.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              45523.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29087.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.392 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124.936 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   18071.414 ±(99.9%) 1902.203 ops/s [Average]
[info]   (min, avg, max) = (17535.628, 18071.414, 18494.767), stdev = 493.996
[info]   CI (99.9%): [16169.211, 19973.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   488.506 ±(99.9%) 117.414 MB/sec [Average]
[info]   (min, avg, max) = (465.218, 488.506, 533.272), stdev = 30.492
[info]   CI (99.9%): [371.091, 605.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   42620.092 ±(99.9%) 14700.913 B/op [Average]
[info]   (min, avg, max) = (39622.968, 42620.092, 47856.177), stdev = 3817.780
[info]   CI (99.9%): [27919.178, 57321.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   453.035 ±(99.9%) 682.041 MB/sec [Average]
[info]   (min, avg, max) = (323.092, 453.035, 647.844), stdev = 177.124
[info]   CI (99.9%): [≈ 0, 1135.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   39566.062 ±(99.9%) 60865.002 B/op [Average]
[info]   (min, avg, max) = (27517.957, 39566.062, 58137.979), stdev = 15806.448
[info]   CI (99.9%): [≈ 0, 100431.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.292 ±(99.9%) 2.370 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.292, 1.392), stdev = 0.615
[info]   CI (99.9%): [≈ 0, 2.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   26.145 ±(99.9%) 212.749 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.145, 124.936), stdev = 55.250
[info]   CI (99.9%): [≈ 0, 238.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 9.000), stdev = 2.302
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:29:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1095.439 ops/s
[info] # Warmup Iteration   2: 10920.248 ops/s
[info] # Warmup Iteration   3: 14872.070 ops/s
[info] Iteration   1: 14900.488 ops/s
[info]                  ·gc.alloc.rate:               401.946 MB/sec
[info]                  ·gc.alloc.rate.norm:          42446.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33878.370 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 13761.012 ops/s
[info]                  ·gc.alloc.rate:               376.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          43071.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36834.241 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 13950.511 ops/s
[info]                  ·gc.alloc.rate:                   388.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              43862.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72820.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.218 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 14235.762 ops/s
[info]                  ·gc.alloc.rate:               387.561 MB/sec
[info]                  ·gc.alloc.rate.norm:          42849.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35755.278 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 14969.405 ops/s
[info]                  ·gc.alloc.rate:                   406.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              42725.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34107.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.473 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   14363.436 ±(99.9%) 2113.778 ops/s [Average]
[info]   (min, avg, max) = (13761.012, 14363.436, 14969.405), stdev = 548.941
[info]   CI (99.9%): [12249.657, 16477.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   392.281 ±(99.9%) 46.116 MB/sec [Average]
[info]   (min, avg, max) = (376.628, 392.281, 406.458), stdev = 11.976
[info]   CI (99.9%): [346.165, 438.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   42990.890 ±(99.9%) 2066.567 B/op [Average]
[info]   (min, avg, max) = (42446.783, 42990.890, 43862.130), stdev = 536.681
[info]   CI (99.9%): [40924.323, 45057.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   387.257 ±(99.9%) 555.946 MB/sec [Average]
[info]   (min, avg, max) = (320.808, 387.257, 645.516), stdev = 144.377
[info]   CI (99.9%): [≈ 0, 943.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   42679.247 ±(99.9%) 65050.718 B/op [Average]
[info]   (min, avg, max) = (33878.370, 42679.247, 72820.909), stdev = 16893.465
[info]   CI (99.9%): [≈ 0, 107729.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.135 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.073), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.738 ±(99.9%) 14.914 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.738, 8.218), stdev = 3.873
[info]   CI (99.9%): [≈ 0, 17.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:29:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6053.584 ops/s
[info] # Warmup Iteration   2: 16693.003 ops/s
[info] # Warmup Iteration   3: 23510.567 ops/s
[info] Iteration   1: 22323.980 ops/s
[info]                  ·gc.alloc.rate:                   586.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              41372.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45741.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 22631.337 ops/s
[info]                  ·gc.alloc.rate:                   422.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              29354.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22560.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.554 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.046 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 22272.192 ops/s
[info]                  ·gc.alloc.rate:                   613.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              43384.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45944.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.655 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 23265.957 ops/s
[info]                  ·gc.alloc.rate:                   434.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              29398.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21989.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.797 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121.533 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 23269.519 ops/s
[info]                  ·gc.alloc.rate:                   447.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              30275.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43994.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.816 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   22752.597 ±(99.9%) 1886.376 ops/s [Average]
[info]   (min, avg, max) = (22272.192, 22752.597, 23269.519), stdev = 489.886
[info]   CI (99.9%): [20866.221, 24638.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   501.113 ±(99.9%) 352.926 MB/sec [Average]
[info]   (min, avg, max) = (422.295, 501.113, 613.973), stdev = 91.654
[info]   CI (99.9%): [148.187, 854.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   34757.172 ±(99.9%) 26966.821 B/op [Average]
[info]   (min, avg, max) = (29354.935, 34757.172, 43384.480), stdev = 7003.198
[info]   CI (99.9%): [7790.352, 61723.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   519.872 ±(99.9%) 685.608 MB/sec [Average]
[info]   (min, avg, max) = (324.552, 519.872, 650.520), stdev = 178.050
[info]   CI (99.9%): [≈ 0, 1205.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   36046.172 ±(99.9%) 48501.041 B/op [Average]
[info]   (min, avg, max) = (21989.905, 36046.172, 45944.340), stdev = 12595.566
[info]   CI (99.9%): [≈ 0, 84547.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.689 ±(99.9%) 3.484 MB/sec [Average]
[info]   (min, avg, max) = (0.023, 0.689, 1.797), stdev = 0.905
[info]   CI (99.9%): [≈ 0, 4.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   47.213 ±(99.9%) 238.253 B/op [Average]
[info]   (min, avg, max) = (1.655, 47.213, 121.533), stdev = 61.874
[info]   CI (99.9%): [≈ 0, 285.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.702
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:28:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105.826 ops/s
[info] # Warmup Iteration   2: 2496.028 ops/s
[info] # Warmup Iteration   3: 5594.895 ops/s
[info] Iteration   1: 6597.559 ops/s
[info]                  ·gc.alloc.rate:                   2532.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              603946.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2608.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     622090.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 895.818 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 6619.993 ops/s
[info]                  ·gc.alloc.rate:                   2510.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              596888.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2291.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     544635.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.915 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 6606.916 ops/s
[info]                  ·gc.alloc.rate:               2523.128 MB/sec
[info]                  ·gc.alloc.rate.norm:          601061.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2311.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 550708.688 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 6395.556 ops/s
[info]                  ·gc.alloc.rate:                   2490.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              612753.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2671.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     657306.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.490 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 6683.448 ops/s
[info]                  ·gc.alloc.rate:                   2579.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              607377.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554717.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.705 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   6580.694 ±(99.9%) 418.955 ops/s [Average]
[info]   (min, avg, max) = (6395.556, 6580.694, 6683.448), stdev = 108.801
[info]   CI (99.9%): [6161.739, 6999.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2527.121 ±(99.9%) 127.846 MB/sec [Average]
[info]   (min, avg, max) = (2490.117, 2527.121, 2579.439), stdev = 33.201
[info]   CI (99.9%): [2399.275, 2654.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   604405.694 ±(99.9%) 23296.433 B/op [Average]
[info]   (min, avg, max) = (596888.865, 604405.694, 612753.127), stdev = 6050.010
[info]   CI (99.9%): [581109.261, 627702.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2447.581 ±(99.9%) 686.433 MB/sec [Average]
[info]   (min, avg, max) = (2291.095, 2447.581, 2671.173), stdev = 178.264
[info]   CI (99.9%): [1761.148, 3134.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   585891.837 ±(99.9%) 195608.745 B/op [Average]
[info]   (min, avg, max) = (544635.632, 585891.837, 657306.512), stdev = 50798.970
[info]   CI (99.9%): [390283.092, 781500.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.868 ±(99.9%) 6.251 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.868, 3.756), stdev = 1.623
[info]   CI (99.9%): [≈ 0, 7.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   206.986 ±(99.9%) 1490.987 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 206.986, 895.818), stdev = 387.205
[info]   CI (99.9%): [≈ 0, 1697.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.400, 20.000), stdev = 3.782
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:28:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 776.374 ops/s
[info] # Warmup Iteration   2: 8382.773 ops/s
[info] # Warmup Iteration   3: 11457.105 ops/s
[info] Iteration   1: 12016.649 ops/s
[info]                  ·gc.alloc.rate:                   2283.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              299087.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2224.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     291392.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 643.827 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 12286.706 ops/s
[info]                  ·gc.alloc.rate:                   2322.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              297474.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2222.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284734.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.920 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 12259.222 ops/s
[info]                  ·gc.alloc.rate:                   2349.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              301609.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2251.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288995.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.672 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 11705.074 ops/s
[info]                  ·gc.alloc.rate:                   2355.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              316744.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2287.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     307622.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.580 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 615.770 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 11805.830 ops/s
[info]                  ·gc.alloc.rate:                   2256.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              300672.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2308.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     307717.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.649 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   12014.696 ±(99.9%) 1006.480 ops/s [Average]
[info]   (min, avg, max) = (11705.074, 12014.696, 12286.706), stdev = 261.380
[info]   CI (99.9%): [11008.217, 13021.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   2313.429 ±(99.9%) 164.945 MB/sec [Average]
[info]   (min, avg, max) = (2256.013, 2313.429, 2355.646), stdev = 42.836
[info]   CI (99.9%): [2148.484, 2478.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   303117.825 ±(99.9%) 29951.750 B/op [Average]
[info]   (min, avg, max) = (297474.948, 303117.825, 316744.151), stdev = 7778.374
[info]   CI (99.9%): [273166.075, 333069.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2259.136 ±(99.9%) 147.162 MB/sec [Average]
[info]   (min, avg, max) = (2222.906, 2259.136, 2308.874), stdev = 38.217
[info]   CI (99.9%): [2111.974, 2406.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   296092.396 ±(99.9%) 41720.361 B/op [Average]
[info]   (min, avg, max) = (284734.162, 296092.396, 307717.853), stdev = 10834.645
[info]   CI (99.9%): [254372.035, 337812.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2.006 ±(99.9%) 9.662 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.006, 4.916), stdev = 2.509
[info]   CI (99.9%): [≈ 0, 11.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   265.768 ±(99.9%) 1281.894 B/op [Average]
[info]   (min, avg, max) = (2.672, 265.768, 643.827), stdev = 332.904
[info]   CI (99.9%): [≈ 0, 1547.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.400, 23.000), stdev = 5.505
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:28:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.634 ops/s
[info] # Warmup Iteration   2: 52063.040 ops/s
[info] # Warmup Iteration   3: 65885.528 ops/s
[info] Iteration   1: 67178.731 ops/s
[info]                  ·gc.alloc.rate:                   728.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              17067.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15169.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.657 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 69998.942 ops/s
[info]                  ·gc.alloc.rate:               675.952 MB/sec
[info]                  ·gc.alloc.rate.norm:          15197.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14558.563 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 70187.019 ops/s
[info]                  ·gc.alloc.rate:                   673.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              15103.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14548.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.792 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 69134.258 ops/s
[info]                  ·gc.alloc.rate:               663.959 MB/sec
[info]                  ·gc.alloc.rate.norm:          15109.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14786.191 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 70092.206 ops/s
[info]                  ·gc.alloc.rate:                   678.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              15220.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14598.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.582 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   69318.231 ±(99.9%) 4881.557 ops/s [Average]
[info]   (min, avg, max) = (67178.731, 69318.231, 70187.019), stdev = 1267.725
[info]   CI (99.9%): [64436.674, 74199.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   684.046 ±(99.9%) 98.146 MB/sec [Average]
[info]   (min, avg, max) = (663.959, 684.046, 728.599), stdev = 25.488
[info]   CI (99.9%): [585.900, 782.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   15539.629 ±(99.9%) 3294.488 B/op [Average]
[info]   (min, avg, max) = (15103.830, 15539.629, 17067.292), stdev = 855.568
[info]   CI (99.9%): [12245.141, 18834.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   648.831 ±(99.9%) 5.019 MB/sec [Average]
[info]   (min, avg, max) = (647.525, 648.831, 650.461), stdev = 1.304
[info]   CI (99.9%): [643.811, 653.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14732.371 ±(99.9%) 1011.209 B/op [Average]
[info]   (min, avg, max) = (14548.826, 14732.371, 15169.612), stdev = 262.608
[info]   CI (99.9%): [13721.162, 15743.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.849 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 3.412), stdev = 1.519
[info]   CI (99.9%): [≈ 0, 6.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   15.606 ±(99.9%) 131.262 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.606, 76.582), stdev = 34.088
[info]   CI (99.9%): [≈ 0, 146.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:28:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9462.505 ops/s
[info] # Warmup Iteration   2: 36237.752 ops/s
[info] # Warmup Iteration   3: 43555.192 ops/s
[info] Iteration   1: 41943.110 ops/s
[info]                  ·gc.alloc.rate:                   776.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              29133.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          965.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36232.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 43365.493 ops/s
[info]                  ·gc.alloc.rate:                   666.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              24204.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23487.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.838 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.418 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 43636.056 ops/s
[info]                  ·gc.alloc.rate:               680.452 MB/sec
[info]                  ·gc.alloc.rate.norm:          24539.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23436.496 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 43941.919 ops/s
[info]                  ·gc.alloc.rate:               678.943 MB/sec
[info]                  ·gc.alloc.rate.norm:          24318.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23358.421 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 43734.989 ops/s
[info]                  ·gc.alloc.rate:                   678.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              24407.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23552.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.531 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   43324.314 ±(99.9%) 3078.526 ops/s [Average]
[info]   (min, avg, max) = (41943.110, 43324.314, 43941.919), stdev = 799.484
[info]   CI (99.9%): [40245.787, 46402.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   696.235 ±(99.9%) 173.865 MB/sec [Average]
[info]   (min, avg, max) = (666.985, 696.235, 776.434), stdev = 45.152
[info]   CI (99.9%): [522.370, 870.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   25320.640 ±(99.9%) 8220.897 B/op [Average]
[info]   (min, avg, max) = (24204.471, 25320.640, 29133.440), stdev = 2134.941
[info]   CI (99.9%): [17099.744, 33541.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   713.894 ±(99.9%) 541.974 MB/sec [Average]
[info]   (min, avg, max) = (647.238, 713.894, 965.626), stdev = 140.749
[info]   CI (99.9%): [171.920, 1255.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   26013.490 ±(99.9%) 21998.570 B/op [Average]
[info]   (min, avg, max) = (23358.421, 26013.490, 36232.351), stdev = 5712.959
[info]   CI (99.9%): [4014.920, 48012.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.476 ±(99.9%) 2.663 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.476, 1.531), stdev = 0.692
[info]   CI (99.9%): [≈ 0, 3.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   17.174 ±(99.9%) 95.952 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.174, 55.072), stdev = 24.918
[info]   CI (99.9%): [≈ 0, 113.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 9.000), stdev = 1.789
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:27:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40088.323 ops/s
[info] # Warmup Iteration   2: 85215.591 ops/s
[info] # Warmup Iteration   3: 96863.713 ops/s
[info] Iteration   1: 100177.035 ops/s
[info]                  ·gc.alloc.rate:                   781.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              12276.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15310.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 105615.214 ops/s
[info]                  ·gc.alloc.rate:                   816.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              12169.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9698.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 99449.417 ops/s
[info]                  ·gc.alloc.rate:                   779.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              12334.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10320.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 105434.332 ops/s
[info]                  ·gc.alloc.rate:                   818.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              12218.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14617.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.760 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 100638.989 ops/s
[info]                  ·gc.alloc.rate:                   777.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              12160.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10167.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.186 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   102262.998 ±(99.9%) 11583.911 ops/s [Average]
[info]   (min, avg, max) = (99449.417, 102262.998, 105615.214), stdev = 3008.305
[info]   CI (99.9%): [90679.086, 113846.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   794.775 ±(99.9%) 80.624 MB/sec [Average]
[info]   (min, avg, max) = (777.720, 794.775, 818.470), stdev = 20.938
[info]   CI (99.9%): [714.151, 875.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   12231.945 ±(99.9%) 284.334 B/op [Average]
[info]   (min, avg, max) = (12160.532, 12231.945, 12334.973), stdev = 73.841
[info]   CI (99.9%): [11947.610, 12516.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   781.428 ±(99.9%) 687.088 MB/sec [Average]
[info]   (min, avg, max) = (650.270, 781.428, 979.223), stdev = 178.435
[info]   CI (99.9%): [94.340, 1468.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   12023.029 ±(99.9%) 10419.758 B/op [Average]
[info]   (min, avg, max) = (9698.283, 12023.029, 15310.964), stdev = 2705.978
[info]   CI (99.9%): [1603.271, 22442.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.838 ±(99.9%) 6.321 MB/sec [Average]
[info]   (min, avg, max) = (0.004, 0.838, 3.760), stdev = 1.641
[info]   CI (99.9%): [≈ 0, 7.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.578 ±(99.9%) 94.272 B/op [Average]
[info]   (min, avg, max) = (0.053, 12.578, 56.126), stdev = 24.482
[info]   CI (99.9%): [≈ 0, 106.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 11.000), stdev = 2.966
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:27:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34099.881 ops/s
[info] # Warmup Iteration   2: 118108.888 ops/s
[info] # Warmup Iteration   3: 124274.119 ops/s
[info] Iteration   1: 132780.621 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 133869.266 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 128871.496 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 132817.588 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 134367.391 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   132541.272 ±(99.9%) 8325.580 ops/s [Average]
[info]   (min, avg, max) = (128871.496, 132541.272, 134367.391), stdev = 2162.127
[info]   CI (99.9%): [124215.692, 140866.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
[info]   CI (99.9%): [0.003, 0.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:27:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 544.774 ops/s
[info] # Warmup Iteration   2: 6062.062 ops/s
[info] # Warmup Iteration   3: 8316.209 ops/s
[info] Iteration   1: 8684.293 ops/s
[info]                  ·gc.alloc.rate:                   2377.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              430790.617 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2299.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416726.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 205.603 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 9130.229 ops/s
[info]                  ·gc.alloc.rate:                   2473.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              426284.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2310.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     398210.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.177 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 9169.216 ops/s
[info]                  ·gc.alloc.rate:                   2523.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              433065.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2661.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     456886.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.146 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 8987.137 ops/s
[info]                  ·gc.alloc.rate:                   2475.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              433447.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2348.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     411311.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.936 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 8904.605 ops/s
[info]                  ·gc.alloc.rate:                   2461.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              434925.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2362.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     417570.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.679 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   8975.096 ±(99.9%) 749.218 ops/s [Average]
[info]   (min, avg, max) = (8684.293, 8975.096, 9169.216), stdev = 194.570
[info]   CI (99.9%): [8225.878, 9724.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2461.888 ±(99.9%) 203.891 MB/sec [Average]
[info]   (min, avg, max) = (2377.175, 2461.888, 2523.033), stdev = 52.950
[info]   CI (99.9%): [2257.998, 2665.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   431702.671 ±(99.9%) 12982.675 B/op [Average]
[info]   (min, avg, max) = (426284.852, 431702.671, 434925.073), stdev = 3371.559
[info]   CI (99.9%): [418719.996, 444685.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2396.628 ±(99.9%) 579.691 MB/sec [Average]
[info]   (min, avg, max) = (2299.565, 2396.628, 2661.817), stdev = 150.544
[info]   CI (99.9%): [1816.937, 2976.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   420141.171 ±(99.9%) 84526.253 B/op [Average]
[info]   (min, avg, max) = (398210.859, 420141.171, 456886.893), stdev = 21951.200
[info]   CI (99.9%): [335614.918, 504667.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.331 ±(99.9%) 1.828 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.331, 1.135), stdev = 0.475
[info]   CI (99.9%): [≈ 0, 2.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   59.108 ±(99.9%) 331.447 B/op [Average]
[info]   (min, avg, max) = (3.679, 59.108, 205.603), stdev = 86.076
[info]   CI (99.9%): [≈ 0, 390.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.600, 13.000), stdev = 1.342
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:27:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 707433.018 ops/s
[info] # Warmup Iteration   2: 10026989.305 ops/s
[info] # Warmup Iteration   3: 11859600.318 ops/s
[info] Iteration   1: 13426301.969 ops/s
[info]                  ·gc.alloc.rate:                   5936.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              695.494 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6002.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     703.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        18.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 13738549.241 ops/s
[info]                  ·gc.alloc.rate:                   6077.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              695.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5756.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     659.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   3: 13530665.005 ops/s
[info]                  ·gc.alloc.rate:                   6008.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              698.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5779.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     672.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   4: 13612371.104 ops/s
[info]                  ·gc.alloc.rate:                   6058.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              700.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5787.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     669.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   5: 13672272.000 ops/s
[info]                  ·gc.alloc.rate:                   5978.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          5776.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     664.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        17.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   13596031.864 ±(99.9%) 469525.183 ops/s [Average]
[info]   (min, avg, max) = (13426301.969, 13596031.864, 13738549.241), stdev = 121934.199
[info]   CI (99.9%): [13126506.681, 14065557.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   6011.818 ±(99.9%) 221.357 MB/sec [Average]
[info]   (min, avg, max) = (5936.939, 6011.818, 6077.712), stdev = 57.486
[info]   CI (99.9%): [5790.461, 6233.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   695.757 ±(99.9%) 18.104 B/op [Average]
[info]   (min, avg, max) = (688.161, 695.757, 700.391), stdev = 4.701
[info]   CI (99.9%): [677.653, 713.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   5820.379 ±(99.9%) 394.018 MB/sec [Average]
[info]   (min, avg, max) = (5756.371, 5820.379, 6002.288), stdev = 102.325
[info]   CI (99.9%): [5426.361, 6214.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   673.703 ±(99.9%) 66.115 B/op [Average]
[info]   (min, avg, max) = (659.160, 673.703, 703.150), stdev = 17.170
[info]   CI (99.9%): [607.588, 739.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.187 ±(99.9%) 0.457 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 0.187, 0.396), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.052 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.022, 0.046), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   86.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (17.000, 17.200, 18.000), stdev = 0.447
[info]   CI (99.9%): [86.000, 86.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   113.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (21.000, 22.600, 24.000), stdev = 1.140
[info]   CI (99.9%): [113.000, 113.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:27:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.548 ops/s
[info] # Warmup Iteration   2: 39490694.055 ops/s
[info] # Warmup Iteration   3: 41518616.091 ops/s
[info] Iteration   1: 42518824.325 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 38113804.298 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 42451864.896 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 42361376.481 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 42481663.695 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   41585506.739 ±(99.9%) 7476461.052 ops/s [Average]
[info]   (min, avg, max) = (38113804.298, 41585506.739, 42518824.325), stdev = 1941613.193
[info]   CI (99.9%): [34109045.687, 49061967.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:26:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 304014.708 ops/s
[info] # Warmup Iteration   2: 18578426.911 ops/s
[info] # Warmup Iteration   3: 26434934.702 ops/s
[info] Iteration   1: 25017955.065 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 26415741.156 ops/s
[info]                  ·gc.alloc.rate:      0.080 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 26475530.690 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 26436426.061 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 26462418.231 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   26161614.241 ±(99.9%) 2463422.867 ops/s [Average]
[info]   (min, avg, max) = (25017955.065, 26161614.241, 26475530.690), stdev = 639743.096
[info]   CI (99.9%): [23698191.374, 28625037.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   0.016 ±(99.9%) 0.138 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.016, 0.080), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:26:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11781140.127 ops/s
[info] # Warmup Iteration   2: 43362133.582 ops/s
[info] # Warmup Iteration   3: 48419143.648 ops/s
[info] Iteration   1: 48406661.523 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 48400929.821 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 48406211.300 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 48415497.384 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 48378866.344 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   48401633.274 ±(99.9%) 52982.506 ops/s [Average]
[info]   (min, avg, max) = (48378866.344, 48401633.274, 48415497.384), stdev = 13759.389
[info]   CI (99.9%): [48348650.769, 48454615.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:26:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6802552.618 ops/s
[info] # Warmup Iteration   2: 28059856.730 ops/s
[info] # Warmup Iteration   3: 31033899.634 ops/s
[info] Iteration   1: 30788000.928 ops/s
[info]                  ·gc.alloc.rate:                   809.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.389 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 31194344.662 ops/s
[info]                  ·gc.alloc.rate:                   812.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 30887243.105 ops/s
[info]                  ·gc.alloc.rate:               812.167 MB/sec
[info]                  ·gc.alloc.rate.norm:          41.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.653 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 31184891.600 ops/s
[info]                  ·gc.alloc.rate:                   814.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 31378219.556 ops/s
[info]                  ·gc.alloc.rate:                   823.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   31086539.970 ±(99.9%) 933764.630 ops/s [Average]
[info]   (min, avg, max) = (30788000.928, 31086539.970, 31378219.556), stdev = 242495.709
[info]   CI (99.9%): [30152775.340, 32020304.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   814.570 ±(99.9%) 20.938 MB/sec [Average]
[info]   (min, avg, max) = (809.730, 814.570, 823.809), stdev = 5.437
[info]   CI (99.9%): [793.632, 835.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   41.240 ±(99.9%) 0.682 B/op [Average]
[info]   (min, avg, max) = (41.000, 41.240, 41.389), stdev = 0.177
[info]   CI (99.9%): [40.558, 41.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   791.665 ±(99.9%) 696.972 MB/sec [Average]
[info]   (min, avg, max) = (658.183, 791.665, 991.868), stdev = 181.001
[info]   CI (99.9%): [94.693, 1488.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.103 ±(99.9%) 35.788 B/op [Average]
[info]   (min, avg, max) = (33.012, 40.103, 50.501), stdev = 9.294
[info]   CI (99.9%): [4.315, 75.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.777 ±(99.9%) 5.739 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.777, 3.427), stdev = 1.490
[info]   CI (99.9%): [≈ 0, 6.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.290 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.173), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 10.000), stdev = 2.739
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:26:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 483758.656 ops/s
[info] # Warmup Iteration   2: 19872811.031 ops/s
[info] # Warmup Iteration   3: 24593658.057 ops/s
[info] Iteration   1: 24608730.773 ops/s
[info]                  ·gc.alloc.rate:      0.161 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 24694772.947 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 24704291.753 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 24716245.310 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 24744437.016 ops/s
[info]                  ·gc.alloc.rate:      6.555 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.417 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   24693695.560 ±(99.9%) 196492.682 ops/s [Average]
[info]   (min, avg, max) = (24608730.773, 24693695.560, 24744437.016), stdev = 51028.526
[info]   CI (99.9%): [24497202.877, 24890188.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1.343 ±(99.9%) 11.222 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.343, 6.555), stdev = 2.914
[info]   CI (99.9%): [≈ 0, 12.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   0.085 ±(99.9%) 0.714 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.085, 0.417), stdev = 0.185
[info]   CI (99.9%): [≈ 0, 0.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:26:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1389896.539 ops/s
[info] # Warmup Iteration   2: 19821215.717 ops/s
[info] # Warmup Iteration   3: 20835670.354 ops/s
[info] Iteration   1: 20748700.374 ops/s
[info]                  ·gc.alloc.rate:                   1637.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 20988710.546 ops/s
[info]                  ·gc.alloc.rate:                   1652.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 21130075.581 ops/s
[info]                  ·gc.alloc.rate:               1656.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          123.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1633.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 121.665 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 20626468.816 ops/s
[info]                  ·gc.alloc.rate:                   1637.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 20626920.640 ops/s
[info]                  ·gc.alloc.rate:                   1625.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   20824175.191 ±(99.9%) 870323.364 ops/s [Average]
[info]   (min, avg, max) = (20626468.816, 20824175.191, 21130075.581), stdev = 226020.214
[info]   CI (99.9%): [19953851.828, 21694498.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   1641.993 ±(99.9%) 47.773 MB/sec [Average]
[info]   (min, avg, max) = (1625.832, 1641.993, 1656.488), stdev = 12.407
[info]   CI (99.9%): [1594.220, 1689.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   124.091 ±(99.9%) 2.208 B/op [Average]
[info]   (min, avg, max) = (123.372, 124.091, 124.951), stdev = 0.573
[info]   CI (99.9%): [121.883, 126.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1576.600 ±(99.9%) 541.225 MB/sec [Average]
[info]   (min, avg, max) = (1325.342, 1576.600, 1644.674), stdev = 140.554
[info]   CI (99.9%): [1035.375, 2117.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   119.115 ±(99.9%) 39.237 B/op [Average]
[info]   (min, avg, max) = (101.099, 119.115, 125.468), stdev = 10.190
[info]   CI (99.9%): [79.878, 158.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 6.065 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.862, 3.643), stdev = 1.575
[info]   CI (99.9%): [≈ 0, 6.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.460 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.065, 0.276), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 17.000), stdev = 4.722
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:25:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.670 ops/s
[info] # Warmup Iteration   2: 53467374.833 ops/s
[info] # Warmup Iteration   3: 54716859.934 ops/s
[info] Iteration   1: 57515955.191 ops/s
[info]                  ·gc.alloc.rate:                   1231.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 58156864.655 ops/s
[info]                  ·gc.alloc.rate:                   1224.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.210 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 57729665.659 ops/s
[info]                  ·gc.alloc.rate:                   1203.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.624 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 59030781.335 ops/s
[info]                  ·gc.alloc.rate:                   1230.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          969.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 58966006.576 ops/s
[info]                  ·gc.alloc.rate:                   1231.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   58279854.683 ±(99.9%) 2678947.112 ops/s [Average]
[info]   (min, avg, max) = (57515955.191, 58279854.683, 59030781.335), stdev = 695714.058
[info]   CI (99.9%): [55600907.571, 60958801.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1224.223 ±(99.9%) 46.316 MB/sec [Average]
[info]   (min, avg, max) = (1203.386, 1224.223, 1231.278), stdev = 12.028
[info]   CI (99.9%): [1177.907, 1270.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   33.058 ±(99.9%) 1.425 B/op [Average]
[info]   (min, avg, max) = (32.808, 33.058, 33.680), stdev = 0.370
[info]   CI (99.9%): [31.633, 34.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1169.102 ±(99.9%) 691.564 MB/sec [Average]
[info]   (min, avg, max) = (969.589, 1169.102, 1304.778), stdev = 179.597
[info]   CI (99.9%): [477.538, 1860.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   31.571 ±(99.9%) 18.728 B/op [Average]
[info]   (min, avg, max) = (25.850, 31.571, 35.413), stdev = 4.864
[info]   CI (99.9%): [12.843, 50.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.981 ±(99.9%) 7.023 MB/sec [Average]
[info]   (min, avg, max) = (0.007, 0.981, 4.210), stdev = 1.824
[info]   CI (99.9%): [≈ 0, 8.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.190 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.027, 0.114), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 13.000), stdev = 3.271
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:25:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 964729.813 ops/s
[info] # Warmup Iteration   2: 11162645.423 ops/s
[info] # Warmup Iteration   3: 27305347.947 ops/s
[info] Iteration   1: 27803856.311 ops/s
[info]                  ·gc.alloc.rate:               588.673 MB/sec
[info]                  ·gc.alloc.rate.norm:          33.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36.915 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 26883606.796 ops/s
[info]                  ·gc.alloc.rate:                   570.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 27238651.652 ops/s
[info]                  ·gc.alloc.rate:                   561.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 27069427.810 ops/s
[info]                  ·gc.alloc.rate:                   570.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 27713120.144 ops/s
[info]                  ·gc.alloc.rate:                   576.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   27341732.543 ±(99.9%) 1547630.591 ops/s [Average]
[info]   (min, avg, max) = (26883606.796, 27341732.543, 27803856.311), stdev = 401914.750
[info]   CI (99.9%): [25794101.951, 28889363.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   573.588 ±(99.9%) 38.385 MB/sec [Average]
[info]   (min, avg, max) = (561.905, 573.588, 588.673), stdev = 9.968
[info]   CI (99.9%): [535.204, 611.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   33.013 ±(99.9%) 1.504 B/op [Average]
[info]   (min, avg, max) = (32.467, 33.013, 33.378), stdev = 0.391
[info]   CI (99.9%): [31.509, 34.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   585.770 ±(99.9%) 561.208 MB/sec [Average]
[info]   (min, avg, max) = (325.081, 585.770, 653.593), stdev = 145.744
[info]   CI (99.9%): [24.562, 1146.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   33.706 ±(99.9%) 32.205 B/op [Average]
[info]   (min, avg, max) = (18.783, 33.706, 38.259), stdev = 8.364
[info]   CI (99.9%): [1.501, 65.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 6.453 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.883, 3.873), stdev = 1.676
[info]   CI (99.9%): [≈ 0, 7.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.052 ±(99.9%) 0.378 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.052, 0.227), stdev = 0.098
[info]   CI (99.9%): [≈ 0, 0.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 8.000), stdev = 2.702
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:25:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9202519.154 ops/s
[info] # Warmup Iteration   2: 48336943.019 ops/s
[info] # Warmup Iteration   3: 51577919.821 ops/s
[info] Iteration   1: 52026249.488 ops/s
[info]                  ·gc.alloc.rate:                   1092.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 51341998.386 ops/s
[info]                  ·gc.alloc.rate:                   1079.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 51085892.115 ops/s
[info]                  ·gc.alloc.rate:                   1071.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 51994467.240 ops/s
[info]                  ·gc.alloc.rate:                   1083.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 52079297.984 ops/s
[info]                  ·gc.alloc.rate:                   1091.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   51705581.042 ±(99.9%) 1766848.312 ops/s [Average]
[info]   (min, avg, max) = (51085892.115, 51705581.042, 52079297.984), stdev = 458844.896
[info]   CI (99.9%): [49938732.730, 53472429.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1083.740 ±(99.9%) 33.722 MB/sec [Average]
[info]   (min, avg, max) = (1071.287, 1083.740, 1092.159), stdev = 8.757
[info]   CI (99.9%): [1050.018, 1117.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   32.985 ±(99.9%) 0.409 B/op [Average]
[info]   (min, avg, max) = (32.808, 32.985, 33.090), stdev = 0.106
[info]   CI (99.9%): [32.576, 33.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1049.289 ±(99.9%) 553.830 MB/sec [Average]
[info]   (min, avg, max) = (980.606, 1049.289, 1306.535), stdev = 143.828
[info]   CI (99.9%): [495.460, 1603.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   31.924 ±(99.9%) 16.298 B/op [Average]
[info]   (min, avg, max) = (29.681, 31.924, 39.477), stdev = 4.233
[info]   CI (99.9%): [15.626, 48.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.839 ±(99.9%) 7.072 MB/sec [Average]
[info]   (min, avg, max) = (0.008, 0.839, 4.124), stdev = 1.837
[info]   CI (99.9%): [≈ 0, 7.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.218 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.026, 0.127), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.286
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:25:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16085763.845 ops/s
[info] # Warmup Iteration   2: 56481264.594 ops/s
[info] # Warmup Iteration   3: 65347261.690 ops/s
[info] Iteration   1: 65314024.495 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 62778628.715 ops/s
[info]                  ·gc.alloc.rate:      2.265 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.057 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 62952383.196 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 63043060.926 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 62886830.868 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   63394985.640 ±(99.9%) 4147527.480 ops/s [Average]
[info]   (min, avg, max) = (62778628.715, 63394985.640, 65314024.495), stdev = 1077099.715
[info]   CI (99.9%): [59247458.160, 67542513.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.453 ±(99.9%) 3.900 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.453, 2.265), stdev = 1.013
[info]   CI (99.9%): [≈ 0, 4.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.011 ±(99.9%) 0.098 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.011, 0.057), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:24:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6335904.830 ops/s
[info] # Warmup Iteration   2: 23935098.613 ops/s
[info] # Warmup Iteration   3: 26095512.004 ops/s
[info] Iteration   1: 26435106.095 ops/s
[info]                  ·gc.alloc.rate:                   2072.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              123.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 26541183.446 ops/s
[info]                  ·gc.alloc.rate:                   2067.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              122.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 26455170.749 ops/s
[info]                  ·gc.alloc.rate:                   2089.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 26571329.015 ops/s
[info]                  ·gc.alloc.rate:                   2106.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 26428533.535 ops/s
[info]                  ·gc.alloc.rate:                   2095.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              124.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   26486264.568 ±(99.9%) 252275.447 ops/s [Average]
[info]   (min, avg, max) = (26428533.535, 26486264.568, 26571329.015), stdev = 65515.133
[info]   CI (99.9%): [26233989.121, 26738540.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   2086.197 ±(99.9%) 61.717 MB/sec [Average]
[info]   (min, avg, max) = (2067.165, 2086.197, 2106.031), stdev = 16.028
[info]   CI (99.9%): [2024.481, 2147.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   123.961 ±(99.9%) 3.641 B/op [Average]
[info]   (min, avg, max) = (122.579, 123.961, 124.748), stdev = 0.946
[info]   CI (99.9%): [120.320, 127.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1998.291 ±(99.9%) 55.050 MB/sec [Average]
[info]   (min, avg, max) = (1983.194, 1998.291, 2018.981), stdev = 14.296
[info]   CI (99.9%): [1943.241, 2053.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   118.738 ±(99.9%) 3.633 B/op [Average]
[info]   (min, avg, max) = (117.600, 118.738, 120.207), stdev = 0.944
[info]   CI (99.9%): [115.105, 122.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.669 ±(99.9%) 5.222 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.669, 3.094), stdev = 1.356
[info]   CI (99.9%): [≈ 0, 5.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.311 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.040, 0.184), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 10.000), stdev = 1.095
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:24:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 297320.131 ops/s
[info] # Warmup Iteration   2: 2501710.664 ops/s
[info] # Warmup Iteration   3: 3582433.391 ops/s
[info] Iteration   1: 3602368.031 ops/s
[info]                  ·gc.alloc.rate:                   1482.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              647.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     568.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3725923.403 ops/s
[info]                  ·gc.alloc.rate:                   1541.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              651.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     690.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.281 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3706901.356 ops/s
[info]                  ·gc.alloc.rate:                   1527.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     559.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3601883.739 ops/s
[info]                  ·gc.alloc.rate:                   1499.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              655.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     723.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3696028.587 ops/s
[info]                  ·gc.alloc.rate:                   1536.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              654.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     567.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   3666621.023 ±(99.9%) 230423.681 ops/s [Average]
[info]   (min, avg, max) = (3601883.739, 3666621.023, 3725923.403), stdev = 59840.298
[info]   CI (99.9%): [3436197.342, 3897044.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1517.511 ±(99.9%) 98.774 MB/sec [Average]
[info]   (min, avg, max) = (1482.099, 1517.511, 1541.656), stdev = 25.651
[info]   CI (99.9%): [1418.737, 1616.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   651.344 ±(99.9%) 13.140 B/op [Average]
[info]   (min, avg, max) = (647.544, 651.344, 655.252), stdev = 3.412
[info]   CI (99.9%): [638.204, 664.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1448.734 ±(99.9%) 696.131 MB/sec [Average]
[info]   (min, avg, max) = (1300.616, 1448.734, 1656.644), stdev = 180.783
[info]   CI (99.9%): [752.603, 2144.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   621.998 ±(99.9%) 303.906 B/op [Average]
[info]   (min, avg, max) = (559.145, 621.998, 723.887), stdev = 78.923
[info]   CI (99.9%): [318.092, 925.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.183 ±(99.9%) 1.046 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.183, 0.666), stdev = 0.272
[info]   CI (99.9%): [≈ 0, 1.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.078 ±(99.9%) 0.441 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.078, 0.281), stdev = 0.114
[info]   CI (99.9%): [≈ 0, 0.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 8.000), stdev = 1.225
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:24:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45129.222 ops/s
[info] # Warmup Iteration   2: 142059.625 ops/s
[info] # Warmup Iteration   3: 164004.022 ops/s
[info] Iteration   1: 178195.807 ops/s
[info]                  ·gc.alloc.rate:                   3358.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              29657.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3275.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28931.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.839 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 179267.079 ops/s
[info]                  ·gc.alloc.rate:                   3394.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              29797.206 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3321.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29156.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 179512.394 ops/s
[info]                  ·gc.alloc.rate:                   3433.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              30103.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3362.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29475.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.730 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 178557.716 ops/s
[info]                  ·gc.alloc.rate:                   3394.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              29916.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3383.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29817.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.917 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 181611.381 ops/s
[info]                  ·gc.alloc.rate:               3428.197 MB/sec
[info]                  ·gc.alloc.rate.norm:          29697.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3396.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29425.063 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   179428.875 ±(99.9%) 5121.451 ops/s [Average]
[info]   (min, avg, max) = (178195.807, 179428.875, 181611.381), stdev = 1330.025
[info]   CI (99.9%): [174307.424, 184550.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3401.891 ±(99.9%) 117.248 MB/sec [Average]
[info]   (min, avg, max) = (3358.156, 3401.891, 3433.552), stdev = 30.449
[info]   CI (99.9%): [3284.643, 3519.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29834.412 ±(99.9%) 695.362 B/op [Average]
[info]   (min, avg, max) = (29657.555, 29834.412, 30103.217), stdev = 180.583
[info]   CI (99.9%): [29139.051, 30529.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3348.018 ±(99.9%) 189.604 MB/sec [Average]
[info]   (min, avg, max) = (3275.942, 3348.018, 3396.754), stdev = 49.240
[info]   CI (99.9%): [3158.414, 3537.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   29361.453 ±(99.9%) 1294.822 B/op [Average]
[info]   (min, avg, max) = (28931.489, 29361.453, 29817.967), stdev = 336.261
[info]   CI (99.9%): [28066.631, 30656.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.316 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.208), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.734 ±(99.9%) 2.787 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.734, 1.839), stdev = 0.724
[info]   CI (99.9%): [≈ 0, 3.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.000, 10.000), stdev = 0.001
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   72.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.400, 15.000), stdev = 0.548
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:24:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1609.263 ops/s
[info] # Warmup Iteration   2: 21342.441 ops/s
[info] # Warmup Iteration   3: 42843.201 ops/s
[info] Iteration   1: 42752.696 ops/s
[info]                  ·gc.alloc.rate:                   2896.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              106620.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2618.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96387.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.355 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 43232.501 ops/s
[info]                  ·gc.alloc.rate:                   2876.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              104712.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2971.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108172.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.787 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 137.852 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 45704.961 ops/s
[info]                  ·gc.alloc.rate:                   2825.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              97277.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2664.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91705.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.584 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 45505.854 ops/s
[info]                  ·gc.alloc.rate:                   2842.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              98302.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2685.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92872.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.160 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 44970.702 ops/s
[info]                  ·gc.alloc.rate:                   2817.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              98597.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94532.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.457 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   44433.343 ±(99.9%) 5209.995 ops/s [Average]
[info]   (min, avg, max) = (42752.696, 44433.343, 45704.961), stdev = 1353.019
[info]   CI (99.9%): [39223.347, 49643.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2851.767 ±(99.9%) 130.227 MB/sec [Average]
[info]   (min, avg, max) = (2817.375, 2851.767, 2896.829), stdev = 33.820
[info]   CI (99.9%): [2721.540, 2981.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   101101.903 ±(99.9%) 16362.718 B/op [Average]
[info]   (min, avg, max) = (97277.246, 101101.903, 106620.438), stdev = 4249.346
[info]   CI (99.9%): [84739.186, 117464.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2728.169 ±(99.9%) 537.081 MB/sec [Average]
[info]   (min, avg, max) = (2618.801, 2728.169, 2971.447), stdev = 139.478
[info]   CI (99.9%): [2191.088, 3265.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   96734.023 ±(99.9%) 25543.259 B/op [Average]
[info]   (min, avg, max) = (91705.098, 96734.023, 108172.747), stdev = 6633.503
[info]   CI (99.9%): [71190.764, 122277.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.953 ±(99.9%) 6.211 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.953, 3.787), stdev = 1.613
[info]   CI (99.9%): [≈ 0, 7.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34.682 ±(99.9%) 226.279 B/op [Average]
[info]   (min, avg, max) = (1.457, 34.682, 137.852), stdev = 58.764
[info]   CI (99.9%): [≈ 0, 260.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.400, 16.000), stdev = 1.673
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:24:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23784.620 ops/s
[info] # Warmup Iteration   2: 176204.530 ops/s
[info] # Warmup Iteration   3: 208720.747 ops/s
[info] Iteration   1: 229663.160 ops/s
[info]                  ·gc.alloc.rate:                   848.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              5811.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6626.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 231968.710 ops/s
[info]                  ·gc.alloc.rate:                   839.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              5693.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4388.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 229924.326 ops/s
[info]                  ·gc.alloc.rate:                   844.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              5779.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6678.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 232278.457 ops/s
[info]                  ·gc.alloc.rate:                   848.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              5749.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6646.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.937 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 226465.355 ops/s
[info]                  ·gc.alloc.rate:                   823.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              5721.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4560.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.579 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   230060.001 ±(99.9%) 8960.939 ops/s [Average]
[info]   (min, avg, max) = (226465.355, 230060.001, 232278.457), stdev = 2327.127
[info]   CI (99.9%): [221099.062, 239020.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   840.673 ±(99.9%) 40.139 MB/sec [Average]
[info]   (min, avg, max) = (823.274, 840.673, 848.541), stdev = 10.424
[info]   CI (99.9%): [800.534, 880.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5750.898 ±(99.9%) 178.711 B/op [Average]
[info]   (min, avg, max) = (5693.427, 5750.898, 5811.254), stdev = 46.411
[info]   CI (99.9%): [5572.187, 5929.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   845.327 ±(99.9%) 681.703 MB/sec [Average]
[info]   (min, avg, max) = (646.822, 845.327, 980.928), stdev = 177.036
[info]   CI (99.9%): [163.624, 1527.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5779.913 ±(99.9%) 4595.814 B/op [Average]
[info]   (min, avg, max) = (4388.520, 5779.913, 6678.058), stdev = 1193.518
[info]   CI (99.9%): [1184.100, 10375.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.179 ±(99.9%) 1.187 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.179, 0.729), stdev = 0.308
[info]   CI (99.9%): [≈ 0, 1.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.217 ±(99.9%) 8.037 B/op [Average]
[info]   (min, avg, max) = (0.142, 1.217, 4.937), stdev = 2.087
[info]   CI (99.9%): [≈ 0, 9.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 6.000), stdev = 1.817
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:23:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 181769.339 ops/s
[info] # Warmup Iteration   2: 438673.258 ops/s
[info] # Warmup Iteration   3: 531946.949 ops/s
[info] Iteration   1: 530834.118 ops/s
[info]                  ·gc.alloc.rate:                   974.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              2889.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2917.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 532900.320 ops/s
[info]                  ·gc.alloc.rate:                   981.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              2897.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2903.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.775 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 531233.268 ops/s
[info]                  ·gc.alloc.rate:                   964.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              2856.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1932.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.912 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 522608.257 ops/s
[info]                  ·gc.alloc.rate:                   959.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              2889.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2942.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.815 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 535330.571 ops/s
[info]                  ·gc.alloc.rate:               974.947 MB/sec
[info]                  ·gc.alloc.rate.norm:          2866.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2874.032 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   530581.307 ±(99.9%) 18466.219 ops/s [Average]
[info]   (min, avg, max) = (522608.257, 530581.307, 535330.571), stdev = 4795.618
[info]   CI (99.9%): [512115.088, 549047.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   970.794 ±(99.9%) 33.966 MB/sec [Average]
[info]   (min, avg, max) = (959.359, 970.794, 981.021), stdev = 8.821
[info]   CI (99.9%): [936.829, 1004.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2879.700 ±(99.9%) 67.202 B/op [Average]
[info]   (min, avg, max) = (2856.343, 2879.700, 2897.264), stdev = 17.452
[info]   CI (99.9%): [2812.498, 2946.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   914.821 ±(99.9%) 565.541 MB/sec [Average]
[info]   (min, avg, max) = (652.152, 914.821, 983.880), stdev = 146.869
[info]   CI (99.9%): [349.280, 1480.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2714.032 ±(99.9%) 1685.869 B/op [Average]
[info]   (min, avg, max) = (1932.108, 2714.032, 2942.993), stdev = 437.815
[info]   CI (99.9%): [1028.163, 4399.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 5.356 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.862, 3.310), stdev = 1.391
[info]   CI (99.9%): [≈ 0, 6.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.550 ±(99.9%) 15.810 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.550, 9.775), stdev = 4.106
[info]   CI (99.9%): [≈ 0, 18.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 13.000), stdev = 3.975
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:23:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178725.306 ops/s
[info] # Warmup Iteration   2: 475530.209 ops/s
[info] # Warmup Iteration   3: 528954.734 ops/s
[info] Iteration   1: 572605.404 ops/s
[info]                  ·gc.alloc.rate:                   401.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              1103.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     899.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.959 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.636 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 569930.346 ops/s
[info]                  ·gc.alloc.rate:                   410.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              1133.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1804.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 567811.756 ops/s
[info]                  ·gc.alloc.rate:                   401.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              1113.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     906.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 557971.549 ops/s
[info]                  ·gc.alloc.rate:               398.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          1124.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 924.471 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 560514.998 ops/s
[info]                  ·gc.alloc.rate:                   395.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              1110.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     920.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   565766.811 ±(99.9%) 24095.835 ops/s [Average]
[info]   (min, avg, max) = (557971.549, 565766.811, 572605.404), stdev = 6257.612
[info]   CI (99.9%): [541670.975, 589862.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   401.680 ±(99.9%) 21.844 MB/sec [Average]
[info]   (min, avg, max) = (395.575, 401.680, 410.759), stdev = 5.673
[info]   CI (99.9%): [379.835, 423.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1117.195 ±(99.9%) 44.887 B/op [Average]
[info]   (min, avg, max) = (1103.950, 1117.195, 1133.502), stdev = 11.657
[info]   CI (99.9%): [1072.308, 1162.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   392.755 ±(99.9%) 562.413 MB/sec [Average]
[info]   (min, avg, max) = (327.058, 392.755, 654.029), stdev = 146.057
[info]   CI (99.9%): [≈ 0, 955.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   1091.036 ±(99.9%) 1536.966 B/op [Average]
[info]   (min, avg, max) = (899.000, 1091.036, 1804.813), stdev = 399.145
[info]   CI (99.9%): [≈ 0, 2628.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.207 ±(99.9%) 1.620 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.207, 0.959), stdev = 0.421
[info]   CI (99.9%): [≈ 0, 1.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.569 ±(99.9%) 4.451 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.569, 2.636), stdev = 1.156
[info]   CI (99.9%): [≈ 0, 5.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:23:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2793.731 ops/s
[info] # Warmup Iteration   2: 55836.261 ops/s
[info] # Warmup Iteration   3: 71942.997 ops/s
[info] Iteration   1: 73732.082 ops/s
[info]                  ·gc.alloc.rate:                   1535.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              32780.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27997.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.780 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.984 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 84655.087 ops/s
[info]                  ·gc.alloc.rate:                   1465.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              27243.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30503.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.112 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.259 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 85717.440 ops/s
[info]                  ·gc.alloc.rate:                   1408.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              25853.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24047.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.587 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 87978.738 ops/s
[info]                  ·gc.alloc.rate:                   1439.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              25757.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23500.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.117 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 87205.445 ops/s
[info]                  ·gc.alloc.rate:                   1443.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              26056.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29839.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.503 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   83857.758 ±(99.9%) 22354.717 ops/s [Average]
[info]   (min, avg, max) = (73732.082, 83857.758, 87978.738), stdev = 5805.449
[info]   CI (99.9%): [61503.042, 106212.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1458.595 ±(99.9%) 183.938 MB/sec [Average]
[info]   (min, avg, max) = (1408.081, 1458.595, 1535.775), stdev = 47.768
[info]   CI (99.9%): [1274.658, 1642.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   27538.211 ±(99.9%) 11516.291 B/op [Average]
[info]   (min, avg, max) = (25757.105, 27538.211, 32780.704), stdev = 2990.744
[info]   CI (99.9%): [16021.920, 39054.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1445.874 ±(99.9%) 707.739 MB/sec [Average]
[info]   (min, avg, max) = (1309.714, 1445.874, 1653.461), stdev = 183.798
[info]   CI (99.9%): [738.135, 2153.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   27177.681 ±(99.9%) 12498.510 B/op [Average]
[info]   (min, avg, max) = (23500.305, 27177.681, 30503.534), stdev = 3245.823
[info]   CI (99.9%): [14679.171, 39676.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.857 ±(99.9%) 3.862 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.857, 2.112), stdev = 1.003
[info]   CI (99.9%): [≈ 0, 4.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   16.890 ±(99.9%) 76.584 B/op [Average]
[info]   (min, avg, max) = (1.117, 16.890, 39.259), stdev = 19.889
[info]   CI (99.9%): [≈ 0, 93.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 14.000), stdev = 3.578
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:23:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30623.018 ops/s
[info] # Warmup Iteration   2: 337240.237 ops/s
[info] # Warmup Iteration   3: 361386.561 ops/s
[info] Iteration   1: 372708.138 ops/s
[info]                  ·gc.alloc.rate:                   2699.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              11398.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2580.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10897.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.606 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.005 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 365488.433 ops/s
[info]                  ·gc.alloc.rate:                   2629.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              11321.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2595.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11174.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 372720.454 ops/s
[info]                  ·gc.alloc.rate:                   2715.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              11467.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2637.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11136.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 373573.419 ops/s
[info]                  ·gc.alloc.rate:                   2742.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              11554.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2673.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11260.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 363195.726 ops/s
[info]                  ·gc.alloc.rate:                   2667.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              11558.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2696.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11683.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   369537.234 ±(99.9%) 18575.698 ops/s [Average]
[info]   (min, avg, max) = (363195.726, 369537.234, 373573.419), stdev = 4824.050
[info]   CI (99.9%): [350961.536, 388112.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2690.990 ±(99.9%) 169.511 MB/sec [Average]
[info]   (min, avg, max) = (2629.092, 2690.990, 2742.938), stdev = 44.022
[info]   CI (99.9%): [2521.478, 2860.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11460.265 ±(99.9%) 393.922 B/op [Average]
[info]   (min, avg, max) = (11321.038, 11460.265, 11558.874), stdev = 102.300
[info]   CI (99.9%): [11066.343, 11854.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2636.568 ±(99.9%) 190.484 MB/sec [Average]
[info]   (min, avg, max) = (2580.682, 2636.568, 2696.572), stdev = 49.468
[info]   CI (99.9%): [2446.085, 2827.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11230.665 ±(99.9%) 1104.082 B/op [Average]
[info]   (min, avg, max) = (10897.818, 11230.665, 11683.559), stdev = 286.727
[info]   CI (99.9%): [10126.583, 12334.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.550 ±(99.9%) 4.425 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.550, 2.606), stdev = 1.149
[info]   CI (99.9%): [≈ 0, 4.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.325 ±(99.9%) 18.686 B/op [Average]
[info]   (min, avg, max) = (0.090, 2.325, 11.005), stdev = 4.853
[info]   CI (99.9%): [≈ 0, 21.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.600, 16.000), stdev = 2.510
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:23:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61584.581 ops/s
[info] # Warmup Iteration   2: 591684.000 ops/s
[info] # Warmup Iteration   3: 711140.493 ops/s
[info] Iteration   1: 853968.598 ops/s
[info]                  ·gc.alloc.rate:                   1863.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              3435.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2994.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.366 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 869618.580 ops/s
[info]                  ·gc.alloc.rate:                   1912.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              3461.717 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1962.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3551.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 872225.454 ops/s
[info]                  ·gc.alloc.rate:               1896.012 MB/sec
[info]                  ·gc.alloc.rate.norm:          3421.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1649.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2975.546 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 870246.424 ops/s
[info]                  ·gc.alloc.rate:                   1912.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              3459.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3613.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 857969.832 ops/s
[info]                  ·gc.alloc.rate:                   1902.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              3489.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3691.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   864805.778 ±(99.9%) 31752.634 ops/s [Average]
[info]   (min, avg, max) = (853968.598, 864805.778, 872225.454), stdev = 8246.058
[info]   CI (99.9%): [833053.143, 896558.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1897.638 ±(99.9%) 77.676 MB/sec [Average]
[info]   (min, avg, max) = (1863.898, 1897.638, 1912.932), stdev = 20.172
[info]   CI (99.9%): [1819.962, 1975.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3453.547 ±(99.9%) 102.129 B/op [Average]
[info]   (min, avg, max) = (3421.187, 3453.547, 3489.984), stdev = 26.523
[info]   CI (99.9%): [3351.418, 3555.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1849.248 ±(99.9%) 750.614 MB/sec [Average]
[info]   (min, avg, max) = (1624.699, 1849.248, 2012.633), stdev = 194.932
[info]   CI (99.9%): [1098.634, 2599.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3365.165 ±(99.9%) 1350.433 B/op [Average]
[info]   (min, avg, max) = (2975.546, 3365.165, 3691.799), stdev = 350.703
[info]   CI (99.9%): [2014.732, 4715.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.911 ±(99.9%) 7.439 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.911, 4.366), stdev = 1.932
[info]   CI (99.9%): [≈ 0, 8.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.677 ±(99.9%) 13.712 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.677, 8.047), stdev = 3.561
[info]   CI (99.9%): [≈ 0, 15.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 10.000), stdev = 1.140
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:22:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 462860.255 ops/s
[info] # Warmup Iteration   2: 1505652.717 ops/s
[info] # Warmup Iteration   3: 1624502.092 ops/s
[info] Iteration   1: 1632362.395 ops/s
[info]                  ·gc.alloc.rate:                   3296.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              3178.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3292.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3174.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1623522.666 ops/s
[info]                  ·gc.alloc.rate:                   3309.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              3205.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3332.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3228.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1647376.925 ops/s
[info]                  ·gc.alloc.rate:                   3295.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              3148.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3032.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2896.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1647825.025 ops/s
[info]                  ·gc.alloc.rate:                   3329.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              3178.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3234.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 1662711.564 ops/s
[info]                  ·gc.alloc.rate:                   3333.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              3155.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3056.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2893.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1642759.715 ±(99.9%) 58500.033 ops/s [Average]
[info]   (min, avg, max) = (1623522.666, 1642759.715, 1662711.564), stdev = 15192.273
[info]   CI (99.9%): [1584259.682, 1701259.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3313.151 ±(99.9%) 68.803 MB/sec [Average]
[info]   (min, avg, max) = (3295.717, 3313.151, 3333.880), stdev = 17.868
[info]   CI (99.9%): [3244.348, 3381.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3173.300 ±(99.9%) 87.017 B/op [Average]
[info]   (min, avg, max) = (3148.060, 3173.300, 3205.535), stdev = 22.598
[info]   CI (99.9%): [3086.283, 3260.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3220.521 ±(99.9%) 633.004 MB/sec [Average]
[info]   (min, avg, max) = (3032.184, 3220.521, 3388.000), stdev = 164.389
[info]   CI (99.9%): [2587.517, 3853.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3085.348 ±(99.9%) 675.399 B/op [Average]
[info]   (min, avg, max) = (2893.564, 3085.348, 3234.733), stdev = 175.399
[info]   CI (99.9%): [2409.948, 3760.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.163 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.060, 0.119), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.600, 14.000), stdev = 1.140
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:22:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6585.475 ops/s
[info] # Warmup Iteration   2: 120054.051 ops/s
[info] # Warmup Iteration   3: 173317.722 ops/s
[info] Iteration   1: 181911.517 ops/s
[info]                  ·gc.alloc.rate:                   4729.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              40911.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4629.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40043.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.261 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 182807.477 ops/s
[info]                  ·gc.alloc.rate:                   4797.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              41304.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4710.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40553.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 181365.653 ops/s
[info]                  ·gc.alloc.rate:                   4749.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              41219.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4407.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38251.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.723 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 182573.649 ops/s
[info]                  ·gc.alloc.rate:                   4794.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              41333.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4759.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41030.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.897 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 184757.051 ops/s
[info]                  ·gc.alloc.rate:                   4855.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              41363.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4425.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37696.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.532 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   182683.069 ±(99.9%) 4968.572 ops/s [Average]
[info]   (min, avg, max) = (181365.653, 182683.069, 184757.051), stdev = 1290.322
[info]   CI (99.9%): [177714.497, 187651.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4785.501 ±(99.9%) 188.304 MB/sec [Average]
[info]   (min, avg, max) = (4729.735, 4785.501, 4855.773), stdev = 48.902
[info]   CI (99.9%): [4597.196, 4973.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   41226.324 ±(99.9%) 708.555 B/op [Average]
[info]   (min, avg, max) = (40911.550, 41226.324, 41363.433), stdev = 184.009
[info]   CI (99.9%): [40517.769, 41934.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4586.483 ±(99.9%) 624.238 MB/sec [Average]
[info]   (min, avg, max) = (4407.714, 4586.483, 4759.520), stdev = 162.113
[info]   CI (99.9%): [3962.245, 5210.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   39515.137 ±(99.9%) 5632.807 B/op [Average]
[info]   (min, avg, max) = (37696.189, 39515.137, 41030.436), stdev = 1462.822
[info]   CI (99.9%): [33882.330, 45147.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.083, 0.146), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.718 ±(99.9%) 1.554 B/op [Average]
[info]   (min, avg, max) = (0.179, 0.718, 1.261), stdev = 0.404
[info]   CI (99.9%): [≈ 0, 2.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   68.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.600, 14.000), stdev = 0.548
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   89.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 17.800, 19.000), stdev = 1.789
[info]   CI (99.9%): [89.000, 89.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:22:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77463.579 ops/s
[info] # Warmup Iteration   2: 386789.774 ops/s
[info] # Warmup Iteration   3: 431218.499 ops/s
[info] Iteration   1: 459947.651 ops/s
[info]                  ·gc.alloc.rate:                   1515.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              5184.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5596.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.656 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.510 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 468674.375 ops/s
[info]                  ·gc.alloc.rate:                   1541.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              5176.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4366.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.796 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 457009.558 ops/s
[info]                  ·gc.alloc.rate:                   1497.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              5153.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5588.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 481911.023 ops/s
[info]                  ·gc.alloc.rate:                   1569.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              5124.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5330.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 482423.022 ops/s
[info]                  ·gc.alloc.rate:               1577.032 MB/sec
[info]                  ·gc.alloc.rate.norm:          5144.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4298.796 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   469993.126 ±(99.9%) 45876.117 ops/s [Average]
[info]   (min, avg, max) = (457009.558, 469993.126, 482423.022), stdev = 11913.882
[info]   CI (99.9%): [424117.009, 515869.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1539.989 ±(99.9%) 131.730 MB/sec [Average]
[info]   (min, avg, max) = (1497.056, 1539.989, 1577.032), stdev = 34.210
[info]   CI (99.9%): [1408.259, 1671.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5156.771 ±(99.9%) 93.977 B/op [Average]
[info]   (min, avg, max) = (5124.359, 5156.771, 5184.908), stdev = 24.406
[info]   CI (99.9%): [5062.793, 5250.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1501.802 ±(99.9%) 678.216 MB/sec [Average]
[info]   (min, avg, max) = (1300.312, 1501.802, 1635.385), stdev = 176.131
[info]   CI (99.9%): [823.586, 2180.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5036.008 ±(99.9%) 2508.111 B/op [Average]
[info]   (min, avg, max) = (4298.796, 5036.008, 5596.022), stdev = 651.349
[info]   CI (99.9%): [2527.897, 7544.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.910 ±(99.9%) 6.064 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.910, 3.656), stdev = 1.575
[info]   CI (99.9%): [≈ 0, 6.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.104 ±(99.9%) 20.753 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.104, 12.510), stdev = 5.390
[info]   CI (99.9%): [≈ 0, 23.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 21.000), stdev = 6.504
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:22:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 267350.856 ops/s
[info] # Warmup Iteration   2: 872547.033 ops/s
[info] # Warmup Iteration   3: 967260.934 ops/s
[info] Iteration   1: 995949.914 ops/s
[info]                  ·gc.alloc.rate:                   473.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1014.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 998588.328 ops/s
[info]                  ·gc.alloc.rate:               469.822 MB/sec
[info]                  ·gc.alloc.rate.norm:          740.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 506.589 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 949406.193 ops/s
[info]                  ·gc.alloc.rate:                   460.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              763.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1070.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 963906.807 ops/s
[info]                  ·gc.alloc.rate:               457.251 MB/sec
[info]                  ·gc.alloc.rate.norm:          746.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 529.165 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 990438.618 ops/s
[info]                  ·gc.alloc.rate:                   468.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     514.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   979657.972 ±(99.9%) 83995.189 ops/s [Average]
[info]   (min, avg, max) = (949406.193, 979657.972, 998588.328), stdev = 21813.284
[info]   CI (99.9%): [895662.783, 1063653.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   465.902 ±(99.9%) 25.985 MB/sec [Average]
[info]   (min, avg, max) = (457.251, 465.902, 473.266), stdev = 6.748
[info]   CI (99.9%): [439.917, 491.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   748.605 ±(99.9%) 33.509 B/op [Average]
[info]   (min, avg, max) = (740.342, 748.605, 763.309), stdev = 8.702
[info]   CI (99.9%): [715.096, 782.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   451.391 ±(99.9%) 675.885 MB/sec [Average]
[info]   (min, avg, max) = (321.482, 451.391, 645.505), stdev = 175.525
[info]   CI (99.9%): [≈ 0, 1127.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   727.017 ±(99.9%) 1110.836 B/op [Average]
[info]   (min, avg, max) = (506.589, 727.017, 1070.088), stdev = 288.481
[info]   CI (99.9%): [≈ 0, 1837.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.212 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.132), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:21:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1443688.888 ops/s
[info] # Warmup Iteration   2: 2552404.993 ops/s
[info] # Warmup Iteration   3: 2675156.934 ops/s
[info] Iteration   1: 2573172.619 ops/s
[info]                  ·gc.alloc.rate:                   1227.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     806.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 2526376.590 ops/s
[info]                  ·gc.alloc.rate:                   1249.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              778.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     820.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.451 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2749982.441 ops/s
[info]                  ·gc.alloc.rate:                   1303.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     749.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2700123.133 ops/s
[info]                  ·gc.alloc.rate:               1269.918 MB/sec
[info]                  ·gc.alloc.rate.norm:          739.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 572.734 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2756767.763 ops/s
[info]                  ·gc.alloc.rate:               1314.612 MB/sec
[info]                  ·gc.alloc.rate.norm:          750.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 750.539 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2661284.509 ±(99.9%) 405949.309 ops/s [Average]
[info]   (min, avg, max) = (2526376.590, 2661284.509, 2756767.763), stdev = 105423.747
[info]   CI (99.9%): [2255335.200, 3067233.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1272.894 ±(99.9%) 140.600 MB/sec [Average]
[info]   (min, avg, max) = (1227.103, 1272.894, 1314.612), stdev = 36.514
[info]   CI (99.9%): [1132.293, 1413.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   752.935 ±(99.9%) 56.722 B/op [Average]
[info]   (min, avg, max) = (739.863, 752.935, 778.109), stdev = 14.730
[info]   CI (99.9%): [696.213, 809.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1248.732 ±(99.9%) 572.036 MB/sec [Average]
[info]   (min, avg, max) = (983.053, 1248.732, 1318.590), stdev = 148.556
[info]   CI (99.9%): [676.696, 1820.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   739.920 ±(99.9%) 380.489 B/op [Average]
[info]   (min, avg, max) = (572.734, 739.920, 820.465), stdev = 98.812
[info]   CI (99.9%): [359.431, 1120.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.806 ±(99.9%) 6.737 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.806, 3.936), stdev = 1.750
[info]   CI (99.9%): [≈ 0, 7.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.502 ±(99.9%) 4.197 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.502, 2.451), stdev = 1.090
[info]   CI (99.9%): [≈ 0, 4.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 15.000), stdev = 4.561
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:21:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1434356.625 ops/s
[info] # Warmup Iteration   2: 2547529.024 ops/s
[info] # Warmup Iteration   3: 2798740.333 ops/s
[info] Iteration   1: 2813612.142 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2814478.456 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2954531.389 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2840533.638 ops/s
[info]                  ·gc.alloc.rate:      0.848 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.470 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2844842.582 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2853599.641 ±(99.9%) 224232.583 ops/s [Average]
[info]   (min, avg, max) = (2813612.142, 2853599.641, 2954531.389), stdev = 58232.490
[info]   CI (99.9%): [2629367.058, 3077832.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.170 ±(99.9%) 1.460 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.170, 0.848), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.094 ±(99.9%) 0.809 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.094, 0.470), stdev = 0.210
[info]   CI (99.9%): [≈ 0, 0.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:21:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58172.760 ops/s
[info] # Warmup Iteration   2: 495828.077 ops/s
[info] # Warmup Iteration   3: 527771.216 ops/s
[info] Iteration   1: 608222.809 ops/s
[info]                  ·gc.alloc.rate:                   1196.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              3096.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3354.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.795 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 646504.213 ops/s
[info]                  ·gc.alloc.rate:                   889.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              2165.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1576.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.647 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 670872.277 ops/s
[info]                  ·gc.alloc.rate:                   936.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              2195.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2261.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.172 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 677966.772 ops/s
[info]                  ·gc.alloc.rate:                   959.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              2227.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          960.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2228.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 670559.992 ops/s
[info]                  ·gc.alloc.rate:                   937.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              2200.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          961.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2256.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   654825.212 ±(99.9%) 110293.332 ops/s [Average]
[info]   (min, avg, max) = (608222.809, 654825.212, 677966.772), stdev = 28642.828
[info]   CI (99.9%): [544531.880, 765118.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   983.917 ±(99.9%) 468.656 MB/sec [Average]
[info]   (min, avg, max) = (889.652, 983.917, 1196.815), stdev = 121.708
[info]   CI (99.9%): [515.261, 1452.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2377.053 ±(99.9%) 1550.365 B/op [Average]
[info]   (min, avg, max) = (2165.701, 2377.053, 3096.228), stdev = 402.625
[info]   CI (99.9%): [826.688, 3927.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   965.956 ±(99.9%) 883.961 MB/sec [Average]
[info]   (min, avg, max) = (647.510, 965.956, 1296.606), stdev = 229.562
[info]   CI (99.9%): [81.995, 1849.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2335.451 ±(99.9%) 2463.932 B/op [Average]
[info]   (min, avg, max) = (1576.250, 2335.451, 3354.395), stdev = 639.875
[info]   CI (99.9%): [≈ 0, 4799.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.785 ±(99.9%) 10.382 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.785, 6.427), stdev = 2.696
[info]   CI (99.9%): [≈ 0, 12.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.391 ±(99.9%) 25.315 B/op [Average]
[info]   (min, avg, max) = (0.049, 4.391, 15.647), stdev = 6.574
[info]   CI (99.9%): [≈ 0, 29.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 21.000), stdev = 7.190
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:21:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6255.604 ops/s
[info] # Warmup Iteration   2: 48346.257 ops/s
[info] # Warmup Iteration   3: 71615.977 ops/s
[info] Iteration   1: 72716.430 ops/s
[info]                  ·gc.alloc.rate:                   2271.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              49121.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49123.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.379 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 137.934 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 79589.892 ops/s
[info]                  ·gc.alloc.rate:                   2306.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              45598.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1936.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38294.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.882 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 76301.346 ops/s
[info]                  ·gc.alloc.rate:                   2207.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              45504.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2276.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46944.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.859 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 75311.931 ops/s
[info]                  ·gc.alloc.rate:                   2222.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              46448.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48230.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.870 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 79753.423 ops/s
[info]                  ·gc.alloc.rate:                   2336.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              46099.416 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39464.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.822 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   76734.604 ±(99.9%) 11491.345 ops/s [Average]
[info]   (min, avg, max) = (72716.430, 76734.604, 79753.423), stdev = 2984.266
[info]   CI (99.9%): [65243.259, 88225.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2268.705 ±(99.9%) 209.579 MB/sec [Average]
[info]   (min, avg, max) = (2207.103, 2268.705, 2336.018), stdev = 54.427
[info]   CI (99.9%): [2059.126, 2478.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   46554.524 ±(99.9%) 5718.708 B/op [Average]
[info]   (min, avg, max) = (45504.158, 46554.524, 49121.188), stdev = 1485.130
[info]   CI (99.9%): [40835.817, 52273.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2158.628 ±(99.9%) 676.903 MB/sec [Average]
[info]   (min, avg, max) = (1936.629, 2158.628, 2307.933), stdev = 175.789
[info]   CI (99.9%): [1481.725, 2835.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   44411.562 ±(99.9%) 19738.241 B/op [Average]
[info]   (min, avg, max) = (38294.101, 44411.562, 49123.892), stdev = 5125.959
[info]   CI (99.9%): [24673.321, 64149.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.330 ±(99.9%) 10.870 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.330, 6.379), stdev = 2.823
[info]   CI (99.9%): [≈ 0, 12.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   28.673 ±(99.9%) 235.216 B/op [Average]
[info]   (min, avg, max) = (0.822, 28.673, 137.934), stdev = 61.085
[info]   CI (99.9%): [≈ 0, 263.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.600, 21.000), stdev = 5.273
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:21:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9912.461 ops/s
[info] # Warmup Iteration   2: 70565.089 ops/s
[info] # Warmup Iteration   3: 96411.783 ops/s
[info] Iteration   1: 103224.922 ops/s
[info]                  ·gc.alloc.rate:                   1874.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              28575.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24778.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.237 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 104279.692 ops/s
[info]                  ·gc.alloc.rate:                   1898.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              28658.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29628.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.770 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 103983.001 ops/s
[info]                  ·gc.alloc.rate:                   1886.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              28548.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29981.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 105989.418 ops/s
[info]                  ·gc.alloc.rate:                   1930.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              28673.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24709.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.618 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 108946.420 ops/s
[info]                  ·gc.alloc.rate:                   1982.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              28634.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2011.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29062.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.601 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   105284.691 ±(99.9%) 8791.780 ops/s [Average]
[info]   (min, avg, max) = (103224.922, 105284.691, 108946.420), stdev = 2283.197
[info]   CI (99.9%): [96492.911, 114076.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1914.466 ±(99.9%) 166.976 MB/sec [Average]
[info]   (min, avg, max) = (1874.195, 1914.466, 1982.174), stdev = 43.363
[info]   CI (99.9%): [1747.490, 2081.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28618.139 ±(99.9%) 207.844 B/op [Average]
[info]   (min, avg, max) = (28548.378, 28618.139, 28673.757), stdev = 53.976
[info]   CI (99.9%): [28410.295, 28825.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1848.997 ±(99.9%) 723.656 MB/sec [Average]
[info]   (min, avg, max) = (1625.146, 1848.997, 2011.834), stdev = 187.931
[info]   CI (99.9%): [1125.342, 2572.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27632.311 ±(99.9%) 10230.837 B/op [Average]
[info]   (min, avg, max) = (24709.849, 27632.311, 29981.353), stdev = 2656.916
[info]   CI (99.9%): [17401.474, 37863.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.018 ±(99.9%) 8.014 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.018, 4.738), stdev = 2.081
[info]   CI (99.9%): [≈ 0, 9.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.508 ±(99.9%) 122.234 B/op [Average]
[info]   (min, avg, max) = (0.315, 15.508, 72.237), stdev = 31.744
[info]   CI (99.9%): [≈ 0, 137.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:20:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30058.492 ops/s
[info] # Warmup Iteration   2: 124325.683 ops/s
[info] # Warmup Iteration   3: 144600.693 ops/s
[info] Iteration   1: 154538.557 ops/s
[info]                  ·gc.alloc.rate:                   2436.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              24806.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2605.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26532.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.756 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 159136.535 ops/s
[info]                  ·gc.alloc.rate:                   2493.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              24658.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2299.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22738.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.341 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 158763.852 ops/s
[info]                  ·gc.alloc.rate:                   2519.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              24974.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22761.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.413 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 156710.008 ops/s
[info]                  ·gc.alloc.rate:                   2501.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              25127.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2647.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26590.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.627 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 159915.512 ops/s
[info]                  ·gc.alloc.rate:                   2550.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              25102.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2340.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23035.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   157812.893 ±(99.9%) 8395.594 ops/s [Average]
[info]   (min, avg, max) = (154538.557, 157812.893, 159915.512), stdev = 2180.309
[info]   CI (99.9%): [149417.299, 166208.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2500.262 ±(99.9%) 161.494 MB/sec [Average]
[info]   (min, avg, max) = (2436.279, 2500.262, 2550.580), stdev = 41.939
[info]   CI (99.9%): [2338.769, 2661.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24933.788 ±(99.9%) 768.326 B/op [Average]
[info]   (min, avg, max) = (24658.899, 24933.788, 25127.328), stdev = 199.532
[info]   CI (99.9%): [24165.462, 25702.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2437.835 ±(99.9%) 669.526 MB/sec [Average]
[info]   (min, avg, max) = (2296.051, 2437.835, 2647.432), stdev = 173.874
[info]   CI (99.9%): [1768.309, 3107.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24331.757 ±(99.9%) 7851.070 B/op [Average]
[info]   (min, avg, max) = (22738.702, 24331.757, 26590.053), stdev = 2038.898
[info]   CI (99.9%): [16480.687, 32182.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.753 ±(99.9%) 5.649 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.753, 3.371), stdev = 1.467
[info]   CI (99.9%): [≈ 0, 6.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.468 ±(99.9%) 55.833 B/op [Average]
[info]   (min, avg, max) = (0.205, 7.468, 33.341), stdev = 14.500
[info]   CI (99.9%): [≈ 0, 63.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.400, 23.000), stdev = 5.683
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:20:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1588.313 ops/s
[info] # Warmup Iteration   2: 22742.487 ops/s
[info] # Warmup Iteration   3: 43453.354 ops/s
[info] Iteration   1: 41898.768 ops/s
[info]                  ·gc.alloc.rate:                   2480.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              93145.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2297.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86292.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.625 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 42521.773 ops/s
[info]                  ·gc.alloc.rate:                   2471.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              91489.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85567.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 82.995 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 44223.147 ops/s
[info]                  ·gc.alloc.rate:                   2485.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              88453.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2663.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94781.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.186 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 44117.943 ops/s
[info]                  ·gc.alloc.rate:                   2532.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              90363.337 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2348.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83767.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.970 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 45188.146 ops/s
[info]                  ·gc.alloc.rate:                   2525.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              87963.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2360.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82224.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.725 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   43589.956 ±(99.9%) 5178.737 ops/s [Average]
[info]   (min, avg, max) = (41898.768, 43589.956, 45188.146), stdev = 1344.902
[info]   CI (99.9%): [38411.218, 48768.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2499.292 ±(99.9%) 107.656 MB/sec [Average]
[info]   (min, avg, max) = (2471.936, 2499.292, 2532.979), stdev = 27.958
[info]   CI (99.9%): [2391.636, 2606.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   90283.069 ±(99.9%) 8255.949 B/op [Average]
[info]   (min, avg, max) = (87963.361, 90283.069, 93145.799), stdev = 2144.044
[info]   CI (99.9%): [82027.120, 98539.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2396.428 ±(99.9%) 583.209 MB/sec [Average]
[info]   (min, avg, max) = (2297.821, 2396.428, 2663.432), stdev = 151.458
[info]   CI (99.9%): [1813.219, 2979.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   86526.806 ±(99.9%) 18789.931 B/op [Average]
[info]   (min, avg, max) = (82224.878, 86526.806, 94781.977), stdev = 4879.685
[info]   CI (99.9%): [67736.875, 105316.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.678 ±(99.9%) 3.634 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.678, 2.242), stdev = 0.944
[info]   CI (99.9%): [≈ 0, 4.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   25.100 ±(99.9%) 134.840 B/op [Average]
[info]   (min, avg, max) = (0.725, 25.100, 82.995), stdev = 35.017
[info]   CI (99.9%): [≈ 0, 159.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 13.000), stdev = 0.894
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:20:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29254.443 ops/s
[info] # Warmup Iteration   2: 177801.045 ops/s
[info] # Warmup Iteration   3: 204531.815 ops/s
[info] Iteration   1: 226766.237 ops/s
[info]                  ·gc.alloc.rate:                   1033.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              7169.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6742.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 227754.092 ops/s
[info]                  ·gc.alloc.rate:                   1033.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              7143.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6752.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.432 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 220091.960 ops/s
[info]                  ·gc.alloc.rate:                   1003.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              7175.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7016.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 221250.274 ops/s
[info]                  ·gc.alloc.rate:                   997.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              7098.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7015.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 227321.304 ops/s
[info]                  ·gc.alloc.rate:                   1024.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              7091.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6855.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   224636.773 ±(99.9%) 14093.396 ops/s [Average]
[info]   (min, avg, max) = (220091.960, 224636.773, 227754.092), stdev = 3660.010
[info]   CI (99.9%): [210543.377, 238730.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1018.484 ±(99.9%) 64.717 MB/sec [Average]
[info]   (min, avg, max) = (997.873, 1018.484, 1033.801), stdev = 16.807
[info]   CI (99.9%): [953.767, 1083.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7135.651 ±(99.9%) 151.460 B/op [Average]
[info]   (min, avg, max) = (7091.007, 7135.651, 7175.602), stdev = 39.334
[info]   CI (99.9%): [6984.191, 7287.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   981.311 ±(99.9%) 28.282 MB/sec [Average]
[info]   (min, avg, max) = (971.572, 981.311, 990.281), stdev = 7.345
[info]   CI (99.9%): [953.029, 1009.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6876.780 ±(99.9%) 518.358 B/op [Average]
[info]   (min, avg, max) = (6742.949, 6876.780, 7016.706), stdev = 134.616
[info]   CI (99.9%): [6358.422, 7395.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 1.167 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.167, 0.708), stdev = 0.303
[info]   CI (99.9%): [≈ 0, 1.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.186 ±(99.9%) 8.356 B/op [Average]
[info]   (min, avg, max) = (0.144, 1.186, 5.061), stdev = 2.170
[info]   CI (99.9%): [≈ 0, 9.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:20:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185255.431 ops/s
[info] # Warmup Iteration   2: 406790.983 ops/s
[info] # Warmup Iteration   3: 576804.462 ops/s
[info] Iteration   1: 585191.255 ops/s
[info]                  ·gc.alloc.rate:                   661.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              1779.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1761.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 582603.815 ops/s
[info]                  ·gc.alloc.rate:                   659.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              1781.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1768.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 568466.459 ops/s
[info]                  ·gc.alloc.rate:                   643.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              1782.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1813.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 580558.527 ops/s
[info]                  ·gc.alloc.rate:                   664.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              1801.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1777.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.894 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.845 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 578142.881 ops/s
[info]                  ·gc.alloc.rate:                   656.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              1787.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1783.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   578992.587 ±(99.9%) 24764.012 ops/s [Average]
[info]   (min, avg, max) = (568466.459, 578992.587, 585191.255), stdev = 6431.135
[info]   CI (99.9%): [554228.576, 603756.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   657.273 ±(99.9%) 31.099 MB/sec [Average]
[info]   (min, avg, max) = (643.819, 657.273, 664.668), stdev = 8.076
[info]   CI (99.9%): [626.174, 688.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1786.410 ±(99.9%) 34.244 B/op [Average]
[info]   (min, avg, max) = (1779.020, 1786.410, 1801.431), stdev = 8.893
[info]   CI (99.9%): [1752.166, 1820.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   655.187 ±(99.9%) 1.939 MB/sec [Average]
[info]   (min, avg, max) = (654.647, 655.187, 656.002), stdev = 0.503
[info]   CI (99.9%): [653.249, 657.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1780.923 ±(99.9%) 78.373 B/op [Average]
[info]   (min, avg, max) = (1761.174, 1780.923, 1813.896), stdev = 20.353
[info]   CI (99.9%): [1702.550, 1859.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.611 ±(99.9%) 4.917 MB/sec [Average]
[info]   (min, avg, max) = (0.013, 0.611, 2.894), stdev = 1.277
[info]   CI (99.9%): [≈ 0, 5.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.655 ±(99.9%) 13.326 B/op [Average]
[info]   (min, avg, max) = (0.036, 1.655, 7.845), stdev = 3.461
[info]   CI (99.9%): [≈ 0, 14.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 8.000), stdev = 2.074
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:20:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 207655.891 ops/s
[info] # Warmup Iteration   2: 480802.740 ops/s
[info] # Warmup Iteration   3: 620395.118 ops/s
[info] Iteration   1: 620783.858 ops/s
[info]                  ·gc.alloc.rate:      6.311 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 620456.427 ops/s
[info]                  ·gc.alloc.rate:      8.142 MB/sec
[info]                  ·gc.alloc.rate.norm: 20.654 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 620213.371 ops/s
[info]                  ·gc.alloc.rate:      6.305 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 620647.496 ops/s
[info]                  ·gc.alloc.rate:      6.310 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 617525.022 ops/s
[info]                  ·gc.alloc.rate:      8.068 MB/sec
[info]                  ·gc.alloc.rate.norm: 20.559 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   619925.235 ±(99.9%) 5232.167 ops/s [Average]
[info]   (min, avg, max) = (617525.022, 619925.235, 620783.858), stdev = 1358.777
[info]   CI (99.9%): [614693.067, 625157.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.027 ±(99.9%) 3.790 MB/sec [Average]
[info]   (min, avg, max) = (6.305, 7.027, 8.142), stdev = 0.984
[info]   CI (99.9%): [3.237, 10.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   17.843 ±(99.9%) 9.715 B/op [Average]
[info]   (min, avg, max) = (16.001, 17.843, 20.654), stdev = 2.523
[info]   CI (99.9%): [8.128, 27.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:19:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6306.526 ops/s
[info] # Warmup Iteration   2: 49891.148 ops/s
[info] # Warmup Iteration   3: 77751.225 ops/s
[info] Iteration   1: 82067.438 ops/s
[info]                  ·gc.alloc.rate:                   1672.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              32064.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31100.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.913 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.669 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   2: 91897.572 ops/s
[info]                  ·gc.alloc.rate:                   1450.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              24830.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1298.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22224.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 93155.111 ops/s
[info]                  ·gc.alloc.rate:                   1474.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              24905.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27478.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.662 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 91761.615 ops/s
[info]                  ·gc.alloc.rate:                   1446.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              24807.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22388.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.179 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.366 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 91364.339 ops/s
[info]                  ·gc.alloc.rate:                   1455.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              25070.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28102.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.717 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   90049.215 ±(99.9%) 17374.218 ops/s [Average]
[info]   (min, avg, max) = (82067.438, 90049.215, 93155.111), stdev = 4512.029
[info]   CI (99.9%): [72674.997, 107423.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1499.751 ±(99.9%) 373.996 MB/sec [Average]
[info]   (min, avg, max) = (1446.439, 1499.751, 1672.460), stdev = 97.126
[info]   CI (99.9%): [1125.755, 1873.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   26335.722 ±(99.9%) 12337.124 B/op [Average]
[info]   (min, avg, max) = (24807.786, 26335.722, 32064.096), stdev = 3203.912
[info]   CI (99.9%): [13998.598, 38672.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1496.698 ±(99.9%) 685.369 MB/sec [Average]
[info]   (min, avg, max) = (1298.167, 1496.698, 1631.387), stdev = 177.988
[info]   CI (99.9%): [811.329, 2182.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   26258.887 ±(99.9%) 14862.001 B/op [Average]
[info]   (min, avg, max) = (22224.198, 26258.887, 31100.477), stdev = 3859.614
[info]   CI (99.9%): [11396.886, 41120.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.575 ±(99.9%) 4.526 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.575, 2.994), stdev = 1.175
[info]   CI (99.9%): [≈ 0, 6.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   27.734 ±(99.9%) 78.986 B/op [Average]
[info]   (min, avg, max) = (0.717, 27.734, 51.258), stdev = 20.513
[info]   CI (99.9%): [≈ 0, 106.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 13.400, 24.000), stdev = 6.580
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:19:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108397.166 ops/s
[info] # Warmup Iteration   2: 3228299.448 ops/s
[info] # Warmup Iteration   3: 8004250.926 ops/s
[info] Iteration   1: 8123444.744 ops/s
[info]                  ·gc.alloc.rate:                   7174.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              1390.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7004.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1357.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   2: 8289707.260 ops/s
[info]                  ·gc.alloc.rate:                   7262.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              1378.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6778.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1286.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   3: 8209931.644 ops/s
[info]                  ·gc.alloc.rate:                   7291.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              1397.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7143.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1369.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   4: 8257636.478 ops/s
[info]                  ·gc.alloc.rate:                   7202.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              1372.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          7147.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1362.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        21.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   5: 8295396.309 ops/s
[info]                  ·gc.alloc.rate:                   7313.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              1387.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:          6808.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1291.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        20.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   8235223.287 ±(99.9%) 273814.068 ops/s [Average]
[info]   (min, avg, max) = (8123444.744, 8235223.287, 8295396.309), stdev = 71108.644
[info]   CI (99.9%): [7961409.219, 8509037.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   7248.933 ±(99.9%) 225.897 MB/sec [Average]
[info]   (min, avg, max) = (7174.558, 7248.933, 7313.189), stdev = 58.665
[info]   CI (99.9%): [7023.036, 7474.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1385.363 ±(99.9%) 37.576 B/op [Average]
[info]   (min, avg, max) = (1372.904, 1385.363, 1397.722), stdev = 9.758
[info]   CI (99.9%): [1347.786, 1422.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   6976.331 ±(99.9%) 682.449 MB/sec [Average]
[info]   (min, avg, max) = (6778.230, 6976.331, 7147.798), stdev = 177.230
[info]   CI (99.9%): [6293.882, 7658.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1333.429 ±(99.9%) 156.660 B/op [Average]
[info]   (min, avg, max) = (1286.636, 1333.429, 1369.334), stdev = 40.684
[info]   CI (99.9%): [1176.768, 1490.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 0.196 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 0.167, 0.229), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.032, 0.044), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   103.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (20.000, 20.600, 21.000), stdev = 0.548
[info]   CI (99.9%): [103.000, 103.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   134.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (26.000, 26.800, 27.000), stdev = 0.447
[info]   CI (99.9%): [134.000, 134.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:19:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.556 ops/s
[info] # Warmup Iteration   2: 799853.231 ops/s
[info] # Warmup Iteration   3: 846882.002 ops/s
[info] Iteration   1: 980461.389 ops/s
[info]                  ·gc.alloc.rate:                   618.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              992.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1037.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 976314.404 ops/s
[info]                  ·gc.alloc.rate:                   620.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              999.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1042.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 960450.581 ops/s
[info]                  ·gc.alloc.rate:                   605.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              991.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1061.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 912579.436 ops/s
[info]                  ·gc.alloc.rate:                   578.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              996.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 930032.542 ops/s
[info]                  ·gc.alloc.rate:                   587.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              994.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1097.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   951967.670 ±(99.9%) 114053.156 ops/s [Average]
[info]   (min, avg, max) = (912579.436, 951967.670, 980461.389), stdev = 29619.242
[info]   CI (99.9%): [837914.515, 1066020.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   601.854 ±(99.9%) 71.362 MB/sec [Average]
[info]   (min, avg, max) = (578.066, 601.854, 620.305), stdev = 18.532
[info]   CI (99.9%): [530.492, 673.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   994.950 ±(99.9%) 13.903 B/op [Average]
[info]   (min, avg, max) = (991.071, 994.950, 999.921), stdev = 3.611
[info]   CI (99.9%): [981.046, 1008.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   582.682 ±(99.9%) 556.650 MB/sec [Average]
[info]   (min, avg, max) = (324.090, 582.682, 648.512), stdev = 144.560
[info]   CI (99.9%): [26.032, 1139.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   959.484 ±(99.9%) 867.007 B/op [Average]
[info]   (min, avg, max) = (558.917, 959.484, 1097.459), stdev = 225.159
[info]   CI (99.9%): [92.477, 1826.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.034 MB/sec [Average]
[info]   (min, avg, max) = (0.005, 0.015, 0.028), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.024, 0.047), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 10.000), stdev = 2.074
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:19:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14762.833 ops/s
[info] # Warmup Iteration   2: 178838.333 ops/s
[info] # Warmup Iteration   3: 327901.384 ops/s
[info] Iteration   1: 437690.329 ops/s
[info]                  ·gc.alloc.rate:                   980.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              3524.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3499.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 439712.510 ops/s
[info]                  ·gc.alloc.rate:                   985.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              3527.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3488.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 437893.160 ops/s
[info]                  ·gc.alloc.rate:                   977.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              3513.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3519.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 439419.323 ops/s
[info]                  ·gc.alloc.rate:                   977.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              3501.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3519.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 441335.880 ops/s
[info]                  ·gc.alloc.rate:                   985.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              3515.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3511.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.668 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   439210.241 ±(99.9%) 5730.596 ops/s [Average]
[info]   (min, avg, max) = (437690.329, 439210.241, 441335.880), stdev = 1488.218
[info]   CI (99.9%): [433479.644, 444940.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   981.407 ±(99.9%) 15.695 MB/sec [Average]
[info]   (min, avg, max) = (977.443, 981.407, 985.937), stdev = 4.076
[info]   CI (99.9%): [965.712, 997.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3516.570 ±(99.9%) 38.759 B/op [Average]
[info]   (min, avg, max) = (3501.864, 3516.570, 3527.038), stdev = 10.066
[info]   CI (99.9%): [3477.811, 3555.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   978.904 ±(99.9%) 18.751 MB/sec [Average]
[info]   (min, avg, max) = (973.492, 978.904, 984.656), stdev = 4.870
[info]   CI (99.9%): [960.153, 997.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3507.601 ±(99.9%) 51.927 B/op [Average]
[info]   (min, avg, max) = (3488.370, 3507.601, 3519.434), stdev = 13.485
[info]   CI (99.9%): [3455.674, 3559.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.341 ±(99.9%) 1.439 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.341, 0.874), stdev = 0.374
[info]   CI (99.9%): [≈ 0, 1.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.225 ±(99.9%) 5.170 B/op [Average]
[info]   (min, avg, max) = (0.075, 1.225, 3.142), stdev = 1.343
[info]   CI (99.9%): [≈ 0, 6.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 7.000), stdev = 1.095
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:19:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 316386.417 ops/s
[info] # Warmup Iteration   2: 675924.471 ops/s
[info] # Warmup Iteration   3: 756432.227 ops/s
[info] Iteration   1: 736633.412 ops/s
[info]                  ·gc.alloc.rate:               702.242 MB/sec
[info]                  ·gc.alloc.rate.norm:          1500.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1409.084 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 733693.015 ops/s
[info]                  ·gc.alloc.rate:               667.051 MB/sec
[info]                  ·gc.alloc.rate.norm:          1430.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1416.184 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 729651.631 ops/s
[info]                  ·gc.alloc.rate:                   677.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              1460.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1425.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 735622.060 ops/s
[info]                  ·gc.alloc.rate:                   674.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              1443.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1415.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 723442.650 ops/s
[info]                  ·gc.alloc.rate:                   719.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              1565.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1440.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.386 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.365 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   731808.553 ±(99.9%) 20737.597 ops/s [Average]
[info]   (min, avg, max) = (723442.650, 731808.553, 736633.412), stdev = 5385.488
[info]   CI (99.9%): [711070.956, 752546.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   688.208 ±(99.9%) 84.265 MB/sec [Average]
[info]   (min, avg, max) = (667.051, 688.208, 719.464), stdev = 21.883
[info]   CI (99.9%): [603.942, 772.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1479.997 ±(99.9%) 209.348 B/op [Average]
[info]   (min, avg, max) = (1430.463, 1479.997, 1565.162), stdev = 54.367
[info]   CI (99.9%): [1270.648, 1689.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   660.988 ±(99.9%) 4.048 MB/sec [Average]
[info]   (min, avg, max) = (659.539, 660.988, 662.203), stdev = 1.051
[info]   CI (99.9%): [656.941, 665.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1421.317 ±(99.9%) 47.189 B/op [Average]
[info]   (min, avg, max) = (1409.084, 1421.317, 1440.595), stdev = 12.255
[info]   CI (99.9%): [1374.127, 1468.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 5.809 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.687, 3.386), stdev = 1.509
[info]   CI (99.9%): [≈ 0, 6.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.494 ±(99.9%) 12.639 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.494, 7.365), stdev = 3.282
[info]   CI (99.9%): [≈ 0, 14.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:18:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 553455.995 ops/s
[info] # Warmup Iteration   2: 3833232.598 ops/s
[info] # Warmup Iteration   3: 4114453.043 ops/s
[info] Iteration   1: 4046871.685 ops/s
[info]                  ·gc.alloc.rate:                   2450.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              952.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2301.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     895.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 4140019.949 ops/s
[info]                  ·gc.alloc.rate:                   2479.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              942.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     877.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4098037.371 ops/s
[info]                  ·gc.alloc.rate:                   2501.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2663.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1022.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4221019.690 ops/s
[info]                  ·gc.alloc.rate:                   2560.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              954.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     876.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 4032080.625 ops/s
[info]                  ·gc.alloc.rate:                   2472.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              964.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2364.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     922.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   4107605.864 ±(99.9%) 294502.694 ops/s [Average]
[info]   (min, avg, max) = (4032080.625, 4107605.864, 4221019.690), stdev = 76481.414
[info]   CI (99.9%): [3813103.170, 4402108.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   2492.965 ±(99.9%) 162.569 MB/sec [Average]
[info]   (min, avg, max) = (2450.273, 2492.965, 2560.974), stdev = 42.219
[info]   CI (99.9%): [2330.396, 2655.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   955.166 ±(99.9%) 32.345 B/op [Average]
[info]   (min, avg, max) = (942.664, 955.166, 964.645), stdev = 8.400
[info]   CI (99.9%): [922.821, 987.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   2397.719 ±(99.9%) 581.323 MB/sec [Average]
[info]   (min, avg, max) = (2301.615, 2397.719, 2663.384), stdev = 150.968
[info]   CI (99.9%): [1816.396, 2979.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   918.913 ±(99.9%) 234.965 B/op [Average]
[info]   (min, avg, max) = (876.787, 918.913, 1022.843), stdev = 61.020
[info]   CI (99.9%): [683.948, 1153.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 0.639 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.167, 0.396), stdev = 0.166
[info]   CI (99.9%): [≈ 0, 0.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.250 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.065, 0.154), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:18:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1877416.252 ops/s
[info] # Warmup Iteration   2: 7914420.114 ops/s
[info] # Warmup Iteration   3: 28621064.133 ops/s
[info] Iteration   1: 28117053.761 ops/s
[info]                  ·gc.alloc.rate:                   2516.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2641.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.586 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 28663762.054 ops/s
[info]                  ·gc.alloc.rate:                   2560.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2300.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 29015743.599 ops/s
[info]                  ·gc.alloc.rate:                   2612.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              141.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2650.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 29558431.592 ops/s
[info]                  ·gc.alloc.rate:                   2660.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              141.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2677.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     142.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 30075696.332 ops/s
[info]                  ·gc.alloc.rate:                   2692.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              140.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   29086137.467 ±(99.9%) 2935574.963 ops/s [Average]
[info]   (min, avg, max) = (28117053.761, 29086137.467, 30075696.332), stdev = 762359.496
[info]   CI (99.9%): [26150562.504, 32021712.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   2608.434 ±(99.9%) 276.507 MB/sec [Average]
[info]   (min, avg, max) = (2516.308, 2608.434, 2692.842), stdev = 71.808
[info]   CI (99.9%): [2331.927, 2884.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   141.138 ±(99.9%) 1.944 B/op [Average]
[info]   (min, avg, max) = (140.585, 141.138, 141.690), stdev = 0.505
[info]   CI (99.9%): [139.194, 143.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   2525.810 ±(99.9%) 695.233 MB/sec [Average]
[info]   (min, avg, max) = (2300.266, 2525.810, 2677.245), stdev = 180.550
[info]   CI (99.9%): [1830.577, 3221.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   136.789 ±(99.9%) 42.699 B/op [Average]
[info]   (min, avg, max) = (123.470, 136.789, 147.850), stdev = 11.089
[info]   CI (99.9%): [94.091, 179.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.751 ±(99.9%) 6.104 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.751, 3.586), stdev = 1.585
[info]   CI (99.9%): [≈ 0, 6.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.042 ±(99.9%) 0.342 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.042, 0.201), stdev = 0.089
[info]   CI (99.9%): [≈ 0, 0.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.000, 18.000), stdev = 4.000
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:18:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2884.941 ops/s
[info] # Warmup Iteration   2: 72631.366 ops/s
[info] # Warmup Iteration   3: 243704.662 ops/s
[info] Iteration   1: 378680.209 ops/s
[info]                  ·gc.alloc.rate:                   2684.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              11156.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2616.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10872.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.209 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 377757.875 ops/s
[info]                  ·gc.alloc.rate:                   2681.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              11171.502 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2619.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10915.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.775 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 387790.122 ops/s
[info]                  ·gc.alloc.rate:                   2731.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              11086.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2644.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10733.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 379864.438 ops/s
[info]                  ·gc.alloc.rate:                   2746.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              11374.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2675.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11081.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 385517.289 ops/s
[info]                  ·gc.alloc.rate:                   2706.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              11047.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11002.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.340 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   381921.987 ±(99.9%) 17160.622 ops/s [Average]
[info]   (min, avg, max) = (377757.875, 381921.987, 387790.122), stdev = 4456.559
[info]   CI (99.9%): [364761.365, 399082.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2709.997 ±(99.9%) 110.057 MB/sec [Average]
[info]   (min, avg, max) = (2681.431, 2709.997, 2746.310), stdev = 28.581
[info]   CI (99.9%): [2599.940, 2820.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   11167.104 ±(99.9%) 486.812 B/op [Average]
[info]   (min, avg, max) = (11047.247, 11167.104, 11374.148), stdev = 126.424
[info]   CI (99.9%): [10680.291, 11653.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2650.340 ±(99.9%) 133.326 MB/sec [Average]
[info]   (min, avg, max) = (2616.033, 2650.340, 2695.308), stdev = 34.624
[info]   CI (99.9%): [2517.014, 2783.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10921.103 ±(99.9%) 509.918 B/op [Average]
[info]   (min, avg, max) = (10733.357, 10921.103, 11081.658), stdev = 132.424
[info]   CI (99.9%): [10411.185, 11431.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 4.016 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.654, 2.456), stdev = 1.043
[info]   CI (99.9%): [≈ 0, 4.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.716 ±(99.9%) 16.695 B/op [Average]
[info]   (min, avg, max) = (0.084, 2.716, 10.209), stdev = 4.336
[info]   CI (99.9%): [≈ 0, 19.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.200, 18.000), stdev = 2.775
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:18:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 773811.111 ops/s
[info] # Warmup Iteration   2: 1273950.514 ops/s
[info] # Warmup Iteration   3: 1398020.642 ops/s
[info] Iteration   1: 1466063.042 ops/s
[info]                  ·gc.alloc.rate:      44.711 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1461731.200 ops/s
[info]                  ·gc.alloc.rate:      44.581 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1465014.742 ops/s
[info]                  ·gc.alloc.rate:      44.681 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1464691.513 ops/s
[info]                  ·gc.alloc.rate:      44.670 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1461211.537 ops/s
[info]                  ·gc.alloc.rate:      44.565 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1463742.407 ±(99.9%) 8248.661 ops/s [Average]
[info]   (min, avg, max) = (1461211.537, 1463742.407, 1466063.042), stdev = 2142.151
[info]   CI (99.9%): [1455493.746, 1471991.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   44.642 ±(99.9%) 0.249 MB/sec [Average]
[info]   (min, avg, max) = (44.565, 44.642, 44.711), stdev = 0.065
[info]   CI (99.9%): [44.392, 44.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:17:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3007.776 ops/s
[info] # Warmup Iteration   2: 69084.255 ops/s
[info] # Warmup Iteration   3: 101487.889 ops/s
[info] Iteration   1: 105509.374 ops/s
[info]                  ·gc.alloc.rate:                   3881.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              57891.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3617.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53953.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.920 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.642 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 103663.692 ops/s
[info]                  ·gc.alloc.rate:                   3807.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              57796.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3661.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55584.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.741 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 101958.033 ops/s
[info]                  ·gc.alloc.rate:                   3778.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              58319.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3704.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57175.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.964 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 102973.861 ops/s
[info]                  ·gc.alloc.rate:                   3829.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              58526.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3726.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56950.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.955 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 106609.582 ops/s
[info]                  ·gc.alloc.rate:               3959.909 MB/sec
[info]                  ·gc.alloc.rate.norm:          58457.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3736.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55164.660 B/op
[info]                  ·gc.count:                    11.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   104142.909 ±(99.9%) 7286.194 ops/s [Average]
[info]   (min, avg, max) = (101958.033, 104142.909, 106609.582), stdev = 1892.202
[info]   CI (99.9%): [96856.714, 111429.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3851.183 ±(99.9%) 275.078 MB/sec [Average]
[info]   (min, avg, max) = (3778.629, 3851.183, 3959.909), stdev = 71.437
[info]   CI (99.9%): [3576.105, 4126.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   58198.357 ±(99.9%) 1283.622 B/op [Average]
[info]   (min, avg, max) = (57796.783, 58198.357, 58526.090), stdev = 333.353
[info]   CI (99.9%): [56914.735, 59481.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3689.178 ±(99.9%) 191.122 MB/sec [Average]
[info]   (min, avg, max) = (3617.060, 3689.178, 3736.835), stdev = 49.634
[info]   CI (99.9%): [3498.056, 3880.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   55765.724 ±(99.9%) 5120.149 B/op [Average]
[info]   (min, avg, max) = (53953.141, 55765.724, 57175.610), stdev = 1329.686
[info]   CI (99.9%): [50645.576, 60885.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.471 ±(99.9%) 3.152 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.471, 1.920), stdev = 0.819
[info]   CI (99.9%): [≈ 0, 3.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.060 ±(99.9%) 46.980 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.060, 28.642), stdev = 12.201
[info]   CI (99.9%): [≈ 0, 54.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   55.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.000, 11.000), stdev = 0.001
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   86.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 17.200, 19.000), stdev = 1.095
[info]   CI (99.9%): [86.000, 86.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:17:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 447074.890 ops/s
[info] # Warmup Iteration   2: 1799802.419 ops/s
[info] # Warmup Iteration   3: 2150064.288 ops/s
[info] Iteration   1: 2149289.953 ops/s
[info]                  ·gc.alloc.rate:                   595.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2032515.210 ops/s
[info]                  ·gc.alloc.rate:               556.060 MB/sec
[info]                  ·gc.alloc.rate.norm:          430.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 249.402 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2150614.681 ops/s
[info]                  ·gc.alloc.rate:                   597.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              437.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2124623.854 ops/s
[info]                  ·gc.alloc.rate:                   591.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     479.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2134327.746 ops/s
[info]                  ·gc.alloc.rate:               600.835 MB/sec
[info]                  ·gc.alloc.rate.norm:          443.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 479.408 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   2118274.289 ±(99.9%) 189235.962 ops/s [Average]
[info]   (min, avg, max) = (2032515.210, 2118274.289, 2150614.681), stdev = 49143.978
[info]   CI (99.9%): [1929038.327, 2307510.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   588.353 ±(99.9%) 70.606 MB/sec [Average]
[info]   (min, avg, max) = (556.060, 588.353, 600.835), stdev = 18.336
[info]   CI (99.9%): [517.747, 658.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   437.081 ±(99.9%) 17.288 B/op [Average]
[info]   (min, avg, max) = (430.577, 437.081, 443.048), stdev = 4.490
[info]   CI (99.9%): [419.794, 454.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   581.213 ±(99.9%) 557.906 MB/sec [Average]
[info]   (min, avg, max) = (322.085, 581.213, 650.145), stdev = 144.887
[info]   CI (99.9%): [23.307, 1139.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   430.024 ±(99.9%) 389.130 B/op [Average]
[info]   (min, avg, max) = (249.402, 430.024, 479.408), stdev = 101.056
[info]   CI (99.9%): [40.894, 819.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.046), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:17:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 996664.985 ops/s
[info] # Warmup Iteration   2: 1773539.438 ops/s
[info] # Warmup Iteration   3: 1965993.468 ops/s
[info] Iteration   1: 1922078.366 ops/s
[info]                  ·gc.alloc.rate:               529.334 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 268.354 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1925184.744 ops/s
[info]                  ·gc.alloc.rate:                   539.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1999026.062 ops/s
[info]                  ·gc.alloc.rate:                   557.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     518.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2006576.436 ops/s
[info]                  ·gc.alloc.rate:               552.918 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 258.123 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1998769.004 ops/s
[info]                  ·gc.alloc.rate:               554.764 MB/sec
[info]                  ·gc.alloc.rate.norm:          436.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 518.790 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1970326.922 ±(99.9%) 164638.775 ops/s [Average]
[info]   (min, avg, max) = (1922078.366, 1970326.922, 2006576.436), stdev = 42756.167
[info]   CI (99.9%): [1805688.147, 2134965.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   546.730 ±(99.9%) 46.395 MB/sec [Average]
[info]   (min, avg, max) = (529.334, 546.730, 557.541), stdev = 12.049
[info]   CI (99.9%): [500.335, 593.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   436.660 ±(99.9%) 12.386 B/op [Average]
[info]   (min, avg, max) = (433.258, 436.660, 440.615), stdev = 3.216
[info]   CI (99.9%): [424.275, 449.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   526.202 ±(99.9%) 695.026 MB/sec [Average]
[info]   (min, avg, max) = (327.861, 526.202, 658.872), stdev = 180.496
[info]   CI (99.9%): [≈ 0, 1221.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   420.084 ±(99.9%) 552.276 B/op [Average]
[info]   (min, avg, max) = (258.123, 420.084, 536.964), stdev = 143.424
[info]   CI (99.9%): [≈ 0, 972.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.034), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.028), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 7.000), stdev = 1.949
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:17:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 831228.053 ops/s
[info] # Warmup Iteration   2: 1796998.900 ops/s
[info] # Warmup Iteration   3: 2043623.598 ops/s
[info] Iteration   1: 2041845.001 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1994301.078 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2042310.551 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1971682.743 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1939810.649 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1997990.005 ±(99.9%) 171970.046 ops/s [Average]
[info]   (min, avg, max) = (1939810.649, 1997990.005, 2042310.551), stdev = 44660.075
[info]   CI (99.9%): [1826019.959, 2169960.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:17:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6319.595 ops/s
[info] # Warmup Iteration   2: 33874.389 ops/s
[info] # Warmup Iteration   3: 52687.754 ops/s
[info] Iteration   1: 51737.121 ops/s
[info]                  ·gc.alloc.rate:                   2216.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              67433.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69769.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.634 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.696 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 54295.530 ops/s
[info]                  ·gc.alloc.rate:                   1898.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              55007.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57335.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.490 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.168 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 55493.305 ops/s
[info]                  ·gc.alloc.rate:                   1933.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              54830.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46930.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.723 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 54443.360 ops/s
[info]                  ·gc.alloc.rate:                   1909.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              55192.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57742.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 52887.764 ops/s
[info]                  ·gc.alloc.rate:                   1870.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              55649.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49827.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.239 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   53771.416 ±(99.9%) 5649.533 ops/s [Average]
[info]   (min, avg, max) = (51737.121, 53771.416, 55493.305), stdev = 1467.166
[info]   CI (99.9%): [48121.883, 59420.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1965.492 ±(99.9%) 547.825 MB/sec [Average]
[info]   (min, avg, max) = (1870.084, 1965.492, 2216.731), stdev = 142.268
[info]   CI (99.9%): [1417.667, 2513.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   57622.396 ±(99.9%) 21150.719 B/op [Average]
[info]   (min, avg, max) = (54830.167, 57622.396, 67433.006), stdev = 5492.774
[info]   CI (99.9%): [36471.677, 78773.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1919.736 ±(99.9%) 1018.165 MB/sec [Average]
[info]   (min, avg, max) = (1654.677, 1919.736, 2293.555), stdev = 264.414
[info]   CI (99.9%): [901.571, 2937.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   56321.221 ±(99.9%) 34131.820 B/op [Average]
[info]   (min, avg, max) = (46930.015, 56321.221, 69769.971), stdev = 8863.925
[info]   CI (99.9%): [22189.401, 90453.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 3.085 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.687, 1.634), stdev = 0.801
[info]   CI (99.9%): [≈ 0, 3.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   20.367 ±(99.9%) 92.175 B/op [Average]
[info]   (min, avg, max) = (1.239, 20.367, 49.696), stdev = 23.938
[info]   CI (99.9%): [≈ 0, 112.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.400, 19.000), stdev = 4.827
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:16:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125438.695 ops/s
[info] # Warmup Iteration   2: 239699.453 ops/s
[info] # Warmup Iteration   3: 263879.922 ops/s
[info] Iteration   1: 264183.482 ops/s
[info]                  ·gc.alloc.rate:                   1071.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              6385.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5824.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 269527.026 ops/s
[info]                  ·gc.alloc.rate:                   1086.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              6342.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5720.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 269383.116 ops/s
[info]                  ·gc.alloc.rate:                   1078.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              6298.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5744.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.554 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 257735.414 ops/s
[info]                  ·gc.alloc.rate:                   1042.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              6366.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8034.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 269822.200 ops/s
[info]                  ·gc.alloc.rate:               1082.426 MB/sec
[info]                  ·gc.alloc.rate.norm:          6313.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5758.482 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   266130.248 ±(99.9%) 20194.130 ops/s [Average]
[info]   (min, avg, max) = (257735.414, 266130.248, 269822.200), stdev = 5244.352
[info]   CI (99.9%): [245936.117, 286324.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1072.215 ±(99.9%) 67.118 MB/sec [Average]
[info]   (min, avg, max) = (1042.530, 1072.215, 1086.211), stdev = 17.430
[info]   CI (99.9%): [1005.097, 1139.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6341.368 ±(99.9%) 138.710 B/op [Average]
[info]   (min, avg, max) = (6298.388, 6341.368, 6385.520), stdev = 36.023
[info]   CI (99.9%): [6202.658, 6480.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1048.657 ±(99.9%) 574.864 MB/sec [Average]
[info]   (min, avg, max) = (977.623, 1048.657, 1315.635), stdev = 149.290
[info]   CI (99.9%): [473.793, 1623.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6216.242 ±(99.9%) 3915.907 B/op [Average]
[info]   (min, avg, max) = (5720.177, 6216.242, 8034.114), stdev = 1016.949
[info]   CI (99.9%): [2300.335, 10132.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.395 ±(99.9%) 2.429 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.395, 1.477), stdev = 0.631
[info]   CI (99.9%): [≈ 0, 2.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.389 ±(99.9%) 14.834 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.389, 9.017), stdev = 3.852
[info]   CI (99.9%): [≈ 0, 17.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:16:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1939.121 ops/s
[info] # Warmup Iteration   2: 19539.673 ops/s
[info] # Warmup Iteration   3: 48001.314 ops/s
[info] Iteration   1: 48115.815 ops/s
[info]                  ·gc.alloc.rate:                   2053.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              67161.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63888.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.401 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.519 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 50174.543 ops/s
[info]                  ·gc.alloc.rate:                   2120.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              66522.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2289.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71828.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.414 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 51573.633 ops/s
[info]                  ·gc.alloc.rate:                   2059.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              62852.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60213.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.271 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 51995.287 ops/s
[info]                  ·gc.alloc.rate:                   2072.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              62735.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60250.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.521 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 51444.227 ops/s
[info]                  ·gc.alloc.rate:                   2082.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              63704.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61363.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.274 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   50660.701 ±(99.9%) 6070.499 ops/s [Average]
[info]   (min, avg, max) = (48115.815, 50660.701, 51995.287), stdev = 1576.489
[info]   CI (99.9%): [44590.202, 56731.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2077.685 ±(99.9%) 102.470 MB/sec [Average]
[info]   (min, avg, max) = (2053.307, 2077.685, 2120.835), stdev = 26.611
[info]   CI (99.9%): [1975.214, 2180.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   64595.307 ±(99.9%) 8073.746 B/op [Average]
[info]   (min, avg, max) = (62735.723, 64595.307, 67161.138), stdev = 2096.726
[info]   CI (99.9%): [56521.560, 72669.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2042.482 ±(99.9%) 538.082 MB/sec [Average]
[info]   (min, avg, max) = (1953.242, 2042.482, 2289.991), stdev = 139.738
[info]   CI (99.9%): [1504.400, 2580.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63508.739 ±(99.9%) 18808.458 B/op [Average]
[info]   (min, avg, max) = (60213.686, 63508.739, 71828.146), stdev = 4884.497
[info]   CI (99.9%): [44700.282, 82317.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.848 ±(99.9%) 4.294 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.848, 2.401), stdev = 1.115
[info]   CI (99.9%): [≈ 0, 5.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   27.200 ±(99.9%) 139.144 B/op [Average]
[info]   (min, avg, max) = (1.271, 27.200, 78.519), stdev = 36.135
[info]   CI (99.9%): [≈ 0, 166.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 16.000), stdev = 2.915
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:16:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34590.994 ops/s
[info] # Warmup Iteration   2: 137224.352 ops/s
[info] # Warmup Iteration   3: 174873.743 ops/s
[info] Iteration   1: 156396.757 ops/s
[info]                  ·gc.alloc.rate:                   1570.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              15804.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16333.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.838 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 160245.663 ops/s
[info]                  ·gc.alloc.rate:                   1604.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              15763.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12856.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.520 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 159407.245 ops/s
[info]                  ·gc.alloc.rate:                   1597.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              15773.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16254.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 157552.088 ops/s
[info]                  ·gc.alloc.rate:               1578.940 MB/sec
[info]                  ·gc.alloc.rate.norm:          15773.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1660.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16586.023 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 158487.026 ops/s
[info]                  ·gc.alloc.rate:               1601.606 MB/sec
[info]                  ·gc.alloc.rate.norm:          15904.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13270.434 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   158417.756 ±(99.9%) 5826.747 ops/s [Average]
[info]   (min, avg, max) = (156396.757, 158417.756, 160245.663), stdev = 1513.188
[info]   CI (99.9%): [152591.009, 164244.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1590.734 ±(99.9%) 58.214 MB/sec [Average]
[info]   (min, avg, max) = (1570.553, 1590.734, 1604.956), stdev = 15.118
[info]   CI (99.9%): [1532.521, 1648.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15803.821 ±(99.9%) 225.285 B/op [Average]
[info]   (min, avg, max) = (15763.271, 15803.821, 15904.796), stdev = 58.506
[info]   CI (99.9%): [15578.536, 16029.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1515.013 ±(99.9%) 679.121 MB/sec [Average]
[info]   (min, avg, max) = (1308.978, 1515.013, 1660.276), stdev = 176.366
[info]   CI (99.9%): [835.892, 2194.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15060.116 ±(99.9%) 7057.264 B/op [Average]
[info]   (min, avg, max) = (12856.290, 15060.116, 16586.023), stdev = 1832.749
[info]   CI (99.9%): [8002.851, 22117.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.133 ±(99.9%) 0.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.562), stdev = 0.242
[info]   CI (99.9%): [≈ 0, 1.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.313 ±(99.9%) 9.153 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.313, 5.520), stdev = 2.377
[info]   CI (99.9%): [≈ 0, 10.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 9.000), stdev = 1.483
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:16:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 192325.977 ops/s
[info] # Warmup Iteration   2: 461711.431 ops/s
[info] # Warmup Iteration   3: 511963.488 ops/s
[info] Iteration   1: 506547.405 ops/s
[info]                  ·gc.alloc.rate:                   702.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              2181.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3061.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 511047.522 ops/s
[info]                  ·gc.alloc.rate:               729.214 MB/sec
[info]                  ·gc.alloc.rate.norm:          2245.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2025.842 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 513683.581 ops/s
[info]                  ·gc.alloc.rate:               706.630 MB/sec
[info]                  ·gc.alloc.rate.norm:          2164.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2018.624 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 516806.687 ops/s
[info]                  ·gc.alloc.rate:                   709.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              2161.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2008.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 528241.730 ops/s
[info]                  ·gc.alloc.rate:                   721.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              2149.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1960.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.915 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   515265.385 ±(99.9%) 31463.366 ops/s [Average]
[info]   (min, avg, max) = (506547.405, 515265.385, 528241.730), stdev = 8170.936
[info]   CI (99.9%): [483802.019, 546728.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   713.880 ±(99.9%) 43.069 MB/sec [Average]
[info]   (min, avg, max) = (702.273, 713.880, 729.214), stdev = 11.185
[info]   CI (99.9%): [670.811, 756.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2180.695 ±(99.9%) 146.573 B/op [Average]
[info]   (min, avg, max) = (2149.989, 2180.695, 2245.655), stdev = 38.065
[info]   CI (99.9%): [2034.121, 2327.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.953 ±(99.9%) 562.662 MB/sec [Average]
[info]   (min, avg, max) = (657.836, 723.953, 985.340), stdev = 146.121
[info]   CI (99.9%): [161.291, 1286.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2215.018 ±(99.9%) 1824.052 B/op [Average]
[info]   (min, avg, max) = (1960.983, 2215.018, 3061.190), stdev = 473.701
[info]   CI (99.9%): [390.966, 4039.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 4.933 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.808, 2.977), stdev = 1.281
[info]   CI (99.9%): [≈ 0, 5.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.448 ±(99.9%) 15.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.448, 9.066), stdev = 3.899
[info]   CI (99.9%): [≈ 0, 17.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 2.828
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:16:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159290.211 ops/s
[info] # Warmup Iteration   2: 451916.922 ops/s
[info] # Warmup Iteration   3: 569610.494 ops/s
[info] Iteration   1: 583562.321 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 584195.085 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 586762.472 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 567682.380 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 567258.531 ops/s
[info]                  ·gc.alloc.rate:      0.216 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.599 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   577892.158 ±(99.9%) 36927.740 ops/s [Average]
[info]   (min, avg, max) = (567258.531, 577892.158, 586762.472), stdev = 9590.017
[info]   CI (99.9%): [540964.418, 614819.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.043 ±(99.9%) 0.372 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.043, 0.216), stdev = 0.096
[info]   CI (99.9%): [≈ 0, 0.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.121 ±(99.9%) 1.031 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.121, 0.599), stdev = 0.268
[info]   CI (99.9%): [≈ 0, 1.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:15:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5533.103 ops/s
[info] # Warmup Iteration   2: 55005.467 ops/s
[info] # Warmup Iteration   3: 66829.314 ops/s
[info] Iteration   1: 77754.158 ops/s
[info]                  ·gc.alloc.rate:                   1734.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              35097.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32811.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.705 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 87310.903 ops/s
[info]                  ·gc.alloc.rate:                   1605.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              28938.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29262.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.575 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.412 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 84990.369 ops/s
[info]                  ·gc.alloc.rate:                   1584.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              29347.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30087.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.470 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 84893.582 ops/s
[info]                  ·gc.alloc.rate:               1581.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          29325.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1636.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30346.886 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 85559.947 ops/s
[info]                  ·gc.alloc.rate:                   1578.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              29038.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24287.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.766 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   84101.792 ±(99.9%) 14165.655 ops/s [Average]
[info]   (min, avg, max) = (77754.158, 84101.792, 87310.903), stdev = 3678.776
[info]   CI (99.9%): [69936.137, 98267.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1616.969 ±(99.9%) 255.205 MB/sec [Average]
[info]   (min, avg, max) = (1578.648, 1616.969, 1734.033), stdev = 66.276
[info]   CI (99.9%): [1361.764, 1872.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30349.626 ±(99.9%) 10243.984 B/op [Average]
[info]   (min, avg, max) = (28938.674, 30349.626, 35097.953), stdev = 2660.330
[info]   CI (99.9%): [20105.642, 40593.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1565.329 ±(99.9%) 527.859 MB/sec [Average]
[info]   (min, avg, max) = (1320.354, 1565.329, 1636.973), stdev = 137.083
[info]   CI (99.9%): [1037.470, 2093.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   29359.247 ±(99.9%) 12047.690 B/op [Average]
[info]   (min, avg, max) = (24287.456, 29359.247, 32811.399), stdev = 3128.747
[info]   CI (99.9%): [17311.557, 41406.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.506 ±(99.9%) 8.095 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.506, 4.728), stdev = 2.102
[info]   CI (99.9%): [≈ 0, 9.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   29.270 ±(99.9%) 161.570 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 29.270, 95.705), stdev = 41.959
[info]   CI (99.9%): [≈ 0, 190.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 18.000), stdev = 4.764
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:15:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6711.692 ops/s
[info] # Warmup Iteration   2: 64965.675 ops/s
[info] # Warmup Iteration   3: 86291.187 ops/s
[info] Iteration   1: 92694.537 ops/s
[info]                  ·gc.alloc.rate:                   1478.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              25097.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27846.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.681 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.495 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 96263.115 ops/s
[info]                  ·gc.alloc.rate:                   1510.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              24690.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21390.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 97267.973 ops/s
[info]                  ·gc.alloc.rate:                   1527.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              24722.206 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26332.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.368 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 96971.898 ops/s
[info]                  ·gc.alloc.rate:                   1513.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              24563.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21190.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 95743.901 ops/s
[info]                  ·gc.alloc.rate:                   1527.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              25109.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27030.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.684 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   95788.285 ±(99.9%) 7044.975 ops/s [Average]
[info]   (min, avg, max) = (92694.537, 95788.285, 97267.973), stdev = 1829.558
[info]   CI (99.9%): [88743.310, 102833.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1511.438 ±(99.9%) 77.963 MB/sec [Average]
[info]   (min, avg, max) = (1478.184, 1511.438, 1527.900), stdev = 20.247
[info]   CI (99.9%): [1433.475, 1589.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24836.733 ±(99.9%) 964.792 B/op [Average]
[info]   (min, avg, max) = (24563.951, 24836.733, 25109.070), stdev = 250.553
[info]   CI (99.9%): [23871.941, 25801.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1505.169 ±(99.9%) 697.081 MB/sec [Average]
[info]   (min, avg, max) = (1305.646, 1505.169, 1644.369), stdev = 181.030
[info]   CI (99.9%): [808.088, 2202.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24758.264 ±(99.9%) 12365.198 B/op [Average]
[info]   (min, avg, max) = (21190.561, 24758.264, 27846.208), stdev = 3211.203
[info]   CI (99.9%): [12393.066, 37123.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.061 ±(99.9%) 6.026 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.061, 3.681), stdev = 1.565
[info]   CI (99.9%): [≈ 0, 7.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   17.802 ±(99.9%) 102.287 B/op [Average]
[info]   (min, avg, max) = (0.338, 17.802, 62.495), stdev = 26.564
[info]   CI (99.9%): [≈ 0, 120.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 22.000), stdev = 6.834
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:15:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10981.333 ops/s
[info] # Warmup Iteration   2: 73789.575 ops/s
[info] # Warmup Iteration   3: 123977.256 ops/s
[info] Iteration   1: 153656.295 ops/s
[info]                  ·gc.alloc.rate:                   729.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              7475.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6577.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 149967.870 ops/s
[info]                  ·gc.alloc.rate:                   716.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              7522.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6753.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 153636.895 ops/s
[info]                  ·gc.alloc.rate:                   733.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              7508.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6605.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 152206.548 ops/s
[info]                  ·gc.alloc.rate:                   727.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              7520.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6688.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.319 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 149779.250 ops/s
[info]                  ·gc.alloc.rate:                   726.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              7637.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10240.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.946 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.445 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   151849.372 ±(99.9%) 7309.441 ops/s [Average]
[info]   (min, avg, max) = (149779.250, 151849.372, 153656.295), stdev = 1898.239
[info]   CI (99.9%): [144539.930, 159158.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   726.768 ±(99.9%) 23.429 MB/sec [Average]
[info]   (min, avg, max) = (716.819, 726.768, 733.059), stdev = 6.084
[info]   CI (99.9%): [703.339, 750.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7532.876 ±(99.9%) 236.996 B/op [Average]
[info]   (min, avg, max) = (7475.399, 7532.876, 7637.705), stdev = 61.547
[info]   CI (99.9%): [7295.880, 7769.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   710.403 ±(99.9%) 568.783 MB/sec [Average]
[info]   (min, avg, max) = (642.155, 710.403, 974.619), stdev = 147.711
[info]   CI (99.9%): [141.620, 1279.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7373.094 ±(99.9%) 6178.192 B/op [Average]
[info]   (min, avg, max) = (6577.524, 7373.094, 10240.561), stdev = 1604.457
[info]   CI (99.9%): [1194.902, 13551.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.410 ±(99.9%) 3.306 MB/sec [Average]
[info]   (min, avg, max) = (0.011, 0.410, 1.946), stdev = 0.859
[info]   CI (99.9%): [≈ 0, 3.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.304 ±(99.9%) 34.745 B/op [Average]
[info]   (min, avg, max) = (0.110, 4.304, 20.445), stdev = 9.023
[info]   CI (99.9%): [≈ 0, 39.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:15:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30004.667 ops/s
[info] # Warmup Iteration   2: 276299.051 ops/s
[info] # Warmup Iteration   3: 306652.424 ops/s
[info] Iteration   1: 327632.097 ops/s
[info]                  ·gc.alloc.rate:               1398.345 MB/sec
[info]                  ·gc.alloc.rate.norm:          6714.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6291.354 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     20.000 ms
[info] Iteration   2: 334644.955 ops/s
[info]                  ·gc.alloc.rate:                   1413.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              6649.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6156.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.118 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.365 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 333104.945 ops/s
[info]                  ·gc.alloc.rate:                   1417.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              6695.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6137.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.593 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 344460.862 ops/s
[info]                  ·gc.alloc.rate:                   1463.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              6685.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7418.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 347448.461 ops/s
[info]                  ·gc.alloc.rate:               1482.529 MB/sec
[info]                  ·gc.alloc.rate.norm:          6715.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1306.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5917.271 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   337458.264 ±(99.9%) 31768.400 ops/s [Average]
[info]   (min, avg, max) = (327632.097, 337458.264, 347448.461), stdev = 8250.153
[info]   CI (99.9%): [305689.864, 369226.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1435.117 ±(99.9%) 138.134 MB/sec [Average]
[info]   (min, avg, max) = (1398.345, 1435.117, 1482.529), stdev = 35.873
[info]   CI (99.9%): [1296.982, 1573.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6692.071 ±(99.9%) 103.737 B/op [Average]
[info]   (min, avg, max) = (6649.569, 6692.071, 6715.422), stdev = 26.940
[info]   CI (99.9%): [6588.334, 6795.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1369.761 ±(99.9%) 547.011 MB/sec [Average]
[info]   (min, avg, max) = (1299.407, 1369.761, 1623.770), stdev = 142.057
[info]   CI (99.9%): [822.750, 1916.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6384.290 ±(99.9%) 2286.159 B/op [Average]
[info]   (min, avg, max) = (5917.271, 6384.290, 7418.890), stdev = 593.708
[info]   CI (99.9%): [4098.131, 8670.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.069 ±(99.9%) 6.847 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.069, 4.118), stdev = 1.778
[info]   CI (99.9%): [≈ 0, 7.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.030 ±(99.9%) 32.207 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.030, 19.365), stdev = 8.364
[info]   CI (99.9%): [≈ 0, 37.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.800, 20.000), stdev = 6.140
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:14:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 511.797 ops/s
[info] # Warmup Iteration   2: 12049.429 ops/s
[info] # Warmup Iteration   3: 13415.680 ops/s
[info] Iteration   1: 16425.080 ops/s
[info]                  ·gc.alloc.rate:                   1268.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              121571.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124848.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 254.614 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 16598.641 ops/s
[info]                  ·gc.alloc.rate:                   1264.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              119807.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123919.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.757 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 450.869 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 17204.837 ops/s
[info]                  ·gc.alloc.rate:                   1271.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              116336.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119517.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.394 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 16968.365 ops/s
[info]                  ·gc.alloc.rate:                   1284.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              119122.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121464.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.484 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 230.363 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 16161.883 ops/s
[info]                  ·gc.alloc.rate:                   1358.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              132239.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127950.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   16671.761 ±(99.9%) 1608.902 ops/s [Average]
[info]   (min, avg, max) = (16161.883, 16671.761, 17204.837), stdev = 417.827
[info]   CI (99.9%): [15062.859, 18280.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1289.484 ±(99.9%) 150.691 MB/sec [Average]
[info]   (min, avg, max) = (1264.104, 1289.484, 1358.176), stdev = 39.134
[info]   CI (99.9%): [1138.793, 1440.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   121815.607 ±(99.9%) 23582.023 B/op [Average]
[info]   (min, avg, max) = (116336.868, 121815.607, 132239.616), stdev = 6124.177
[info]   CI (99.9%): [98233.584, 145397.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1308.197 ±(99.9%) 15.781 MB/sec [Average]
[info]   (min, avg, max) = (1303.027, 1308.197, 1314.122), stdev = 4.098
[info]   CI (99.9%): [1292.416, 1323.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   123540.150 ±(99.9%) 12446.517 B/op [Average]
[info]   (min, avg, max) = (119517.800, 123540.150, 127950.273), stdev = 3232.321
[info]   CI (99.9%): [111093.633, 135986.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.261 ±(99.9%) 6.480 MB/sec [Average]
[info]   (min, avg, max) = (0.573, 2.261, 4.757), stdev = 1.683
[info]   CI (99.9%): [≈ 0, 8.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   213.862 ±(99.9%) 614.327 B/op [Average]
[info]   (min, avg, max) = (52.394, 213.862, 450.869), stdev = 159.539
[info]   CI (99.9%): [≈ 0, 828.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.600, 15.000), stdev = 3.647
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:14:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23292.937 ops/s
[info] # Warmup Iteration   2: 161332.803 ops/s
[info] # Warmup Iteration   3: 232336.033 ops/s
[info] Iteration   1: 254414.050 ops/s
[info]                  ·gc.alloc.rate:                   907.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              5615.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6002.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 255297.951 ops/s
[info]                  ·gc.alloc.rate:               900.948 MB/sec
[info]                  ·gc.alloc.rate.norm:          5554.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4003.985 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 257729.490 ops/s
[info]                  ·gc.alloc.rate:                   916.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              5596.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5973.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 251975.810 ops/s
[info]                  ·gc.alloc.rate:                   899.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              5617.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6130.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 255445.864 ops/s
[info]                  ·gc.alloc.rate:                   895.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              5515.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4038.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   254972.633 ±(99.9%) 7990.203 ops/s [Average]
[info]   (min, avg, max) = (251975.810, 254972.633, 257729.490), stdev = 2075.030
[info]   CI (99.9%): [246982.430, 262962.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   904.023 ±(99.9%) 31.654 MB/sec [Average]
[info]   (min, avg, max) = (895.590, 904.023, 916.469), stdev = 8.221
[info]   CI (99.9%): [872.368, 935.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   5579.754 ±(99.9%) 169.393 B/op [Average]
[info]   (min, avg, max) = (5515.488, 5579.754, 5617.162), stdev = 43.991
[info]   CI (99.9%): [5410.361, 5749.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   847.074 ±(99.9%) 683.712 MB/sec [Average]
[info]   (min, avg, max) = (649.495, 847.074, 981.668), stdev = 177.558
[info]   CI (99.9%): [163.362, 1530.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5229.858 ±(99.9%) 4254.623 B/op [Average]
[info]   (min, avg, max) = (4003.985, 5229.858, 6130.916), stdev = 1104.912
[info]   CI (99.9%): [975.235, 9484.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.314 ±(99.9%) 2.228 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.314, 1.343), stdev = 0.579
[info]   CI (99.9%): [≈ 0, 2.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.925 ±(99.9%) 13.599 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.925, 8.201), stdev = 3.532
[info]   CI (99.9%): [≈ 0, 15.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:14:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 197648.743 ops/s
[info] # Warmup Iteration   2: 607816.506 ops/s
[info] # Warmup Iteration   3: 670519.876 ops/s
[info] Iteration   1: 665852.098 ops/s
[info]                  ·gc.alloc.rate:                   775.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1552.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 665120.660 ops/s
[info]                  ·gc.alloc.rate:                   756.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              1789.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2332.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 665839.899 ops/s
[info]                  ·gc.alloc.rate:                   750.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              1774.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1556.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 646451.235 ops/s
[info]                  ·gc.alloc.rate:                   740.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              1802.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1604.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.628 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 644195.578 ops/s
[info]                  ·gc.alloc.rate:                   723.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              1767.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1606.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.899 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   657491.894 ±(99.9%) 42899.199 ops/s [Average]
[info]   (min, avg, max) = (644195.578, 657491.894, 665852.098), stdev = 11140.786
[info]   CI (99.9%): [614592.695, 700391.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   749.378 ±(99.9%) 74.135 MB/sec [Average]
[info]   (min, avg, max) = (723.362, 749.378, 775.451), stdev = 19.253
[info]   CI (99.9%): [675.243, 823.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1793.318 ±(99.9%) 99.905 B/op [Average]
[info]   (min, avg, max) = (1767.219, 1793.318, 1832.693), stdev = 25.945
[info]   CI (99.9%): [1693.413, 1893.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   723.707 ±(99.9%) 564.429 MB/sec [Average]
[info]   (min, avg, max) = (656.889, 723.707, 985.912), stdev = 146.580
[info]   CI (99.9%): [159.279, 1288.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1730.603 ±(99.9%) 1300.275 B/op [Average]
[info]   (min, avg, max) = (1552.485, 1730.603, 2332.922), stdev = 337.677
[info]   CI (99.9%): [430.328, 3030.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.872 ±(99.9%) 5.248 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.872, 3.134), stdev = 1.363
[info]   CI (99.9%): [≈ 0, 6.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.124 ±(99.9%) 12.776 B/op [Average]
[info]   (min, avg, max) = (0.025, 2.124, 7.628), stdev = 3.318
[info]   CI (99.9%): [≈ 0, 14.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 2.510
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:14:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 262970.320 ops/s
[info] # Warmup Iteration   2: 626336.514 ops/s
[info] # Warmup Iteration   3: 736245.333 ops/s
[info] Iteration   1: 739565.030 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 739094.877 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 741525.705 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 741121.794 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 736928.418 ops/s
[info]                  ·gc.alloc.rate:      0.809 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.729 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   739647.165 ±(99.9%) 7049.624 ops/s [Average]
[info]   (min, avg, max) = (736928.418, 739647.165, 741525.705), stdev = 1830.765
[info]   CI (99.9%): [732597.541, 746696.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.162 ±(99.9%) 1.393 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.162, 0.809), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.346 ±(99.9%) 2.976 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.346, 1.729), stdev = 0.773
[info]   CI (99.9%): [≈ 0, 3.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:14:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5633.949 ops/s
[info] # Warmup Iteration   2: 51973.770 ops/s
[info] # Warmup Iteration   3: 78263.545 ops/s
[info] Iteration   1: 89967.661 ops/s
[info]                  ·gc.alloc.rate:                   1844.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              32262.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34428.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.477 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 86623.334 ops/s
[info]                  ·gc.alloc.rate:                   1796.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              32637.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29889.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 84780.970 ops/s
[info]                  ·gc.alloc.rate:                   1783.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              33105.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36727.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.240 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.579 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 85641.337 ops/s
[info]                  ·gc.alloc.rate:                   1746.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              32093.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29993.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.707 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 86522.430 ops/s
[info]                  ·gc.alloc.rate:                   1367.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              24879.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23531.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.098 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.339 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   86707.146 ±(99.9%) 7584.450 ops/s [Average]
[info]   (min, avg, max) = (84780.970, 86707.146, 89967.661), stdev = 1969.658
[info]   CI (99.9%): [79122.696, 94291.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1707.879 ±(99.9%) 744.137 MB/sec [Average]
[info]   (min, avg, max) = (1367.972, 1707.879, 1844.813), stdev = 193.250
[info]   CI (99.9%): [963.742, 2452.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30995.578 ±(99.9%) 13250.092 B/op [Average]
[info]   (min, avg, max) = (24879.488, 30995.578, 33105.010), stdev = 3441.007
[info]   CI (99.9%): [17745.486, 44245.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1703.741 ±(99.9%) 1092.785 MB/sec [Average]
[info]   (min, avg, max) = (1293.877, 1703.741, 1978.478), stdev = 283.793
[info]   CI (99.9%): [610.957, 2796.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30914.078 ±(99.9%) 19495.809 B/op [Average]
[info]   (min, avg, max) = (23531.919, 30914.078, 36727.056), stdev = 5063.000
[info]   CI (99.9%): [11418.269, 50409.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.009 ±(99.9%) 4.089 MB/sec [Average]
[info]   (min, avg, max) = (0.311, 2.009, 3.098), stdev = 1.062
[info]   CI (99.9%): [≈ 0, 6.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   36.447 ±(99.9%) 74.714 B/op [Average]
[info]   (min, avg, max) = (5.707, 36.447, 56.339), stdev = 19.403
[info]   CI (99.9%): [≈ 0, 111.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   78.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 15.600, 20.000), stdev = 4.278
[info]   CI (99.9%): [78.000, 78.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:13:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13033.445 ops/s
[info] # Warmup Iteration   2: 84445.923 ops/s
[info] # Warmup Iteration   3: 118076.450 ops/s
[info] Iteration   1: 109675.244 ops/s
[info]                  ·gc.alloc.rate:                   2179.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              31278.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2271.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32588.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.196 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 122716.944 ops/s
[info]                  ·gc.alloc.rate:                   2007.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              25741.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1946.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24963.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.584 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 124543.800 ops/s
[info]                  ·gc.alloc.rate:                   2018.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              25507.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1954.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24690.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.105 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 123323.930 ops/s
[info]                  ·gc.alloc.rate:                   2004.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              25584.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25172.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.594 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 125274.970 ops/s
[info]                  ·gc.alloc.rate:                   2048.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              25740.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25048.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   121106.977 ±(99.9%) 24908.585 ops/s [Average]
[info]   (min, avg, max) = (109675.244, 121106.977, 125274.970), stdev = 6468.680
[info]   CI (99.9%): [96198.393, 146015.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2051.861 ±(99.9%) 283.435 MB/sec [Average]
[info]   (min, avg, max) = (2004.772, 2051.861, 2179.726), stdev = 73.607
[info]   CI (99.9%): [1768.426, 2335.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   26770.315 ±(99.9%) 9712.357 B/op [Average]
[info]   (min, avg, max) = (25507.116, 26770.315, 31278.643), stdev = 2522.268
[info]   CI (99.9%): [17057.959, 36482.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2027.615 ±(99.9%) 528.627 MB/sec [Average]
[info]   (min, avg, max) = (1946.509, 2027.615, 2271.003), stdev = 137.283
[info]   CI (99.9%): [1498.989, 2556.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   26492.953 ±(99.9%) 13138.738 B/op [Average]
[info]   (min, avg, max) = (24690.699, 26492.953, 32588.460), stdev = 3412.089
[info]   CI (99.9%): [13354.215, 39631.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.078 ±(99.9%) 5.159 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.078, 2.697), stdev = 1.340
[info]   CI (99.9%): [≈ 0, 6.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.548 ±(99.9%) 69.798 B/op [Average]
[info]   (min, avg, max) = (0.262, 14.548, 34.584), stdev = 18.126
[info]   CI (99.9%): [≈ 0, 84.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 17.000), stdev = 3.834
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:13:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22967.163 ops/s
[info] # Warmup Iteration   2: 140319.556 ops/s
[info] # Warmup Iteration   3: 197931.333 ops/s
[info] Iteration   1: 206958.618 ops/s
[info]                  ·gc.alloc.rate:                   854.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              6497.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4896.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 204317.443 ops/s
[info]                  ·gc.alloc.rate:                   856.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              6601.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          967.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7453.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 202944.011 ops/s
[info]                  ·gc.alloc.rate:                   855.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              6637.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7550.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 197641.221 ops/s
[info]                  ·gc.alloc.rate:                   826.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              6572.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5179.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.622 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 199087.906 ops/s
[info]                  ·gc.alloc.rate:                   828.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              6552.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5171.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.481 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   202189.840 ±(99.9%) 14681.593 ops/s [Average]
[info]   (min, avg, max) = (197641.221, 202189.840, 206958.618), stdev = 3812.763
[info]   CI (99.9%): [187508.247, 216871.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   844.483 ±(99.9%) 59.872 MB/sec [Average]
[info]   (min, avg, max) = (826.144, 844.483, 856.950), stdev = 15.548
[info]   CI (99.9%): [784.612, 904.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6572.155 ±(99.9%) 201.807 B/op [Average]
[info]   (min, avg, max) = (6497.948, 6572.155, 6637.288), stdev = 52.409
[info]   CI (99.9%): [6370.348, 6773.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   778.075 ±(99.9%) 676.938 MB/sec [Average]
[info]   (min, avg, max) = (643.906, 778.075, 973.608), stdev = 175.799
[info]   CI (99.9%): [101.137, 1455.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6050.132 ±(99.9%) 5123.481 B/op [Average]
[info]   (min, avg, max) = (4896.006, 6050.132, 7550.421), stdev = 1330.552
[info]   CI (99.9%): [926.651, 11173.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.204 ±(99.9%) 1.111 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.204, 0.707), stdev = 0.288
[info]   CI (99.9%): [≈ 0, 1.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.613 ±(99.9%) 8.854 B/op [Average]
[info]   (min, avg, max) = (0.158, 1.613, 5.622), stdev = 2.299
[info]   CI (99.9%): [≈ 0, 10.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.304
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:13:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77952.190 ops/s
[info] # Warmup Iteration   2: 203933.667 ops/s
[info] # Warmup Iteration   3: 255994.902 ops/s
[info] Iteration   1: 281823.319 ops/s
[info]                  ·gc.alloc.rate:                   1035.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              5782.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5481.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 285979.938 ops/s
[info]                  ·gc.alloc.rate:                   1055.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              5806.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5409.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.111 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 274170.590 ops/s
[info]                  ·gc.alloc.rate:                   1005.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              5771.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5616.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.541 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 280997.660 ops/s
[info]                  ·gc.alloc.rate:                   1025.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              5743.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5465.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.982 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 277936.002 ops/s
[info]                  ·gc.alloc.rate:                   1016.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              5758.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5535.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   280181.502 ±(99.9%) 17021.074 ops/s [Average]
[info]   (min, avg, max) = (274170.590, 280181.502, 285979.938), stdev = 4420.319
[info]   CI (99.9%): [263160.428, 297202.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1027.674 ±(99.9%) 72.740 MB/sec [Average]
[info]   (min, avg, max) = (1005.497, 1027.674, 1055.112), stdev = 18.890
[info]   CI (99.9%): [954.934, 1100.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5772.453 ±(99.9%) 93.148 B/op [Average]
[info]   (min, avg, max) = (5743.233, 5772.453, 5806.706), stdev = 24.190
[info]   CI (99.9%): [5679.305, 5865.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   979.316 ±(99.9%) 11.053 MB/sec [Average]
[info]   (min, avg, max) = (975.933, 979.316, 982.919), stdev = 2.870
[info]   CI (99.9%): [968.263, 990.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5501.959 ±(99.9%) 302.224 B/op [Average]
[info]   (min, avg, max) = (5409.396, 5501.959, 5616.928), stdev = 78.487
[info]   CI (99.9%): [5199.735, 5804.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.831 ±(99.9%) 4.665 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.831, 2.927), stdev = 1.212
[info]   CI (99.9%): [≈ 0, 5.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.621 ±(99.9%) 25.650 B/op [Average]
[info]   (min, avg, max) = (0.116, 4.621, 16.111), stdev = 6.661
[info]   CI (99.9%): [≈ 0, 30.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 13.000), stdev = 4.099
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:13:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4743.531 ops/s
[info] # Warmup Iteration   2: 49834.651 ops/s
[info] # Warmup Iteration   3: 97955.936 ops/s
[info] Iteration   1: 87560.172 ops/s
[info]                  ·gc.alloc.rate:                   2960.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              53220.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2927.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52611.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.159 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.756 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 94838.995 ops/s
[info]                  ·gc.alloc.rate:                   3051.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              50632.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2959.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49106.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.109 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 93604.397 ops/s
[info]                  ·gc.alloc.rate:                   3023.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              50837.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2998.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50423.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.700 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 92978.418 ops/s
[info]                  ·gc.alloc.rate:                   3012.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              50976.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2691.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45548.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.705 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 94699.472 ops/s
[info]                  ·gc.alloc.rate:                   3079.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              51179.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3044.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50598.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.346 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   92736.291 ±(99.9%) 11532.644 ops/s [Average]
[info]   (min, avg, max) = (87560.172, 92736.291, 94838.995), stdev = 2994.991
[info]   CI (99.9%): [81203.647, 104268.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3025.501 ±(99.9%) 171.641 MB/sec [Average]
[info]   (min, avg, max) = (2960.956, 3025.501, 3079.699), stdev = 44.575
[info]   CI (99.9%): [2853.860, 3197.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   51369.217 ±(99.9%) 4059.488 B/op [Average]
[info]   (min, avg, max) = (50632.224, 51369.217, 53220.952), stdev = 1054.236
[info]   CI (99.9%): [47309.729, 55428.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2924.283 ±(99.9%) 529.245 MB/sec [Average]
[info]   (min, avg, max) = (2691.390, 2924.283, 3044.751), stdev = 137.443
[info]   CI (99.9%): [2395.038, 3453.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   49657.840 ±(99.9%) 10075.161 B/op [Average]
[info]   (min, avg, max) = (45548.834, 49657.840, 52611.395), stdev = 2616.487
[info]   CI (99.9%): [39582.680, 59733.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.890 ±(99.9%) 7.041 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.890, 4.159), stdev = 1.829
[info]   CI (99.9%): [≈ 0, 7.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   15.923 ±(99.9%) 126.714 B/op [Average]
[info]   (min, avg, max) = (0.346, 15.923, 74.756), stdev = 32.907
[info]   CI (99.9%): [≈ 0, 142.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   44.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 13.200, 18.000), stdev = 2.950
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:13:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33764.393 ops/s
[info] # Warmup Iteration   2: 214246.062 ops/s
[info] # Warmup Iteration   3: 227788.105 ops/s
[info] Iteration   1: 247858.892 ops/s
[info]                  ·gc.alloc.rate:                   1692.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              10746.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10372.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.760 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 251549.963 ops/s
[info]                  ·gc.alloc.rate:                   1716.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              10737.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10144.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.912 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 248276.157 ops/s
[info]                  ·gc.alloc.rate:               1677.796 MB/sec
[info]                  ·gc.alloc.rate.norm:          10635.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1623.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10293.239 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 257944.198 ops/s
[info]                  ·gc.alloc.rate:                   1767.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              10784.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12008.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.381 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 255384.898 ops/s
[info]                  ·gc.alloc.rate:                   1757.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              10829.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10201.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   252202.822 ±(99.9%) 16982.567 ops/s [Average]
[info]   (min, avg, max) = (247858.892, 252202.822, 257944.198), stdev = 4410.319
[info]   CI (99.9%): [235220.254, 269185.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1722.372 ±(99.9%) 151.371 MB/sec [Average]
[info]   (min, avg, max) = (1677.796, 1722.372, 1767.445), stdev = 39.311
[info]   CI (99.9%): [1571.002, 1873.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10746.767 ±(99.9%) 277.511 B/op [Average]
[info]   (min, avg, max) = (10635.710, 10746.767, 10829.993), stdev = 72.069
[info]   CI (99.9%): [10469.256, 11024.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1700.547 ±(99.9%) 578.070 MB/sec [Average]
[info]   (min, avg, max) = (1622.029, 1700.547, 1968.036), stdev = 150.123
[info]   CI (99.9%): [1122.478, 2278.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10603.980 ±(99.9%) 3041.734 B/op [Average]
[info]   (min, avg, max) = (10144.538, 10603.980, 12008.473), stdev = 789.929
[info]   CI (99.9%): [7562.246, 13645.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.920 ±(99.9%) 7.433 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.920, 4.372), stdev = 1.930
[info]   CI (99.9%): [≈ 0, 8.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.836 ±(99.9%) 47.211 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.836, 27.760), stdev = 12.261
[info]   CI (99.9%): [≈ 0, 53.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 16.000), stdev = 3.834
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:12:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131145.012 ops/s
[info] # Warmup Iteration   2: 608677.135 ops/s
[info] # Warmup Iteration   3: 726001.338 ops/s
[info] Iteration   1: 842192.520 ops/s
[info]                  ·gc.alloc.rate:               451.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          844.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 597.536 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 811098.087 ops/s
[info]                  ·gc.alloc.rate:                   443.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              860.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1243.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 831478.036 ops/s
[info]                  ·gc.alloc.rate:                   447.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              846.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     608.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 822188.525 ops/s
[info]                  ·gc.alloc.rate:               441.702 MB/sec
[info]                  ·gc.alloc.rate.norm:          845.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 615.281 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 820463.178 ops/s
[info]                  ·gc.alloc.rate:               460.120 MB/sec
[info]                  ·gc.alloc.rate.norm:          882.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1238.263 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   825484.069 ±(99.9%) 45485.152 ops/s [Average]
[info]   (min, avg, max) = (811098.087, 825484.069, 842192.520), stdev = 11812.350
[info]   CI (99.9%): [779998.917, 870969.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   448.896 ±(99.9%) 28.351 MB/sec [Average]
[info]   (min, avg, max) = (441.702, 448.896, 460.120), stdev = 7.363
[info]   CI (99.9%): [420.545, 477.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   855.794 ±(99.9%) 63.359 B/op [Average]
[info]   (min, avg, max) = (844.140, 855.794, 882.534), stdev = 16.454
[info]   CI (99.9%): [792.435, 919.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   449.861 ±(99.9%) 679.688 MB/sec [Average]
[info]   (min, avg, max) = (319.864, 449.861, 645.583), stdev = 176.513
[info]   CI (99.9%): [≈ 0, 1129.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   860.594 ±(99.9%) 1336.973 B/op [Average]
[info]   (min, avg, max) = (597.536, 860.594, 1243.482), stdev = 347.208
[info]   CI (99.9%): [≈ 0, 2197.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.040), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:12:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 365017.486 ops/s
[info] # Warmup Iteration   2: 763889.995 ops/s
[info] # Warmup Iteration   3: 867189.499 ops/s
[info] Iteration   1: 859975.927 ops/s
[info]                  ·gc.alloc.rate:                   472.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1198.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 870643.905 ops/s
[info]                  ·gc.alloc.rate:               471.186 MB/sec
[info]                  ·gc.alloc.rate.norm:          851.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 593.078 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 852213.430 ops/s
[info]                  ·gc.alloc.rate:               458.894 MB/sec
[info]                  ·gc.alloc.rate.norm:          847.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 605.864 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 881531.039 ops/s
[info]                  ·gc.alloc.rate:                   483.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              862.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1172.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 844614.527 ops/s
[info]                  ·gc.alloc.rate:               472.139 MB/sec
[info]                  ·gc.alloc.rate.norm:          879.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 613.235 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   861795.765 ±(99.9%) 56399.070 ops/s [Average]
[info]   (min, avg, max) = (844614.527, 861795.765, 881531.039), stdev = 14646.659
[info]   CI (99.9%): [805396.696, 918194.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   471.471 ±(99.9%) 32.911 MB/sec [Average]
[info]   (min, avg, max) = (458.894, 471.471, 483.006), stdev = 8.547
[info]   CI (99.9%): [438.561, 504.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   861.075 ±(99.9%) 48.378 B/op [Average]
[info]   (min, avg, max) = (847.478, 861.075, 879.765), stdev = 12.564
[info]   CI (99.9%): [812.697, 909.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   459.381 ±(99.9%) 690.539 MB/sec [Average]
[info]   (min, avg, max) = (328.065, 459.381, 656.830), stdev = 179.331
[info]   CI (99.9%): [≈ 0, 1149.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   836.645 ±(99.9%) 1227.173 B/op [Average]
[info]   (min, avg, max) = (593.078, 836.645, 1198.388), stdev = 318.693
[info]   CI (99.9%): [≈ 0, 2063.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.029), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.052), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:12:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 406840.978 ops/s
[info] # Warmup Iteration   2: 772178.470 ops/s
[info] # Warmup Iteration   3: 882529.144 ops/s
[info] Iteration   1: 868614.001 ops/s
[info]                  ·gc.alloc.rate:      10.843 MB/sec
[info]                  ·gc.alloc.rate.norm: 19.647 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 886535.194 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 887238.823 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 888309.248 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 887857.030 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   883710.859 ±(99.9%) 32598.517 ops/s [Average]
[info]   (min, avg, max) = (868614.001, 883710.859, 888309.248), stdev = 8465.731
[info]   CI (99.9%): [851112.342, 916309.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.169 ±(99.9%) 18.672 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.169, 10.843), stdev = 4.849
[info]   CI (99.9%): [≈ 0, 20.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   3.930 ±(99.9%) 33.832 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 3.930, 19.647), stdev = 8.786
[info]   CI (99.9%): [≈ 0, 37.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:12:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5377.769 ops/s
[info] # Warmup Iteration   2: 23505.062 ops/s
[info] # Warmup Iteration   3: 36285.137 ops/s
[info] Iteration   1: 38194.288 ops/s
[info]                  ·gc.alloc.rate:                   1970.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              81187.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1939.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79910.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.039 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 35558.517 ops/s
[info]                  ·gc.alloc.rate:                   1927.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              85308.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1943.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86034.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 322.649 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   3: 37847.123 ops/s
[info]                  ·gc.alloc.rate:                   1783.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              74185.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1930.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80278.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.368 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 264.819 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 39367.338 ops/s
[info]                  ·gc.alloc.rate:                   1668.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              66708.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1608.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64300.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.329 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 39420.904 ops/s
[info]                  ·gc.alloc.rate:                   1659.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              66259.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1621.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64746.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.324 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   38077.634 ±(99.9%) 6051.885 ops/s [Average]
[info]   (min, avg, max) = (35558.517, 38077.634, 39420.904), stdev = 1571.655
[info]   CI (99.9%): [32025.749, 44129.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1802.052 ±(99.9%) 552.919 MB/sec [Average]
[info]   (min, avg, max) = (1659.812, 1802.052, 1970.510), stdev = 143.591
[info]   CI (99.9%): [1249.134, 2354.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   74730.017 ±(99.9%) 32786.528 B/op [Average]
[info]   (min, avg, max) = (66259.736, 74730.017, 85308.803), stdev = 8514.557
[info]   CI (99.9%): [41943.489, 107516.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1808.807 ±(99.9%) 681.226 MB/sec [Average]
[info]   (min, avg, max) = (1608.405, 1808.807, 1943.879), stdev = 176.912
[info]   CI (99.9%): [1127.582, 2490.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75054.130 ±(99.9%) 38183.912 B/op [Average]
[info]   (min, avg, max) = (64300.979, 75054.130, 86034.888), stdev = 9916.241
[info]   CI (99.9%): [36870.218, 113238.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.998 ±(99.9%) 13.631 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 2.998, 7.290), stdev = 3.540
[info]   CI (99.9%): [≈ 0, 16.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   128.432 ±(99.9%) 590.566 B/op [Average]
[info]   (min, avg, max) = (3.324, 128.432, 322.649), stdev = 153.368
[info]   CI (99.9%): [≈ 0, 718.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.400, 28.000), stdev = 9.209
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:11:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42524.811 ops/s
[info] # Warmup Iteration   2: 456226.347 ops/s
[info] # Warmup Iteration   3: 1023423.384 ops/s
[info] Iteration   1: 1127168.099 ops/s
[info]                  ·gc.alloc.rate:                   2582.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              3605.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2599.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3629.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.316 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.630 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 1140367.226 ops/s
[info]                  ·gc.alloc.rate:                   2590.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              3575.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2268.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3130.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.181 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.631 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1112675.319 ops/s
[info]                  ·gc.alloc.rate:                   2581.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              3650.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2614.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3697.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1115943.816 ops/s
[info]                  ·gc.alloc.rate:                   2597.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              3663.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2652.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3740.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1127499.083 ops/s
[info]                  ·gc.alloc.rate:                   2602.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2346.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3274.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   1124730.708 ±(99.9%) 42210.125 ops/s [Average]
[info]   (min, avg, max) = (1112675.319, 1124730.708, 1140367.226), stdev = 10961.835
[info]   CI (99.9%): [1082520.583, 1166940.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2590.839 ±(99.9%) 36.072 MB/sec [Average]
[info]   (min, avg, max) = (2581.087, 2590.839, 2602.449), stdev = 9.368
[info]   CI (99.9%): [2554.767, 2626.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3625.616 ±(99.9%) 136.719 B/op [Average]
[info]   (min, avg, max) = (3575.498, 3625.616, 3663.604), stdev = 35.505
[info]   CI (99.9%): [3488.898, 3762.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2496.004 ±(99.9%) 676.271 MB/sec [Average]
[info]   (min, avg, max) = (2268.207, 2496.004, 2652.103), stdev = 175.625
[info]   CI (99.9%): [1819.734, 3172.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3494.542 ±(99.9%) 1056.073 B/op [Average]
[info]   (min, avg, max) = (3130.456, 3494.542, 3740.284), stdev = 274.259
[info]   CI (99.9%): [2438.469, 4550.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.925 ±(99.9%) 5.489 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.925, 3.316), stdev = 1.425
[info]   CI (99.9%): [≈ 0, 6.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.287 ±(99.9%) 7.660 B/op [Average]
[info]   (min, avg, max) = (0.029, 1.287, 4.630), stdev = 1.989
[info]   CI (99.9%): [≈ 0, 8.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 22.000), stdev = 5.541
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:11:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40756.361 ops/s
[info] # Warmup Iteration   2: 1198794.175 ops/s
[info] # Warmup Iteration   3: 1777038.968 ops/s
[info] Iteration   1: 1835321.960 ops/s
[info]                  ·gc.alloc.rate:                   1148.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     834.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1863935.907 ops/s
[info]                  ·gc.alloc.rate:                   1157.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              977.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     825.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1835898.895 ops/s
[info]                  ·gc.alloc.rate:                   1159.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              994.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1124.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1874639.473 ops/s
[info]                  ·gc.alloc.rate:                   1162.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              975.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1838062.013 ops/s
[info]                  ·gc.alloc.rate:                   1138.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              975.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1130.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1849571.650 ±(99.9%) 70929.167 ops/s [Average]
[info]   (min, avg, max) = (1835321.960, 1849571.650, 1874639.473), stdev = 18420.079
[info]   CI (99.9%): [1778642.483, 1920500.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1153.389 ±(99.9%) 37.054 MB/sec [Average]
[info]   (min, avg, max) = (1138.931, 1153.389, 1162.194), stdev = 9.623
[info]   CI (99.9%): [1116.335, 1190.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   981.356 ±(99.9%) 30.986 B/op [Average]
[info]   (min, avg, max) = (975.225, 981.356, 994.041), stdev = 8.047
[info]   CI (99.9%): [950.370, 1012.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1114.383 ±(99.9%) 710.540 MB/sec [Average]
[info]   (min, avg, max) = (973.798, 1114.383, 1320.673), stdev = 184.525
[info]   CI (99.9%): [403.843, 1824.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   948.953 ±(99.9%) 628.342 B/op [Average]
[info]   (min, avg, max) = (825.457, 948.953, 1130.843), stdev = 163.178
[info]   CI (99.9%): [320.612, 1577.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.317 ±(99.9%) 2.152 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.317, 1.312), stdev = 0.559
[info]   CI (99.9%): [≈ 0, 2.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.271 ±(99.9%) 1.845 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.271, 1.124), stdev = 0.479
[info]   CI (99.9%): [≈ 0, 2.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 8.000), stdev = 1.225
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:11:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1558736.591 ops/s
[info] # Warmup Iteration   2: 8598835.074 ops/s
[info] # Warmup Iteration   3: 9753405.782 ops/s
[info] Iteration   1: 9693862.171 ops/s
[info]                  ·gc.alloc.rate:                   304.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 9462105.559 ops/s
[info]                  ·gc.alloc.rate:               298.718 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54.681 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 9665323.182 ops/s
[info]                  ·gc.alloc.rate:                   302.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 9380361.053 ops/s
[info]                  ·gc.alloc.rate:               295.836 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55.215 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 9423931.075 ops/s
[info]                  ·gc.alloc.rate:      287.421 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   9525116.608 ±(99.9%) 555668.145 ops/s [Average]
[info]   (min, avg, max) = (9380361.053, 9525116.608, 9693862.171), stdev = 144305.253
[info]   CI (99.9%): [8969448.463, 10080784.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   297.774 ±(99.9%) 25.718 MB/sec [Average]
[info]   (min, avg, max) = (287.421, 297.774, 304.503), stdev = 6.679
[info]   CI (99.9%): [272.056, 323.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   49.200 ±(99.9%) 2.671 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.200, 49.685), stdev = 0.694
[info]   CI (99.9%): [46.529, 51.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   248.478 ±(99.9%) 548.567 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 248.478, 329.080), stdev = 142.461
[info]   CI (99.9%): [≈ 0, 797.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.992 ±(99.9%) 90.870 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40.992, 55.215), stdev = 23.599
[info]   CI (99.9%): [≈ 0, 131.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.007), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 4.000), stdev = 1.732
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:11:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1803.310 ops/s
[info] # Warmup Iteration   2: 160942.544 ops/s
[info] # Warmup Iteration   3: 535256.831 ops/s
[info] Iteration   1: 574902.196 ops/s
[info]                  ·gc.alloc.rate:                   2438.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              6675.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6276.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.279 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.977 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 591632.131 ops/s
[info]                  ·gc.alloc.rate:                   2487.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              6618.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2287.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6085.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.775 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 578571.661 ops/s
[info]                  ·gc.alloc.rate:               2474.506 MB/sec
[info]                  ·gc.alloc.rate.norm:          6731.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2638.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7178.552 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 559596.903 ops/s
[info]                  ·gc.alloc.rate:                   2402.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              6758.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2335.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6567.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 560143.539 ops/s
[info]                  ·gc.alloc.rate:                   2400.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              6743.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2353.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6612.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   572969.286 ±(99.9%) 51903.229 ops/s [Average]
[info]   (min, avg, max) = (559596.903, 572969.286, 591632.131), stdev = 13479.104
[info]   CI (99.9%): [521066.057, 624872.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2440.772 ±(99.9%) 154.680 MB/sec [Average]
[info]   (min, avg, max) = (2400.151, 2440.772, 2487.979), stdev = 40.170
[info]   CI (99.9%): [2286.092, 2595.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   6705.251 ±(99.9%) 223.071 B/op [Average]
[info]   (min, avg, max) = (6618.268, 6705.251, 6758.636), stdev = 57.931
[info]   CI (99.9%): [6482.181, 6928.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2381.626 ±(99.9%) 564.339 MB/sec [Average]
[info]   (min, avg, max) = (2287.691, 2381.626, 2638.956), stdev = 146.557
[info]   CI (99.9%): [1817.287, 2945.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   6544.181 ±(99.9%) 1599.268 B/op [Average]
[info]   (min, avg, max) = (6085.482, 6544.181, 7178.552), stdev = 415.325
[info]   CI (99.9%): [4944.913, 8143.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.731 ±(99.9%) 5.504 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.731, 3.279), stdev = 1.429
[info]   CI (99.9%): [≈ 0, 6.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.997 ±(99.9%) 15.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.997, 8.977), stdev = 3.914
[info]   CI (99.9%): [≈ 0, 17.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 17.000), stdev = 2.775
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:11:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62536.047 ops/s
[info] # Warmup Iteration   2: 994885.350 ops/s
[info] # Warmup Iteration   3: 1310889.942 ops/s
[info] Iteration   1: 1850075.110 ops/s
[info]                  ·gc.alloc.rate:                   1900.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              1616.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1941.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1651.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.567 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 1838586.617 ops/s
[info]                  ·gc.alloc.rate:                   1877.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              1607.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1945.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1665.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.853 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   3: 1895631.908 ops/s
[info]                  ·gc.alloc.rate:                   1933.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              1605.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1934.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1606.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.367 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.966 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1854107.376 ops/s
[info]                  ·gc.alloc.rate:                   1911.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              1622.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1610.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1366.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1817107.042 ops/s
[info]                  ·gc.alloc.rate:                   1888.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              1635.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1691.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1851101.611 ±(99.9%) 110689.965 ops/s [Average]
[info]   (min, avg, max) = (1817107.042, 1851101.611, 1895631.908), stdev = 28745.832
[info]   CI (99.9%): [1740411.646, 1961791.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1902.166 ±(99.9%) 82.429 MB/sec [Average]
[info]   (min, avg, max) = (1877.830, 1902.166, 1933.316), stdev = 21.406
[info]   CI (99.9%): [1819.737, 1984.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1617.278 ±(99.9%) 46.493 B/op [Average]
[info]   (min, avg, max) = (1605.241, 1617.278, 1635.092), stdev = 12.074
[info]   CI (99.9%): [1570.785, 1663.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1876.921 ±(99.9%) 575.023 MB/sec [Average]
[info]   (min, avg, max) = (1610.069, 1876.921, 1953.150), stdev = 149.332
[info]   CI (99.9%): [1301.899, 2451.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1596.179 ±(99.9%) 508.117 B/op [Average]
[info]   (min, avg, max) = (1366.676, 1596.179, 1691.088), stdev = 131.956
[info]   CI (99.9%): [1088.062, 2104.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.290 ±(99.9%) 5.725 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.290, 3.333), stdev = 1.487
[info]   CI (99.9%): [≈ 0, 7.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.091 ±(99.9%) 4.860 B/op [Average]
[info]   (min, avg, max) = (0.018, 1.091, 2.853), stdev = 1.262
[info]   CI (99.9%): [≈ 0, 5.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.400, 26.000), stdev = 9.290
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:10:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151979.918 ops/s
[info] # Warmup Iteration   2: 1370225.404 ops/s
[info] # Warmup Iteration   3: 2989852.061 ops/s
[info] Iteration   1: 3000732.979 ops/s
[info]                  ·gc.alloc.rate:                   1185.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              621.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1287.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     675.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2965194.905 ops/s
[info]                  ·gc.alloc.rate:               1218.182 MB/sec
[info]                  ·gc.alloc.rate.norm:          646.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1294.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 686.823 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 3016795.664 ops/s
[info]                  ·gc.alloc.rate:                   1177.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              614.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2986297.951 ops/s
[info]                  ·gc.alloc.rate:                   1170.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              617.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     689.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.536 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.809 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2898209.594 ops/s
[info]                  ·gc.alloc.rate:               1131.954 MB/sec
[info]                  ·gc.alloc.rate.norm:          614.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 534.836 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   2973446.219 ±(99.9%) 177688.990 ops/s [Average]
[info]   (min, avg, max) = (2898209.594, 2973446.219, 3016795.664), stdev = 46145.267
[info]   CI (99.9%): [2795757.228, 3151135.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1176.902 ±(99.9%) 119.226 MB/sec [Average]
[info]   (min, avg, max) = (1131.954, 1176.902, 1218.182), stdev = 30.962
[info]   CI (99.9%): [1057.676, 1296.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   622.916 ±(99.9%) 52.118 B/op [Average]
[info]   (min, avg, max) = (614.536, 622.916, 646.575), stdev = 13.535
[info]   CI (99.9%): [570.798, 675.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1170.268 ±(99.9%) 668.813 MB/sec [Average]
[info]   (min, avg, max) = (975.536, 1170.268, 1308.966), stdev = 173.689
[info]   CI (99.9%): [501.455, 1839.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   619.167 ±(99.9%) 344.415 B/op [Average]
[info]   (min, avg, max) = (508.929, 619.167, 689.880), stdev = 89.443
[info]   CI (99.9%): [274.753, 963.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.324 ±(99.9%) 2.611 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.324, 1.536), stdev = 0.678
[info]   CI (99.9%): [≈ 0, 2.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.171 ±(99.9%) 1.376 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.171, 0.809), stdev = 0.357
[info]   CI (99.9%): [≈ 0, 1.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 8.000), stdev = 1.673
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:10:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 854860.726 ops/s
[info] # Warmup Iteration   2: 6550176.954 ops/s
[info] # Warmup Iteration   3: 8989618.421 ops/s
[info] Iteration   1: 9048379.473 ops/s
[info]                  ·gc.alloc.rate:                   758.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 9133128.603 ops/s
[info]                  ·gc.alloc.rate:                   763.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 9068208.467 ops/s
[info]                  ·gc.alloc.rate:               759.146 MB/sec
[info]                  ·gc.alloc.rate.norm:          131.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113.765 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 8936682.712 ops/s
[info]                  ·gc.alloc.rate:                   821.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              144.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.582 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 9087021.234 ops/s
[info]                  ·gc.alloc.rate:                   756.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.169 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   9054684.098 ±(99.9%) 281296.159 ops/s [Average]
[info]   (min, avg, max) = (8936682.712, 9054684.098, 9133128.603), stdev = 73051.719
[info]   CI (99.9%): [8773387.939, 9335980.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   771.997 ±(99.9%) 107.984 MB/sec [Average]
[info]   (min, avg, max) = (756.624, 771.997, 821.942), stdev = 28.043
[info]   CI (99.9%): [664.013, 879.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   134.220 ±(99.9%) 22.715 B/op [Average]
[info]   (min, avg, max) = (131.047, 134.220, 144.756), stdev = 5.899
[info]   CI (99.9%): [111.505, 156.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   786.543 ±(99.9%) 691.586 MB/sec [Average]
[info]   (min, avg, max) = (654.862, 786.543, 985.581), stdev = 179.603
[info]   CI (99.9%): [94.957, 1478.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   136.879 ±(99.9%) 123.867 B/op [Average]
[info]   (min, avg, max) = (112.845, 136.879, 173.575), stdev = 32.168
[info]   CI (99.9%): [13.012, 260.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.870 ±(99.9%) 5.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.870, 3.302), stdev = 1.421
[info]   CI (99.9%): [≈ 0, 6.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 0.964 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.582), stdev = 0.250
[info]   CI (99.9%): [≈ 0, 1.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.600, 12.000), stdev = 3.715
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:10:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 848401.519 ops/s
[info] # Warmup Iteration   2: 7765243.719 ops/s
[info] # Warmup Iteration   3: 8591731.879 ops/s
[info] Iteration   1: 8695472.903 ops/s
[info]                  ·gc.alloc.rate:                   271.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 8723491.106 ops/s
[info]                  ·gc.alloc.rate:                   275.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 8734168.083 ops/s
[info]                  ·gc.alloc.rate:               273.809 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58.821 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 8761817.593 ops/s
[info]                  ·gc.alloc.rate:      267.295 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 8866852.782 ops/s
[info]                  ·gc.alloc.rate:                   278.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   8756360.493 ±(99.9%) 254830.921 ops/s [Average]
[info]   (min, avg, max) = (8695472.903, 8756360.493, 8866852.782), stdev = 66178.781
[info]   CI (99.9%): [8501529.573, 9011191.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   273.526 ±(99.9%) 16.864 MB/sec [Average]
[info]   (min, avg, max) = (267.295, 273.526, 278.945), stdev = 4.380
[info]   CI (99.9%): [256.662, 290.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   49.158 ±(99.9%) 2.626 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.158, 49.762), stdev = 0.682
[info]   CI (99.9%): [46.532, 51.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   247.029 ±(99.9%) 544.628 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.029, 326.447), stdev = 141.438
[info]   CI (99.9%): [≈ 0, 791.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   44.390 ±(99.9%) 97.723 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44.390, 58.893), stdev = 25.378
[info]   CI (99.9%): [≈ 0, 142.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.045 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.029), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 5.000), stdev = 1.924
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:10:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9032.846 ops/s
[info] # Warmup Iteration   2: 258856.062 ops/s
[info] # Warmup Iteration   3: 398205.512 ops/s
[info] Iteration   1: 482666.089 ops/s
[info]                  ·gc.alloc.rate:                   2444.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              7971.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2289.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7464.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.788 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 496345.321 ops/s
[info]                  ·gc.alloc.rate:                   2517.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              7982.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2628.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8335.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.924 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 500402.709 ops/s
[info]                  ·gc.alloc.rate:                   2542.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              7997.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2321.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7302.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 489735.062 ops/s
[info]                  ·gc.alloc.rate:                   2523.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              8108.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2343.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7532.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 475629.297 ops/s
[info]                  ·gc.alloc.rate:                   2415.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              7991.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7806.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   488955.696 ±(99.9%) 38669.752 ops/s [Average]
[info]   (min, avg, max) = (475629.297, 488955.696, 500402.709), stdev = 10042.412
[info]   CI (99.9%): [450285.944, 527625.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2488.626 ±(99.9%) 213.278 MB/sec [Average]
[info]   (min, avg, max) = (2415.199, 2488.626, 2542.582), stdev = 55.388
[info]   CI (99.9%): [2275.348, 2701.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   8010.324 ±(99.9%) 215.579 B/op [Average]
[info]   (min, avg, max) = (7971.248, 8010.324, 8108.913), stdev = 55.985
[info]   CI (99.9%): [7794.745, 8225.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2388.543 ±(99.9%) 526.687 MB/sec [Average]
[info]   (min, avg, max) = (2289.264, 2388.543, 2628.657), stdev = 136.779
[info]   CI (99.9%): [1861.855, 2915.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7688.225 ±(99.9%) 1558.389 B/op [Average]
[info]   (min, avg, max) = (7302.613, 7688.225, 8335.024), stdev = 404.709
[info]   CI (99.9%): [6129.836, 9246.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.504 ±(99.9%) 3.421 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.504, 2.082), stdev = 0.889
[info]   CI (99.9%): [≈ 0, 3.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.637 ±(99.9%) 11.164 B/op [Average]
[info]   (min, avg, max) = (0.065, 1.637, 6.788), stdev = 2.899
[info]   CI (99.9%): [≈ 0, 12.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 15.000), stdev = 1.924
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:10:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10528.401 ops/s
[info] # Warmup Iteration   2: 48021.152 ops/s
[info] # Warmup Iteration   3: 79034.807 ops/s
[info] Iteration   1: 81753.084 ops/s
[info]                  ·gc.alloc.rate:                   2693.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              51827.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2500.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48116.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.776 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.414 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         55.000 ms
[info] Iteration   2: 81649.232 ops/s
[info]                  ·gc.alloc.rate:                   2631.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              50695.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2766.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53300.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      12.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 236.219 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         60.000 ms
[info] Iteration   3: 83271.898 ops/s
[info]                  ·gc.alloc.rate:                   2410.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              45557.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2366.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44733.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      18.565 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 350.882 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         36.000 ms
[info] Iteration   4: 96816.609 ops/s
[info]                  ·gc.alloc.rate:                   2662.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              43274.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2363.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38415.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 95187.260 ops/s
[info]                  ·gc.alloc.rate:                   2643.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              43706.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2791.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46156.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.377 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   87735.617 ±(99.9%) 29246.583 ops/s [Average]
[info]   (min, avg, max) = (81649.232, 87735.617, 96816.609), stdev = 7595.245
[info]   CI (99.9%): [58489.034, 116982.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2608.136 ±(99.9%) 434.998 MB/sec [Average]
[info]   (min, avg, max) = (2410.463, 2608.136, 2693.502), stdev = 112.968
[info]   CI (99.9%): [2173.138, 3043.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   47012.280 ±(99.9%) 15374.382 B/op [Average]
[info]   (min, avg, max) = (43274.476, 47012.280, 51827.405), stdev = 3992.678
[info]   CI (99.9%): [31637.898, 62386.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2557.730 ±(99.9%) 807.352 MB/sec [Average]
[info]   (min, avg, max) = (2363.114, 2557.730, 2791.632), stdev = 209.667
[info]   CI (99.9%): [1750.378, 3365.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   46144.283 ±(99.9%) 20809.596 B/op [Average]
[info]   (min, avg, max) = (38415.228, 46144.283, 53300.013), stdev = 5404.186
[info]   CI (99.9%): [25334.687, 66953.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   6.741 ±(99.9%) 31.956 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 6.741, 18.565), stdev = 8.299
[info]   CI (99.9%): [≈ 0, 38.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   128.446 ±(99.9%) 606.646 B/op [Average]
[info]   (min, avg, max) = (0.338, 128.446, 350.882), stdev = 157.544
[info]   CI (99.9%): [≈ 0, 735.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   174.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 34.800, 60.000), stdev = 23.080
[info]   CI (99.9%): [174.000, 174.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:09:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11589.795 ops/s
[info] # Warmup Iteration   2: 54545.543 ops/s
[info] # Warmup Iteration   3: 125639.758 ops/s
[info] Iteration   1: 140890.724 ops/s
[info]                  ·gc.alloc.rate:                   2221.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              24816.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2258.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25230.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.886 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.897 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 142309.879 ops/s
[info]                  ·gc.alloc.rate:                   2219.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              24540.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2286.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25287.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.144 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 142811.532 ops/s
[info]                  ·gc.alloc.rate:               2243.445 MB/sec
[info]                  ·gc.alloc.rate.norm:          24724.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1980.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21824.992 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 145474.963 ops/s
[info]                  ·gc.alloc.rate:                   2311.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              25004.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2334.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25249.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.450 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 143785.296 ops/s
[info]                  ·gc.alloc.rate:               2273.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          24879.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2016.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22068.184 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   143054.479 ±(99.9%) 6582.272 ops/s [Average]
[info]   (min, avg, max) = (140890.724, 143054.479, 145474.963), stdev = 1709.395
[info]   CI (99.9%): [136472.207, 149636.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2253.825 ±(99.9%) 150.186 MB/sec [Average]
[info]   (min, avg, max) = (2219.098, 2253.825, 2311.833), stdev = 39.003
[info]   CI (99.9%): [2103.639, 2404.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24793.250 ±(99.9%) 670.688 B/op [Average]
[info]   (min, avg, max) = (24540.512, 24793.250, 25004.691), stdev = 174.176
[info]   CI (99.9%): [24122.562, 25463.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2175.271 ±(99.9%) 632.703 MB/sec [Average]
[info]   (min, avg, max) = (1980.350, 2175.271, 2334.458), stdev = 164.311
[info]   CI (99.9%): [1542.568, 2807.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23932.092 ±(99.9%) 6987.614 B/op [Average]
[info]   (min, avg, max) = (21824.992, 23932.092, 25287.262), stdev = 1814.661
[info]   CI (99.9%): [16944.478, 30919.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.260 ±(99.9%) 1.476 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.260, 0.886), stdev = 0.383
[info]   CI (99.9%): [≈ 0, 1.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.898 ±(99.9%) 16.487 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.898, 9.897), stdev = 4.282
[info]   CI (99.9%): [≈ 0, 19.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.304
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:09:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28528.328 ops/s
[info] # Warmup Iteration   2: 96217.093 ops/s
[info] # Warmup Iteration   3: 154459.244 ops/s
[info] Iteration   1: 171151.027 ops/s
[info]                  ·gc.alloc.rate:                   2591.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              23832.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2572.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23651.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.455 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.575 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         37.000 ms
[info] Iteration   2: 175516.935 ops/s
[info]                  ·gc.alloc.rate:                   2645.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              23721.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2590.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23230.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.114 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 177287.590 ops/s
[info]                  ·gc.alloc.rate:                   2700.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              23972.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2572.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22833.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.294 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 180396.336 ops/s
[info]                  ·gc.alloc.rate:                   2753.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              24024.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2603.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22712.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 179860.043 ops/s
[info]                  ·gc.alloc.rate:                   2754.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              24100.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2645.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23153.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   176842.386 ±(99.9%) 14418.517 ops/s [Average]
[info]   (min, avg, max) = (171151.027, 176842.386, 180396.336), stdev = 3744.443
[info]   CI (99.9%): [162423.869, 191260.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2689.120 ±(99.9%) 271.722 MB/sec [Average]
[info]   (min, avg, max) = (2591.707, 2689.120, 2754.157), stdev = 70.565
[info]   CI (99.9%): [2417.398, 2960.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23930.425 ±(99.9%) 586.467 B/op [Average]
[info]   (min, avg, max) = (23721.778, 23930.425, 24100.569), stdev = 152.304
[info]   CI (99.9%): [23343.958, 24516.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2596.834 ±(99.9%) 117.288 MB/sec [Average]
[info]   (min, avg, max) = (2572.050, 2596.834, 2645.884), stdev = 30.459
[info]   CI (99.9%): [2479.545, 2714.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   23116.282 ±(99.9%) 1420.479 B/op [Average]
[info]   (min, avg, max) = (22712.502, 23116.282, 23651.676), stdev = 368.894
[info]   CI (99.9%): [21695.803, 24536.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.740 ±(99.9%) 10.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.740, 6.035), stdev = 2.614
[info]   CI (99.9%): [≈ 0, 11.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.706 ±(99.9%) 90.438 B/op [Average]
[info]   (min, avg, max) = (0.182, 15.706, 54.114), stdev = 23.486
[info]   CI (99.9%): [≈ 0, 106.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   94.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 18.800, 37.000), stdev = 11.925
[info]   CI (99.9%): [94.000, 94.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:09:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4540.148 ops/s
[info] # Warmup Iteration   2: 33926.040 ops/s
[info] # Warmup Iteration   3: 70437.572 ops/s
[info] Iteration   1: 70461.083 ops/s
[info]                  ·gc.alloc.rate:                   3269.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              73020.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3214.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71792.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.141 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         43.000 ms
[info] Iteration   2: 83929.442 ops/s
[info]                  ·gc.alloc.rate:                   3676.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              68904.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3493.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65477.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      6.266 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.449 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 84817.646 ops/s
[info]                  ·gc.alloc.rate:                   3724.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              69081.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3892.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72189.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.159 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 85248.249 ops/s
[info]                  ·gc.alloc.rate:                   3781.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              69796.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3660.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67560.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.769 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 86346.450 ops/s
[info]                  ·gc.alloc.rate:                   3817.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              69554.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3371.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61426.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   82160.574 ±(99.9%) 25405.666 ops/s [Average]
[info]   (min, avg, max) = (70461.083, 82160.574, 86346.450), stdev = 6597.771
[info]   CI (99.9%): [56754.908, 107566.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3653.811 ±(99.9%) 853.614 MB/sec [Average]
[info]   (min, avg, max) = (3269.194, 3653.811, 3817.575), stdev = 221.681
[info]   CI (99.9%): [2800.198, 4507.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   70071.544 ±(99.9%) 6494.313 B/op [Average]
[info]   (min, avg, max) = (68904.856, 70071.544, 73020.112), stdev = 1686.552
[info]   CI (99.9%): [63577.231, 76565.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3526.309 ±(99.9%) 1008.141 MB/sec [Average]
[info]   (min, avg, max) = (3214.244, 3526.309, 3892.024), stdev = 261.811
[info]   CI (99.9%): [2518.169, 4534.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67689.379 ±(99.9%) 17351.285 B/op [Average]
[info]   (min, avg, max) = (61426.672, 67689.379, 72189.417), stdev = 4506.073
[info]   CI (99.9%): [50338.094, 85040.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.211 ±(99.9%) 11.644 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 2.211, 6.266), stdev = 3.024
[info]   CI (99.9%): [≈ 0, 13.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   44.779 ±(99.9%) 232.762 B/op [Average]
[info]   (min, avg, max) = (0.379, 44.779, 117.449), stdev = 60.448
[info]   CI (99.9%): [≈ 0, 277.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   54.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 12.000), stdev = 0.837
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   108.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 21.600, 43.000), stdev = 12.361
[info]   CI (99.9%): [108.000, 108.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:09:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35954.567 ops/s
[info] # Warmup Iteration   2: 221459.383 ops/s
[info] # Warmup Iteration   3: 236756.905 ops/s
[info] Iteration   1: 258528.302 ops/s
[info]                  ·gc.alloc.rate:                   1771.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              10785.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9939.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.599 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 255835.389 ops/s
[info]                  ·gc.alloc.rate:                   1761.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              10831.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1622.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9978.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 253426.908 ops/s
[info]                  ·gc.alloc.rate:                   1730.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              10749.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10106.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 246062.916 ops/s
[info]                  ·gc.alloc.rate:                   1694.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              10838.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10505.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 246402.099 ops/s
[info]                  ·gc.alloc.rate:                   1710.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              10925.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10580.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   252051.123 ±(99.9%) 21606.315 ops/s [Average]
[info]   (min, avg, max) = (246062.916, 252051.123, 258528.302), stdev = 5611.091
[info]   CI (99.9%): [230444.807, 273657.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1733.829 ±(99.9%) 125.973 MB/sec [Average]
[info]   (min, avg, max) = (1694.547, 1733.829, 1771.660), stdev = 32.715
[info]   CI (99.9%): [1607.857, 1859.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10826.123 ±(99.9%) 255.799 B/op [Average]
[info]   (min, avg, max) = (10749.422, 10826.123, 10925.713), stdev = 66.430
[info]   CI (99.9%): [10570.324, 11081.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1636.384 ±(99.9%) 51.791 MB/sec [Average]
[info]   (min, avg, max) = (1622.790, 1636.384, 1656.600), stdev = 13.450
[info]   CI (99.9%): [1584.593, 1688.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10222.205 ±(99.9%) 1156.753 B/op [Average]
[info]   (min, avg, max) = (9939.513, 10222.205, 10580.437), stdev = 300.405
[info]   CI (99.9%): [9065.452, 11378.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.891 ±(99.9%) 7.138 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.891, 4.205), stdev = 1.854
[info]   CI (99.9%): [≈ 0, 8.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.430 ±(99.9%) 43.440 B/op [Average]
[info]   (min, avg, max) = (0.133, 5.430, 25.599), stdev = 11.281
[info]   CI (99.9%): [≈ 0, 48.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 14.000), stdev = 3.050
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:08:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60957.843 ops/s
[info] # Warmup Iteration   2: 727667.837 ops/s
[info] # Warmup Iteration   3: 720649.338 ops/s
[info] Iteration   1: 812204.198 ops/s
[info]                  ·gc.alloc.rate:                   483.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              935.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          637.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1234.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.886 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.716 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 812608.683 ops/s
[info]                  ·gc.alloc.rate:               481.462 MB/sec
[info]                  ·gc.alloc.rate.norm:          932.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 618.670 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 812396.819 ops/s
[info]                  ·gc.alloc.rate:                   488.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              945.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1242.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 808865.127 ops/s
[info]                  ·gc.alloc.rate:               475.497 MB/sec
[info]                  ·gc.alloc.rate.norm:          925.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 626.708 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 811878.128 ops/s
[info]                  ·gc.alloc.rate:                   491.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              952.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1251.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   811590.591 ±(99.9%) 5957.265 ops/s [Average]
[info]   (min, avg, max) = (808865.127, 811590.591, 812608.683), stdev = 1547.083
[info]   CI (99.9%): [805633.326, 817547.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   483.914 ±(99.9%) 23.669 MB/sec [Average]
[info]   (min, avg, max) = (475.497, 483.914, 491.298), stdev = 6.147
[info]   CI (99.9%): [460.245, 507.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   938.344 ±(99.9%) 41.611 B/op [Average]
[info]   (min, avg, max) = (925.169, 938.344, 952.342), stdev = 10.806
[info]   CI (99.9%): [896.733, 979.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   513.190 ±(99.9%) 676.477 MB/sec [Average]
[info]   (min, avg, max) = (319.446, 513.190, 645.573), stdev = 175.679
[info]   CI (99.9%): [≈ 0, 1189.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   994.860 ±(99.9%) 1308.478 B/op [Average]
[info]   (min, avg, max) = (618.670, 994.860, 1251.392), stdev = 339.807
[info]   CI (99.9%): [≈ 0, 2303.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.188 ±(99.9%) 1.504 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.188, 0.886), stdev = 0.391
[info]   CI (99.9%): [≈ 0, 1.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.364 ±(99.9%) 2.915 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.364, 1.716), stdev = 0.757
[info]   CI (99.9%): [≈ 0, 3.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:08:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161924.794 ops/s
[info] # Warmup Iteration   2: 719912.867 ops/s
[info] # Warmup Iteration   3: 823368.216 ops/s
[info] Iteration   1: 782625.292 ops/s
[info]                  ·gc.alloc.rate:                   432.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              869.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1312.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 776423.404 ops/s
[info]                  ·gc.alloc.rate:                   424.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              859.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     661.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 798795.570 ops/s
[info]                  ·gc.alloc.rate:                   437.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              862.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     643.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 816722.557 ops/s
[info]                  ·gc.alloc.rate:               450.244 MB/sec
[info]                  ·gc.alloc.rate.norm:          867.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 629.668 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 794380.026 ops/s
[info]                  ·gc.alloc.rate:                   446.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              884.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1296.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   793789.370 ±(99.9%) 60196.889 ops/s [Average]
[info]   (min, avg, max) = (776423.404, 793789.370, 816722.557), stdev = 15632.941
[info]   CI (99.9%): [733592.481, 853986.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   438.187 ±(99.9%) 40.697 MB/sec [Average]
[info]   (min, avg, max) = (424.054, 438.187, 450.244), stdev = 10.569
[info]   CI (99.9%): [397.490, 478.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   868.709 ±(99.9%) 37.403 B/op [Average]
[info]   (min, avg, max) = (859.552, 868.709, 884.546), stdev = 9.713
[info]   CI (99.9%): [831.306, 906.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   457.339 ±(99.9%) 688.988 MB/sec [Average]
[info]   (min, avg, max) = (326.403, 457.339, 654.173), stdev = 178.928
[info]   CI (99.9%): [≈ 0, 1146.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   908.665 ±(99.9%) 1390.980 B/op [Average]
[info]   (min, avg, max) = (629.668, 908.665, 1312.184), stdev = 361.233
[info]   CI (99.9%): [≈ 0, 2299.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.024 ±(99.9%) 0.131 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.264 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.167), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:08:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 327819.713 ops/s
[info] # Warmup Iteration   2: 757421.354 ops/s
[info] # Warmup Iteration   3: 842825.632 ops/s
[info] Iteration   1: 835386.368 ops/s
[info]                  ·gc.alloc.rate:      8.494 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 835790.426 ops/s
[info]                  ·gc.alloc.rate:      16.258 MB/sec
[info]                  ·gc.alloc.rate.norm: 30.608 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 836553.867 ops/s
[info]                  ·gc.alloc.rate:      8.504 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 837397.299 ops/s
[info]                  ·gc.alloc.rate:      8.516 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 838291.364 ops/s
[info]                  ·gc.alloc.rate:      9.880 MB/sec
[info]                  ·gc.alloc.rate.norm: 18.550 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   836683.865 ±(99.9%) 4552.755 ops/s [Average]
[info]   (min, avg, max) = (835386.368, 836683.865, 838291.364), stdev = 1182.336
[info]   CI (99.9%): [832131.110, 841236.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   10.331 ±(99.9%) 12.964 MB/sec [Average]
[info]   (min, avg, max) = (8.494, 10.331, 16.258), stdev = 3.367
[info]   CI (99.9%): [≈ 0, 23.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   19.432 ±(99.9%) 24.431 B/op [Average]
[info]   (min, avg, max) = (16.001, 19.432, 30.608), stdev = 6.345
[info]   CI (99.9%): [≈ 0, 43.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4693.215 ops/s
[info] # Warmup Iteration   2: 24088.399 ops/s
[info] # Warmup Iteration   3: 26752.015 ops/s
[info] Iteration   1: 37646.522 ops/s
[info]                  ·gc.alloc.rate:                   1729.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              72290.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1890.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79035.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      7.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 294.371 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 37176.802 ops/s
[info]                  ·gc.alloc.rate:                   1986.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              84056.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1886.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79823.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.818 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 39499.863 ops/s
[info]                  ·gc.alloc.rate:                   1883.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              75018.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1901.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75738.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.455 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 37408.582 ops/s
[info]                  ·gc.alloc.rate:                   1892.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              79608.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1933.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81316.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 140.195 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 39003.753 ops/s
[info]                  ·gc.alloc.rate:                   1778.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              71760.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65845.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.680 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   38147.104 ±(99.9%) 3993.030 ops/s [Average]
[info]   (min, avg, max) = (37176.802, 38147.104, 39499.863), stdev = 1036.977
[info]   CI (99.9%): [34154.074, 42140.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1854.063 ±(99.9%) 390.419 MB/sec [Average]
[info]   (min, avg, max) = (1729.173, 1854.063, 1986.051), stdev = 101.391
[info]   CI (99.9%): [1463.644, 2244.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   76546.890 ±(99.9%) 20112.837 B/op [Average]
[info]   (min, avg, max) = (71760.385, 76546.890, 84056.361), stdev = 5223.240
[info]   CI (99.9%): [56434.053, 96659.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1848.743 ±(99.9%) 472.271 MB/sec [Average]
[info]   (min, avg, max) = (1631.878, 1848.743, 1933.597), stdev = 122.647
[info]   CI (99.9%): [1376.473, 2321.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76351.744 ±(99.9%) 23944.354 B/op [Average]
[info]   (min, avg, max) = (65845.132, 76351.744, 81316.137), stdev = 6218.273
[info]   CI (99.9%): [52407.390, 100296.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.671 ±(99.9%) 10.447 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 2.671, 7.041), stdev = 2.713
[info]   CI (99.9%): [≈ 0, 13.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   111.504 ±(99.9%) 437.984 B/op [Average]
[info]   (min, avg, max) = (1.680, 111.504, 294.371), stdev = 113.743
[info]   CI (99.9%): [≈ 0, 549.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 13.800, 28.000), stdev = 8.136
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 787912.087 ops/s
[info] # Warmup Iteration   2: 3178367.567 ops/s
[info] # Warmup Iteration   3: 3617250.901 ops/s
[info] Iteration   1: 4524506.444 ops/s
[info]                  ·gc.alloc.rate:                   3474.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3253.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1131.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 4479427.915 ops/s
[info]                  ·gc.alloc.rate:                   3488.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              1225.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3288.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1155.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 4467602.979 ops/s
[info]                  ·gc.alloc.rate:                   3549.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              1249.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3672.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1293.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 4466444.948 ops/s
[info]                  ·gc.alloc.rate:                   3460.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              1219.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3373.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1188.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 4525292.547 ops/s
[info]                  ·gc.alloc.rate:                   3506.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              1219.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3390.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1179.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   4492654.967 ±(99.9%) 115024.900 ops/s [Average]
[info]   (min, avg, max) = (4466444.948, 4492654.967, 4525292.547), stdev = 29871.601
[info]   CI (99.9%): [4377630.066, 4607679.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3495.852 ±(99.9%) 132.858 MB/sec [Average]
[info]   (min, avg, max) = (3460.671, 3495.852, 3549.672), stdev = 34.503
[info]   CI (99.9%): [3362.994, 3628.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1224.521 ±(99.9%) 59.324 B/op [Average]
[info]   (min, avg, max) = (1208.553, 1224.521, 1249.859), stdev = 15.406
[info]   CI (99.9%): [1165.197, 1283.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3395.719 ±(99.9%) 634.619 MB/sec [Average]
[info]   (min, avg, max) = (3253.527, 3395.719, 3672.286), stdev = 164.809
[info]   CI (99.9%): [2761.100, 4030.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1189.580 ±(99.9%) 238.437 B/op [Average]
[info]   (min, avg, max) = (1131.727, 1189.580, 1293.032), stdev = 61.921
[info]   CI (99.9%): [951.143, 1428.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.368 ±(99.9%) 2.101 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.368, 1.320), stdev = 0.546
[info]   CI (99.9%): [≈ 0, 2.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.128 ±(99.9%) 0.730 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.128, 0.459), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 0.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   51.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   77.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 15.400, 19.000), stdev = 2.608
[info]   CI (99.9%): [77.000, 77.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:07:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.621 ops/s
[info] # Warmup Iteration   2: 5604672.061 ops/s
[info] # Warmup Iteration   3: 6173062.022 ops/s
[info] Iteration   1: 5868680.164 ops/s
[info]                  ·gc.alloc.rate:                   1143.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     349.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 5803308.551 ops/s
[info]                  ·gc.alloc.rate:                   1121.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.758 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 6109015.317 ops/s
[info]                  ·gc.alloc.rate:                   1175.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     251.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6101873.474 ops/s
[info]                  ·gc.alloc.rate:                   1186.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1292.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     333.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6131430.422 ops/s
[info]                  ·gc.alloc.rate:                   1198.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     332.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   6002861.586 ±(99.9%) 594759.290 ops/s [Average]
[info]   (min, avg, max) = (5803308.551, 6002861.586, 6131430.422), stdev = 154457.099
[info]   CI (99.9%): [5408102.295, 6597620.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1164.931 ±(99.9%) 122.390 MB/sec [Average]
[info]   (min, avg, max) = (1121.192, 1164.931, 1198.219), stdev = 31.784
[info]   CI (99.9%): [1042.540, 1287.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   305.409 ±(99.9%) 7.419 B/op [Average]
[info]   (min, avg, max) = (302.832, 305.409, 307.514), stdev = 1.927
[info]   CI (99.9%): [297.990, 312.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1168.500 ±(99.9%) 673.490 MB/sec [Average]
[info]   (min, avg, max) = (975.235, 1168.500, 1301.703), stdev = 174.903
[info]   CI (99.9%): [495.010, 1841.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   306.263 ±(99.9%) 171.544 B/op [Average]
[info]   (min, avg, max) = (251.251, 306.263, 349.088), stdev = 44.549
[info]   CI (99.9%): [134.719, 477.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.051 ±(99.9%) 6.271 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.051, 3.758), stdev = 1.629
[info]   CI (99.9%): [≈ 0, 7.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.281 ±(99.9%) 1.697 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.281, 1.019), stdev = 0.441
[info]   CI (99.9%): [≈ 0, 1.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 15.000), stdev = 3.975
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 879856.085 ops/s
[info] # Warmup Iteration   2: 4506415.684 ops/s
[info] # Warmup Iteration   3: 5151912.136 ops/s
[info] Iteration   1: 5158488.335 ops/s
[info]                  ·gc.alloc.rate:               1053.262 MB/sec
[info]                  ·gc.alloc.rate.norm:          321.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:      978.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 298.563 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 5170045.020 ops/s
[info]                  ·gc.alloc.rate:                   1056.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              321.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     298.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.147 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 5066329.941 ops/s
[info]                  ·gc.alloc.rate:                   1026.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              318.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4894905.183 ops/s
[info]                  ·gc.alloc.rate:                   1001.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              322.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4917527.242 ops/s
[info]                  ·gc.alloc.rate:                   1000.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   5041459.144 ±(99.9%) 500901.642 ops/s [Average]
[info]   (min, avg, max) = (4894905.183, 5041459.144, 5170045.020), stdev = 130082.566
[info]   CI (99.9%): [4540557.502, 5542360.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1027.727 ±(99.9%) 102.654 MB/sec [Average]
[info]   (min, avg, max) = (1000.842, 1027.727, 1056.083), stdev = 26.659
[info]   CI (99.9%): [925.072, 1130.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   320.830 ±(99.9%) 4.908 B/op [Average]
[info]   (min, avg, max) = (318.894, 320.830, 322.176), stdev = 1.275
[info]   CI (99.9%): [315.922, 325.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   976.610 ±(99.9%) 14.426 MB/sec [Average]
[info]   (min, avg, max) = (972.584, 976.610, 980.710), stdev = 3.746
[info]   CI (99.9%): [962.184, 991.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   305.011 ±(99.9%) 26.084 B/op [Average]
[info]   (min, avg, max) = (298.503, 305.011, 312.721), stdev = 6.774
[info]   CI (99.9%): [278.927, 331.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.962 ±(99.9%) 6.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.962, 3.768), stdev = 1.617
[info]   CI (99.9%): [≈ 0, 7.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.294 ±(99.9%) 1.894 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.294, 1.147), stdev = 0.492
[info]   CI (99.9%): [≈ 0, 2.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 14.000), stdev = 4.722
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3607632.390 ops/s
[info] # Warmup Iteration   2: 5324084.171 ops/s
[info] # Warmup Iteration   3: 6266680.908 ops/s
[info] Iteration   1: 6504986.118 ops/s
[info]                  ·gc.alloc.rate:               1254.564 MB/sec
[info]                  ·gc.alloc.rate.norm:          303.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 239.347 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 6358897.810 ops/s
[info]                  ·gc.alloc.rate:                   1230.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     326.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.817 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 6343011.156 ops/s
[info]                  ·gc.alloc.rate:                   1238.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6500931.236 ops/s
[info]                  ·gc.alloc.rate:                   1274.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              308.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     317.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6589050.636 ops/s
[info]                  ·gc.alloc.rate:                   1278.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6459375.391 ±(99.9%) 405047.089 ops/s [Average]
[info]   (min, avg, max) = (6343011.156, 6459375.391, 6589050.636), stdev = 105189.443
[info]   CI (99.9%): [6054328.302, 6864422.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1255.118 ±(99.9%) 82.209 MB/sec [Average]
[info]   (min, avg, max) = (1230.117, 1255.118, 1278.456), stdev = 21.349
[info]   CI (99.9%): [1172.909, 1337.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   305.814 ±(99.9%) 7.812 B/op [Average]
[info]   (min, avg, max) = (303.524, 305.814, 308.489), stdev = 2.029
[info]   CI (99.9%): [298.002, 313.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1183.637 ±(99.9%) 689.821 MB/sec [Average]
[info]   (min, avg, max) = (985.565, 1183.637, 1319.726), stdev = 179.144
[info]   CI (99.9%): [493.816, 1873.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   288.893 ±(99.9%) 181.670 B/op [Average]
[info]   (min, avg, max) = (235.414, 288.893, 326.629), stdev = 47.179
[info]   CI (99.9%): [107.223, 470.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.819 ±(99.9%) 5.485 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.819, 3.302), stdev = 1.424
[info]   CI (99.9%): [≈ 0, 6.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.203 ±(99.9%) 1.358 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.203, 0.817), stdev = 0.353
[info]   CI (99.9%): [≈ 0, 1.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 2.966
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 974420.313 ops/s
[info] # Warmup Iteration   2: 5390136.733 ops/s
[info] # Warmup Iteration   3: 5365564.758 ops/s
[info] Iteration   1: 5224063.588 ops/s
[info]                  ·gc.alloc.rate:                   1013.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     296.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 5281059.808 ops/s
[info]                  ·gc.alloc.rate:                   1019.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     293.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.949 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 5421185.579 ops/s
[info]                  ·gc.alloc.rate:                   1040.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              301.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.417 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 5466449.726 ops/s
[info]                  ·gc.alloc.rate:                   1080.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              310.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 5190936.382 ops/s
[info]                  ·gc.alloc.rate:                   998.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     295.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   5316739.016 ±(99.9%) 467700.394 ops/s [Average]
[info]   (min, avg, max) = (5190936.382, 5316739.016, 5466449.726), stdev = 121460.307
[info]   CI (99.9%): [4849038.622, 5784439.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1030.399 ±(99.9%) 121.122 MB/sec [Average]
[info]   (min, avg, max) = (998.921, 1030.399, 1080.056), stdev = 31.455
[info]   CI (99.9%): [909.276, 1151.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   304.949 ±(99.9%) 13.672 B/op [Average]
[info]   (min, avg, max) = (301.966, 304.949, 310.890), stdev = 3.551
[info]   CI (99.9%): [291.277, 318.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1045.181 ±(99.9%) 552.840 MB/sec [Average]
[info]   (min, avg, max) = (976.112, 1045.181, 1301.953), stdev = 143.571
[info]   CI (99.9%): [492.341, 1598.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   308.951 ±(99.9%) 142.742 B/op [Average]
[info]   (min, avg, max) = (284.867, 308.951, 374.763), stdev = 37.070
[info]   CI (99.9%): [166.208, 451.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.949 ±(99.9%) 5.346 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.949, 3.186), stdev = 1.388
[info]   CI (99.9%): [≈ 0, 6.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.281 ±(99.9%) 1.590 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.281, 0.949), stdev = 0.413
[info]   CI (99.9%): [≈ 0, 1.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 13.000), stdev = 4.025
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1123958.876 ops/s
[info] # Warmup Iteration   2: 2977912.353 ops/s
[info] # Warmup Iteration   3: 3473194.729 ops/s
[info] Iteration   1: 3595679.888 ops/s
[info]                  ·gc.alloc.rate:                   1968.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              861.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     717.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.865 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3602971.150 ops/s
[info]                  ·gc.alloc.rate:               1967.735 MB/sec
[info]                  ·gc.alloc.rate.norm:          859.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1956.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 854.781 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 3629210.880 ops/s
[info]                  ·gc.alloc.rate:                   2014.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              873.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     853.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3625047.505 ops/s
[info]                  ·gc.alloc.rate:                   2013.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              874.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     863.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3594847.725 ops/s
[info]                  ·gc.alloc.rate:                   1998.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              874.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     877.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   3609551.430 ±(99.9%) 63229.783 ops/s [Average]
[info]   (min, avg, max) = (3594847.725, 3609551.430, 3629210.880), stdev = 16420.574
[info]   CI (99.9%): [3546321.646, 3672781.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1992.580 ±(99.9%) 88.749 MB/sec [Average]
[info]   (min, avg, max) = (1967.735, 1992.580, 2014.269), stdev = 23.048
[info]   CI (99.9%): [1903.831, 2081.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   868.766 ±(99.9%) 29.039 B/op [Average]
[info]   (min, avg, max) = (859.536, 868.766, 874.905), stdev = 7.541
[info]   CI (99.9%): [839.727, 897.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1911.452 ±(99.9%) 591.784 MB/sec [Average]
[info]   (min, avg, max) = (1638.516, 1911.452, 2005.134), stdev = 153.684
[info]   CI (99.9%): [1319.668, 2503.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   833.320 ±(99.9%) 253.101 B/op [Average]
[info]   (min, avg, max) = (717.011, 833.320, 877.861), stdev = 65.729
[info]   CI (99.9%): [580.220, 1086.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.881 ±(99.9%) 7.276 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.881, 4.261), stdev = 1.889
[info]   CI (99.9%): [≈ 0, 8.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.386 ±(99.9%) 3.184 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.386, 1.865), stdev = 0.827
[info]   CI (99.9%): [≈ 0, 3.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 10.000), stdev = 0.894
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:06:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.647 ops/s
[info] # Warmup Iteration   2: 6146935.495 ops/s
[info] # Warmup Iteration   3: 6691967.969 ops/s
[info] Iteration   1: 6641253.874 ops/s
[info]                  ·gc.alloc.rate:                   658.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6766194.164 ops/s
[info]                  ·gc.alloc.rate:               668.692 MB/sec
[info]                  ·gc.alloc.rate.norm:          155.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 151.232 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 6649350.603 ops/s
[info]                  ·gc.alloc.rate:                   665.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6827886.383 ops/s
[info]                  ·gc.alloc.rate:               676.847 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 150.177 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 6792707.845 ops/s
[info]                  ·gc.alloc.rate:                   676.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.982 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.923 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   6735478.574 ±(99.9%) 328176.545 ops/s [Average]
[info]   (min, avg, max) = (6641253.874, 6735478.574, 6827886.383), stdev = 85226.407
[info]   CI (99.9%): [6407302.029, 7063655.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   669.162 ±(99.9%) 29.033 MB/sec [Average]
[info]   (min, avg, max) = (658.782, 669.162, 676.847), stdev = 7.540
[info]   CI (99.9%): [640.129, 698.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   156.365 ±(99.9%) 2.896 B/op [Average]
[info]   (min, avg, max) = (155.541, 156.365, 157.519), stdev = 0.752
[info]   CI (99.9%): [153.469, 159.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   651.098 ±(99.9%) 4.311 MB/sec [Average]
[info]   (min, avg, max) = (650.155, 651.098, 652.833), stdev = 1.120
[info]   CI (99.9%): [646.787, 655.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   152.159 ±(99.9%) 6.900 B/op [Average]
[info]   (min, avg, max) = (150.177, 152.159, 154.077), stdev = 1.792
[info]   CI (99.9%): [145.259, 159.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 6.832 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.808, 3.982), stdev = 1.774
[info]   CI (99.9%): [≈ 0, 7.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.187 ±(99.9%) 1.583 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.187, 0.923), stdev = 0.411
[info]   CI (99.9%): [≈ 0, 1.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:06:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1649567.635 ops/s
[info] # Warmup Iteration   2: 5860342.248 ops/s
[info] # Warmup Iteration   3: 6213230.300 ops/s
[info] Iteration   1: 6329239.970 ops/s
[info]                  ·gc.alloc.rate:                   629.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          641.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     159.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6170069.555 ops/s
[info]                  ·gc.alloc.rate:                   614.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6253437.843 ops/s
[info]                  ·gc.alloc.rate:                   621.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 6361778.755 ops/s
[info]                  ·gc.alloc.rate:               631.221 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 160.352 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 6076976.144 ops/s
[info]                  ·gc.alloc.rate:               594.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          153.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 84.283 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   6238300.453 ±(99.9%) 449169.879 ops/s [Average]
[info]   (min, avg, max) = (6076976.144, 6238300.453, 6361778.755), stdev = 116647.991
[info]   CI (99.9%): [5789130.574, 6687470.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   618.340 ±(99.9%) 57.531 MB/sec [Average]
[info]   (min, avg, max) = (594.318, 618.340, 631.221), stdev = 14.941
[info]   CI (99.9%): [560.810, 675.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   155.978 ±(99.9%) 4.515 B/op [Average]
[info]   (min, avg, max) = (153.919, 155.978, 156.787), stdev = 1.173
[info]   CI (99.9%): [151.463, 160.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   580.739 ±(99.9%) 549.646 MB/sec [Average]
[info]   (min, avg, max) = (325.435, 580.739, 648.121), stdev = 142.741
[info]   CI (99.9%): [31.093, 1130.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   146.119 ±(99.9%) 133.278 B/op [Average]
[info]   (min, avg, max) = (84.283, 146.119, 163.974), stdev = 34.612
[info]   CI (99.9%): [12.841, 279.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 4.000), stdev = 1.095
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2916659.278 ops/s
[info] # Warmup Iteration   2: 6627811.435 ops/s
[info] # Warmup Iteration   3: 6839116.030 ops/s
[info] Iteration   1: 6658276.871 ops/s
[info]                  ·gc.alloc.rate:                   669.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              158.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 6759417.856 ops/s
[info]                  ·gc.alloc.rate:               673.997 MB/sec
[info]                  ·gc.alloc.rate.norm:          156.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 152.943 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 6732122.773 ops/s
[info]                  ·gc.alloc.rate:                   715.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              167.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6974104.972 ops/s
[info]                  ·gc.alloc.rate:                   699.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6996694.722 ops/s
[info]                  ·gc.alloc.rate:                   697.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.819 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   6824123.439 ±(99.9%) 585346.410 ops/s [Average]
[info]   (min, avg, max) = (6658276.871, 6824123.439, 6996694.722), stdev = 152012.604
[info]   CI (99.9%): [6238777.029, 7409469.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   691.117 ±(99.9%) 73.114 MB/sec [Average]
[info]   (min, avg, max) = (669.615, 691.117, 715.203), stdev = 18.987
[info]   CI (99.9%): [618.004, 764.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   159.410 ±(99.9%) 16.881 B/op [Average]
[info]   (min, avg, max) = (156.923, 159.410, 167.188), stdev = 4.384
[info]   CI (99.9%): [142.529, 176.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   657.822 ±(99.9%) 4.722 MB/sec [Average]
[info]   (min, avg, max) = (656.370, 657.822, 659.501), stdev = 1.226
[info]   CI (99.9%): [653.100, 662.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   151.757 ±(99.9%) 12.039 B/op [Average]
[info]   (min, avg, max) = (148.348, 151.757, 155.108), stdev = 3.127
[info]   CI (99.9%): [139.717, 163.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 6.203 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.762, 3.643), stdev = 1.611
[info]   CI (99.9%): [≈ 0, 6.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.172 ±(99.9%) 1.395 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.172, 0.819), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4291623.197 ops/s
[info] # Warmup Iteration   2: 6915009.908 ops/s
[info] # Warmup Iteration   3: 7209119.939 ops/s
[info] Iteration   1: 7206713.741 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 7229553.151 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 7237392.903 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 7254138.544 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 7264882.661 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   7238536.200 ±(99.9%) 86794.239 ops/s [Average]
[info]   (min, avg, max) = (7206713.741, 7238536.200, 7264882.661), stdev = 22540.188
[info]   CI (99.9%): [7151741.961, 7325330.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:05:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1562309.333 ops/s
[info] # Warmup Iteration   2: 4141499.352 ops/s
[info] # Warmup Iteration   3: 6252896.764 ops/s
[info] Iteration   1: 6303389.399 ops/s
[info]                  ·gc.alloc.rate:               624.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          155.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 163.246 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 6297850.415 ops/s
[info]                  ·gc.alloc.rate:               620.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          154.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81.737 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 6142635.015 ops/s
[info]                  ·gc.alloc.rate:                   627.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              160.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6256089.178 ops/s
[info]                  ·gc.alloc.rate:                   622.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     164.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.531 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.888 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6080526.700 ops/s
[info]                  ·gc.alloc.rate:                   637.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              165.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   6216098.142 ±(99.9%) 383515.860 ops/s [Average]
[info]   (min, avg, max) = (6080526.700, 6216098.142, 6303389.399), stdev = 99597.851
[info]   CI (99.9%): [5832582.282, 6599614.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   626.386 ±(99.9%) 27.033 MB/sec [Average]
[info]   (min, avg, max) = (620.086, 626.386, 637.880), stdev = 7.020
[info]   CI (99.9%): [599.353, 653.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   158.634 ±(99.9%) 16.364 B/op [Average]
[info]   (min, avg, max) = (154.952, 158.634, 165.088), stdev = 4.250
[info]   CI (99.9%): [142.269, 174.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   588.866 ±(99.9%) 563.501 MB/sec [Average]
[info]   (min, avg, max) = (327.093, 588.866, 655.472), stdev = 146.339
[info]   CI (99.9%): [25.365, 1152.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   149.329 ±(99.9%) 145.759 B/op [Average]
[info]   (min, avg, max) = (81.737, 149.329, 168.976), stdev = 37.853
[info]   CI (99.9%): [3.570, 295.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.909 ±(99.9%) 5.859 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.909, 3.531), stdev = 1.521
[info]   CI (99.9%): [≈ 0, 6.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.230 ±(99.9%) 1.474 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.230, 0.888), stdev = 0.383
[info]   CI (99.9%): [≈ 0, 1.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:05:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 274226.233 ops/s
[info] # Warmup Iteration   2: 1360022.556 ops/s
[info] # Warmup Iteration   3: 1712709.848 ops/s
[info] Iteration   1: 1744075.824 ops/s
[info]                  ·gc.alloc.rate:                   2248.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              2028.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2288.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2064.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.985 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1694415.515 ops/s
[info]                  ·gc.alloc.rate:                   2191.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              2035.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2121.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1764286.146 ops/s
[info]                  ·gc.alloc.rate:                   2293.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              2045.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1762.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1751134.185 ops/s
[info]                  ·gc.alloc.rate:                   2291.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              2059.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2329.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2093.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1740555.986 ops/s
[info]                  ·gc.alloc.rate:                   2278.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              2060.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2350.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2125.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1738893.531 ±(99.9%) 101924.521 ops/s [Average]
[info]   (min, avg, max) = (1694415.515, 1738893.531, 1764286.146), stdev = 26469.475
[info]   CI (99.9%): [1636969.010, 1840818.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2260.451 ±(99.9%) 164.152 MB/sec [Average]
[info]   (min, avg, max) = (2191.366, 2260.451, 2293.048), stdev = 42.630
[info]   CI (99.9%): [2096.299, 2424.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2045.823 ±(99.9%) 54.429 B/op [Average]
[info]   (min, avg, max) = (2028.529, 2045.823, 2060.154), stdev = 14.135
[info]   CI (99.9%): [1991.393, 2100.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2245.528 ±(99.9%) 590.611 MB/sec [Average]
[info]   (min, avg, max) = (1975.758, 2245.528, 2350.233), stdev = 153.380
[info]   CI (99.9%): [1654.917, 2836.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2033.495 ±(99.9%) 590.596 B/op [Average]
[info]   (min, avg, max) = (1762.564, 2033.495, 2125.157), stdev = 153.376
[info]   CI (99.9%): [1442.899, 2624.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.921 ±(99.9%) 7.525 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.921, 4.416), stdev = 1.954
[info]   CI (99.9%): [≈ 0, 8.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.831 ±(99.9%) 6.790 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.831, 3.985), stdev = 1.763
[info]   CI (99.9%): [≈ 0, 7.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 14.000), stdev = 2.702
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.535 ops/s
[info] # Warmup Iteration   2: 2603763.548 ops/s
[info] # Warmup Iteration   3: 2923254.304 ops/s
[info] Iteration   1: 3000930.923 ops/s
[info]                  ·gc.alloc.rate:                   579.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     340.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2964695.924 ops/s
[info]                  ·gc.alloc.rate:                   579.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     344.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2985608.098 ops/s
[info]                  ·gc.alloc.rate:                   579.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     342.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2906882.596 ops/s
[info]                  ·gc.alloc.rate:               556.891 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 176.010 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2986386.560 ops/s
[info]                  ·gc.alloc.rate:                   579.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   2968900.820 ±(99.9%) 142457.602 ops/s [Average]
[info]   (min, avg, max) = (2906882.596, 2968900.820, 3000930.923), stdev = 36995.787
[info]   CI (99.9%): [2826443.219, 3111358.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   574.993 ±(99.9%) 38.976 MB/sec [Average]
[info]   (min, avg, max) = (556.891, 574.993, 579.877), stdev = 10.122
[info]   CI (99.9%): [536.017, 613.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   304.769 ±(99.9%) 8.612 B/op [Average]
[info]   (min, avg, max) = (301.531, 304.769, 307.493), stdev = 2.236
[info]   CI (99.9%): [296.157, 313.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   584.955 ±(99.9%) 559.436 MB/sec [Average]
[info]   (min, avg, max) = (325.069, 584.955, 651.508), stdev = 145.284
[info]   CI (99.9%): [25.518, 1144.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   309.366 ±(99.9%) 287.122 B/op [Average]
[info]   (min, avg, max) = (176.010, 309.366, 344.629), stdev = 74.565
[info]   CI (99.9%): [22.243, 596.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.106 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.069), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.036), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 173506.354 ops/s
[info] # Warmup Iteration   2: 1830464.699 ops/s
[info] # Warmup Iteration   3: 1935754.217 ops/s
[info] Iteration   1: 1964276.381 ops/s
[info]                  ·gc.alloc.rate:               418.560 MB/sec
[info]                  ·gc.alloc.rate.norm:          335.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 260.207 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1953666.938 ops/s
[info]                  ·gc.alloc.rate:                   423.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              340.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     523.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1955733.201 ops/s
[info]                  ·gc.alloc.rate:               423.833 MB/sec
[info]                  ·gc.alloc.rate.norm:          341.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 261.881 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1921477.685 ops/s
[info]                  ·gc.alloc.rate:               441.578 MB/sec
[info]                  ·gc.alloc.rate.norm:          361.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 266.817 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1938807.221 ops/s
[info]                  ·gc.alloc.rate:                   413.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              335.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1946792.285 ±(99.9%) 64934.595 ops/s [Average]
[info]   (min, avg, max) = (1921477.685, 1946792.285, 1964276.381), stdev = 16863.308
[info]   CI (99.9%): [1881857.690, 2011726.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   424.099 ±(99.9%) 41.045 MB/sec [Average]
[info]   (min, avg, max) = (413.258, 424.099, 441.578), stdev = 10.659
[info]   CI (99.9%): [383.054, 465.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   342.883 ±(99.9%) 41.932 B/op [Average]
[info]   (min, avg, max) = (335.217, 342.883, 361.689), stdev = 10.890
[info]   CI (99.9%): [300.951, 384.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   390.405 ±(99.9%) 559.228 MB/sec [Average]
[info]   (min, avg, max) = (324.901, 390.405, 650.199), stdev = 145.230
[info]   CI (99.9%): [≈ 0, 949.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   315.423 ±(99.9%) 448.609 B/op [Average]
[info]   (min, avg, max) = (260.207, 315.423, 523.780), stdev = 116.502
[info]   CI (99.9%): [≈ 0, 764.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.034), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 8.000), stdev = 1.732
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 990719.777 ops/s
[info] # Warmup Iteration   2: 2183285.078 ops/s
[info] # Warmup Iteration   3: 2267428.208 ops/s
[info] Iteration   1: 2287174.717 ops/s
[info]                  ·gc.alloc.rate:               437.195 MB/sec
[info]                  ·gc.alloc.rate.norm:          300.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 225.994 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2308790.255 ops/s
[info]                  ·gc.alloc.rate:               444.528 MB/sec
[info]                  ·gc.alloc.rate.norm:          303.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 223.872 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2258670.269 ops/s
[info]                  ·gc.alloc.rate:                   443.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              309.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     458.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 2238170.518 ops/s
[info]                  ·gc.alloc.rate:               428.662 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 231.414 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2218432.911 ops/s
[info]                  ·gc.alloc.rate:               428.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 233.474 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2262247.734 ±(99.9%) 140163.044 ops/s [Average]
[info]   (min, avg, max) = (2218432.911, 2262247.734, 2308790.255), stdev = 36399.897
[info]   CI (99.9%): [2122084.691, 2402410.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   436.561 ±(99.9%) 29.405 MB/sec [Average]
[info]   (min, avg, max) = (428.662, 436.561, 444.528), stdev = 7.636
[info]   CI (99.9%): [407.156, 465.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   303.669 ±(99.9%) 12.667 B/op [Average]
[info]   (min, avg, max) = (300.720, 303.669, 309.043), stdev = 3.290
[info]   CI (99.9%): [291.001, 316.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   394.569 ±(99.9%) 566.021 MB/sec [Average]
[info]   (min, avg, max) = (328.423, 394.569, 657.519), stdev = 146.994
[info]   CI (99.9%): [≈ 0, 960.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   274.583 ±(99.9%) 395.452 B/op [Average]
[info]   (min, avg, max) = (223.872, 274.583, 458.162), stdev = 102.698
[info]   CI (99.9%): [≈ 0, 670.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 13.000), stdev = 4.528
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:04:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 266287.111 ops/s
[info] # Warmup Iteration   2: 1739104.924 ops/s
[info] # Warmup Iteration   3: 1683429.168 ops/s
[info] Iteration   1: 1915078.577 ops/s
[info]                  ·gc.alloc.rate:               368.395 MB/sec
[info]                  ·gc.alloc.rate.norm:          302.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 267.979 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1889932.009 ops/s
[info]                  ·gc.alloc.rate:                   374.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              311.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1902266.177 ops/s
[info]                  ·gc.alloc.rate:               364.826 MB/sec
[info]                  ·gc.alloc.rate.norm:          301.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 267.845 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1900651.392 ops/s
[info]                  ·gc.alloc.rate:               368.907 MB/sec
[info]                  ·gc.alloc.rate.norm:          305.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 268.083 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1886117.014 ops/s
[info]                  ·gc.alloc.rate:                   364.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1898809.034 ±(99.9%) 43901.271 ops/s [Average]
[info]   (min, avg, max) = (1886117.014, 1898809.034, 1915078.577), stdev = 11401.021
[info]   CI (99.9%): [1854907.762, 1942710.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   368.189 ±(99.9%) 15.465 MB/sec [Average]
[info]   (min, avg, max) = (364.426, 368.189, 374.393), stdev = 4.016
[info]   CI (99.9%): [352.724, 383.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   305.190 ±(99.9%) 15.126 B/op [Average]
[info]   (min, avg, max) = (301.852, 305.190, 311.773), stdev = 3.928
[info]   CI (99.9%): [290.064, 320.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   389.500 ±(99.9%) 561.176 MB/sec [Average]
[info]   (min, avg, max) = (323.725, 389.500, 650.193), stdev = 145.736
[info]   CI (99.9%): [≈ 0, 950.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   323.101 ±(99.9%) 470.012 B/op [Average]
[info]   (min, avg, max) = (267.845, 323.101, 541.443), stdev = 122.061
[info]   CI (99.9%): [≈ 0, 793.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.017), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:04:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 297673.388 ops/s
[info] # Warmup Iteration   2: 2032455.174 ops/s
[info] # Warmup Iteration   3: 2473058.350 ops/s
[info] Iteration   1: 2463013.139 ops/s
[info]                  ·gc.alloc.rate:                   1770.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              1131.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1258.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.669 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 2468942.712 ops/s
[info]                  ·gc.alloc.rate:                   1760.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              1121.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1039.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2451065.642 ops/s
[info]                  ·gc.alloc.rate:                   1785.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              1146.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1048.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2448452.045 ops/s
[info]                  ·gc.alloc.rate:                   1742.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1057.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2448841.349 ops/s
[info]                  ·gc.alloc.rate:               1758.695 MB/sec
[info]                  ·gc.alloc.rate.norm:          1130.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1992.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1280.595 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   2456062.977 ±(99.9%) 35980.548 ops/s [Average]
[info]   (min, avg, max) = (2448452.045, 2456062.977, 2468942.712), stdev = 9344.034
[info]   CI (99.9%): [2420082.429, 2492043.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1763.618 ±(99.9%) 61.434 MB/sec [Average]
[info]   (min, avg, max) = (1742.669, 1763.618, 1785.717), stdev = 15.954
[info]   CI (99.9%): [1702.184, 1825.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1130.106 ±(99.9%) 40.547 B/op [Average]
[info]   (min, avg, max) = (1120.194, 1130.106, 1146.743), stdev = 10.530
[info]   CI (99.9%): [1089.559, 1170.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1774.638 ±(99.9%) 728.348 MB/sec [Average]
[info]   (min, avg, max) = (1631.422, 1774.638, 1992.586), stdev = 189.150
[info]   CI (99.9%): [1046.290, 2502.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1137.183 ±(99.9%) 467.556 B/op [Average]
[info]   (min, avg, max) = (1039.941, 1137.183, 1280.595), stdev = 121.423
[info]   CI (99.9%): [669.627, 1604.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.852 ±(99.9%) 7.158 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.852, 4.177), stdev = 1.859
[info]   CI (99.9%): [≈ 0, 8.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.544 ±(99.9%) 4.573 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.544, 2.669), stdev = 1.188
[info]   CI (99.9%): [≈ 0, 5.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 19.000), stdev = 5.413
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.507 ops/s
[info] # Warmup Iteration   2: 3140961.276 ops/s
[info] # Warmup Iteration   3: 3517931.392 ops/s
[info] Iteration   1: 3614820.976 ops/s
[info]                  ·gc.alloc.rate:                   989.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              430.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     424.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3660400.669 ops/s
[info]                  ·gc.alloc.rate:                   983.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              422.473 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3674169.692 ops/s
[info]                  ·gc.alloc.rate:                   970.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              415.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.222 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3672892.517 ops/s
[info]                  ·gc.alloc.rate:                   974.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     418.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.902 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3605579.157 ops/s
[info]                  ·gc.alloc.rate:               961.059 MB/sec
[info]                  ·gc.alloc.rate.norm:          419.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 424.251 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   3645572.602 ±(99.9%) 126679.470 ops/s [Average]
[info]   (min, avg, max) = (3605579.157, 3645572.602, 3674169.692), stdev = 32898.256
[info]   CI (99.9%): [3518893.132, 3772252.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   975.703 ±(99.9%) 43.146 MB/sec [Average]
[info]   (min, avg, max) = (961.059, 975.703, 989.545), stdev = 11.205
[info]   CI (99.9%): [932.557, 1018.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   421.115 ±(99.9%) 22.779 B/op [Average]
[info]   (min, avg, max) = (415.528, 421.115, 430.641), stdev = 5.916
[info]   CI (99.9%): [398.336, 443.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   910.696 ±(99.9%) 555.136 MB/sec [Average]
[info]   (min, avg, max) = (652.826, 910.696, 977.264), stdev = 144.167
[info]   CI (99.9%): [355.560, 1465.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   393.267 ±(99.9%) 244.842 B/op [Average]
[info]   (min, avg, max) = (279.628, 393.267, 424.559), stdev = 63.585
[info]   CI (99.9%): [148.425, 638.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1.004 ±(99.9%) 5.284 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.004, 2.853), stdev = 1.372
[info]   CI (99.9%): [≈ 0, 6.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.430 ±(99.9%) 2.263 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.430, 1.222), stdev = 0.588
[info]   CI (99.9%): [≈ 0, 2.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 11.000), stdev = 2.608
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 180341.453 ops/s
[info] # Warmup Iteration   2: 2889329.649 ops/s
[info] # Warmup Iteration   3: 3226645.534 ops/s
[info] Iteration   1: 3352815.578 ops/s
[info]                  ·gc.alloc.rate:               885.239 MB/sec
[info]                  ·gc.alloc.rate.norm:          415.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 305.509 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 3256016.410 ops/s
[info]                  ·gc.alloc.rate:                   874.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              422.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     472.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 3292592.409 ops/s
[info]                  ·gc.alloc.rate:                   887.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3278925.272 ops/s
[info]                  ·gc.alloc.rate:                   871.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              418.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.392 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.108 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3258203.745 ops/s
[info]                  ·gc.alloc.rate:                        877.007 MB/sec
[info]                  ·gc.alloc.rate.norm:                   423.617 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.029 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.014 B/op
[info]                  ·gc.churn.Metaspace:                   0.076 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:               981.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          473.897 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  3.655 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             1.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      0.111 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              37.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   3287710.683 ±(99.9%) 151781.428 ops/s [Average]
[info]   (min, avg, max) = (3256016.410, 3287710.683, 3352815.578), stdev = 39417.155
[info]   CI (99.9%): [3135929.255, 3439492.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   879.188 ±(99.9%) 26.328 MB/sec [Average]
[info]   (min, avg, max) = (871.592, 879.188, 887.414), stdev = 6.837
[info]   CI (99.9%): [852.860, 905.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   420.854 ±(99.9%) 14.415 B/op [Average]
[info]   (min, avg, max) = (415.504, 420.854, 424.004), stdev = 3.743
[info]   CI (99.9%): [406.440, 435.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.006 ±(99.9%) 0.049 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.003 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Metaspace":
[info]   0.015 ±(99.9%) 0.131 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.076), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.007 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   848.875 ±(99.9%) 690.855 MB/sec [Average]
[info]   (min, avg, max) = (650.891, 848.875, 981.101), stdev = 179.413
[info]   CI (99.9%): [158.019, 1539.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   407.038 ±(99.9%) 344.962 B/op [Average]
[info]   (min, avg, max) = (305.509, 407.038, 473.897), stdev = 89.586
[info]   CI (99.9%): [62.076, 752.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.731 ±(99.9%) 6.294 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.731, 3.655), stdev = 1.635
[info]   CI (99.9%): [≈ 0, 7.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   0.353 ±(99.9%) 3.040 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.353, 1.765), stdev = 0.790
[info]   CI (99.9%): [≈ 0, 3.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.935 ±(99.9%) 7.451 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.935, 4.392), stdev = 1.935
[info]   CI (99.9%): [≈ 0, 8.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.449 ±(99.9%) 3.576 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.449, 2.108), stdev = 0.929
[info]   CI (99.9%): [≈ 0, 4.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 14.800, 37.000), stdev = 12.598
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 852084.051 ops/s
[info] # Warmup Iteration   2: 3305998.969 ops/s
[info] # Warmup Iteration   3: 3613667.547 ops/s
[info] Iteration   1: 3615467.108 ops/s
[info]                  ·gc.alloc.rate:               970.608 MB/sec
[info]                  ·gc.alloc.rate.norm:          422.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 428.607 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 3592659.694 ops/s
[info]                  ·gc.alloc.rate:                   958.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3626820.112 ops/s
[info]                  ·gc.alloc.rate:                   966.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.379 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3441495.578 ops/s
[info]                  ·gc.alloc.rate:                   928.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3604893.288 ops/s
[info]                  ·gc.alloc.rate:                   967.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              422.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     428.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3576267.156 ±(99.9%) 294163.657 ops/s [Average]
[info]   (min, avg, max) = (3441495.578, 3576267.156, 3626820.112), stdev = 76393.368
[info]   CI (99.9%): [3282103.498, 3870430.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   958.339 ±(99.9%) 66.682 MB/sec [Average]
[info]   (min, avg, max) = (928.502, 958.339, 970.608), stdev = 17.317
[info]   CI (99.9%): [891.657, 1025.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   421.777 ±(99.9%) 8.435 B/op [Average]
[info]   (min, avg, max) = (419.428, 421.777, 424.644), stdev = 2.191
[info]   CI (99.9%): [413.342, 430.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   919.163 ±(99.9%) 560.515 MB/sec [Average]
[info]   (min, avg, max) = (658.802, 919.163, 986.659), stdev = 145.564
[info]   CI (99.9%): [358.648, 1479.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   405.076 ±(99.9%) 259.000 B/op [Average]
[info]   (min, avg, max) = (285.886, 405.076, 450.576), stdev = 67.262
[info]   CI (99.9%): [146.076, 664.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.823 ±(99.9%) 5.252 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.823, 3.177), stdev = 1.364
[info]   CI (99.9%): [≈ 0, 6.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.361 ±(99.9%) 2.280 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.361, 1.379), stdev = 0.592
[info]   CI (99.9%): [≈ 0, 2.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.793
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:03:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1083249.812 ops/s
[info] # Warmup Iteration   2: 3409300.754 ops/s
[info] # Warmup Iteration   3: 3907685.901 ops/s
[info] Iteration   1: 3907090.664 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3903911.890 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3904702.347 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3893119.037 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3894443.337 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3900653.455 ±(99.9%) 24639.729 ops/s [Average]
[info]   (min, avg, max) = (3893119.037, 3900653.455, 3907090.664), stdev = 6398.859
[info]   CI (99.9%): [3876013.726, 3925293.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 631979.733 ops/s
[info] # Warmup Iteration   2: 2538133.579 ops/s
[info] # Warmup Iteration   3: 3327762.759 ops/s
[info] Iteration   1: 3358665.046 ops/s
[info]                  ·gc.alloc.rate:               903.970 MB/sec
[info]                  ·gc.alloc.rate.norm:          423.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 307.161 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 3223157.858 ops/s
[info]                  ·gc.alloc.rate:                   884.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     480.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 3277646.278 ops/s
[info]                  ·gc.alloc.rate:                   875.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     472.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.968 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.905 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3247049.657 ops/s
[info]                  ·gc.alloc.rate:                   862.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.947 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3260949.443 ops/s
[info]                  ·gc.alloc.rate:                   872.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   3273493.657 ±(99.9%) 198800.516 ops/s [Average]
[info]   (min, avg, max) = (3223157.858, 3273493.657, 3358665.046), stdev = 51627.863
[info]   CI (99.9%): [3074693.140, 3472294.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   879.800 ±(99.9%) 60.361 MB/sec [Average]
[info]   (min, avg, max) = (862.613, 879.800, 903.970), stdev = 15.676
[info]   CI (99.9%): [819.439, 940.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   423.004 ±(99.9%) 21.170 B/op [Average]
[info]   (min, avg, max) = (417.947, 423.004, 432.078), stdev = 5.498
[info]   CI (99.9%): [401.834, 444.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   851.247 ±(99.9%) 692.064 MB/sec [Average]
[info]   (min, avg, max) = (653.748, 851.247, 984.569), stdev = 179.727
[info]   CI (99.9%): [159.184, 1543.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   409.882 ±(99.9%) 344.727 B/op [Average]
[info]   (min, avg, max) = (307.161, 409.882, 480.752), stdev = 89.524
[info]   CI (99.9%): [65.155, 754.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.848 ±(99.9%) 6.727 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.848, 3.968), stdev = 1.747
[info]   CI (99.9%): [≈ 0, 7.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.407 ±(99.9%) 3.230 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.407, 1.905), stdev = 0.839
[info]   CI (99.9%): [≈ 0, 3.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 12.000), stdev = 3.606
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1192.416 ops/s
[info] # Warmup Iteration   2: 5017.262 ops/s
[info] # Warmup Iteration   3: 11093.401 ops/s
[info] Iteration   1: 12212.269 ops/s
[info]                  ·gc.alloc.rate:                   1534.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              197781.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167751.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.078 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.065 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 12294.297 ops/s
[info]                  ·gc.alloc.rate:                   1556.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              199230.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207805.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.885 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 625.330 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 12227.618 ops/s
[info]                  ·gc.alloc.rate:                   1540.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              198146.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1614.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207657.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.003 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 11280.492 ops/s
[info]                  ·gc.alloc.rate:                   1912.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              266782.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1620.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226015.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 328.223 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 12271.318 ops/s
[info]                  ·gc.alloc.rate:                   1552.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              199110.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209475.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.655 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83.956 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   12057.199 ±(99.9%) 1676.718 ops/s [Average]
[info]   (min, avg, max) = (11280.492, 12057.199, 12294.297), stdev = 435.438
[info]   CI (99.9%): [10380.481, 13733.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1619.186 ±(99.9%) 631.766 MB/sec [Average]
[info]   (min, avg, max) = (1534.577, 1619.186, 1912.248), stdev = 164.068
[info]   CI (99.9%): [987.420, 2250.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   212210.248 ±(99.9%) 117494.230 B/op [Average]
[info]   (min, avg, max) = (197781.198, 212210.248, 266782.132), stdev = 30512.878
[info]   CI (99.9%): [94716.019, 329704.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1558.491 ±(99.9%) 553.682 MB/sec [Average]
[info]   (min, avg, max) = (1301.578, 1558.491, 1633.378), stdev = 143.790
[info]   CI (99.9%): [1004.809, 2112.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   203741.204 ±(99.9%) 82948.877 B/op [Average]
[info]   (min, avg, max) = (167751.556, 203741.204, 226015.850), stdev = 21541.560
[info]   CI (99.9%): [120792.327, 286690.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.656 ±(99.9%) 7.753 MB/sec [Average]
[info]   (min, avg, max) = (0.078, 1.656, 4.885), stdev = 2.013
[info]   CI (99.9%): [≈ 0, 9.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   217.515 ±(99.9%) 1002.192 B/op [Average]
[info]   (min, avg, max) = (10.065, 217.515, 625.330), stdev = 260.266
[info]   CI (99.9%): [≈ 0, 1219.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.200, 18.000), stdev = 4.324
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1463.366 ops/s
[info] # Warmup Iteration   2: 13602.752 ops/s
[info] # Warmup Iteration   3: 21745.405 ops/s
[info] Iteration   1: 22503.036 ops/s
[info]                  ·gc.alloc.rate:                   349.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              24424.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          318.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22292.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.300 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90.906 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 22376.478 ops/s
[info]                  ·gc.alloc.rate:               350.451 MB/sec
[info]                  ·gc.alloc.rate.norm:          24647.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22487.556 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 22085.763 ops/s
[info]                  ·gc.alloc.rate:                   434.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              30942.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45617.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.967 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 21505.929 ops/s
[info]                  ·gc.alloc.rate:               441.268 MB/sec
[info]                  ·gc.alloc.rate.norm:          32292.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23449.024 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 22237.833 ops/s
[info]                  ·gc.alloc.rate:               393.588 MB/sec
[info]                  ·gc.alloc.rate.norm:          27855.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22771.557 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   22141.808 ±(99.9%) 1494.153 ops/s [Average]
[info]   (min, avg, max) = (21505.929, 22141.808, 22503.036), stdev = 388.027
[info]   CI (99.9%): [20647.655, 23635.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   393.753 ±(99.9%) 169.521 MB/sec [Average]
[info]   (min, avg, max) = (349.235, 393.753, 441.268), stdev = 44.024
[info]   CI (99.9%): [224.232, 563.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28032.446 ±(99.9%) 13765.749 B/op [Average]
[info]   (min, avg, max) = (24424.945, 28032.446, 32292.146), stdev = 3574.921
[info]   CI (99.9%): [14266.697, 41798.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   384.165 ±(99.9%) 551.040 MB/sec [Average]
[info]   (min, avg, max) = (318.748, 384.165, 640.149), stdev = 143.103
[info]   CI (99.9%): [≈ 0, 935.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27323.602 ±(99.9%) 39414.200 B/op [Average]
[info]   (min, avg, max) = (22292.781, 27323.602, 45617.091), stdev = 10235.743
[info]   CI (99.9%): [≈ 0, 66737.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.268 ±(99.9%) 2.221 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.268, 1.300), stdev = 0.577
[info]   CI (99.9%): [≈ 0, 2.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   18.775 ±(99.9%) 155.347 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.775, 90.906), stdev = 40.343
[info]   CI (99.9%): [≈ 0, 174.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10287.525 ops/s
[info] # Warmup Iteration   2: 18369.726 ops/s
[info] # Warmup Iteration   3: 20806.009 ops/s
[info] Iteration   1: 20815.222 ops/s
[info]                  ·gc.alloc.rate:               227.692 MB/sec
[info]                  ·gc.alloc.rate.norm:          17215.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24528.388 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 20975.996 ops/s
[info]                  ·gc.alloc.rate:      225.507 MB/sec
[info]                  ·gc.alloc.rate.norm: 16912.022 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 20673.210 ops/s
[info]                  ·gc.alloc.rate:                   354.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              26972.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24698.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.170 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 20947.693 ops/s
[info]                  ·gc.alloc.rate:               234.922 MB/sec
[info]                  ·gc.alloc.rate.norm:          17650.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24372.686 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 20814.302 ops/s
[info]                  ·gc.alloc.rate:               230.819 MB/sec
[info]                  ·gc.alloc.rate.norm:          17452.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24530.745 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   20845.285 ±(99.9%) 467.842 ops/s [Average]
[info]   (min, avg, max) = (20673.210, 20845.285, 20975.996), stdev = 121.497
[info]   CI (99.9%): [20377.443, 21313.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   254.671 ±(99.9%) 215.143 MB/sec [Average]
[info]   (min, avg, max) = (225.507, 254.671, 354.418), stdev = 55.872
[info]   CI (99.9%): [39.528, 469.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   19240.423 ±(99.9%) 16677.143 B/op [Average]
[info]   (min, avg, max) = (16912.022, 19240.423, 26972.274), stdev = 4331.001
[info]   CI (99.9%): [2563.279, 35917.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   259.557 ±(99.9%) 558.715 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 259.557, 324.534), stdev = 145.097
[info]   CI (99.9%): [≈ 0, 818.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   19625.970 ±(99.9%) 42248.704 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19625.970, 24698.032), stdev = 10971.854
[info]   CI (99.9%): [≈ 0, 61874.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.634 ±(99.9%) 5.458 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.634, 3.170), stdev = 1.418
[info]   CI (99.9%): [≈ 0, 6.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.600, 5.000), stdev = 2.074
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:02:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127.937 ops/s
[info] # Warmup Iteration   2: 1666.798 ops/s
[info] # Warmup Iteration   3: 5313.752 ops/s
[info] Iteration   1: 7944.627 ops/s
[info]                  ·gc.alloc.rate:                   1945.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              385295.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1900.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     376442.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 803.674 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 8892.071 ops/s
[info]                  ·gc.alloc.rate:                   1927.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              341163.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1902.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336713.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 372.112 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 9093.604 ops/s
[info]                  ·gc.alloc.rate:                   1958.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              338970.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1905.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     329697.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.939 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 681.781 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 9070.858 ops/s
[info]                  ·gc.alloc.rate:                   1950.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              338350.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1913.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     331804.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.612 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 9132.914 ops/s
[info]                  ·gc.alloc.rate:               2002.359 MB/sec
[info]                  ·gc.alloc.rate.norm:          345052.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1941.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 334488.283 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   8826.815 ±(99.9%) 1931.996 ops/s [Average]
[info]   (min, avg, max) = (7944.627, 8826.815, 9132.914), stdev = 501.733
[info]   CI (99.9%): [6894.819, 10758.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1956.952 ±(99.9%) 107.153 MB/sec [Average]
[info]   (min, avg, max) = (1927.625, 1956.952, 2002.359), stdev = 27.827
[info]   CI (99.9%): [1849.799, 2064.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   349766.503 ±(99.9%) 77143.447 B/op [Average]
[info]   (min, avg, max) = (338350.334, 349766.503, 385295.584), stdev = 20033.908
[info]   CI (99.9%): [272623.056, 426909.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1912.458 ±(99.9%) 64.282 MB/sec [Average]
[info]   (min, avg, max) = (1900.566, 1912.458, 1941.054), stdev = 16.694
[info]   CI (99.9%): [1848.176, 1976.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   341829.262 ±(99.9%) 75206.008 B/op [Average]
[info]   (min, avg, max) = (329697.379, 341829.262, 376442.347), stdev = 19530.761
[info]   CI (99.9%): [266623.254, 417035.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2.024 ±(99.9%) 7.682 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 2.024, 4.058), stdev = 1.995
[info]   CI (99.9%): [≈ 0, 9.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   372.236 ±(99.9%) 1436.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 372.236, 803.674), stdev = 372.961
[info]   CI (99.9%): [≈ 0, 1808.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   81.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 16.200, 32.000), stdev = 9.680
[info]   CI (99.9%): [81.000, 81.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8908.758 ops/s
[info] # Warmup Iteration   2: 37464.932 ops/s
[info] # Warmup Iteration   3: 64540.545 ops/s
[info] Iteration   1: 60354.617 ops/s
[info]                  ·gc.alloc.rate:                   948.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              24731.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25317.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.206 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 62797.531 ops/s
[info]                  ·gc.alloc.rate:               934.158 MB/sec
[info]                  ·gc.alloc.rate.norm:          23411.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:      976.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24466.439 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 60946.318 ops/s
[info]                  ·gc.alloc.rate:                   984.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              25411.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25347.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.642 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.216 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 63405.636 ops/s
[info]                  ·gc.alloc.rate:                   828.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              20560.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16295.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.201 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 65103.660 ops/s
[info]                  ·gc.alloc.rate:                   865.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              20934.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23816.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.548 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   62521.552 ±(99.9%) 7382.304 ops/s [Average]
[info]   (min, avg, max) = (60354.617, 62521.552, 65103.660), stdev = 1917.161
[info]   CI (99.9%): [55139.249, 69903.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   912.197 ±(99.9%) 244.521 MB/sec [Average]
[info]   (min, avg, max) = (828.326, 912.197, 984.065), stdev = 63.501
[info]   CI (99.9%): [667.676, 1156.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23009.714 ±(99.9%) 8435.582 B/op [Average]
[info]   (min, avg, max) = (20560.687, 23009.714, 25411.161), stdev = 2190.694
[info]   CI (99.9%): [14574.132, 31445.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   914.105 ±(99.9%) 554.928 MB/sec [Average]
[info]   (min, avg, max) = (656.490, 914.105, 985.243), stdev = 144.113
[info]   CI (99.9%): [359.176, 1469.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23048.774 ±(99.9%) 14743.461 B/op [Average]
[info]   (min, avg, max) = (16295.382, 23048.774, 25347.826), stdev = 3828.830
[info]   CI (99.9%): [8305.314, 37792.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.980 ±(99.9%) 4.396 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.980, 2.642), stdev = 1.142
[info]   CI (99.9%): [≈ 0, 5.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25.234 ±(99.9%) 114.215 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.234, 68.216), stdev = 29.661
[info]   CI (99.9%): [≈ 0, 139.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 9.000), stdev = 2.280
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23503.011 ops/s
[info] # Warmup Iteration   2: 98396.837 ops/s
[info] # Warmup Iteration   3: 105718.048 ops/s
[info] Iteration   1: 107991.831 ops/s
[info]                  ·gc.alloc.rate:                   710.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              10354.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9441.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 109463.945 ops/s
[info]                  ·gc.alloc.rate:                   719.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              10345.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9338.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 109008.912 ops/s
[info]                  ·gc.alloc.rate:                   721.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              10414.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9396.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 109630.481 ops/s
[info]                  ·gc.alloc.rate:                   720.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              10336.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9362.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.173 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.553 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 110054.213 ops/s
[info]                  ·gc.alloc.rate:                   721.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              10318.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9316.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.503 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   109229.876 ±(99.9%) 3029.789 ops/s [Average]
[info]   (min, avg, max) = (107991.831, 109229.876, 110054.213), stdev = 786.827
[info]   CI (99.9%): [106200.087, 112259.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   718.593 ±(99.9%) 17.710 MB/sec [Average]
[info]   (min, avg, max) = (710.509, 718.593, 721.581), stdev = 4.599
[info]   CI (99.9%): [700.883, 736.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10353.938 ±(99.9%) 139.439 B/op [Average]
[info]   (min, avg, max) = (10318.938, 10353.938, 10414.361), stdev = 36.212
[info]   CI (99.9%): [10214.499, 10493.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   650.367 ±(99.9%) 6.574 MB/sec [Average]
[info]   (min, avg, max) = (647.857, 650.367, 652.147), stdev = 1.707
[info]   CI (99.9%): [643.793, 656.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9371.076 ±(99.9%) 189.261 B/op [Average]
[info]   (min, avg, max) = (9316.780, 9371.076, 9441.339), stdev = 49.150
[info]   CI (99.9%): [9181.815, 9560.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.822 ±(99.9%) 5.257 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.822, 3.173), stdev = 1.365
[info]   CI (99.9%): [≈ 0, 6.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.792 ±(99.9%) 75.468 B/op [Average]
[info]   (min, avg, max) = (0.299, 11.792, 45.553), stdev = 19.599
[info]   CI (99.9%): [≈ 0, 87.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 8.000), stdev = 2.168
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34230.119 ops/s
[info] # Warmup Iteration   2: 90119.397 ops/s
[info] # Warmup Iteration   3: 114439.908 ops/s
[info] Iteration   1: 120236.781 ops/s
[info]                  ·gc.alloc.rate:      1.116 MB/sec
[info]                  ·gc.alloc.rate.norm: 14.603 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 120169.220 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 120398.090 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 120429.137 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 120433.261 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   120333.298 ±(99.9%) 470.082 ops/s [Average]
[info]   (min, avg, max) = (120169.220, 120333.298, 120433.261), stdev = 122.079
[info]   CI (99.9%): [119863.216, 120803.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.223 ±(99.9%) 1.921 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.223, 1.116), stdev = 0.499
[info]   CI (99.9%): [≈ 0, 2.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.924 ±(99.9%) 25.141 B/op [Average]
[info]   (min, avg, max) = (0.004, 2.924, 14.603), stdev = 6.529
[info]   CI (99.9%): [≈ 0, 28.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:01:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71315.648 ops/s
[info] # Warmup Iteration   2: 336728.204 ops/s
[info] # Warmup Iteration   3: 410328.355 ops/s
[info] Iteration   1: 415660.019 ops/s
[info]                  ·gc.alloc.rate:                   2385.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              9031.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2280.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8636.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.621 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.711 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 423592.663 ops/s
[info]                  ·gc.alloc.rate:                   2428.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              9022.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2275.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8452.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.315 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 417015.293 ops/s
[info]                  ·gc.alloc.rate:                   2427.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              9155.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8656.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 421014.590 ops/s
[info]                  ·gc.alloc.rate:                   2442.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              9131.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2321.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8679.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 401015.287 ops/s
[info]                  ·gc.alloc.rate:                   2430.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              9539.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2338.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9178.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.283 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.959 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   415659.570 ±(99.9%) 33783.954 ops/s [Average]
[info]   (min, avg, max) = (401015.287, 415659.570, 423592.663), stdev = 8773.586
[info]   CI (99.9%): [381875.616, 449443.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2422.891 ±(99.9%) 84.433 MB/sec [Average]
[info]   (min, avg, max) = (2385.311, 2422.891, 2442.938), stdev = 21.927
[info]   CI (99.9%): [2338.458, 2507.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9176.352 ±(99.9%) 815.190 B/op [Average]
[info]   (min, avg, max) = (9022.135, 9176.352, 9539.940), stdev = 211.702
[info]   CI (99.9%): [8361.163, 9991.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2302.240 ±(99.9%) 104.757 MB/sec [Average]
[info]   (min, avg, max) = (2275.030, 2302.240, 2338.551), stdev = 27.205
[info]   CI (99.9%): [2197.483, 2406.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8720.689 ±(99.9%) 1044.102 B/op [Average]
[info]   (min, avg, max) = (8452.605, 8720.689, 9178.197), stdev = 271.150
[info]   CI (99.9%): [7676.587, 9764.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.268 ±(99.9%) 6.212 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.268, 3.621), stdev = 1.613
[info]   CI (99.9%): [≈ 0, 7.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.859 ±(99.9%) 23.736 B/op [Average]
[info]   (min, avg, max) = (0.079, 4.859, 13.711), stdev = 6.164
[info]   CI (99.9%): [≈ 0, 28.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 17.000), stdev = 3.464
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72526.760 ops/s
[info] # Warmup Iteration   2: 731433.266 ops/s
[info] # Warmup Iteration   3: 790480.362 ops/s
[info] Iteration   1: 1019041.101 ops/s
[info]                  ·gc.alloc.rate:                   688.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              1062.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     993.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.421 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1003767.076 ops/s
[info]                  ·gc.alloc.rate:               688.805 MB/sec
[info]                  ·gc.alloc.rate.norm:          1079.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1010.035 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1010952.777 ops/s
[info]                  ·gc.alloc.rate:               690.744 MB/sec
[info]                  ·gc.alloc.rate.norm:          1075.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1004.869 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 994904.116 ops/s
[info]                  ·gc.alloc.rate:               682.937 MB/sec
[info]                  ·gc.alloc.rate.norm:          1080.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1025.365 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1016188.556 ops/s
[info]                  ·gc.alloc.rate:                   693.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              1074.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1008.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   1008970.725 ±(99.9%) 37649.057 ops/s [Average]
[info]   (min, avg, max) = (994904.116, 1008970.725, 1019041.101), stdev = 9777.340
[info]   CI (99.9%): [971321.669, 1046619.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   688.903 ±(99.9%) 15.530 MB/sec [Average]
[info]   (min, avg, max) = (682.937, 688.903, 693.944), stdev = 4.033
[info]   CI (99.9%): [673.373, 704.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1074.506 ±(99.9%) 27.575 B/op [Average]
[info]   (min, avg, max) = (1062.535, 1074.506, 1080.349), stdev = 7.161
[info]   CI (99.9%): [1046.931, 1102.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   646.520 ±(99.9%) 11.449 MB/sec [Average]
[info]   (min, avg, max) = (643.641, 646.520, 650.847), stdev = 2.973
[info]   CI (99.9%): [635.071, 657.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1008.437 ±(99.9%) 43.621 B/op [Average]
[info]   (min, avg, max) = (993.900, 1008.437, 1025.365), stdev = 11.328
[info]   CI (99.9%): [964.815, 1052.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.318 ±(99.9%) 2.691 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.318, 1.568), stdev = 0.699
[info]   CI (99.9%): [≈ 0, 3.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.491 ±(99.9%) 4.156 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.491, 2.421), stdev = 1.079
[info]   CI (99.9%): [≈ 0, 4.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 743627.530 ops/s
[info] # Warmup Iteration   2: 1853254.898 ops/s
[info] # Warmup Iteration   3: 1947116.588 ops/s
[info] Iteration   1: 1909744.550 ops/s
[info]                  ·gc.alloc.rate:                   973.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              802.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     813.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1856350.729 ops/s
[info]                  ·gc.alloc.rate:                   941.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              798.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     838.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1846915.395 ops/s
[info]                  ·gc.alloc.rate:                   931.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              793.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     561.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.281 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.796 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1869521.172 ops/s
[info]                  ·gc.alloc.rate:                   942.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              793.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     828.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.631 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1949768.846 ops/s
[info]                  ·gc.alloc.rate:               993.931 MB/sec
[info]                  ·gc.alloc.rate.norm:          802.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 792.059 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1886460.138 ±(99.9%) 164583.478 ops/s [Average]
[info]   (min, avg, max) = (1846915.395, 1886460.138, 1949768.846), stdev = 42741.807
[info]   CI (99.9%): [1721876.660, 2051043.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   956.576 ±(99.9%) 100.358 MB/sec [Average]
[info]   (min, avg, max) = (931.617, 956.576, 993.931), stdev = 26.063
[info]   CI (99.9%): [856.218, 1056.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   797.950 ±(99.9%) 16.658 B/op [Average]
[info]   (min, avg, max) = (793.191, 797.950, 802.282), stdev = 4.326
[info]   CI (99.9%): [781.292, 814.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   920.140 ±(99.9%) 561.176 MB/sec [Average]
[info]   (min, avg, max) = (659.491, 920.140, 988.719), stdev = 145.736
[info]   CI (99.9%): [358.964, 1481.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   766.808 ±(99.9%) 445.917 B/op [Average]
[info]   (min, avg, max) = (561.986, 766.808, 838.081), stdev = 115.803
[info]   CI (99.9%): [320.891, 1212.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.814 ±(99.9%) 5.450 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.814, 3.281), stdev = 1.415
[info]   CI (99.9%): [≈ 0, 6.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.692 ±(99.9%) 4.645 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.692, 2.796), stdev = 1.206
[info]   CI (99.9%): [≈ 0, 5.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 3.564
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9683.023 ops/s
[info] # Warmup Iteration   2: 126679.851 ops/s
[info] # Warmup Iteration   3: 166469.842 ops/s
[info] Iteration   1: 187032.525 ops/s
[info]                  ·gc.alloc.rate:                   4581.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              38554.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4582.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38559.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.153 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 187212.001 ops/s
[info]                  ·gc.alloc.rate:                   4606.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              38722.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4340.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36487.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 188556.825 ops/s
[info]                  ·gc.alloc.rate:                   4662.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              38915.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4731.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39493.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.216 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 191337.921 ops/s
[info]                  ·gc.alloc.rate:                   4717.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              38791.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4416.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36312.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.856 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 191402.732 ops/s
[info]                  ·gc.alloc.rate:                   4720.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              38794.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4425.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36370.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.685 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   189108.401 ±(99.9%) 8268.702 ops/s [Average]
[info]   (min, avg, max) = (187032.525, 189108.401, 191402.732), stdev = 2147.356
[info]   CI (99.9%): [180839.699, 197377.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4657.504 ±(99.9%) 242.962 MB/sec [Average]
[info]   (min, avg, max) = (4581.494, 4657.504, 4720.022), stdev = 63.096
[info]   CI (99.9%): [4414.543, 4900.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   38755.698 ±(99.9%) 509.790 B/op [Average]
[info]   (min, avg, max) = (38554.193, 38755.698, 38915.775), stdev = 132.391
[info]   CI (99.9%): [38245.908, 39265.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4499.054 ±(99.9%) 604.190 MB/sec [Average]
[info]   (min, avg, max) = (4340.431, 4499.054, 4731.547), stdev = 156.906
[info]   CI (99.9%): [3894.864, 5103.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   37444.972 ±(99.9%) 5708.255 B/op [Average]
[info]   (min, avg, max) = (36312.921, 37444.972, 39493.477), stdev = 1482.416
[info]   CI (99.9%): [31736.717, 43153.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.146 ±(99.9%) 0.523 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.146, 0.375), stdev = 0.136
[info]   CI (99.9%): [≈ 0, 0.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.217 ±(99.9%) 4.411 B/op [Average]
[info]   (min, avg, max) = (0.175, 1.217, 3.153), stdev = 1.145
[info]   CI (99.9%): [≈ 0, 5.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   67.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.400, 14.000), stdev = 0.548
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   92.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 18.400, 20.000), stdev = 1.517
[info]   CI (99.9%): [92.000, 92.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99616.938 ops/s
[info] # Warmup Iteration   2: 370902.512 ops/s
[info] # Warmup Iteration   3: 423847.814 ops/s
[info] Iteration   1: 442929.978 ops/s
[info]                  ·gc.alloc.rate:                   1453.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              5164.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4665.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.687 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 439180.994 ops/s
[info]                  ·gc.alloc.rate:                   1447.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              5188.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5855.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.103 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 439881.648 ops/s
[info]                  ·gc.alloc.rate:                   1448.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              5181.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4654.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 445877.405 ops/s
[info]                  ·gc.alloc.rate:               1455.289 MB/sec
[info]                  ·gc.alloc.rate.norm:          5136.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4608.774 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 446061.430 ops/s
[info]                  ·gc.alloc.rate:                   1461.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              5155.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5805.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   442786.291 ±(99.9%) 12438.427 ops/s [Average]
[info]   (min, avg, max) = (439180.994, 442786.291, 446061.430), stdev = 3230.220
[info]   CI (99.9%): [430347.864, 455224.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1453.260 ±(99.9%) 21.281 MB/sec [Average]
[info]   (min, avg, max) = (1447.764, 1453.260, 1461.197), stdev = 5.527
[info]   CI (99.9%): [1431.979, 1474.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5165.393 ±(99.9%) 78.991 B/op [Average]
[info]   (min, avg, max) = (5136.973, 5165.393, 5188.003), stdev = 20.514
[info]   CI (99.9%): [5086.402, 5244.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1439.862 ±(99.9%) 703.134 MB/sec [Average]
[info]   (min, avg, max) = (1300.915, 1439.862, 1645.467), stdev = 182.602
[info]   CI (99.9%): [736.729, 2142.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5117.984 ±(99.9%) 2507.586 B/op [Average]
[info]   (min, avg, max) = (4608.774, 5117.984, 5855.753), stdev = 651.212
[info]   CI (99.9%): [2610.399, 7625.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.899 ±(99.9%) 5.476 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.899, 3.290), stdev = 1.422
[info]   CI (99.9%): [≈ 0, 6.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.202 ±(99.9%) 19.461 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.202, 11.687), stdev = 5.054
[info]   CI (99.9%): [≈ 0, 22.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 19.000), stdev = 5.701
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 270024.105 ops/s
[info] # Warmup Iteration   2: 826022.166 ops/s
[info] # Warmup Iteration   3: 922456.478 ops/s
[info] Iteration   1: 907826.862 ops/s
[info]                  ·gc.alloc.rate:                   428.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 872368.700 ops/s
[info]                  ·gc.alloc.rate:                   431.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              777.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1154.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 906842.343 ops/s
[info]                  ·gc.alloc.rate:                   428.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     557.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 852494.185 ops/s
[info]                  ·gc.alloc.rate:               408.773 MB/sec
[info]                  ·gc.alloc.rate.norm:          754.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 593.369 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 854518.526 ops/s
[info]                  ·gc.alloc.rate:               416.552 MB/sec
[info]                  ·gc.alloc.rate.norm:          766.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:      644.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1186.391 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   878810.123 ±(99.9%) 104605.042 ops/s [Average]
[info]   (min, avg, max) = (852494.185, 878810.123, 907826.862), stdev = 27165.597
[info]   CI (99.9%): [774205.081, 983415.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   422.713 ±(99.9%) 37.121 MB/sec [Average]
[info]   (min, avg, max) = (408.773, 422.713, 431.183), stdev = 9.640
[info]   CI (99.9%): [385.593, 459.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   757.104 ±(99.9%) 58.015 B/op [Average]
[info]   (min, avg, max) = (743.196, 757.104, 777.738), stdev = 15.066
[info]   CI (99.9%): [699.089, 815.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   449.452 ±(99.9%) 678.506 MB/sec [Average]
[info]   (min, avg, max) = (319.426, 449.452, 644.607), stdev = 176.206
[info]   CI (99.9%): [≈ 0, 1127.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   809.267 ±(99.9%) 1272.531 B/op [Average]
[info]   (min, avg, max) = (553.759, 809.267, 1186.391), stdev = 330.472
[info]   CI (99.9%): [≈ 0, 2081.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.077 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.038), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.342
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 520639.285 ops/s
[info] # Warmup Iteration   2: 1565370.932 ops/s
[info] # Warmup Iteration   3: 1561615.752 ops/s
[info] Iteration   1: 1595850.511 ops/s
[info]                  ·gc.alloc.rate:               756.741 MB/sec
[info]                  ·gc.alloc.rate.norm:          746.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 646.474 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 1545551.044 ops/s
[info]                  ·gc.alloc.rate:                   737.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     668.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1512362.516 ops/s
[info]                  ·gc.alloc.rate:                   727.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1026.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1604663.196 ops/s
[info]                  ·gc.alloc.rate:                   760.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     645.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.105 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1621334.244 ops/s
[info]                  ·gc.alloc.rate:                   770.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.617 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     637.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.950 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1575952.302 ±(99.9%) 174851.379 ops/s [Average]
[info]   (min, avg, max) = (1512362.516, 1575952.302, 1621334.244), stdev = 45408.348
[info]   CI (99.9%): [1401100.924, 1750803.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   750.506 ±(99.9%) 67.659 MB/sec [Average]
[info]   (min, avg, max) = (727.681, 750.506, 770.217), stdev = 17.571
[info]   CI (99.9%): [682.847, 818.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   749.560 ±(99.9%) 17.970 B/op [Average]
[info]   (min, avg, max) = (746.162, 749.560, 757.263), stdev = 4.667
[info]   CI (99.9%): [731.590, 767.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   722.972 ±(99.9%) 567.465 MB/sec [Average]
[info]   (min, avg, max) = (655.640, 722.972, 986.587), stdev = 147.369
[info]   CI (99.9%): [155.506, 1290.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   725.176 ±(99.9%) 650.556 B/op [Average]
[info]   (min, avg, max) = (637.945, 725.176, 1026.694), stdev = 168.947
[info]   CI (99.9%): [74.620, 1375.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.829 ±(99.9%) 5.152 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.829, 3.105), stdev = 1.338
[info]   CI (99.9%): [≈ 0, 5.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.812 ±(99.9%) 5.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 3.045), stdev = 1.312
[info]   CI (99.9%): [≈ 0, 5.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 10.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 798098.923 ops/s
[info] # Warmup Iteration   2: 1521039.319 ops/s
[info] # Warmup Iteration   3: 1634318.842 ops/s
[info] Iteration   1: 1633723.998 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1630613.297 ops/s
[info]                  ·gc.alloc.rate:      0.582 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.562 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1691086.092 ops/s
[info]                  ·gc.alloc.rate:      0.073 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1690090.298 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1690243.504 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1667151.438 ±(99.9%) 123051.000 ops/s [Average]
[info]   (min, avg, max) = (1630613.297, 1667151.438, 1691086.092), stdev = 31955.954
[info]   CI (99.9%): [1544100.438, 1790202.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.131 ±(99.9%) 0.979 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.131, 0.582), stdev = 0.254
[info]   CI (99.9%): [≈ 0, 1.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.126 ±(99.9%) 0.945 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.126, 0.562), stdev = 0.245
[info]   CI (99.9%): [≈ 0, 1.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ee-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70310.194 ops/s
[info] # Warmup Iteration   2: 503789.918 ops/s
[info] # Warmup Iteration   3: 542158.090 ops/s
[info] Iteration   1: 570933.199 ops/s
[info]                  ·gc.alloc.rate:                   1290.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              3557.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1285.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3542.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.178 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 639690.721 ops/s
[info]                  ·gc.alloc.rate:                   957.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              2356.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          964.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2373.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.893 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 672438.867 ops/s
[info]                  ·gc.alloc.rate:                   930.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              2177.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1503.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 646667.022 ops/s
[info]                  ·gc.alloc.rate:                   903.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              2199.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2345.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.432 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 619664.237 ops/s
[info]                  ·gc.alloc.rate:                   891.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          963.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2447.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.758 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   629878.809 ±(99.9%) 146228.154 ops/s [Average]
[info]   (min, avg, max) = (570933.199, 629878.809, 672438.867), stdev = 37974.987
[info]   CI (99.9%): [483650.655, 776106.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   994.857 ±(99.9%) 644.961 MB/sec [Average]
[info]   (min, avg, max) = (891.575, 994.857, 1290.993), stdev = 167.494
[info]   CI (99.9%): [349.896, 1639.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2510.952 ±(99.9%) 2267.877 B/op [Average]
[info]   (min, avg, max) = (2177.518, 2510.952, 3557.168), stdev = 588.960
[info]   CI (99.9%): [243.076, 4778.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   963.908 ±(99.9%) 875.986 MB/sec [Average]
[info]   (min, avg, max) = (642.149, 963.908, 1285.588), stdev = 227.491
[info]   CI (99.9%): [87.922, 1839.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2442.216 ±(99.9%) 2794.322 B/op [Average]
[info]   (min, avg, max) = (1503.024, 2442.216, 3542.276), stdev = 725.677
[info]   CI (99.9%): [≈ 0, 5236.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.684 ±(99.9%) 4.161 MB/sec [Average]
[info]   (min, avg, max) = (0.125, 1.684, 2.661), stdev = 1.081
[info]   CI (99.9%): [≈ 0, 5.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.311 ±(99.9%) 10.833 B/op [Average]
[info]   (min, avg, max) = (0.292, 4.311, 6.758), stdev = 2.813
[info]   CI (99.9%): [≈ 0, 15.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.200, 19.000), stdev = 5.263
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # Run complete. Total time: 01:30:43
[info] Benchmark                                                                                (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                      N/A  thrpt    5   1027533.107 ±  112497.345   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                       N/A  thrpt    5      2284.763 ±     197.303  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5      3499.819 ±     101.386    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2235.242 ±     529.012  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      3428.374 ±    1072.012    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.042 ±       0.150  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.063 ±       0.228    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                            N/A  thrpt    5        34.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                             N/A  thrpt    5        49.000                    ms
[info] AdtBenchmark.readJacksonScala                                                               N/A  thrpt    5   1913547.289 ±  149480.497   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5      1238.648 ±     100.659  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5      1018.720 ±      18.472    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1245.694 ±     564.736  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      1024.826 ±     471.106    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.217 ±       0.988  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.177 ±       0.802    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                     N/A  thrpt    5        19.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                      N/A  thrpt    5        36.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                              N/A  thrpt    5   5294149.899 ±   60651.845   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       362.988 ±      22.143  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       107.913 ±       7.302    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       380.036 ±     439.467  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       113.022 ±     131.619    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.010 ±       0.040  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.003 ±       0.012    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                    N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                     N/A  thrpt    5        23.000                    ms
[info] AdtBenchmark.readPlayJson                                                                   N/A  thrpt    5    527992.091 ±   19185.157   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                    N/A  thrpt    5      2485.866 ±     118.116  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5      7408.987 ±     189.273    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2385.151 ±     560.767  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5      7111.762 ±    1886.239    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.606 ±       4.383  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         1.801 ±      13.028    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                         N/A  thrpt    5        36.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                          N/A  thrpt    5        60.000                    ms
[info] AdtBenchmark.writeCirce                                                                     N/A  thrpt    5   1028835.221 ±   57224.162   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                      N/A  thrpt    5      2770.955 ±     196.638  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5      4238.351 ±     129.798    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      2661.764 ±     565.585  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      4070.725 ±     765.974    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.833 ±       5.545  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         1.288 ±       8.567    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                           N/A  thrpt    5        41.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                            N/A  thrpt    5        80.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                              N/A  thrpt    5   2914578.173 ±  238532.279   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5      1160.205 ±      90.691  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       626.520 ±      20.071    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1110.099 ±     698.863  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       598.122 ±     330.495    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.237 ±       1.555  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.129 ±       0.846    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                    N/A  thrpt    5        17.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                     N/A  thrpt    5        30.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                             N/A  thrpt    5  20078853.856 ±  704771.656   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5      1051.793 ±      51.447  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        82.433 ±       1.320    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1047.778 ±     551.682  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        82.096 ±      42.058    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.862 ±       6.936  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.067 ±       0.539    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                   N/A  thrpt    5        16.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                    N/A  thrpt    5        42.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                     N/A  thrpt    5  20211116.178 ±  256500.600   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                  N/A  thrpt    5   1056779.764 ±   91009.438   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      2479.631 ±     200.389  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5      3692.225 ±     112.161    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2456.884 ±    1134.443  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      3654.592 ±    1534.102    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.502 ±       3.783  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.740 ±       5.570    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                        N/A  thrpt    5        37.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                         N/A  thrpt    5        63.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                  N/A  thrpt    5   3873622.836 ±  279439.057   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      3801.116 ±     347.410  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      1544.268 ±      33.283    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      3679.101 ±     245.944  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      1494.904 ±      59.712    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.100 ±       0.418  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.041 ±       0.176    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        55.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        70.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                            N/A  thrpt    5  11540239.484 ±  849852.186   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5      1450.564 ±      59.231  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5       197.847 ±       9.102    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1371.045 ±     532.501  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       186.904 ±      67.394    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.050 ±       0.122  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.007 ±       0.016    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5        21.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5        34.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                           N/A  thrpt    5   3778563.630 ±  185294.963   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      2306.515 ±      91.663  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5       960.746 ±      23.363    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2200.288 ±     651.883  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5       916.314 ±     257.905    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.192 ±       1.053  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.080 ±       0.439    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        33.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        48.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                          N/A  thrpt    5  14273149.381 ± 1004095.434   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5      1877.119 ±     139.988  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5       206.992 ±      11.236    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5      1853.462 ±     712.000  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5       204.481 ±      82.345    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.781 ±       6.189  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.088 ±       0.696    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        28.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        42.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                               N/A  thrpt    5   1788470.161 ±  117121.809   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      3097.327 ±     162.053  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5      2725.578 ±      67.551    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      3003.913 ±     839.825  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      2641.950 ±     628.269    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.200 ±       1.319  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.174 ±       1.144    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        45.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        70.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                 N/A  thrpt    5   5121252.645 ±  311308.005   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5      2587.303 ±     220.156  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5       795.052 ±      25.162    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2521.510 ±     710.417  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5       774.381 ±     176.658    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.470 ±       3.733  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.145 ±       1.149    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        38.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        58.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                           N/A  thrpt    5  24006114.222 ± 1610229.399   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                            N/A  thrpt    5       756.052 ±      58.773  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       N/A  thrpt    5        49.562 ±       1.514    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       782.822 ±     685.910  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5        51.347 ±      45.512    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         1.045 ±       8.902  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.068 ±       0.575    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                 N/A  thrpt    5        12.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                  N/A  thrpt    5        42.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                          N/A  thrpt    5  11032094.352 ±  636796.585   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       348.575 ±      32.504  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5        49.720 ±       3.264    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       322.663 ±       3.291  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5        46.034 ±       2.772    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.017 ±       0.105  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.002 ±       0.015    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         5.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5         9.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                         N/A  thrpt    5  34451480.724 ± 2102011.412   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5      1091.094 ±      33.010  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5        49.838 ±       3.395    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      1047.924 ±     566.197  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5        47.863 ±      25.846    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.836 ±       6.939  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         0.038 ±       0.318    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5        16.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5        42.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5  39491135.997 ±  212546.700   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5         0.170 ±       1.461  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5         0.007 ±       0.058    B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                              N/A  thrpt    5   2279484.066 ±   63136.541   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                               N/A  thrpt    5      3249.930 ±      52.147  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          N/A  thrpt    5      2243.964 ±      58.718    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      3133.073 ±     736.868  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      2163.426 ±     521.028    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.137 ±       0.783  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.094 ±       0.534    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                    N/A  thrpt    5        47.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                     N/A  thrpt    5        70.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                    128  thrpt    5    377729.672 ±   20727.065   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      2246.066 ±     164.310  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5      9357.054 ±     243.744    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      2162.380 ±     714.267  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      9006.012 ±    2775.360    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.679 ±       4.088  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         2.842 ±      17.104    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                          128  thrpt    5        33.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                           128  thrpt    5        56.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                             128  thrpt    5    925646.755 ±   36824.413   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5       788.185 ±      34.764  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5      1340.136 ±      36.411    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       778.076 ±     691.289  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      1324.528 ±    1209.671    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.634 ±       4.337  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         1.079 ±       7.399    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        12.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        21.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                            128  thrpt    5   1710722.406 ±   87090.720   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5      1174.716 ±      36.913  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5      1080.787 ±      41.493    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1182.271 ±     692.732  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5      1088.140 ±     650.578    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.804 ±       5.025  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.735 ±       4.596    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        18.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        38.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                 128  thrpt    5    211737.720 ±   17581.236   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      3885.771 ±     402.389  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5     28878.560 ±     706.344    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space                128  thrpt    5         0.003 ±       0.027  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm           128  thrpt    5         0.024 ±       0.208    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.Metaspace                             128  thrpt    5         0.009 ±       0.078  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.Metaspace.norm                        128  thrpt    5         0.069 ±       0.595    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      3742.128 ±     572.872  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     27817.870 ±    4147.337    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Old_Gen                            128  thrpt    5         0.703 ±       6.055  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm                       128  thrpt    5         5.367 ±      46.216    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.112 ±       0.366  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.846 ±       2.803    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        57.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                        128  thrpt    5       120.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                   128  thrpt    5    457680.035 ±   17507.692   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1502.336 ±      75.829  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5      5165.925 ±     120.137    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1440.786 ±     683.012  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      4955.640 ±    2392.673    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.883 ±       5.282  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         3.055 ±      18.348    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                         128  thrpt    5        22.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                          128  thrpt    5        44.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                            128  thrpt    5    976534.519 ±   97429.828   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5       500.701 ±     290.710  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5       807.775 ±     494.535    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       515.959 ±     680.375  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       831.975 ±    1099.291    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.210 ±       1.635  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.344 ±       2.678    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5         8.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        15.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                           128  thrpt    5   2728258.575 ±  159150.756   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1304.785 ±      61.183  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5       752.618 ±      36.119    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1248.672 ±     562.910  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5       720.516 ±     334.630    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.842 ±       6.755  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.495 ±       3.986    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        19.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        37.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   2773451.790 ±   33634.618   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                128  thrpt    5    649977.378 ±   45970.136   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1118.880 ±     732.739  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5      2716.207 ±    1958.113    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1100.839 ±    1124.398  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2675.008 ±    2868.178    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.428 ±       5.701  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         3.500 ±      13.967    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        17.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        48.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                       128  thrpt    5     20921.926 ±    2013.741   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1776.951 ±     515.076  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5    133861.936 ±   48438.005    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1786.245 ±     610.804  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    134626.561 ±   56228.487    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         4.399 ±      14.200  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       331.320 ±    1069.675    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                              128  thrpt    5        77.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                128  thrpt    5     39599.930 ±    4064.415   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1200.355 ±     634.479  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     47674.057 ±   23532.167    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1230.751 ±    1048.001  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     48802.069 ±   38273.048    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.849 ±       4.258  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        34.262 ±     171.359    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        19.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        66.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                               128  thrpt    5     48457.448 ±   10907.665   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5       777.870 ±     298.041  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5     25389.001 ±   13392.158    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       723.596 ±     634.571  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     23511.665 ±   20064.971    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         3.348 ±      12.184  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       112.118 ±     423.057    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        12.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        89.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                    128  thrpt    5     38125.842 ±    4450.791   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1666.192 ±     375.605  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     68809.491 ±   16679.887    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1576.519 ±     521.944  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     65099.721 ±   22017.109    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.423 ±       1.962  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        17.632 ±      81.627    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        24.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        34.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                      128  thrpt    5     34074.393 ±    2902.796   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      2327.853 ±     273.941  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5    107590.323 ±   20383.624    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      2251.867 ±     776.290  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    104169.978 ±   43141.141    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         3.302 ±      14.705  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       154.051 ±     689.853    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        35.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        78.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                               128  thrpt    5     32870.256 ±    3835.055   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1912.876 ±     369.016  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     91736.828 ±   26843.168    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1840.450 ±     970.547  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     88333.198 ±   52776.506    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         3.101 ±      17.145  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       149.436 ±     816.142    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        30.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5       124.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                              128  thrpt    5     38820.814 ±    6384.807   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      2104.500 ±     369.104  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5     85382.634 ±   16579.510    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      2060.780 ±     653.197  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     83666.405 ±   30383.205    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         4.328 ±      22.810  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5       183.242 ±     979.878    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        32.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        80.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5     40191.238 ±    5270.036   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5      2083.471 ±     386.804  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5     81692.776 ±   21485.763    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5      2015.817 ±     551.090  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5     79032.126 ±   25737.159    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         2.222 ±      15.687  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5        91.317 ±     650.363    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        31.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5        69.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                   128  thrpt    5      9345.720 ±     440.250   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1274.105 ±      68.535  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5    214558.764 ±    6536.128    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1233.773 ±     568.122  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    207840.336 ±   97879.473    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.016 ±       7.071  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       173.056 ±    1206.682    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        54.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                           128  thrpt    5     20359.687 ±   10245.625   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1796.117 ±     541.705  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5    140362.410 ±   65118.784    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1782.186 ±     970.001  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    140378.931 ±  119062.290    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         8.961 ±      61.830  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       862.534 ±    6297.882    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        31.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        97.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                    128  thrpt    5     48112.635 ±   11244.199   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1502.946 ±     743.528  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     49211.729 ±   24334.790    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1478.188 ±    1053.136  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     48196.193 ±   27915.587    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         3.536 ±       7.709  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       114.756 ±     248.739    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        24.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5       148.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                   128  thrpt    5     67690.166 ±    2776.420   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       783.487 ±      85.459  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     18208.670 ±    1370.999    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       748.534 ±     655.179  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     17393.038 ±   15079.241    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.817 ±       8.745  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        42.174 ±     201.722    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        12.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        54.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                        128  thrpt    5     43396.405 ±    9278.279   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2512.294 ±     108.636  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     91333.504 ±   21103.977    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2449.507 ±     747.346  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     88867.380 ±   22290.737    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.755 ±       7.731  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        67.133 ±     306.601    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        37.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        66.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                   128  thrpt    5     40324.774 ±    6389.079   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1889.802 ±     604.960  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     73996.624 ±   34021.129    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1896.316 ±    1039.886  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     74393.184 ±   51280.029    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.173 ±       9.380  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        47.423 ±     380.761    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        29.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        56.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                  128  thrpt    5     55392.756 ±    3837.938   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1758.161 ±     105.487  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     49955.264 ±    4313.090    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1721.479 ±     615.884  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     48897.406 ±   16838.098    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.931 ±       7.572  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        27.027 ±     220.041    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        26.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        36.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5     55842.569 ±    5593.746   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5      1668.637 ±     104.675  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5     47040.903 ±    3900.747    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5      1641.118 ±      42.974  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5     46277.972 ±    5456.701    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         1.020 ±       8.201  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5        29.497 ±     237.756    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5        25.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5        40.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                          128  thrpt    5    411436.365 ±    9093.219   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2243.189 ±      72.994  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5      8579.806 ±     242.645    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2194.993 ±     601.469  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      8396.650 ±    2367.161    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.424 ±       7.385  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         5.458 ±      28.336    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                128  thrpt    5        34.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                 128  thrpt    5        70.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                    128  thrpt    5   1783377.948 ±  126457.176   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                     128  thrpt    5       579.181 ±      43.936  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                128  thrpt    5       511.073 ±      17.112    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            128  thrpt    5       584.882 ±     559.179  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       517.196 ±     507.027    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.018 ±       0.094  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.016 ±       0.084    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                          128  thrpt    5         9.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                           128  thrpt    5        32.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                   128  thrpt    5    852108.102 ±   40914.901   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5       321.333 ±      24.570  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       593.427 ±      25.923    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       324.777 ±       1.289  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       599.894 ±      30.992    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.031 ±       0.123    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        23.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                  128  thrpt    5   2046961.459 ±   21201.241   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       405.083 ±      12.002  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       311.462 ±      12.099    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       393.963 ±     564.464  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       303.145 ±     438.607    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.010 ±       0.055    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         6.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        22.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                       128  thrpt    5    154627.602 ±    5126.673   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      4090.395 ±     192.876  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     41628.198 ±     978.400    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      3971.959 ±     536.691  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     40427.535 ±    5825.002    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.241 ±       1.244  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         2.479 ±      12.863    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        59.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        78.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                         128  thrpt    5    446978.225 ±   33535.605   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1469.560 ±     123.584  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5      5174.269 ±     116.378    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1439.942 ±     683.725  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      5071.698 ±    2444.992    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.870 ±       4.994  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.065 ±      17.711    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                128  thrpt    5        43.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                   128  thrpt    5   2606549.295 ±  129707.506   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                    128  thrpt    5      1239.225 ±      67.121  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                               128  thrpt    5       748.166 ±       6.545    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                           128  thrpt    5      1170.672 ±     690.791  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       707.098 ±     425.148    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.973 ±       6.857  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.580 ±       4.062    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                         128  thrpt    5        18.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                          128  thrpt    5        47.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                  128  thrpt    5   1172407.775 ±  149076.385   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       558.058 ±      60.498  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5       749.160 ±      38.408    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       516.114 ±     681.488  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       695.534 ±     948.082    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.037 ±       0.215  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.052 ±       0.304    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5        14.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                 128  thrpt    5   3030327.842 ±  146382.187   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1447.864 ±      89.465  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       751.945 ±      16.817    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1380.962 ±     549.513  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       717.162 ±     279.395    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.831 ±       4.627  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.438 ±       2.450    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        21.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5        37.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   3125303.820 ±   26404.989   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5         0.019 ±       0.160  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.010 ±       0.081    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                      128  thrpt    5   1010135.858 ±   35093.044   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      1081.390 ±      13.354  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5      1684.901 ±      45.998    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1093.984 ±     679.388  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1705.645 ±    1093.991    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.269 ±       6.826  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.975 ±      10.606    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                            128  thrpt    5        17.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                             128  thrpt    5        46.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                             128  thrpt    5    207389.491 ±    9124.476   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2588.276 ±     174.698  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     19639.838 ±     548.153    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2511.562 ±     739.001  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     19053.742 ±    5233.918    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.479 ±       3.588  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.682 ±      27.644    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                   128  thrpt    5        38.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                    128  thrpt    5        53.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                      128  thrpt    5    446194.689 ±    9813.027   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       312.057 ±      15.457  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      1100.734 ±      76.801    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       322.967 ±       2.168  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1139.157 ±      21.863    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.526 ±       4.421  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.852 ±      15.555    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         5.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        23.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                     128  thrpt    5   1324973.611 ±   15557.234   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       261.822 ±       8.219  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       310.987 ±      11.680    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       247.890 ±     546.967  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       294.733 ±     650.668    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.018 ±       0.093  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.021 ±       0.111    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        15.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                          128  thrpt    5    120631.433 ±    9293.136   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      3954.839 ±     367.380  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     51588.717 ±    1108.949    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3837.700 ±     808.381  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     50044.789 ±    7766.627    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.096 ±       0.292  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.256 ±       3.871    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        57.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        83.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                            128  thrpt    5    349937.358 ±   27761.104   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1912.768 ±     186.096  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5      8601.352 ±     233.833    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1840.093 ±     710.371  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      8268.385 ±    2790.030    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.926 ±       7.309  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         4.145 ±      32.678    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        28.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        44.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                     128  thrpt    5   2245613.170 ±  119512.365   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       629.905 ±      62.248  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       441.530 ±      51.338    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       586.708 ±     559.610  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       411.336 ±     394.062    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.716 ±       6.032  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.491 ±       4.136    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        37.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                    128  thrpt    5   3451887.297 ±  138252.975   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       955.207 ±      32.272  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       435.461 ±       9.024    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       920.773 ±     563.253  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       419.801 ±     257.631    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.820 ±       5.220  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.374 ±       2.378    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        36.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   3531711.303 ±   25563.161   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                         128  thrpt    5     54750.662 ±   21576.111   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      2050.130 ±     224.542  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     59387.854 ±   22497.319    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2012.252 ±     576.741  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     58193.832 ±   21751.656    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         3.187 ±      12.314  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        97.328 ±     407.626    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        31.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        97.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                             128  thrpt    5    313100.025 ±   23386.057   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      3373.223 ±     301.884  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     16954.256 ±     329.468    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3241.832 ±     526.360  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     16299.902 ±    2906.739    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.782 ±       3.853  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         4.000 ±      19.766    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        49.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        78.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                      128  thrpt    5    686859.375 ±   24718.371   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1902.031 ±     122.717  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      4357.771 ±     179.219    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1849.036 ±     729.833  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      4235.660 ±    1629.091    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.159 ±       1.101  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.365 ±       2.528    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        28.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        41.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                     128  thrpt    5   2820506.122 ±  260105.514   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1009.407 ±      98.353  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       563.281 ±      31.955    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       986.827 ±      10.941  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       550.903 ±      51.462    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.774 ±       5.523  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.441 ±       3.147    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        15.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        37.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                          128  thrpt    5    127100.540 ±   22803.289   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      4140.097 ±     624.542  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     51280.332 ±    3762.984    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3985.581 ±     945.968  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     49367.635 ±    9890.401    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         2.093 ±       9.227  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        26.575 ±     116.642    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        60.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5       116.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                            128  thrpt    5    327530.858 ±   10497.730   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      2599.516 ±      73.919  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     12489.681 ±     307.420    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2499.106 ±     734.049  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     12005.615 ±    3413.941    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.526 ±       2.717  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.518 ±      12.991    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        38.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        61.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                     128  thrpt    5   2045757.555 ±  128650.756   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       726.039 ±      21.719  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       558.561 ±      44.649    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       718.965 ±     558.900  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       552.886 ±     424.833    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.880 ±       5.509  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.671 ±       4.210    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        11.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        38.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                    128  thrpt    5   2766022.798 ±   53364.620   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       969.360 ±      14.825  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       551.545 ±       8.034    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       985.040 ±      14.269  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       560.478 ±      16.761    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.835 ±       6.367  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.476 ±       3.626    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        15.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        41.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   2948457.659 ±   19981.084   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.194 ±       1.672  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.104 ±       0.894    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                         128  thrpt    5    783292.641 ±   27015.980   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      4778.502 ±     167.811  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      9600.082 ±     195.932    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      4606.433 ±     693.701  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      9256.587 ±    1618.133    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.067 ±       0.067  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.134 ±       0.135    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        68.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5       100.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                           128  thrpt    5     29323.679 ±    3590.098   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1806.414 ±     145.590  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     96990.001 ±   11015.855    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1758.535 ±     672.387  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     94596.348 ±   44658.020    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.328 ±       4.589  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        72.817 ±     252.643    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                  128  thrpt    5        62.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                     128  thrpt    5     97348.951 ±   13565.803   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       884.605 ±     361.384  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5     14317.043 ±    6285.451    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       831.040 ±     493.278  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     13450.160 ±    8296.512    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         4.065 ±       7.329  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        65.920 ±     120.237    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                           128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                            128  thrpt    5       126.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                    128  thrpt    5     71279.287 ±   27406.283   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1389.654 ±     191.555  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     30903.265 ±   11640.383    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1337.734 ±     603.604  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     29773.480 ±   17446.945    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         2.122 ±       5.749  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        47.469 ±     132.618    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        21.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5       129.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                   128  thrpt    5    120102.413 ±   67863.015   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1068.481 ±    1271.069  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     14728.678 ±   26640.785    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1054.635 ±    1567.041  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     14676.078 ±   30315.014    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         9.076 ±      26.421  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       132.182 ±     447.056    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5       154.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                        128  thrpt    5     49067.657 ±    2741.196   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2102.018 ±     202.807  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     67419.523 ±    5476.688    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2051.266 ±     547.913  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     65783.500 ±   16533.892    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.596 ±       4.684  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        18.959 ±     148.915    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        31.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        49.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                          128  thrpt    5     42777.640 ±    4829.503   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5       786.853 ±     584.050  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     29085.886 ±   25358.379    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5       778.945 ±     686.060  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     28739.142 ±   26985.601    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.447 ±       4.678  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        53.612 ±     173.572    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                128  thrpt    5        12.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        46.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                   128  thrpt    5     41820.726 ±    9158.097   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       630.023 ±     742.449  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     24102.473 ±   34321.928    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       642.461 ±     871.397  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     24581.932 ±   38450.469    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.543 ±       5.820  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        58.384 ±     218.385    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        10.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        48.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                  128  thrpt    5     47893.282 ±    5774.641   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       529.705 ±     279.820  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     17437.812 ±   10240.564    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       512.039 ±     671.015  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     16965.357 ±   23667.903    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.732 ±       4.525  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        24.712 ±     152.523    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        41.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5     48629.089 ±    4358.013   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5       574.577 ±     277.272  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5     18632.614 ±   10634.467    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                  128  thrpt    5       583.989 ±     558.821  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm             128  thrpt    5     18946.258 ±   18741.614    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space              128  thrpt    5         1.173 ±       5.394  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5        37.730 ±     173.126    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5         9.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                 128  thrpt    5        41.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                         128  thrpt    5     16188.801 ±    2708.711   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1354.680 ±     992.213  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5    132853.037 ±  123680.744    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1329.569 ±    1033.895  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    130398.658 ±  126666.942    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         8.862 ±      32.528  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       874.615 ±    3226.645    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                               128  thrpt    5        24.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                128  thrpt    5       150.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                  128  thrpt    5     15528.341 ±    6430.425   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1044.294 ±     131.457  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5    106651.944 ±   37016.600    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                 128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm            128  thrpt    5         0.406 ±       3.494    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Metaspace                              128  thrpt    5         0.012 ±       0.100  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                         128  thrpt    5         1.113 ±       9.586    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       986.448 ±     564.746  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5    100594.265 ±   59920.019    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                             128  thrpt    5         9.286 ±      79.952  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                        128  thrpt    5       890.056 ±    7663.648    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         4.684 ±      15.673  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       497.370 ±    1661.357    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        19.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5       201.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                 128  thrpt    5    154792.533 ±   16349.078   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       416.668 ±      55.489  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      4235.046 ±     290.080    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       451.156 ±     677.615  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      4593.789 ±    6987.419    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.015 ±       0.105  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.153 ±       1.097    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        28.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                      128  thrpt    5     16102.598 ±    1529.709   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1434.821 ±     138.416  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    140232.382 ±    2792.757    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1367.116 ±     662.362  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    133739.461 ±   68410.632    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.154 ±      18.236  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       205.837 ±    1741.728    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        22.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        77.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                        128  thrpt    5     67224.176 ±   27186.684   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1596.706 ±     310.103  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     37582.417 ±    9252.254    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1555.752 ±     567.446  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     36873.215 ±   24273.945    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.256 ±       5.362  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        29.571 ±     119.405    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        24.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        83.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                 128  thrpt    5    105910.490 ±    6111.159   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1406.800 ±      73.439  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     20901.175 ±     267.048    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                128  thrpt    5         0.003 ±       0.025  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm           128  thrpt    5         0.044 ±       0.375    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.Metaspace                             128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                        128  thrpt    5         0.127 ±       1.093    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1361.252 ±     540.622  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     20242.793 ±    8878.956    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.342 ±       8.135  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        20.256 ±     122.827    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        22.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        82.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                128  thrpt    5    235409.156 ±   15205.856   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       385.571 ±      23.238  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2578.262 ±     208.441    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       393.295 ±     565.105  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2627.568 ±    3734.176    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.114 ±       0.720    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         6.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        23.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    282892.125 ±   15916.572   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.663 ±       5.707  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         3.740 ±      32.191    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                     128  thrpt    5     78910.161 ±   48469.510   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1669.714 ±     904.915  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     33858.723 ±   26050.073    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1648.161 ±     920.790  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     33521.105 ±   26946.751    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5        13.133 ±      66.264  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       290.126 ±    1452.300    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        33.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5       358.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                             128  thrpt    5    128720.500 ±   18285.917   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1735.941 ±     530.199  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     21261.241 ±    7908.406    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1696.197 ±     547.663  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     20814.024 ±   10112.634    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.493 ±       5.694  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        18.517 ±      70.156    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        26.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        60.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                      128  thrpt    5    153765.872 ±   27323.761   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       924.117 ±     141.519  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      9459.951 ±     324.985    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       893.441 ±     552.413  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9174.917 ±    6248.915    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.578 ±       8.337  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        16.021 ±      83.678    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        14.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        56.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                     128  thrpt    5    227194.421 ±   16812.533   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       149.377 ±      11.037  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1034.889 ±      60.611    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       116.708 ±     623.113  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       818.515 ±    4354.017    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.029 ±       0.247    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         2.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5         8.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                          128  thrpt    5     82230.181 ±    5239.524   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2613.420 ±     153.048  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     50014.055 ±    2656.115    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2521.485 ±     688.476  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     48261.813 ±   13600.225    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.927 ±       7.008  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        18.021 ±     136.420    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        38.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        60.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                            128  thrpt    5    240643.061 ±   11285.219   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1566.385 ±      58.769  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     10244.560 ±     135.708    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1496.848 ±     674.718  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      9793.196 ±    4531.064    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.919 ±       6.234  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         6.001 ±      40.845    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        23.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        45.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                     128  thrpt    5    760265.244 ±   42371.016   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       602.464 ±      53.856  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1246.836 ±      51.262    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       582.159 ±     557.087  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1205.142 ±    1155.359    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.034 ±       0.181    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        15.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                    128  thrpt    5    663773.231 ±   48395.977   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       525.457 ±      36.707  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1245.978 ±      60.865    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       459.790 ±     692.641  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1090.469 ±    1643.770    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.030 ±       0.171    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        24.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    675897.203 ±    1798.840   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.025 ±       0.212  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.058 ±       0.494    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                         128  thrpt    5    605408.390 ±   32595.980   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1499.808 ±      66.769  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      3898.132 ±      61.808    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1445.802 ±     693.689  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3755.278 ±    1689.808    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.527 ±       4.205  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.364 ±      10.883    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        41.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                            128  thrpt    5     40724.953 ±    9063.441   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2000.948 ±     410.137  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     77502.624 ±   22326.273    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1928.569 ±     536.058  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     74700.182 ±   25315.077    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         3.048 ±      16.367  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       120.288 ±     633.896    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        31.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                   128  thrpt    5       116.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                      128  thrpt    5    289551.925 ±   32117.682   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       305.831 ±      21.527  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5      1662.723 ±      71.632    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       259.464 ±     558.518  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1427.027 ±    3073.235    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.020 ±       0.170  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.110 ±       0.945    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         4.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        15.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                     128  thrpt    5    127632.485 ±   25574.143   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1200.956 ±     140.383  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     14830.728 ±    1574.225    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1171.682 ±     677.650  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     14521.248 ±    9894.050    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.787 ±       4.473  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        10.323 ±      60.388    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        18.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        30.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                    128  thrpt    5    533998.143 ±   65893.952   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       360.050 ±      36.816  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1061.405 ±      91.409    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       327.115 ±       1.747  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       964.766 ±     114.146    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.024 ±       0.129    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        20.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                         128  thrpt    5     49795.478 ±   14178.361   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      2250.792 ±     375.980  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     71412.515 ±   21883.077    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2157.828 ±     935.954  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     68454.786 ±   34753.200    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         3.532 ±      20.246  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       118.493 ±     676.142    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        34.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        89.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                           128  thrpt    5     94595.721 ±    5250.064   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5       783.017 ±     176.544  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     13037.236 ±    3709.157    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5       782.937 ±     684.575  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     13044.688 ±   11817.693    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.198 ±       5.161  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        19.980 ±      85.718    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        12.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        45.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                     128  thrpt    5    120233.729 ±    6872.010   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       456.870 ±      25.754  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5      5980.356 ±     261.888    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       454.749 ±     684.758  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      5951.468 ±    8943.384    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.272 ±       1.047    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        25.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                    128  thrpt    5    106373.218 ±    4185.219   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       404.271 ±      13.622  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      5980.595 ±     148.046    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       391.283 ±     562.988  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      5788.300 ±    8321.609    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.025 ±       0.095  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.369 ±       1.402    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         6.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        24.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                   128  thrpt    5    119488.005 ±    7757.305   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       454.315 ±      36.883  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      5983.577 ±     243.018    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       459.002 ±     693.083  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      6047.798 ±    9154.004    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.183 ±       1.424  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         2.360 ±      18.337    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        25.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    123201.274 ±    2137.904   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5       367.439 ±       9.022  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5      4693.450 ±     100.796    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                   128  thrpt    5       327.918 ±       0.749  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      4188.685 ±      77.601    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.010 ±       0.084  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.133 ±       1.074    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                  128  thrpt    5        19.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                          128  thrpt    5     12275.777 ±    3223.451   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2117.274 ±    1034.349  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5    274073.587 ±  201486.475    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2113.437 ±    1204.146  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    273287.306 ±  209654.888    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         4.424 ±      19.127  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       601.032 ±    2645.882    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                128  thrpt    5        34.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                 128  thrpt    5        88.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                   128  thrpt    5     13387.760 ±     317.347   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1893.668 ±      67.750  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5    222615.049 ±    7829.922    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1826.404 ±     677.206  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    214787.693 ±   83305.090    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         2.439 ±       9.385    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5        28.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        41.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                  128  thrpt    5    215421.263 ±    2688.325   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       579.149 ±      18.722  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      4231.309 ±     170.315    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       516.869 ±     681.819  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      3777.748 ±    5000.240    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.608 ±       5.172  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         4.421 ±      37.578    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        40.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                       128  thrpt    5      6566.805 ±     431.992   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      1683.657 ±     121.721  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5    403492.739 ±   10943.248    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1634.655 ±      43.055  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    391854.813 ±   30775.246    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.521 ±       3.694  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       122.267 ±     861.582    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        25.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        45.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                         128  thrpt    5     33153.021 ±    8088.702   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      2189.967 ±     599.737  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5    104602.830 ±   53375.058    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2179.116 ±     972.871  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    104103.929 ±   66023.937    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         3.218 ±      10.845  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       147.842 ±     490.851    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                               128  thrpt    5        35.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                128  thrpt    5       181.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                  128  thrpt    5     37227.089 ±    4746.631   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5      2029.809 ±     573.393  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5     85925.211 ±   28799.442    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1939.468 ±    1084.260  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     82088.242 ±   47055.356    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5        10.358 ±      34.841  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       440.517 ±    1455.839    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5        32.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5       100.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                 128  thrpt    5    318459.398 ±   16143.615   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       734.398 ±      32.114  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      3630.322 ±     338.516    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       723.860 ±     569.811  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      3584.716 ±    3023.647    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.841 ±       5.248  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         4.226 ±      26.483    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5        11.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5        38.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    354720.763 ±     275.028   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                      128  thrpt    5     37154.677 ±   17187.457   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      2480.033 ±    1026.006  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    107170.843 ±   94541.205    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2427.333 ±     576.545  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    104233.393 ±   64809.506    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5        13.257 ±      48.757  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       582.232 ±    2065.687    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                            128  thrpt    5        43.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                             128  thrpt    5       313.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                              128  thrpt    5    170466.010 ±    8019.257   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      2397.251 ±      84.158  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     22131.474 ±     481.246    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2360.137 ±     512.441  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     21800.778 ±    5678.346    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.884 ±       4.346  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         8.209 ±      40.412    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                    128  thrpt    5        36.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                     128  thrpt    5        63.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                        128  thrpt    5    552643.381 ±   65985.027   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                         128  thrpt    5       589.519 ±      72.377  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                    128  thrpt    5      1678.746 ±      70.634    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                128  thrpt    5       520.600 ±     686.119  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1482.668 ±    1952.086    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.011 ±       0.059  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.032 ±       0.169    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                               128  thrpt    5        29.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                       128  thrpt    5    514731.958 ±   50538.689   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5       502.835 ±      54.132  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1537.144 ±      67.714    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       518.229 ±     683.300  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1589.988 ±    2156.820    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.342 ±       2.944  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.061 ±       9.136    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        38.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                      128  thrpt    5    676058.760 ±   53695.394   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       467.884 ±      46.619  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1089.946 ±     186.870    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       459.516 ±     690.546  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1072.200 ±    1640.394    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.010 ±       0.082    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5        28.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                           128  thrpt    5    102020.658 ±    6714.414   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      3460.135 ±     293.321  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     53368.348 ±    1251.848    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      3289.765 ±     639.254  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     50734.799 ±    8403.336    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.083 ±       0.321  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.298 ±       5.066    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        49.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        68.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                             128  thrpt    5    238377.727 ±   15921.560   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1709.274 ±     135.832  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     11283.884 ±     242.886    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1653.090 ±      80.686  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     10915.678 ±     819.011    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.029 ±       0.122  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.194 ±       0.822    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        25.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                    128  thrpt    5        32.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                       128  thrpt    5   1233847.069 ±   58323.121   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                        128  thrpt    5       693.438 ±      21.189  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5       884.510 ±      20.774    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5       651.147 ±       5.295  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       830.627 ±      40.578    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.822 ±       6.870  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.042 ±       8.709    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                             128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                              128  thrpt    5        35.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                      128  thrpt    5   1178024.666 ±  149350.871   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5       665.678 ±      63.548  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5       889.589 ±      54.001    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       647.248 ±       9.219  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       865.378 ±      97.340    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.016 ±       0.075  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.021 ±       0.097    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5        17.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                     128  thrpt    5   1129301.745 ±   43682.869   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       634.319 ±      24.794  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       883.957 ±      21.404    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       657.806 ±       4.531  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       916.751 ±      37.359    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.637 ±       5.261  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.884 ±       7.301    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5        37.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5   1133549.557 ±   92084.234   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5         0.031 ±       0.267  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5         0.043 ±       0.365    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                          128  thrpt    5     39487.893 ±    6771.410   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1836.235 ±     473.849  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     73443.857 ±   30512.330    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1826.907 ±     672.594  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     73064.776 ±   35400.605    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.377 ±       5.659  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        57.024 ±     243.117    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        28.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        62.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                         128  thrpt    5    136747.557 ±   16815.478   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1755.000 ±     213.319  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5     20210.492 ±    3506.951    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1743.855 ±     689.435  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     20085.931 ±    8520.940    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.959 ±      10.088  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        23.192 ±     120.190    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                               128  thrpt    5        27.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                128  thrpt    5        67.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                  128  thrpt    5    189774.265 ±   17154.979   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1130.063 ±      91.243  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      9371.938 ±     221.879    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1068.606 ±     672.628  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      8863.578 ±    5576.417    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         2.775 ±      12.636  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        23.040 ±     105.354    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        17.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        51.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                 128  thrpt    5    238626.266 ±    5418.208   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1278.587 ±      35.873  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      8432.972 ±     169.812    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1285.334 ±      12.240  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      8477.686 ±     216.129    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.068 ±       5.457  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         7.057 ±      36.041    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        20.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        53.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                      128  thrpt    5    102151.105 ±   14799.192   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      3312.170 ±     180.791  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     51078.782 ±    6948.849    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      3209.576 ±     634.638  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     49519.037 ±   13259.329    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.598 ±       3.207  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         9.593 ±      52.619    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        48.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        75.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                        128  thrpt    5    233379.619 ±   12309.801   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1520.323 ±      90.784  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     10252.519 ±     311.340    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1518.687 ±     701.292  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     10239.863 ±    4638.293    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.033 ±       0.072  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.225 ±       0.485    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        23.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        32.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                 128  thrpt    5    855976.317 ±   43561.505   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       683.231 ±      49.101  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5      1255.958 ±     106.261    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       711.077 ±     561.763  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      1306.549 ±    1016.182    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.046 ±       0.164    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        11.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        17.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                128  thrpt    5    663064.068 ±   59785.194   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       530.750 ±      30.291  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      1260.223 ±     125.933    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       525.759 ±     693.029  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      1250.428 ±    1675.578    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.010 ±       0.084    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         8.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        29.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    690729.025 ±    7641.025   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                     128  thrpt    5    613832.966 ±   42460.173   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1521.881 ±     148.290  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5      3901.636 ±     125.071    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1518.516 ±     709.419  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3887.979 ±    1577.347    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.312 ±       2.331  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.812 ±       6.080    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        23.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        40.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                    128  thrpt    5     12309.440 ±    1099.688   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      1638.982 ±     135.999  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5    209428.133 ±    9370.382    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      1604.890 ±      20.415  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    205135.854 ±   16957.521    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         2.050 ±       6.935  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       262.223 ±     884.118    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                          128  thrpt    5        25.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                           128  thrpt    5        79.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                             128  thrpt    5     11706.052 ±     441.702   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5      1373.397 ±      68.066  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5    184639.941 ±    3540.546    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1369.466 ±     559.926  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5    184132.076 ±   75601.312    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.175 ±       1.327  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5        23.492 ±     178.273    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        34.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                            128  thrpt    5    343379.566 ±   23683.186   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5      2309.843 ±     160.540  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5     10585.840 ±     260.505    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      2225.137 ±     537.927  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     10202.163 ±    2696.605    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.688 ±       3.567  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         3.141 ±      16.301    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        34.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        57.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                 128  thrpt    5     10074.228 ±     741.094   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      1744.902 ±     156.219  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5    272524.666 ±    8443.029    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1688.132 ±     640.005  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5    263599.123 ±   93508.179    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.799 ±       6.701  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       129.082 ±    1083.665    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        26.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        42.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                   128  thrpt    5     26875.622 ±    4945.229   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1508.429 ±     645.541  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5     88711.296 ±   49858.883    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1510.197 ±     891.913  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     88819.526 ±   60913.226    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         3.428 ±       8.735  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       201.475 ±     525.804    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                         128  thrpt    5        25.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                          128  thrpt    5       174.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                            128  thrpt    5     28711.603 ±    7659.751   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5      1226.494 ±     474.876  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5     67801.311 ±   44300.693    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1217.542 ±     841.995  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     67450.771 ±   63178.538    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         5.086 ±      24.299  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       298.975 ±    1500.110    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        20.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5       112.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    789543.622 ±    8535.592   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1467.641 ±      27.358  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5      2925.294 ±      69.722    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1381.472 ±     549.793  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      2753.464 ±    1092.418    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.821 ±       4.536  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         1.634 ±       9.018    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        37.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    917078.579 ±    2158.820   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                128  thrpt    5     30632.656 ±    6099.598   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1415.127 ±     518.332  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5     72914.115 ±   33366.914    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1369.889 ±     631.072  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     70507.086 ±   34665.994    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         3.999 ±      13.456  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       204.758 ±     671.464    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        23.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                       128  thrpt    5       156.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                        128  thrpt    5     45723.514 ±    6535.490   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      2247.517 ±    1318.901  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5     77275.145 ±   41908.023    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      2238.139 ±    1408.801  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     76966.380 ±   44920.747    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         8.010 ±      22.844  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       278.301 ±     792.566    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                              128  thrpt    5        36.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                               128  thrpt    5       112.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                 128  thrpt    5     39751.375 ±    9543.574   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1495.323 ±     370.535  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     59489.975 ±   25959.170    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                128  thrpt    5         0.003 ±       0.029  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm           128  thrpt    5         0.147 ±       1.268    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace                             128  thrpt    5         0.010 ±       0.084  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                        128  thrpt    5         0.431 ±       3.709    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1463.952 ±     706.159  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     58369.938 ±   38720.579    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                            128  thrpt    5         2.256 ±      19.423  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                       128  thrpt    5       100.133 ±     862.177    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         2.993 ±      17.476  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       127.494 ±     768.237    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        25.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5       134.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                128  thrpt    5    461041.709 ±  171240.163   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1252.081 ±     398.855  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4280.504 ±     578.573    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1236.843 ±    1047.841  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4191.868 ±    2287.853    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.802 ±       4.823  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.543 ±      14.346    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        19.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        34.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                     128  thrpt    5     20832.198 ±    5727.290   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      2101.988 ±     185.543  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    159404.674 ±   42953.179    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      2097.268 ±     676.861  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    158687.702 ±   45923.439    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         2.349 ±       6.099  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       182.828 ±     501.370    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        32.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        60.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                       128  thrpt    5     72104.620 ±    4334.140   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      1915.097 ±     102.420  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     41802.572 ±    1705.243    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1902.925 ±     585.035  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     41545.932 ±   13223.674    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.919 ±       7.327  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        20.474 ±     163.655    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                              128  thrpt    5        47.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                128  thrpt    5    199749.472 ±   23741.468   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1562.838 ±     203.912  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     12312.302 ±     338.656    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space               128  thrpt    5         0.005 ±       0.046  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm          128  thrpt    5         0.044 ±       0.380    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.Metaspace                            128  thrpt    5         0.015 ±       0.127  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                       128  thrpt    5         0.123 ±       1.056    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1569.106 ±     584.476  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     12374.262 ±    4948.601    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen                           128  thrpt    5         0.537 ±       4.625  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm                      128  thrpt    5         4.458 ±      38.384    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.027 ±       6.258  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         8.193 ±      49.420    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        26.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        80.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                               128  thrpt    5    856030.312 ±   75908.735   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       958.160 ±      71.091  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1762.472 ±     221.984    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       921.942 ±     562.226  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1699.242 ±    1124.161    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.834 ±       5.080  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.497 ±       9.079    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        36.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5    877012.338 ±    6226.229   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                    128  thrpt    5     88936.268 ±    5329.012   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5      1860.067 ±     125.357  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5     32915.329 ±     711.582    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1784.258 ±     702.041  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     31595.211 ±   13277.498    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.428 ±       2.790  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         7.583 ±      49.168    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        27.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                           128  thrpt    5        40.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                        128  thrpt    5     18035.330 ±    2207.110   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      1719.978 ±     682.036  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5    150317.536 ±   67691.116    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1698.078 ±     694.900  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    148478.121 ±   71325.165    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         2.970 ±      12.360  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       262.255 ±    1088.966    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                              128  thrpt    5        27.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                               128  thrpt    5        94.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                 128  thrpt    5     17690.448 ±    2046.778   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1466.964 ±     405.801  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5    130554.106 ±   36608.608    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                128  thrpt    5         0.003 ±       0.024  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm           128  thrpt    5         0.257 ±       2.212    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.Metaspace                             128  thrpt    5         0.008 ±       0.066  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                        128  thrpt    5         0.710 ±       6.111    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1377.175 ±     561.743  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5    122722.264 ±   56843.716    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                            128  thrpt    5         0.191 ±       1.645  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                       128  thrpt    5        17.624 ±     151.744    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.102 ±       9.249  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       101.545 ±     853.304    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        23.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        91.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                128  thrpt    5    796923.176 ±   12377.539   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      2148.169 ±      60.909  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4242.210 ±      59.140    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      2051.376 ±     526.293  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4050.894 ±    1021.581    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.254 ±       1.829  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.504 ±       3.639    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        31.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        43.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                     128  thrpt    5     14017.452 ±    1224.062   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      1933.016 ±     229.868  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5    217039.746 ±   24604.597    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1836.491 ±     701.783  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    206414.240 ±   87866.964    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.942 ±       6.948  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       103.927 ±     761.072    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        28.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        46.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                       128  thrpt    5     44307.166 ±    9502.496   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      1792.439 ±     703.236  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     63699.320 ±   23131.255    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1730.142 ±     688.197  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     61524.379 ±   24314.331    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         4.173 ±      12.791  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       147.837 ±     466.607    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                             128  thrpt    5        28.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                              128  thrpt    5       157.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                128  thrpt    5     50935.320 ±   13345.353   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1593.307 ±     393.854  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     49397.785 ±   17660.861    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1572.626 ±     132.931  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     48765.929 ±   13849.239    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         4.200 ±       7.772  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       129.744 ±     243.743    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        25.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5       138.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                               128  thrpt    5   1018759.040 ±  145080.776   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       960.950 ±      92.532  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1484.861 ±      76.414    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       919.691 ±     562.960  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1415.622 ±     717.967    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.826 ±       5.485  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.251 ±       8.254    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        34.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   1059788.864 ±   10542.144   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                    128  thrpt    5      2913.328 ±    2851.053   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5       840.746 ±    1171.464  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5    510169.193 ± 1074945.413    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5       761.155 ±     805.626  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    455223.354 ±  846991.153    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         4.529 ±      28.112  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      2560.650 ±   16672.896    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                           128  thrpt    5       192.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                             128  thrpt    5    131323.025 ±    7506.101   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2053.681 ±     171.084  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     24607.884 ±     842.047    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2035.630 ±     597.122  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     24379.612 ±    5965.701    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.136 ±       8.538  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        13.844 ±     104.353    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        31.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        58.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                       128  thrpt    5    395316.051 ±    5424.051   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                        128  thrpt    5       814.236 ±      12.229  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5      3241.527 ±      31.338    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5       782.167 ±     689.977  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      3114.901 ±    2770.245    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.004 ±       8.212  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         3.994 ±      32.680    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                             128  thrpt    5        12.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                              128  thrpt    5        40.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                      128  thrpt    5    281457.388 ±   12556.109   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       582.630 ±      37.557  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      3257.801 ±     117.597    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       581.767 ±     554.760  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3257.954 ±    3163.618    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.140 ±       0.381    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        16.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                     128  thrpt    5    480624.767 ±   21367.507   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       636.322 ±      71.905  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      2083.374 ±     180.542    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       657.539 ±       4.198  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2153.240 ±      89.939    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.600 ±       5.029  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.931 ±      16.184    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        40.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                          128  thrpt    5    106666.700 ±    6087.579   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      3714.135 ±     265.111  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     54796.406 ±    1056.650    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3553.964 ±     695.609  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     52430.750 ±    9342.132    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.552 ±       4.173  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         8.203 ±      62.080    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        53.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        73.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                            128  thrpt    5    215189.340 ±    8331.456   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1856.709 ±      81.506  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     13578.116 ±     282.371    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1772.157 ±     677.885  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     12958.193 ±    4857.657    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.941 ±       7.308  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         6.864 ±      53.304    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        27.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        47.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                      128  thrpt    5    896753.680 ±   53126.835   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       728.330 ±      41.372  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5      1278.200 ±      76.284    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       716.233 ±     565.353  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1255.133 ±     935.639    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.940 ±       7.933  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.633 ±      13.778    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                            128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                             128  thrpt    5        37.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                     128  thrpt    5    601547.430 ±   10702.764   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       484.260 ±      12.633  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1267.002 ±      49.121    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       451.998 ±     680.280  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1183.761 ±    1796.578    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.033 ±       0.115    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         7.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        11.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                    128  thrpt    5    759914.466 ±   23238.783   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       613.760 ±       6.801  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1271.219 ±      36.184    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       591.811 ±     564.832  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1227.033 ±    1186.747    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.022 ±       0.078  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.045 ±       0.161    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        33.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    830752.602 ±    8021.976   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.010 ±       0.086  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.019 ±       0.163    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                         128  thrpt    5     33902.818 ±    9268.697   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1632.090 ±     368.354  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     76002.301 ±   22926.073    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1556.104 ±     520.279  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     72678.996 ±   37211.399    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.269 ±       8.089  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        64.965 ±     425.821    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        24.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        38.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                   128  thrpt    5      8236.625 ±    4959.851   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                    128  thrpt    5      1255.406 ±     116.553  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                               128  thrpt    5    246810.309 ±  214091.166    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1236.668 ±     561.526  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    243624.513 ±  243036.437    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.795 ±       4.612  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       365.157 ±    1015.485    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                         128  thrpt    5        19.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                          128  thrpt    5        78.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                            128  thrpt    5      9083.880 ±     821.314   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                             128  thrpt    5      1181.603 ±     102.977  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5    204712.161 ±    3457.912    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1167.980 ±     668.293  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5    202369.514 ±  115113.570    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.276 ±       1.403  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5        47.491 ±     241.331    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                  128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                   128  thrpt    5        34.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                           128  thrpt    5    195663.328 ±    9157.032   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1962.522 ±      65.370  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5     15786.916 ±     636.116    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1939.303 ±      75.138  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     15599.781 ±     530.065    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         1.140 ±       7.016  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         9.213 ±      56.509    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                 128  thrpt    5        30.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                  128  thrpt    5        63.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                128  thrpt    5      8664.853 ±    1465.370   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                 128  thrpt    5      1362.227 ±     188.308  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                            128  thrpt    5    247501.800 ±    9845.396    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1302.177 ±     879.270  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    235692.627 ±  133577.630    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.046 ±       0.132  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         8.332 ±      23.455    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                      128  thrpt    5        20.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                       128  thrpt    5        29.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                  128  thrpt    5     22230.585 ±    4034.881   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                   128  thrpt    5      1353.249 ±     696.742  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                              128  thrpt    5     96294.897 ±   63446.650    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                          128  thrpt    5      1362.875 ±     654.146  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     97027.734 ±   63037.911    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                      128  thrpt    5         3.548 ±      12.657  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5       259.756 ±     956.540    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                        128  thrpt    5        22.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                         128  thrpt    5       130.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                           128  thrpt    5     23149.589 ±    4781.663   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                            128  thrpt    5      1206.548 ±     831.247  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                       128  thrpt    5     82721.625 ±   72068.339    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1189.545 ±    1142.644  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     81655.524 ±   90203.685    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         5.118 ±      20.128  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5       345.016 ±    1352.067    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                 128  thrpt    5        20.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                  128  thrpt    5       154.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                          128  thrpt    5    528549.611 ±   33500.599   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                           128  thrpt    5      1234.680 ±      80.330  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                      128  thrpt    5      3675.815 ±     123.160    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                  128  thrpt    5      1182.939 ±     689.461  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm             128  thrpt    5      3518.344 ±    1940.673    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space              128  thrpt    5         0.833 ±       5.279  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm         128  thrpt    5         2.510 ±      15.933    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                 128  thrpt    5        40.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                  128  thrpt    5    616450.450 ±    9204.291   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                   128  thrpt    5         0.166 ±       1.429  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm              128  thrpt    5         0.427 ±       3.669    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                               128  thrpt    5     23751.481 ±    7746.599   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                128  thrpt    5      1273.320 ±     602.471  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                           128  thrpt    5     84616.444 ±   39026.850    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                       128  thrpt    5      1230.819 ±     989.982  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     82043.704 ±   68510.657    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                   128  thrpt    5        10.825 ±      31.025  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5       724.115 ±    2011.600    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                     128  thrpt    5        21.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                      128  thrpt    5       124.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                       128  thrpt    5     12979.324 ±    2025.267   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1281.715 ±     135.459  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5    155490.186 ±   10169.914    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1249.414 ±      31.439  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    151685.022 ±   22444.689    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.039 ±      15.533  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       243.600 ±    1844.627    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                             128  thrpt    5        20.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                              128  thrpt    5       114.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                128  thrpt    5     13584.126 ±    1011.050   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1238.051 ±     176.217  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5    143446.428 ±   22576.458    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space               128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm          128  thrpt    5         0.498 ±       4.287    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Metaspace                            128  thrpt    5         0.011 ±       0.098  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                       128  thrpt    5         1.348 ±      11.610    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1183.846 ±     603.146  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    137194.513 ±   71024.504    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.383 ±       9.034  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       162.515 ±    1070.621    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        20.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        83.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                               128  thrpt    5    319143.728 ±   14459.676   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1903.315 ±      68.111  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      9385.475 ±     154.689    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1903.848 ±     583.444  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      9391.578 ±    3057.880    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.840 ±       6.783  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         4.082 ±      32.935    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        29.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                    128  thrpt    5     13401.487 ±    1057.068   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1564.364 ±     110.410  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5    183710.262 ±    4214.015    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1505.525 ±     697.408  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    176857.885 ±   83666.442    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.689 ±       2.641  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        80.248 ±     307.102    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        23.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        45.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                      128  thrpt    5     33505.367 ±    4495.053   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1532.720 ±     718.203  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5     72156.054 ±   38756.686    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1472.883 ±    1225.659  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     69513.758 ±   63771.826    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         6.405 ±      18.963  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       303.548 ±     886.477    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                            128  thrpt    5        25.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                             128  thrpt    5       205.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                               128  thrpt    5    129594.512 ±    5557.589   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      2442.054 ±      54.956  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     29658.080 ±     743.557    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      2326.670 ±     131.661  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     28260.449 ±    2550.071    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.096 ±       0.193  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.159 ±       2.290    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        35.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        52.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                              128  thrpt    5    856014.772 ±   45967.946   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1213.597 ±      55.369  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      2231.326 ±      85.911    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1182.566 ±     686.890  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      2172.547 ±    1207.366    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.825 ±       5.358  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.545 ±      10.103    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        18.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    946484.074 ±    7016.032   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5         0.073 ±       0.629  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5         0.122 ±       1.046    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                   128  thrpt    5    125048.352 ±    8280.155   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      2817.631 ±     247.352  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     35458.485 ±     957.585    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      2774.270 ±     731.407  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     34903.111 ±    7937.105    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.849 ±       4.245  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        10.754 ±      53.819    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        42.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        75.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                           128  thrpt    5     19063.696 ±    1414.202   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1103.695 ±     664.321  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     91266.637 ±   59720.864    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1053.664 ±     652.124  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     87139.332 ±   58710.506    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         3.082 ±      10.893  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       255.995 ±     910.755    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        96.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                    128  thrpt    5     18678.398 ±    1639.728   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5       918.798 ±     695.565  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     77601.303 ±   64106.455    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       900.934 ±     557.046  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     75928.536 ±   47748.003    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.479 ±      12.376  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       129.371 ±    1084.159    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        29.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                   128  thrpt    5    156152.641 ±    7847.396   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       401.203 ±      19.273  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      4043.087 ±     184.721    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       389.384 ±     555.954  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3932.999 ±    5775.038    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.137 ±       1.051  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.369 ±      10.436    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5         6.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5         9.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                        128  thrpt    5     17151.215 ±    1499.919   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      1216.609 ±     256.637  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    111625.336 ±   22730.735    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1231.646 ±     564.371  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    112983.348 ±   50959.119    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.895 ±       5.062  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        81.120 ±     453.805    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        19.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        43.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                          128  thrpt    5     61442.617 ±   11427.691   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1789.622 ±     120.518  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     45900.472 ±    6048.365    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1691.163 ±     550.175  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     43367.540 ±   14255.125    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.479 ±       9.539  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        40.535 ±     268.043    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                128  thrpt    5        26.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        64.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                   128  thrpt    5     98675.121 ±   12458.336   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1889.066 ±     220.456  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     30132.271 ±     787.444    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space                  128  thrpt    5         0.002 ±       0.018  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm             128  thrpt    5         0.035 ±       0.305    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.Metaspace                               128  thrpt    5         0.006 ±       0.050  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                          128  thrpt    5         0.098 ±       0.846    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1855.544 ±     568.759  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     29594.287 ±    8149.024    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen                              128  thrpt    5         0.593 ±       5.106  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm                         128  thrpt    5        10.013 ±      86.212    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.011 ±       7.857  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        16.016 ±     124.232    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        30.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        87.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                  128  thrpt    5    342953.515 ±   31692.189   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       677.381 ±      66.618  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      3108.456 ±      41.856    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       658.843 ±       4.149  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      3024.949 ±     298.134    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.696 ±       5.906  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         3.282 ±      27.845    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        10.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        35.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5    390529.878 ±    1556.040   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                       128  thrpt    5     85108.989 ±   38041.692   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1886.005 ±     165.038  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     35394.594 ±   21836.630    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1886.570 ±     557.968  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     35411.472 ±   23785.478    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.415 ±       7.068  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        30.084 ±     166.355    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        59.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                            128  thrpt    5    192958.794 ±    5055.359   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2493.945 ±      43.798  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     20340.546 ±     689.825    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2392.659 ±     593.494  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19517.014 ±    5061.155    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.133 ±       0.490  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.081 ±       3.957    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        36.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        52.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                      128  thrpt    5    783582.971 ±   38426.426   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       447.408 ±      27.970  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       898.621 ±      47.746    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       455.269 ±     686.308  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       916.657 ±    1409.622    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.010 ±       0.053  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.021 ±       0.108    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        25.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                     128  thrpt    5    405516.103 ±   46947.628   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       362.490 ±      39.289  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1406.922 ±      21.606    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       324.409 ±       0.041  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1259.972 ±     146.950    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.294 ±       2.472  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.110 ±       9.311    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         5.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        23.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                    128  thrpt    5   1070050.748 ±   34368.636   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       377.522 ±      11.198  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       555.273 ±       5.146    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       328.008 ±       1.033  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       482.472 ±      16.587    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.018 ±       0.106    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         5.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        20.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                         128  thrpt    5    121908.152 ±    2979.351   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3898.583 ±     122.043  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     50320.643 ±    1170.589    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3832.842 ±     678.853  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     49472.117 ±    8695.136    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.375 ±       2.920  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.834 ±      37.603    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        57.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        79.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                           128  thrpt    5    307497.167 ±    6613.258   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1817.868 ±      46.766  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      9304.462 ±     224.239    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1771.702 ±     696.220  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      9072.306 ±    3759.447    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.894 ±       7.380  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         4.607 ±      38.060    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        48.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                     128  thrpt    5   1979705.271 ±  134624.573   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       698.365 ±      29.595  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5       555.263 ±      29.536    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       650.587 ±       6.357  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       517.312 ±      31.973    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.853 ±       7.120  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.669 ±       5.586    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        35.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                    128  thrpt    5   1884708.598 ±   47582.362   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       665.024 ±      14.208  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       555.261 ±      15.375    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       651.337 ±       6.756  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       543.845 ±      18.903    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.796 ±       6.739  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.669 ±       5.665    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        39.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                   128  thrpt    5   2239084.978 ±  146063.471   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       782.494 ±      36.130  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       550.002 ±      14.169    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       724.309 ±     569.541  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       510.329 ±     435.140    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.844 ±       5.494  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.588 ±       3.834    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        11.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        34.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2314309.908 ±  227366.814   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.085 ±       0.726  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.056 ±       0.482    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                        128  thrpt    5     46262.564 ±    9043.956   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1927.441 ±     278.989  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     65783.030 ±   21763.764    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1880.606 ±     512.634  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     64199.774 ±   25918.428    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         2.333 ±      10.580  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        83.360 ±     383.037    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        29.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        67.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                             128  thrpt    5     17648.309 ±    2556.520   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      2129.564 ±     557.342  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5    190300.307 ±   68114.318    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      2086.600 ±     734.851  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    186479.876 ±   80998.047    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.968 ±       8.963  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       176.064 ±     810.897    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        33.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        77.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                      128  thrpt    5    106484.162 ±    6467.616   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1172.121 ±      93.264  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     17323.148 ±     469.849    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1170.293 ±     687.141  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     17288.666 ±    9863.840    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.800 ±       4.162  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        11.943 ±      62.266    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        18.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        33.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                     128  thrpt    5    272349.275 ±   34476.747   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       916.810 ±      81.949  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      5299.243 ±     304.161    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       907.395 ±     559.607  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      5243.767 ±    3223.089    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.103 ±       5.563  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         6.260 ±      31.548    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        14.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        44.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                          128  thrpt    5     16515.575 ±    1076.961   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2151.737 ±     378.752  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5    205116.872 ±   41238.784    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2125.617 ±     736.739  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    202762.937 ±   79350.877    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         3.027 ±      25.619  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       295.423 ±    2501.368    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        35.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        69.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                            128  thrpt    5     42284.318 ±    7854.295   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      3372.899 ±     348.304  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5    125643.686 ±   11550.375    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      3269.767 ±     715.471  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    121669.189 ±   10610.290    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         1.166 ±       5.983  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        45.228 ±     231.099    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        49.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        70.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                     128  thrpt    5    144509.836 ±    8231.888   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      2007.579 ±     150.296  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     21863.353 ±     524.724    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1925.521 ±     524.347  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     20972.133 ±    5693.101    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.129 ±       0.806  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.406 ±       8.743    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        29.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        44.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                    128  thrpt    5    249581.328 ±    9624.012   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       829.259 ±      36.111  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      5229.777 ±     405.282    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       790.585 ±     698.735  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      4991.075 ±    4534.835    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.829 ±       6.687  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         5.222 ±      42.155    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        12.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        35.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    280414.941 ±    1149.372   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.002 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                         128  thrpt    5     59455.648 ±    6564.223   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      3904.637 ±     339.829  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    103375.728 ±    4375.922    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3825.500 ±     778.302  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    101256.163 ±   16417.701    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.503 ±       3.669  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        13.918 ±     102.460    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        57.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        79.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                        128  thrpt    5     37128.843 ±    4661.035   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                         128  thrpt    5      1809.767 ±     597.658  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                    128  thrpt    5     76872.420 ±   31959.408    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1795.624 ±    1023.892  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     76344.769 ±   49723.909    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         6.243 ±      21.791  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       269.245 ±     939.054    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                              128  thrpt    5        29.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                               128  thrpt    5        79.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                 128  thrpt    5     38512.542 ±    4847.527   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1314.095 ±     555.668  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     53755.458 ±   24167.681    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                128  thrpt    5         0.003 ±       0.027  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm           128  thrpt    5         0.124 ±       1.071    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Metaspace                             128  thrpt    5         0.009 ±       0.074  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                        128  thrpt    5         0.346 ±       2.979    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1307.818 ±     803.806  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     53472.276 ±   32633.154    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                            128  thrpt    5         0.539 ±       4.640  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                       128  thrpt    5        21.667 ±     186.563    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.884 ±       9.366  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        79.617 ±     400.179    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                       128  thrpt    5        22.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                        128  thrpt    5        95.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                128  thrpt    5    658389.316 ±   39378.498   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1767.642 ±     112.294  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      4224.615 ±     110.958    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1711.265 ±     532.831  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4088.834 ±    1174.921    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.831 ±       6.883  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         1.967 ±      16.299    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                      128  thrpt    5        26.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                       128  thrpt    5        39.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                     128  thrpt    5     35007.930 ±    5489.854   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                      128  thrpt    5      2206.497 ±     523.903  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     99382.983 ±   32899.415    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      2147.236 ±     694.204  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     96884.499 ±   44923.759    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         2.429 ±      10.197  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       111.499 ±     478.126    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                           128  thrpt    5        33.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                            128  thrpt    5        65.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                       128  thrpt    5     95522.506 ±   10729.519   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                        128  thrpt    5      2131.462 ±     275.987  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                   128  thrpt    5     35113.364 ±    1002.014    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.Compressed_Class_Space                      128  thrpt    5         0.004 ±       0.033  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.Compressed_Class_Space.norm                 128  thrpt    5         0.066 ±       0.571    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.Metaspace                                   128  thrpt    5         0.011 ±       0.094  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.Metaspace.norm                              128  thrpt    5         0.188 ±       1.617    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      2049.547 ±     598.380  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     33810.543 ±   11715.083    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Old_Gen                                  128  thrpt    5         1.581 ±      13.617  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Old_Gen.norm                             128  thrpt    5        27.259 ±     234.710    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.394 ±       7.185  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        23.658 ±     122.885    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                             128  thrpt    5        33.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                              128  thrpt    5        96.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                128  thrpt    5    236849.689 ±   18167.183   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1625.583 ±     109.599  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     10801.248 ±     337.728    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space               128  thrpt    5         0.003 ±       0.025  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm          128  thrpt    5         0.020 ±       0.171    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.Metaspace                            128  thrpt    5         0.008 ±       0.071  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                       128  thrpt    5         0.055 ±       0.478    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1566.165 ±     558.462  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     10415.646 ±    4081.522    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen                           128  thrpt    5         0.614 ±       5.284  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm                      128  thrpt    5         4.130 ±      35.557    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.990 ±       7.719  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         6.591 ±      51.350    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                      128  thrpt    5        25.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                       128  thrpt    5        80.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                               128  thrpt    5   1053670.602 ±   75983.826   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                128  thrpt    5       905.079 ±      61.600  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      1351.680 ±      28.817    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       920.752 ±     562.274  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1373.851 ±     807.198    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.860 ±       4.996  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         1.300 ±       7.581    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                     128  thrpt    5        14.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                      128  thrpt    5        40.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                       128  thrpt    5   1179275.312 ±   25436.576   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                        128  thrpt    5         3.773 ±      32.190  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                   128  thrpt    5         5.083 ±      43.374    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                             128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                    128  thrpt    5    228713.886 ±   15220.055   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                     128  thrpt    5      2425.003 ±     163.752  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                128  thrpt    5     16685.857 ±     331.854    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      2386.940 ±     575.480  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     16422.445 ±    3681.485    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.602 ±       4.781  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         4.213 ±      33.503    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                          128  thrpt    5        36.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                           128  thrpt    5        61.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                      128  thrpt    5     51547.679 ±    6559.692   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1530.288 ±    1107.531  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     46562.077 ±   27875.541    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1478.229 ±    1121.235  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     44993.423 ±   29539.869    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         2.244 ±      13.336  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        69.483 ±     421.199    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        23.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        58.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                     128  thrpt    5    793267.893 ±   47399.416   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1604.724 ±      60.433  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      3184.153 ±     188.996    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1582.989 ±     580.301  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3140.983 ±    1159.570    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.795 ±       5.103  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.603 ±      10.339    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        24.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        41.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                          128  thrpt    5     44086.751 ±   14229.895   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2606.620 ±     665.439  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     93551.934 ±   37150.146    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2610.176 ±     860.084  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     93704.030 ±   42081.517    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         2.304 ±      10.498  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        79.332 ±     352.452    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        40.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        96.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                     128  thrpt    5    407700.183 ±   27765.124   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1062.908 ±      45.197  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      4103.521 ±     118.199    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       975.475 ±      14.317  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3766.620 ±     282.222    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.017 ±       0.036  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.064 ±       0.138    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        15.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        20.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                    128  thrpt    5   1609744.489 ±  107267.930   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       981.462 ±      99.666  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       959.521 ±      61.493    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       985.509 ±      12.977  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       963.795 ±      75.567    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.839 ±       5.793  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.829 ±       5.749    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        15.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   1691072.319 ±   74607.877   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5         0.035 ±       0.194  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.033 ±       0.181    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                         128  thrpt    5    362630.758 ±   10688.174   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      2291.744 ±      89.797  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      9945.868 ±     204.816    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2200.018 ±     689.893  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      9549.116 ±    3052.269    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.369 ±       2.776  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.613 ±      12.155    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        33.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        49.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                           128  thrpt    5     85208.636 ±   16451.490   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1845.711 ±     387.169  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     34224.785 ±   14019.371    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1805.305 ±    1082.852  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     33598.411 ±   27191.069    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         3.145 ±      16.261  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        60.711 ±     315.372    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                 128  thrpt    5        28.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                  128  thrpt    5        64.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                    128  thrpt    5     93508.459 ±    7406.778   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1210.035 ±      93.573  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     20366.473 ±     497.409    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1163.390 ±     684.921  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     19583.466 ±   11525.396    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.461 ±       4.210  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        24.580 ±      69.898    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        18.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        51.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                   128  thrpt    5     98013.118 ±    2594.985   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1211.779 ±       7.974  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     19455.643 ±     417.284    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1156.094 ±     670.977  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     18575.002 ±   11177.329    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.906 ±       5.744  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        14.641 ±      93.081    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        18.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        36.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                        128  thrpt    5     51633.033 ±   12447.337   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      2089.864 ±     941.791  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     63577.661 ±   16876.977    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space                       128  thrpt    5         0.003 ±       0.029  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.Compressed_Class_Space.norm                  128  thrpt    5         0.116 ±       0.999    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.Metaspace                                    128  thrpt    5         0.009 ±       0.082  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.Metaspace.norm                               128  thrpt    5         0.324 ±       2.787    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      2037.282 ±     495.969  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     62173.299 ±   12918.893    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen                                   128  thrpt    5         0.050 ±       0.431  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Old_Gen.norm                              128  thrpt    5         1.709 ±      14.719    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.771 ±       3.827  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        24.369 ±     123.489    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        32.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                               128  thrpt    5       163.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                          128  thrpt    5    155303.091 ±    7825.491   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1464.249 ±      64.310  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     14837.920 ±     373.154    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1431.184 ±     694.993  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     14515.458 ±    7510.241    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         1.187 ±       7.953  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        12.072 ±      80.595    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                128  thrpt    5        22.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        43.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                   128  thrpt    5    374316.332 ±   19577.278   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       491.531 ±     103.950  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5      2067.632 ±     507.266    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       447.263 ±     673.541  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      1882.181 ±    2853.253    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.017 ±       0.149    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        11.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                  128  thrpt    5   1020245.001 ±   62449.066   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1310.704 ±      80.787  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      2021.634 ±      28.516    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1318.311 ±      36.672  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      2033.728 ±     124.642    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.225 ±       1.623  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.347 ±       2.504    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        20.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        28.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   1123821.146 ±   12651.617   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5         2.040 ±      17.563  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         2.872 ±      24.721    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                       128  thrpt    5    312070.465 ±    9792.594   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5       956.010 ±      20.513  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5      4821.361 ±     124.248    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5       960.834 ±      20.464  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      4845.762 ±     167.926    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.237 ±       8.554  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         6.248 ±      43.208    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        15.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        33.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                       128  thrpt    5    134782.339 ±   18133.871   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1759.304 ±     429.150  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5     20598.630 ±    7980.515    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1754.367 ±     695.322  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     20533.312 ±    9859.159    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         2.015 ±      13.501  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        24.691 ±     167.976    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                             128  thrpt    5        27.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                              128  thrpt    5        57.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                128  thrpt    5    215556.254 ±   12197.885   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5       788.390 ±      54.056  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5      5755.383 ±     152.972    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       773.613 ±     672.383  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      5639.183 ±    4695.777    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         1.042 ±       3.599  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         7.662 ±      26.432    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        12.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        30.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                               128  thrpt    5    559609.585 ±   46074.889   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1133.768 ±     132.208  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      3189.697 ±     504.457    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1103.440 ±     683.849  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      3104.653 ±    1963.940    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.037 ±       6.952  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         2.971 ±      20.100    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        17.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        40.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                    128  thrpt    5     99559.810 ±    8334.505   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      3169.987 ±     320.309  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     50101.182 ±    1054.607    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      3076.059 ±     610.166  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     48616.412 ±    8218.950    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.345 ±       2.390  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         5.570 ±      38.844    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        46.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        68.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                      128  thrpt    5    236216.368 ±   11849.704   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1502.530 ±      86.776  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5     10010.389 ±     309.633    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1430.796 ±     682.220  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9537.887 ±    4734.895    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.094 ±       4.712  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         7.323 ±      31.811    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        53.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                               128  thrpt    5    764275.180 ±   58314.150   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       584.840 ±      49.009  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5      1204.208 ±      17.387    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       580.403 ±     553.990  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      1194.317 ±    1131.082    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.043 ±       0.162    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5         9.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        15.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                              128  thrpt    5   1366302.005 ±  162667.167   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1045.898 ±     112.143  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      1204.803 ±      16.770    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       986.271 ±      12.843  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      1136.921 ±     139.735    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.823 ±       6.749  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.918 ±       7.509    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        15.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        37.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   1440157.101 ±    8744.711   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5         0.032 ±       0.274  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5         0.035 ±       0.300    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                   128  thrpt    5    613994.359 ±   48386.456   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1503.613 ±     125.630  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5      3853.613 ±      88.179    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1449.557 ±     694.600  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3717.317 ±    1845.599    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.527 ±       4.357  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.383 ±      11.454    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        40.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                    128  thrpt    5       920.017 ±      48.520   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      1973.911 ±      99.365  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5   3376059.607 ±   79687.312    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      1935.382 ±      58.077  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5   3310524.568 ±  179949.902    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.276 ±       4.654  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      2194.601 ±    8051.597    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                          128  thrpt    5        30.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                           128  thrpt    5        69.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                             128  thrpt    5       945.636 ±      98.558   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5      2032.378 ±     147.589  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5   3382787.663 ±  260458.125    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      2002.529 ±     551.526  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5   3332710.114 ±  884318.475    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.125 ±       0.723  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5       213.045 ±    1259.683    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5        31.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        45.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                            128  thrpt    5     39028.588 ±   14889.630   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5       765.607 ±     772.858  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5     30562.493 ±   19511.540    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       778.509 ±    1038.125  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     31014.954 ±   31764.522    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         3.342 ±       8.263  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       134.777 ±     335.571    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5        13.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5       104.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                 128  thrpt    5       899.183 ±      92.647   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5      2003.713 ±      96.041  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5   3506920.913 ±  312225.243    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5      1973.894 ±     112.948  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5   3455724.726 ±  485512.002    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.470 ±       1.949  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5       817.347 ±    3363.010    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                       128  thrpt    5        30.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        50.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                   128  thrpt    5     16965.748 ±    1730.041   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1337.976 ±     540.713  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5    124034.250 ±   48218.513    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1309.396 ±    1008.471  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    121364.475 ±   91790.832    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         2.519 ±       9.553  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       231.450 ±     863.621    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                         128  thrpt    5        21.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                          128  thrpt    5        99.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                            128  thrpt    5     18509.304 ±    3571.751   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5      1240.842 ±     862.897  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5    106360.649 ±   95499.162    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5      1222.566 ±    1200.197  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5    104964.693 ±  119908.454    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         3.080 ±      12.677  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       258.552 ±    1029.971    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        20.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5       124.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                           128  thrpt    5    326613.712 ±    6772.437   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5      1192.077 ±      75.748  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5      5742.527 ±     338.800    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5      1169.125 ±     676.766  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5      5632.775 ±    3281.316    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         1.200 ±       8.359  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         5.769 ±      40.225    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        18.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        47.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5    409132.626 ±    2996.262   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5         0.015 ±       0.130  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5         0.059 ±       0.498    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                128  thrpt    5     16536.868 ±   12535.993   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5      1255.200 ±     610.490  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5    125697.840 ±  161524.297    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5      1267.194 ±     662.514  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5    127654.030 ±  180544.236    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         5.267 ±      21.868  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5       619.285 ±    3117.332    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        22.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                       128  thrpt    5       147.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                           128  thrpt    5   1394768.855 ±   15512.869   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5        57.586 ±       7.151  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5        64.966 ±       7.964    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5        51.185 ±     440.719  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5        57.711 ±     496.908    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.004 ±       0.036  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.005 ±       0.040    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         1.000                counts
[info] BitSetBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         4.000                    ms
[info] BitSetBenchmark.readPlayJson                                                                128  thrpt    5    117321.243 ±   13895.750   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      4203.895 ±     716.534  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     56367.019 ±    3293.241    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      4069.601 ±     518.140  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     54590.062 ±    4378.582    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         1.305 ±       5.254  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        17.488 ±      69.816    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        61.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5       109.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                           128  thrpt    5   2188282.261 ±  181048.429   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       606.150 ±      47.517  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5       435.930 ±      13.923    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       578.679 ±     553.767  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       417.085 ±     409.798    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.021 ±       0.098  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.015 ±       0.071    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         9.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        15.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                          128  thrpt    5   1916891.383 ±   87295.674   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       529.992 ±      24.653  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       435.073 ±      20.541    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       459.888 ±     692.894  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       378.321 ±     579.882    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.021 ±       0.082  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.018 ±       0.068    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        24.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   1935574.930 ±  130284.417   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5         1.334 ±      11.483  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         1.107 ±       9.534    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.writePlayJson                                                               128  thrpt    5     56315.863 ±    8430.938   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      2104.701 ±     626.551  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     58998.342 ±   26078.219    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2056.375 ±     532.324  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     57656.063 ±   24516.913    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.859 ±       3.995  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        24.557 ±     116.103    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        31.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        55.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                            N/A  thrpt    5   1204746.965 ±   96476.436   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                             N/A  thrpt    5      3489.663 ±     331.896  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                        N/A  thrpt    5      4558.005 ±     108.616    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      3393.997 ±     754.297  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      4432.014 ±     784.243    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.129 ±       0.627  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.171 ±       0.835    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                  N/A  thrpt    5        51.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                   N/A  thrpt    5        68.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                      N/A  thrpt    5   5151598.743 ±  597302.042   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                       N/A  thrpt    5       321.779 ±      37.524  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  N/A  thrpt    5        98.291 ±       3.527    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       325.801 ±       0.182  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5        99.590 ±      11.680    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.161 ±       1.335  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.048 ±       0.399    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                            N/A  thrpt    5         5.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                             N/A  thrpt    5        19.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                     N/A  thrpt    5   1091856.809 ±   24801.046   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                      N/A  thrpt    5      1235.730 ±     101.412  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 N/A  thrpt    5      1780.981 ±     117.881    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             N/A  thrpt    5      1245.022 ±     561.380  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5      1794.483 ±     809.982    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.250 ±       1.529  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5         0.360 ±       2.205    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                           N/A  thrpt    5        19.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                            N/A  thrpt    5        36.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                    N/A  thrpt    5  10477550.247 ±   84939.428   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                     N/A  thrpt    5       493.228 ±      24.006  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                N/A  thrpt    5        74.085 ±       3.629    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       460.737 ±     694.103  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5        69.214 ±     104.383    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.021 ±       0.113  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.003 ±       0.017    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                          N/A  thrpt    5         7.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                           N/A  thrpt    5        22.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                         N/A  thrpt    5    768403.355 ±   46740.173   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                          N/A  thrpt    5      2843.179 ±     127.133  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     N/A  thrpt    5      5823.685 ±     136.906    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      2728.670 ±     490.695  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5      5587.839 ±     819.898    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.616 ±       4.904  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         1.240 ±       9.853    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                               N/A  thrpt    5        41.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                N/A  thrpt    5        64.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                  N/A  thrpt    5      5302.835 ±     130.774   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      2362.972 ±      74.420  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5    701188.469 ±   15683.713    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2258.078 ±     515.461  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    670011.703 ±  148485.194    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.469 ±       0.990  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5       139.218 ±     294.385    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        34.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        55.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                           N/A  thrpt    5      7650.193 ±     356.768   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      3140.800 ±     120.014  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5    646138.740 ±   19619.167    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      3007.866 ±     158.679  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5    618871.381 ±   51938.561    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.150 ±       0.897  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        30.522 ±     181.959    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        45.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        70.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                          N/A  thrpt    5     55894.252 ±    2836.198   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       933.252 ±      49.172  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5     26270.270 ±     409.980    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       916.183 ±     561.745  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5     25823.607 ±   16571.572    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.841 ±       5.510  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5        23.692 ±     155.126    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        14.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        38.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                 N/A  thrpt    5      5324.853 ±     187.970   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5       956.631 ±      37.262  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5    282710.714 ±   14196.176    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       973.665 ±      26.171  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    287741.912 ±   10531.185    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.133 ±       0.448  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5        39.242 ±     130.614    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        15.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        26.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                          N/A  thrpt    5      5257.283 ±     284.701   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       569.769 ±      48.974  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5    170524.191 ±    8375.002    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       514.575 ±     679.358  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5    153761.335 ±  200003.249    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.012 ±       0.072  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         3.722 ±      21.336    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         8.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5        14.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                         N/A  thrpt    5      6939.477 ±      81.300   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5       227.924 ±      12.477  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5     51684.308 ±    3366.157    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       182.265 ±     650.583  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     41417.279 ±  147815.277    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.011 ±       0.080  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         2.459 ±      18.288    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5         3.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5        13.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5      6983.358 ±     114.342   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5       180.041 ±      14.167  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5     40573.286 ±    3681.165    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                         N/A  thrpt    5       182.000 ±     649.504  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                    N/A  thrpt    5     41067.158 ±  146491.901    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                     N/A  thrpt    5         0.005 ±       0.047  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                N/A  thrpt    5         1.219 ±      10.498    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5         3.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                        N/A  thrpt    5        13.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                            N/A  thrpt    5      9002.618 ±     350.670   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                             N/A  thrpt    5      1899.025 ±      98.661  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                        N/A  thrpt    5    331968.851 ±   12492.732    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1852.620 ±     569.842  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5    323719.417 ±   91302.249    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         1.806 ±       6.667  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       314.672 ±    1152.955    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                  N/A  thrpt    5        29.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                   N/A  thrpt    5        88.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                      N/A  thrpt    5     18071.414 ±    1902.203   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                       N/A  thrpt    5       488.506 ±     117.414  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  N/A  thrpt    5     42620.092 ±   14700.913    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       453.035 ±     682.041  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5     39566.062 ±   60865.002    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.292 ±       2.370  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        26.145 ±     212.749    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                            N/A  thrpt    5         7.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                             N/A  thrpt    5        28.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                     N/A  thrpt    5     14363.436 ±    2113.778   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                      N/A  thrpt    5       392.281 ±      46.116  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 N/A  thrpt    5     42990.890 ±    2066.567    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             N/A  thrpt    5       387.257 ±     555.946  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5     42679.247 ±   65050.718    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.025 ±       0.135  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5         2.738 ±      14.914    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                           N/A  thrpt    5         6.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                            N/A  thrpt    5        17.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                    N/A  thrpt    5     22752.597 ±    1886.376   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                     N/A  thrpt    5       501.113 ±     352.926  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                N/A  thrpt    5     34757.172 ±   26966.821    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       519.872 ±     685.608  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5     36046.172 ±   48501.041    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.689 ±       3.484  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5        47.213 ±     238.253    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                          N/A  thrpt    5         8.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                           N/A  thrpt    5        37.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                         N/A  thrpt    5      6580.694 ±     418.955   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                          N/A  thrpt    5      2527.121 ±     127.846  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                     N/A  thrpt    5    604405.694 ±   23296.433    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5      2447.581 ±     686.433  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5    585891.837 ±  195608.745    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.868 ±       6.251  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5       206.986 ±    1490.987    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                               N/A  thrpt    5        37.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                N/A  thrpt    5        67.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                           N/A  thrpt    5     12014.696 ±    1006.480   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                            N/A  thrpt    5      2313.429 ±     164.945  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                       N/A  thrpt    5    303117.825 ±   29951.750    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2259.136 ±     147.162  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5    296092.396 ±   41720.361    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         2.006 ±       9.662  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5       265.768 ±    1281.894    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                 N/A  thrpt    5        35.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                  N/A  thrpt    5        67.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                     N/A  thrpt    5     69318.231 ±    4881.557   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                      N/A  thrpt    5       684.046 ±      98.146  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 N/A  thrpt    5     15539.629 ±    3294.488    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             N/A  thrpt    5       648.831 ±       5.019  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        N/A  thrpt    5     14732.371 ±    1011.209    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         N/A  thrpt    5         0.695 ±       5.849  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    N/A  thrpt    5        15.606 ±     131.262    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                           N/A  thrpt    5        10.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                            N/A  thrpt    5        40.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                    N/A  thrpt    5     43324.314 ±    3078.526   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                     N/A  thrpt    5       696.235 ±     173.865  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                N/A  thrpt    5     25320.640 ±    8220.897    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       713.894 ±     541.974  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5     26013.490 ±   21998.570    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.476 ±       2.663  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5        17.174 ±      95.952    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                          N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                           N/A  thrpt    5        29.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                   N/A  thrpt    5    102262.998 ±   11583.911   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                    N/A  thrpt    5       794.775 ±      80.624  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               N/A  thrpt    5     12231.945 ±     284.334    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           N/A  thrpt    5       781.428 ±     687.088  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      N/A  thrpt    5     12023.029 ±   10419.758    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       N/A  thrpt    5         0.838 ±       6.321  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  N/A  thrpt    5        12.578 ±      94.272    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                         N/A  thrpt    5        12.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                          N/A  thrpt    5        38.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                           N/A  thrpt    5    132541.272 ±    8325.580   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       N/A  thrpt    5         0.003 ±       0.001    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                        N/A  thrpt    5      8975.096 ±     749.218   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                         N/A  thrpt    5      2461.888 ±     203.891  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                    N/A  thrpt    5    431702.671 ±   12982.675    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                N/A  thrpt    5      2396.628 ±     579.691  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5    420141.171 ±   84526.253    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.331 ±       1.828  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5        59.108 ±     331.447    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                              N/A  thrpt    5        36.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                               N/A  thrpt    5        58.000                    ms
[info] IntBenchmark.readCirce                                                                      N/A  thrpt    5  13596031.864 ±  469525.183   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                       N/A  thrpt    5      6011.818 ±     221.357  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5       695.757 ±      18.104    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      5820.379 ±     394.018  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       673.703 ±      66.115    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.187 ±       0.457  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.022 ±       0.052    B/op
[info] IntBenchmark.readCirce:·gc.count                                                            N/A  thrpt    5        86.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                             N/A  thrpt    5       113.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                N/A  thrpt    5  41585506.739 ± 7476461.052   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                 N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                            N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                      N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJacksonScala                                                               N/A  thrpt    5  26161614.241 ± 2463422.867   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5         0.016 ±       0.138  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5         0.001 ±       0.008    B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                     N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJsoniterScala                                                              N/A  thrpt    5  48401633.274 ±   52982.506   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                    N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                 N/A  thrpt    5  31086539.970 ±  933764.630   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                  N/A  thrpt    5       814.570 ±      20.938  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                             N/A  thrpt    5        41.240 ±       0.682    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       791.665 ±     696.972  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        40.103 ±      35.788    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.777 ±       5.739  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.039 ±       0.290    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                       N/A  thrpt    5        12.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                        N/A  thrpt    5        35.000                    ms
[info] IntBenchmark.readPlayJson                                                                   N/A  thrpt    5  24693695.560 ±  196492.682   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                    N/A  thrpt    5         1.343 ±      11.222  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5         0.085 ±       0.714    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                         N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeCirce                                                                     N/A  thrpt    5  20824175.191 ±  870323.364   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                      N/A  thrpt    5      1641.993 ±      47.773  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5       124.091 ±       2.208    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1576.600 ±     541.225  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5       119.115 ±      39.237    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.862 ±       6.065  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.065 ±       0.460    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                           N/A  thrpt    5        24.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                            N/A  thrpt    5        43.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                               N/A  thrpt    5  58279854.683 ± 2678947.112   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                N/A  thrpt    5      1224.223 ±      46.316  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                           N/A  thrpt    5        33.058 ±       1.425    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1169.102 ±     691.564  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        31.571 ±      18.728    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.981 ±       7.023  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.027 ±       0.190    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                     N/A  thrpt    5        18.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                      N/A  thrpt    5        41.000                    ms
[info] IntBenchmark.writeJacksonScala                                                              N/A  thrpt    5  27341732.543 ± 1547630.591   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5       573.588 ±      38.385  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5        33.013 ±       1.504    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       585.770 ±     561.208  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        33.706 ±      32.205    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.883 ±       6.453  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.052 ±       0.378    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                    N/A  thrpt    5         9.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                     N/A  thrpt    5        23.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                             N/A  thrpt    5  51705581.042 ± 1766848.312   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5      1083.740 ±      33.722  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        32.985 ±       0.409    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1049.289 ±     553.830  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        31.924 ±      16.298    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.839 ±       7.072  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.026 ±       0.218    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                   N/A  thrpt    5        16.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                    N/A  thrpt    5        38.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                     N/A  thrpt    5  63394985.640 ± 4147527.480   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      N/A  thrpt    5         0.453 ±       3.900  MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 N/A  thrpt    5         0.011 ±       0.098    B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                N/A  thrpt    5  26486264.568 ±  252275.447   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                 N/A  thrpt    5      2086.197 ±      61.717  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       123.961 ±       3.641    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1998.291 ±      55.050  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       118.738 ±       3.633    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.669 ±       5.222  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.040 ±       0.311    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                      N/A  thrpt    5        30.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                       N/A  thrpt    5        41.000                    ms
[info] IntBenchmark.writePlayJson                                                                  N/A  thrpt    5   3666621.023 ±  230423.681   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      1517.511 ±      98.774  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5       651.344 ±      13.140    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1448.734 ±     696.131  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       621.998 ±     303.906    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.183 ±       1.046  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.078 ±       0.441    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                        N/A  thrpt    5        22.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                         N/A  thrpt    5        30.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5    179428.875 ±    5121.451   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      3401.891 ±     117.248  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5     29834.412 ±     695.362    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      3348.018 ±     189.604  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     29361.453 ±    1294.822    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.083 ±       0.316  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.734 ±       2.787    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        50.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        72.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5     44433.343 ±    5209.995   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      2851.767 ±     130.227  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    101101.903 ±   16362.718    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2728.169 ±     537.081  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     96734.023 ±   25543.259    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.953 ±       6.211  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        34.682 ±     226.279    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        41.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        67.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    230060.001 ±    8960.939   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       840.673 ±      40.139  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5      5750.898 ±     178.711    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       845.327 ±     681.703  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      5779.913 ±    4595.814    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.179 ±       1.187  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         1.217 ±       8.037    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        13.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        22.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5    530581.307 ±   18466.219   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       970.794 ±      33.966  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2879.700 ±      67.202    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       914.821 ±     565.541  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2714.032 ±    1685.869    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.862 ±       5.356  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.550 ±      15.810    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5        14.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        32.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    565766.811 ±   24095.835   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5       401.680 ±      21.844  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5      1117.195 ±      44.887    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                128  thrpt    5       392.755 ±     562.413  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      1091.036 ±    1536.966    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.207 ±       1.620  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         0.569 ±       4.451    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5         6.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                               128  thrpt    5        24.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5     83857.758 ±   22354.717   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1458.595 ±     183.938  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     27538.211 ±   11516.291    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1445.874 ±     707.739  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     27177.681 ±   12498.510    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.857 ±       3.862  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        16.890 ±      76.584    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        22.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        43.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                           128  thrpt    5    369537.234 ±   18575.698   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      2690.990 ±     169.511  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5     11460.265 ±     393.922    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2636.568 ±     190.484  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     11230.665 ±    1104.082    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.550 ±       4.425  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.325 ±      18.686    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                 128  thrpt    5        40.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                  128  thrpt    5        58.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                    128  thrpt    5    864805.778 ±   31752.634   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1897.638 ±      77.676  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      3453.547 ±     102.129    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1849.248 ±     750.614  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      3365.165 ±    1350.433    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.911 ±       7.439  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         1.677 ±      13.712    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        28.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        42.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                   128  thrpt    5   1642759.715 ±   58500.033   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      3313.151 ±      68.803  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      3173.300 ±      87.017    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      3220.521 ±     633.004  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      3085.348 ±     675.399    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.062 ±       0.170  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.060 ±       0.163    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        48.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        63.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                        128  thrpt    5    182683.069 ±    4968.572   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      4785.501 ±     188.304  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     41226.324 ±     708.555    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      4586.483 ±     624.238  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     39515.137 ±    5632.807    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.083 ±       0.179  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.718 ±       1.554    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        68.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        89.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                          128  thrpt    5    469993.126 ±   45876.117   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1539.989 ±     131.730  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5      5156.771 ±      93.977    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1501.802 ±     678.216  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      5036.008 ±    2508.111    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.910 ±       6.064  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         3.104 ±      20.753    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                128  thrpt    5        23.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        47.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                   128  thrpt    5    979657.972 ±   83995.189   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       465.902 ±      25.985  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       748.605 ±      33.509    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       451.391 ±     675.885  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       727.017 ±    1110.836    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.046 ±       0.212    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        11.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                  128  thrpt    5   2661284.509 ±  405949.309   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1272.894 ±     140.600  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       752.935 ±      56.722    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1248.732 ±     572.036  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       739.920 ±     380.489    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.806 ±       6.737  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.502 ±       4.197    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        38.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5   2853599.641 ±  224232.583   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5         0.170 ±       1.460  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.094 ±       0.809    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                       128  thrpt    5    654825.212 ±  110293.332   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5       983.917 ±     468.656  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5      2377.053 ±    1550.365    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5       965.956 ±     883.961  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      2335.451 ±    2463.932    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         1.785 ±      10.382  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         4.391 ±      25.315    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        15.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        41.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                      128  thrpt    5     76734.604 ±   11491.345   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                       128  thrpt    5      2268.705 ±     209.579  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                  128  thrpt    5     46554.524 ±    5718.708    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      2158.628 ±     676.903  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     44411.562 ±   19738.241    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         1.330 ±      10.870  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        28.673 ±     235.216    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                            128  thrpt    5        33.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                             128  thrpt    5        58.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                               128  thrpt    5    105284.691 ±    8791.780   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                128  thrpt    5      1914.466 ±     166.976  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     28618.139 ±     207.844    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1848.997 ±     723.656  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     27632.311 ±   10230.837    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.018 ±       8.014  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        15.508 ±     122.234    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                     128  thrpt    5        28.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                      128  thrpt    5        44.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                              128  thrpt    5    157812.893 ±    8395.594   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                               128  thrpt    5      2500.262 ±     161.494  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5     24933.788 ±     768.326    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      2437.835 ±     669.526  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     24331.757 ±    7851.070    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.753 ±       5.649  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         7.468 ±      55.833    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                    128  thrpt    5        37.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                     128  thrpt    5        67.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                   128  thrpt    5     43589.956 ±    5178.737   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                    128  thrpt    5      2499.292 ±     107.656  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                               128  thrpt    5     90283.069 ±    8255.949    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      2396.428 ±     583.209  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     86526.806 ±   18789.931    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.678 ±       3.634  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        25.100 ±     134.840    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                         128  thrpt    5        36.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                          128  thrpt    5        58.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                              128  thrpt    5    224636.773 ±   14093.396   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                               128  thrpt    5      1018.484 ±      64.717  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                          128  thrpt    5      7135.651 ±     151.460    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       981.311 ±      28.282  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      6876.780 ±     518.358    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.167 ±       1.167  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         1.186 ±       8.356    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                    128  thrpt    5        15.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                     128  thrpt    5        24.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                             128  thrpt    5    578992.587 ±   24764.012   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                              128  thrpt    5       657.273 ±      31.099  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                         128  thrpt    5      1786.410 ±      34.244    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       655.187 ±       1.939  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      1780.923 ±      78.373    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.611 ±       4.917  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         1.655 ±      13.326    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                   128  thrpt    5        10.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                    128  thrpt    5        33.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                     128  thrpt    5    619925.235 ±    5232.167   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                      128  thrpt    5         7.027 ±       3.790  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                 128  thrpt    5        17.843 ±       9.715    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                           128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                  128  thrpt    5     90049.215 ±   17374.218   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                   128  thrpt    5      1499.751 ±     373.996  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                              128  thrpt    5     26335.722 ±   12337.124    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                          128  thrpt    5      1496.698 ±     685.369  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     26258.887 ±   14862.001    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                      128  thrpt    5         1.575 ±       4.526  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        27.734 ±      78.986    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                        128  thrpt    5        23.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                         128  thrpt    5        67.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                          N/A  thrpt    5   8235223.287 ±  273814.068   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                           N/A  thrpt    5      7248.933 ±     225.897  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                      N/A  thrpt    5      1385.363 ±      37.576    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5      6976.331 ±     682.449  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5      1333.429 ±     156.660    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.167 ±       0.196  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.032 ±       0.037    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                N/A  thrpt    5       103.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                 N/A  thrpt    5       134.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                    N/A  thrpt    5    951967.670 ±  114053.156   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                     N/A  thrpt    5       601.854 ±      71.362  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                N/A  thrpt    5       994.950 ±      13.903    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       582.682 ±     556.650  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5       959.484 ±     867.007    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.015 ±       0.034  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.024 ±       0.058    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                          N/A  thrpt    5         9.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                           N/A  thrpt    5        43.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                   N/A  thrpt    5    439210.241 ±    5730.596   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                    N/A  thrpt    5       981.407 ±      15.695  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                               N/A  thrpt    5      3516.570 ±      38.759    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           N/A  thrpt    5       978.904 ±      18.751  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      N/A  thrpt    5      3507.601 ±      51.927    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       N/A  thrpt    5         0.341 ±       1.439  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  N/A  thrpt    5         1.225 ±       5.170    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                         N/A  thrpt    5        15.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                          N/A  thrpt    5        29.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                  N/A  thrpt    5    731808.553 ±   20737.597   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                   N/A  thrpt    5       688.208 ±      84.265  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              N/A  thrpt    5      1479.997 ±     209.348    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          N/A  thrpt    5       660.988 ±       4.048  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     N/A  thrpt    5      1421.317 ±      47.189    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      N/A  thrpt    5         0.687 ±       5.809  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 N/A  thrpt    5         1.494 ±      12.639    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                        N/A  thrpt    5        10.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                         N/A  thrpt    5        33.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                              N/A  thrpt    5   4107605.864 ±  294502.694   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                               N/A  thrpt    5      2492.965 ±     162.569  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                          N/A  thrpt    5       955.166 ±      32.345    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                      N/A  thrpt    5      2397.719 ±     581.323  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5       918.913 ±     234.965    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.167 ±       0.639  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.065 ±       0.250    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                    N/A  thrpt    5        36.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                     N/A  thrpt    5        48.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                        N/A  thrpt    5  29086137.467 ± 2935574.963   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                         N/A  thrpt    5      2608.434 ±     276.507  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                    N/A  thrpt    5       141.138 ±       1.944    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                N/A  thrpt    5      2525.810 ±     695.233  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm           N/A  thrpt    5       136.789 ±      42.699    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space            N/A  thrpt    5         0.751 ±       6.104  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm       N/A  thrpt    5         0.042 ±       0.342    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                              N/A  thrpt    5        38.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                               N/A  thrpt    5        55.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                       N/A  thrpt    5    381921.987 ±   17160.622   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                        N/A  thrpt    5      2709.997 ±     110.057  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                   N/A  thrpt    5     11167.104 ±     486.812    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               N/A  thrpt    5      2650.340 ±     133.326  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     10921.103 ±     509.918    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.654 ±       4.016  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         2.716 ±      16.695    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                             N/A  thrpt    5        40.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                              N/A  thrpt    5        66.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                    128  thrpt    5   1463742.407 ±    8248.661   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5        44.642 ±       0.249  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5        48.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.readPlayJson                                                         128  thrpt    5    104142.909 ±    7286.194   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3851.183 ±     275.078  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     58198.357 ±    1283.622    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3689.178 ±     191.122  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     55765.724 ±    5120.149    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.471 ±       3.152  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         7.060 ±      46.980    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        55.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        86.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                    128  thrpt    5   2118274.289 ±  189235.962   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       588.353 ±      70.606  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       437.081 ±      17.288    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       581.213 ±     557.906  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       430.024 ±     389.130    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.021 ±       0.098  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.015 ±       0.072    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         9.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        14.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                   128  thrpt    5   1970326.922 ±  164638.775   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       546.730 ±      46.395  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       436.660 ±      12.386    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       526.202 ±     695.026  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       420.084 ±     552.276    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.011 ±       0.060  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.009 ±       0.049    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         8.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        28.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   1997990.005 ±  171970.046   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.writePlayJson                                                        128  thrpt    5     53771.416 ±    5649.533   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1965.492 ±     547.825  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     57622.396 ±   21150.719    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1919.736 ±    1018.165  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     56321.221 ±   34131.820    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.687 ±       3.085  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        20.367 ±      92.175    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        29.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        52.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                         128  thrpt    5    266130.248 ±   20194.130   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                          128  thrpt    5      1072.215 ±      67.118  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                     128  thrpt    5      6341.368 ±     138.710    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                 128  thrpt    5      1048.657 ±     574.864  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm            128  thrpt    5      6216.242 ±    3915.907    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space             128  thrpt    5         0.395 ±       2.429  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm        128  thrpt    5         2.389 ±      14.834    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                               128  thrpt    5        16.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                128  thrpt    5        27.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                              128  thrpt    5     50660.701 ±    6070.499   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                               128  thrpt    5      2077.685 ±     102.470  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                          128  thrpt    5     64595.307 ±    8073.746    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                      128  thrpt    5      2042.482 ±     538.082  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     63508.739 ±   18808.458    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.848 ±       4.294  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        27.200 ±     139.144    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                    128  thrpt    5        31.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                     128  thrpt    5        55.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                         128  thrpt    5    158417.756 ±    5826.747   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                          128  thrpt    5      1590.734 ±      58.214  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                     128  thrpt    5     15803.821 ±     225.285    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                 128  thrpt    5      1515.013 ±     679.121  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm            128  thrpt    5     15060.116 ±    7057.264    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space             128  thrpt    5         0.133 ±       0.932  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm        128  thrpt    5         1.313 ±       9.153    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                               128  thrpt    5        23.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                128  thrpt    5        36.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                        128  thrpt    5    515265.385 ±   31463.366   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                         128  thrpt    5       713.880 ±      43.069  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                    128  thrpt    5      2180.695 ±     146.573    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                128  thrpt    5       723.953 ±     562.662  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      2215.018 ±    1824.052    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.808 ±       4.933  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         2.448 ±      15.012    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                              128  thrpt    5        11.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                               128  thrpt    5        40.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                128  thrpt    5    577892.158 ±   36927.740   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                 128  thrpt    5         0.043 ±       0.372  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm            128  thrpt    5         0.121 ±       1.031    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                      128  thrpt    5           ≈ 0                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                             128  thrpt    5     84101.792 ±   14165.655   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                              128  thrpt    5      1616.969 ±     255.205  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                         128  thrpt    5     30349.626 ±   10243.984    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                     128  thrpt    5      1565.329 ±     527.859  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                128  thrpt    5     29359.247 ±   12047.690    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.506 ±       8.095  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5        29.270 ±     161.570    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                   128  thrpt    5        24.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                    128  thrpt    5        49.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                               128  thrpt    5     95788.285 ±    7044.975   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                128  thrpt    5      1511.438 ±      77.963  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                           128  thrpt    5     24836.733 ±     964.792    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                       128  thrpt    5      1505.169 ±     697.081  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     24758.264 ±   12365.198    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                   128  thrpt    5         1.061 ±       6.026  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5        17.802 ±     102.287    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                     128  thrpt    5        23.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                      128  thrpt    5        49.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                        128  thrpt    5    151849.372 ±    7309.441   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                         128  thrpt    5       726.768 ±      23.429  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                    128  thrpt    5      7532.876 ±     236.996    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                128  thrpt    5       710.403 ±     568.783  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm           128  thrpt    5      7373.094 ±    6178.192    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space            128  thrpt    5         0.410 ±       3.306  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm       128  thrpt    5         4.304 ±      34.745    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                              128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                               128  thrpt    5        24.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                       128  thrpt    5    337458.264 ±   31768.400   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                        128  thrpt    5      1435.117 ±     138.134  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                   128  thrpt    5      6692.071 ±     103.737    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space               128  thrpt    5      1369.761 ±     547.011  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm          128  thrpt    5      6384.290 ±    2286.159    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space           128  thrpt    5         1.069 ±       6.847  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm      128  thrpt    5         5.030 ±      32.207    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                             128  thrpt    5        21.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                              128  thrpt    5        49.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                            128  thrpt    5     16671.761 ±    1608.902   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                             128  thrpt    5      1289.484 ±     150.691  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                        128  thrpt    5    121815.607 ±   23582.023    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                    128  thrpt    5      1308.197 ±      15.781  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm               128  thrpt    5    123540.150 ±   12446.517    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                128  thrpt    5         2.261 ±       6.480  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5       213.862 ±     614.327    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                  128  thrpt    5        20.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                   128  thrpt    5        53.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                       128  thrpt    5    254972.633 ±    7990.203   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                        128  thrpt    5       904.023 ±      31.654  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                   128  thrpt    5      5579.754 ±     169.393    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space               128  thrpt    5       847.074 ±     683.712  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm          128  thrpt    5      5229.858 ±    4254.623    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space           128  thrpt    5         0.314 ±       2.228  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm      128  thrpt    5         1.925 ±      13.599    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                             128  thrpt    5        13.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                              128  thrpt    5        23.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                      128  thrpt    5    657491.894 ±   42899.199   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                       128  thrpt    5       749.378 ±      74.135  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                  128  thrpt    5      1793.318 ±      99.905    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space              128  thrpt    5       723.707 ±     564.429  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      1730.603 ±    1300.275    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.872 ±       5.248  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         2.124 ±      12.776    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                            128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                             128  thrpt    5        38.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                              128  thrpt    5    739647.165 ±    7049.624   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate               128  thrpt    5         0.162 ±       1.393  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm          128  thrpt    5         0.346 ±       2.976    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                    128  thrpt    5           ≈ 0                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                           128  thrpt    5     86707.146 ±    7584.450   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                            128  thrpt    5      1707.879 ±     744.137  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                       128  thrpt    5     30995.578 ±   13250.092    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                   128  thrpt    5      1703.741 ±    1092.785  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm              128  thrpt    5     30914.078 ±   19495.809    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space               128  thrpt    5         2.009 ±       4.089  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5        36.447 ±      74.714    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                 128  thrpt    5        26.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                  128  thrpt    5        78.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                         128  thrpt    5    121106.977 ±   24908.585   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      2051.861 ±     283.435  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5     26770.315 ±    9712.357    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2027.615 ±     528.627  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     26492.953 ±   13138.738    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.078 ±       5.159  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        14.548 ±      69.798    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                               128  thrpt    5        31.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                128  thrpt    5        51.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                  128  thrpt    5    202189.840 ±   14681.593   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5       844.483 ±      59.872  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      6572.155 ±     201.807    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       778.075 ±     676.938  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      6050.132 ±    5123.481    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.204 ±       1.111  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.613 ±       8.854    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        12.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        21.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                 128  thrpt    5    280181.502 ±   17021.074   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1027.674 ±      72.740  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      5772.453 ±      93.148    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       979.316 ±      11.053  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      5501.959 ±     302.224    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.831 ±       4.665  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         4.621 ±      25.650    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        15.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        38.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                      128  thrpt    5     92736.291 ±   11532.644   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      3025.501 ±     171.641  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     51369.217 ±    4059.488    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      2924.283 ±     529.245  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     49657.840 ±   10075.161    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.890 ±       7.041  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        15.923 ±     126.714    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        44.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        66.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                        128  thrpt    5    252202.822 ±   16982.567   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1722.372 ±     151.371  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     10746.767 ±     277.511    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1700.547 ±     578.070  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     10603.980 ±    3041.734    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.920 ±       7.433  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         5.836 ±      47.211    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                              128  thrpt    5        26.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                               128  thrpt    5        46.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                 128  thrpt    5    825484.069 ±   45485.152   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       448.896 ±      28.351  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5       855.794 ±      63.359    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       449.861 ±     679.688  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       860.594 ±    1336.973    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.008 ±       0.044  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.016 ±       0.084    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        12.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                128  thrpt    5    861795.765 ±   56399.070   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       471.471 ±      32.911  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5       861.075 ±      48.378    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       459.381 ±     690.539  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       836.645 ±    1227.173    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.011 ±       0.060  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.021 ±       0.109    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        25.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    883710.859 ±   32598.517   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         2.169 ±      18.672  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         3.930 ±      33.832    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                     128  thrpt    5     38077.634 ±    6051.885   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1802.052 ±     552.919  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     74730.017 ±   32786.528    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1808.807 ±     681.226  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     75054.130 ±   38183.912    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         2.998 ±      13.631  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       128.432 ±     590.566    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        28.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        77.000                    ms
[info] PrimitivesBenchmark.readCirce                                                               N/A  thrpt    5   1124730.708 ±   42210.125   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                N/A  thrpt    5      2590.839 ±      36.072  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                           N/A  thrpt    5      3625.616 ±     136.719    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      2496.004 ±     676.271  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      3494.542 ±    1056.073    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.925 ±       5.489  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         1.287 ±       7.660    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                     N/A  thrpt    5        38.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                      N/A  thrpt    5        61.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                        N/A  thrpt    5   1849571.650 ±   70929.167   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                         N/A  thrpt    5      1153.389 ±      37.054  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    N/A  thrpt    5       981.356 ±      30.986    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5      1114.383 ±     710.540  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5       948.953 ±     628.342    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.317 ±       2.152  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5         0.271 ±       1.845    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                              N/A  thrpt    5        17.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                               N/A  thrpt    5        30.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                       N/A  thrpt    5   9525116.608 ±  555668.145   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                        N/A  thrpt    5       297.774 ±      25.718  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   N/A  thrpt    5        49.200 ±       2.671    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       248.478 ±     548.567  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5        40.992 ±      90.870    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.017 ±       0.088  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.003 ±       0.014    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                             N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                              N/A  thrpt    5        15.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                            N/A  thrpt    5    572969.286 ±   51903.229   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                             N/A  thrpt    5      2440.772 ±     154.680  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                        N/A  thrpt    5      6705.251 ±     223.071    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      2381.626 ±     564.339  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      6544.181 ±    1599.268    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.731 ±       5.504  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         1.997 ±      15.071    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                  N/A  thrpt    5        36.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                   N/A  thrpt    5        61.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                              N/A  thrpt    5   1851101.611 ±  110689.965   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                               N/A  thrpt    5      1902.166 ±      82.429  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                          N/A  thrpt    5      1617.278 ±      46.493    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1876.921 ±     575.023  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      1596.179 ±     508.117    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         1.290 ±       5.725  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         1.091 ±       4.860    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                    N/A  thrpt    5        29.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                     N/A  thrpt    5        77.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                       N/A  thrpt    5   2973446.219 ±  177688.990   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                        N/A  thrpt    5      1176.902 ±     119.226  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   N/A  thrpt    5       622.916 ±      52.118    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5      1170.268 ±     668.813  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5       619.167 ±     344.415    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.324 ±       2.611  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.171 ±       1.376    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                             N/A  thrpt    5        18.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                              N/A  thrpt    5        32.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                      N/A  thrpt    5   9054684.098 ±  281296.159   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                       N/A  thrpt    5       771.997 ±     107.984  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  N/A  thrpt    5       134.220 ±      22.715    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       786.543 ±     691.586  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5       136.879 ±     123.867    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.870 ±       5.472  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.153 ±       0.964    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                            N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                             N/A  thrpt    5        43.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5   8756360.493 ±  254830.921   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               N/A  thrpt    5       273.526 ±      16.864  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          N/A  thrpt    5        49.158 ±       2.626    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      N/A  thrpt    5       247.029 ±     544.628  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5        44.390 ±      97.723    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.010 ±       0.045  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.002 ±       0.008    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     N/A  thrpt    5        16.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                           N/A  thrpt    5    488955.696 ±   38669.752   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                            N/A  thrpt    5      2488.626 ±     213.278  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                       N/A  thrpt    5      8010.324 ±     215.579    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      2388.543 ±     526.687  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      7688.225 ±    1558.389    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.504 ±       3.421  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         1.637 ±      11.164    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                 N/A  thrpt    5        36.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                  N/A  thrpt    5        59.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                128  thrpt    5     87735.617 ±   29246.583   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      2608.136 ±     434.998  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     47012.280 ±   15374.382    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2557.730 ±     807.352  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     46144.283 ±   20809.596    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         6.741 ±      31.956  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5       128.446 ±     606.646    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        42.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                       128  thrpt    5       174.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                         128  thrpt    5    143054.479 ±    6582.272   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      2253.825 ±     150.186  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     24793.250 ±     670.688    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2175.271 ±     632.703  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     23932.092 ±    6987.614    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.260 ±       1.476  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.898 ±      16.487    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        33.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        51.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                        128  thrpt    5    176842.386 ±   14418.517   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      2689.120 ±     271.722  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5     23930.425 ±     586.467    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      2596.834 ±     117.288  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     23116.282 ±    1420.479    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.740 ±      10.067  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        15.706 ±      90.438    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        40.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        94.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                             128  thrpt    5     82160.574 ±   25405.666   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      3653.811 ±     853.614  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     70071.544 ±    6494.313    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3526.309 ±    1008.141  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     67689.379 ±   17351.285    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         2.211 ±      11.644  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        44.779 ±     232.762    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        54.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5       108.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                               128  thrpt    5    252051.123 ±   21606.315   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1733.829 ±     125.973  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     10826.123 ±     255.799    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1636.384 ±      51.791  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     10222.205 ±    1156.753    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.891 ±       7.138  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         5.430 ±      43.440    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        25.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        43.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                        128  thrpt    5    811590.591 ±    5957.265   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5       483.914 ±      23.669  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5       938.344 ±      41.611    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       513.190 ±     676.477  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       994.860 ±    1308.478    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.188 ±       1.504  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.364 ±       2.915    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5         8.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        14.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                       128  thrpt    5    793789.370 ±   60196.889   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       438.187 ±      40.697  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       868.709 ±      37.403    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       457.339 ±     688.988  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       908.665 ±    1390.980    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.024 ±       0.131  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.048 ±       0.264    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        26.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5    836683.865 ±    4552.755   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        10.331 ±      12.964  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        19.432 ±      24.431    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] SetOfIntsBenchmark.writePlayJson                                                            128  thrpt    5     38147.104 ±    3993.030   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1854.063 ±     390.419  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     76546.890 ±   20112.837    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1848.743 ±     472.271  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     76351.744 ±   23944.354    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         2.671 ±      10.447  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       111.504 ±     437.984    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        29.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        69.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                       128  thrpt    5   4492654.967 ±  115024.900   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      3495.852 ±     132.858  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5      1224.521 ±      59.324    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      3395.719 ±     634.619  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1189.580 ±     238.437    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.368 ±       2.101  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.128 ±       0.730    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                             128  thrpt    5        51.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                              128  thrpt    5        77.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                 128  thrpt    5   6002861.586 ±  594759.290   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                  128  thrpt    5      1164.931 ±     122.390  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                             128  thrpt    5       305.409 ±       7.419    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                         128  thrpt    5      1168.500 ±     673.490  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       306.263 ±     171.544    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                     128  thrpt    5         1.051 ±       6.271  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.281 ±       1.697    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                       128  thrpt    5        18.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                        128  thrpt    5        43.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                128  thrpt    5   5041459.144 ±  500901.642   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5      1027.727 ±     102.654  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5       320.830 ±       4.908    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       976.610 ±      14.426  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       305.011 ±      26.084    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.962 ±       6.227  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.294 ±       1.894    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        15.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        42.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                               128  thrpt    5   6459375.391 ±  405047.089   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1255.118 ±      82.209  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5       305.814 ±       7.812    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1183.637 ±     689.821  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       288.893 ±     181.670    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.819 ±       5.485  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.203 ±       1.358    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        18.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        37.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                    128  thrpt    5   5316739.016 ±  467700.394   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1030.399 ±     121.122  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5       304.949 ±      13.672    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1045.181 ±     552.840  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       308.951 ±     142.742    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.949 ±       5.346  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.281 ±       1.590    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        16.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        41.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                      128  thrpt    5   3609551.430 ±   63229.783   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                       128  thrpt    5      1992.580 ±      88.749  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                  128  thrpt    5       868.766 ±      29.039    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                              128  thrpt    5      1911.452 ±     591.784  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       833.320 ±     253.101    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.881 ±       7.276  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.386 ±       3.184    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                            128  thrpt    5        29.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                             128  thrpt    5        43.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                128  thrpt    5   6735478.574 ±  328176.545   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                 128  thrpt    5       669.162 ±      29.033  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                            128  thrpt    5       156.365 ±       2.896    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                        128  thrpt    5       651.098 ±       4.311  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       152.159 ±       6.900    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.808 ±       6.832  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.187 ±       1.583    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                      128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                       128  thrpt    5        39.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                               128  thrpt    5   6238300.453 ±  449169.879   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       618.340 ±      57.531  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5       155.978 ±       4.515    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       580.739 ±     549.646  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5       146.119 ±     133.278    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.017 ±       0.067  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.004 ±       0.017    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        14.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                              128  thrpt    5   6824123.439 ±  585346.410   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5       691.117 ±      73.114  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5       159.410 ±      16.881    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       657.822 ±       4.722  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5       151.757 ±      12.039    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.762 ±       6.203  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.172 ±       1.395    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        33.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5   7238536.200 ±   86794.239   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                   128  thrpt    5   6216098.142 ±  383515.860   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5       626.386 ±      27.033  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5       158.634 ±      16.364    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5       588.866 ±     563.501  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       149.329 ±     145.759    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.909 ±       5.859  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.230 ±       1.474    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                         128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        29.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                    128  thrpt    5   1738893.531 ±  101924.521   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                     128  thrpt    5      2260.451 ±     164.152  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                128  thrpt    5      2045.823 ±      54.429    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                            128  thrpt    5      2245.528 ±     590.611  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      2033.495 ±     590.596    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.921 ±       7.525  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.831 ±       6.790    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                          128  thrpt    5        34.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                           128  thrpt    5        47.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                              128  thrpt    5   2968900.820 ±  142457.602   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                               128  thrpt    5       574.993 ±      38.976  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                          128  thrpt    5       304.769 ±       8.612    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                      128  thrpt    5       584.955 ±     559.436  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5       309.366 ±     287.122    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.037 ±       0.106  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.019 ±       0.056    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                    128  thrpt    5         9.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                     128  thrpt    5        33.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                             128  thrpt    5   1946792.285 ±   64934.595   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                              128  thrpt    5       424.099 ±      41.045  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5       342.883 ±      41.932    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       390.405 ±     559.228  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5       315.423 ±     448.609    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.017 ±       0.088  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.013 ±       0.071    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                   128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                    128  thrpt    5        25.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                            128  thrpt    5   2262247.734 ±  140163.044   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                             128  thrpt    5       436.561 ±      29.405  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5       303.669 ±      12.667    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       394.569 ±     566.021  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       274.583 ±     395.452    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.008 ±       0.072  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.006 ±       0.050    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                  128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                   128  thrpt    5        25.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                 128  thrpt    5   1898809.034 ±   43901.271   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                  128  thrpt    5       368.189 ±      15.465  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                             128  thrpt    5       305.190 ±      15.126    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5       389.500 ±     561.176  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       323.101 ±     470.012    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.008 ±       0.044  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.007 ±       0.037    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                       128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                        128  thrpt    5        10.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                   128  thrpt    5   2456062.977 ±   35980.548   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                    128  thrpt    5      1763.618 ±      61.434  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                               128  thrpt    5      1130.106 ±      40.547    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                           128  thrpt    5      1774.638 ±     728.348  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      1137.183 ±     467.556    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.852 ±       7.158  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.544 ±       4.573    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                         128  thrpt    5        27.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                          128  thrpt    5        47.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                             128  thrpt    5   3645572.602 ±  126679.470   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                              128  thrpt    5       975.703 ±      43.146  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                         128  thrpt    5       421.115 ±      22.779    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                     128  thrpt    5       910.696 ±     555.136  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                128  thrpt    5       393.267 ±     244.842    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                 128  thrpt    5         1.004 ±       5.284  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.430 ±       2.263    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                   128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                    128  thrpt    5        42.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                            128  thrpt    5   3287710.683 ±  151781.428   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                             128  thrpt    5       879.188 ±      26.328  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                        128  thrpt    5       420.854 ±      14.415    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space           128  thrpt    5         0.006 ±       0.049  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Compressed_Class_Space.norm      128  thrpt    5         0.003 ±       0.024    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Metaspace                        128  thrpt    5         0.015 ±       0.131  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.Metaspace.norm                   128  thrpt    5         0.007 ±       0.063    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       848.875 ±     690.855  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5       407.038 ±     344.962    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen                       128  thrpt    5         0.731 ±       6.294  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Old_Gen.norm                  128  thrpt    5         0.353 ±       3.040    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.935 ±       7.451  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.449 ±       3.576    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                  128  thrpt    5        15.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                   128  thrpt    5        74.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                           128  thrpt    5   3576267.156 ±  294163.657   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                            128  thrpt    5       958.339 ±      66.682  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                       128  thrpt    5       421.777 ±       8.435    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                   128  thrpt    5       919.163 ±     560.515  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm              128  thrpt    5       405.076 ±     259.000    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space               128  thrpt    5         0.823 ±       5.252  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm          128  thrpt    5         0.361 ±       2.280    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                 128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                  128  thrpt    5        38.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                   128  thrpt    5   3900653.455 ±   24639.729   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm               128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                         128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                128  thrpt    5   3273493.657 ±  198800.516   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                 128  thrpt    5       879.800 ±      60.361  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                            128  thrpt    5       423.004 ±      21.170    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                        128  thrpt    5       851.247 ±     692.064  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       409.882 ±     344.727    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.848 ±       6.727  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.407 ±       3.230    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                      128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                       128  thrpt    5        35.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                               N/A  thrpt    5     12057.199 ±    1676.718   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                N/A  thrpt    5      1619.186 ±     631.766  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                           N/A  thrpt    5    212210.248 ±  117494.230    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1558.491 ±     553.682  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5    203741.204 ±   82948.877    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         1.656 ±       7.753  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5       217.515 ±    1002.192    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                     N/A  thrpt    5        24.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                      N/A  thrpt    5        56.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                        N/A  thrpt    5     22141.808 ±    1494.153   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                         N/A  thrpt    5       393.753 ±     169.521  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    N/A  thrpt    5     28032.446 ±   13765.749    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5       384.165 ±     551.040  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5     27323.602 ±   39414.200    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.268 ±       2.221  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5        18.775 ±     155.347    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                              N/A  thrpt    5         6.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                               N/A  thrpt    5        13.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                       N/A  thrpt    5     20845.285 ±     467.842   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                        N/A  thrpt    5       254.671 ±     215.143  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   N/A  thrpt    5     19240.423 ±   16677.143    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       259.557 ±     558.715  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     19625.970 ±   42248.704    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.008 ±       0.072  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5         0.634 ±       5.458    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                             N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                              N/A  thrpt    5        18.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                            N/A  thrpt    5      8826.815 ±    1931.996   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                             N/A  thrpt    5      1956.952 ±     107.153  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                        N/A  thrpt    5    349766.503 ±   77143.447    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5      1912.458 ±      64.282  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5    341829.262 ±   75206.008    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         2.024 ±       7.682  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       372.236 ±    1436.141    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                  N/A  thrpt    5        30.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                   N/A  thrpt    5        81.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                       N/A  thrpt    5     62521.552 ±    7382.304   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                        N/A  thrpt    5       912.197 ±     244.521  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   N/A  thrpt    5     23009.714 ±    8435.582    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       914.105 ±     554.928  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     23048.774 ±   14743.461    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.980 ±       4.396  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5        25.234 ±     114.215    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                             N/A  thrpt    5        14.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                              N/A  thrpt    5        34.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                      N/A  thrpt    5    109229.876 ±    3029.789   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                       N/A  thrpt    5       718.593 ±      17.710  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  N/A  thrpt    5     10353.938 ±     139.439    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       650.367 ±       6.574  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5      9371.076 ±     189.261    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.822 ±       5.257  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        11.792 ±      75.468    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                            N/A  thrpt    5        10.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                             N/A  thrpt    5        34.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                              N/A  thrpt    5    120333.298 ±     470.082   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               N/A  thrpt    5         0.223 ±       1.921  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          N/A  thrpt    5         2.924 ±      25.141    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                         128  thrpt    5    415659.570 ±   33783.954   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      2422.891 ±      84.433  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5      9176.352 ±     815.190    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2302.240 ±     104.757  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      8720.689 ±    1044.102    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.268 ±       6.212  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.859 ±      23.736    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                               128  thrpt    5        35.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                128  thrpt    5        55.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                  128  thrpt    5   1008970.725 ±   37649.057   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5       688.903 ±      15.530  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      1074.506 ±      27.575    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       646.520 ±      11.449  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1008.437 ±      43.621    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.318 ±       2.691  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.491 ±       4.156    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5        16.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5   1886460.138 ±  164583.478   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       956.576 ±     100.358  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       797.950 ±      16.658    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       920.140 ±     561.176  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       766.808 ±     445.917    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.814 ±       5.450  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.692 ±       4.645    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        14.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        36.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5    189108.401 ±    8268.702   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      4657.504 ±     242.962  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     38755.698 ±     509.790    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      4499.054 ±     604.190  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     37444.972 ±    5708.255    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.146 ±       0.523  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.217 ±       4.411    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        67.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        92.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                        128  thrpt    5    442786.291 ±   12438.427   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1453.260 ±      21.281  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5      5165.393 ±      78.991    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1439.862 ±     703.134  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      5117.984 ±    2507.586    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.899 ±       5.476  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         3.202 ±      19.461    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                              128  thrpt    5        22.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                               128  thrpt    5        45.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    878810.123 ±  104605.042   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       422.713 ±      37.121  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5       757.104 ±      58.015    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       449.452 ±     678.506  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       809.267 ±    1272.531    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.012 ±       0.044  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.022 ±       0.077    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        13.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5   1575952.302 ±  174851.379   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       750.506 ±      67.659  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5       749.560 ±      17.970    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       722.972 ±     567.465  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5       725.176 ±     650.556    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.829 ±       5.152  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.812 ±       5.050    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5        11.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        35.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5   1667151.438 ±  123051.000   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         0.131 ±       0.979  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.126 ±       0.945    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5    629878.809 ±  146228.154   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5       994.857 ±     644.961  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5      2510.952 ±    2267.877    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5       963.908 ±     875.986  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2442.216 ±    2794.322    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.684 ±       4.161  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         4.311 ±      10.833    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        15.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        51.000                    ms
[info] Benchmark result is saved to graalvmee1.json
[success] Total time: 5777 s, completed May 2, 2018 11:16:15 PM
